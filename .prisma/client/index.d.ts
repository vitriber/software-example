
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/index';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model berth_products
 * 
 */
export type berth_products = {
  id: number
  loadingCapacity: number | null
  unloadingCapacity: number | null
  berthId: number
  productId: number
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model berths
 * 
 */
export type berths = {
  id: number
  name: string | null
  description: string | null
  portId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  maxDraft: number | null
  airDraft: number | null
  maxLengthOverall: number | null
  maxDeadWeightTonnage: number | null
  maxBeam: number | null
  waterDensity: number | null
}

/**
 * Model ChecklistTemplate
 * 
 */
export type ChecklistTemplate = {
  id: number
  name: string
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model ChecklistTemplateItem
 * 
 */
export type ChecklistTemplateItem = {
  id: number
  name: string
  description: string | null
  type: string
  working_days: number | null
  checklist_template_id: number
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model ShippingChecklistItem
 * 
 */
export type ShippingChecklistItem = {
  id: number
  name: string
  description: string | null
  type: string
  deadline_date: string | null
  commentary: string | null
  is_done: boolean
  shipping_id: number
  updated_by_user_id: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model Country
 * 
 */
export type Country = {
  id: number
  name: string | null
  flag: string | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model migrations
 * 
 */
export type migrations = {
  id: number
  timestamp: number
  name: string
}

/**
 * Model port_files
 * 
 */
export type port_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  portId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  userId: number | null
}

/**
 * Model ports
 * 
 */
export type ports = {
  id: number
  name: string | null
  countryId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  slug: string | null
}

/**
 * Model products
 * 
 */
export type products = {
  id: number
  name: string | null
  description: string | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model proforma_files
 * 
 */
export type proforma_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  proformaId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model proformas
 * 
 */
export type proformas = {
  id: number
  taxes: string | null
  totalValue: number | null
  berthedHours: number | null
  berthProductId: number
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  idHash: string | null
  applicantName: string | null
  applicantEmail: string | null
  vesselName: string | null
  imo: string | null
  deadWeightTonnage: number | null
  lengthOverall: number | null
  grossTonnage: number | null
  package: string | null
  builtYear: number | null
  agencyType: string | null
  operationType: string | null
  productTonnage: number | null
  usd: number | null
  isCargillInternational: boolean | null
  beam: number | null
  etb: Date | null
  draft: number | null
  requestingCustomer: string | null
  vesselType: string | null
}

/**
 * Model shipping_documents
 * 
 */
export type shipping_documents = {
  id: number
  type: string | null
  documentNumber: string | null
  consignee: string | null
  vesselName: string | null
  portOfLoading: string | null
  portOfDischarge: string | null
  notify: string | null
  productName: string | null
  productNameExtraInfo: string | null
  productWeightExtraInfo: string | null
  freightType: string | null
  charterPartyDate: string | null
  shipBoardedDate: string | null
  issuePlaceDate: string | null
  numberOfOriginalBillOfLanding: number | null
  shipper: string | null
  masterName: string | null
  signature: string | null
  shippingId: number | null
  userId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  order: number | null
  subsetId: number | null
  productGrossWeight: number | null
}

/**
 * Model shipping_files
 * 
 */
export type shipping_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  shippingId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  userId: number | null
}

/**
 * Model shipping_ports
 * 
 */
export type shipping_ports = {
  id: number
  estimatedTimeOfArrival: Date | null
  estimatedTimeOfBerthing: Date | null
  estimatedTimeOfSailing: Date | null
  timeOfArrival: Date | null
  timeOfBerthing: Date | null
  timeOfSailing: Date | null
  shippingId: number | null
  portId: number | null
  berthId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model shipping_products
 * 
 */
export type shipping_products = {
  id: number
  weight: number | null
  shippingId: number | null
  productId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model Shipping
 * 
 */
export type Shipping = {
  id: number
  status: string | null
  owner_head_name: string | null
  owner_head_address: string | null
  disponent_owner: string | null
  charter_name: string | null
  master_name: string | null
  master_email: string | null
  estimated_draft_arrival: string | null
  estimated_draft_departure: string | null
  arrival_draft: number | null
  depart_draft: number | null
  vessel_operator: string | null
  vessel_operator_email: string | null
  operation_type: string | null
  agency_type: string | null
  voyage_number: string | null
  external_code: string | null
  comments: string | null
  last_port: string | null
  next_port: string | null
  broker: string | null
  boat: string | null
  tugs: string | null
  garbage: string | null
  last_cargoes: string | null
  sscec_port: string | null
  sscec_exp: string | null
  in_marsat_c_number: string | null
  master_phone_01: string | null
  master_phone_02: string | null
  vessel_expert: string | null
  vessel_expert_phone01: string | null
  vessel_expert_phone02: string | null
  vessel_expert_alternate: string | null
  vessel_expert_alternate_phone01: string | null
  vessel_expert_alternate_phone02: string | null
  vessel_operator_phone01: string | null
  vessel_operator_phone02: string | null
  vessel_operator_city_country: string | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
  vessel_id: number | null
  user_id: number | null
  total_load_expected: number | null
  total_load_actual: number | null
}

/**
 * Model subsets
 * 
 */
export type subsets = {
  id: number
  name: string | null
  shippingId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model user_files
 * 
 */
export type user_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  userId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model users
 * 
 */
export type users = {
  id: number
  name: string | null
  email: string | null
  password: string | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model vessel_files
 * 
 */
export type vessel_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  vesselId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  userId: number | null
}

/**
 * Model Vessel
 * 
 */
export type Vessel = {
  id: number
  name: string | null
  imo: string | null
  call_sign: string | null
  satellite_telephone: string | null
  classification_society: string | null
  type: string | null
  length_overall: number | null
  dead_weight_tonnage: number | null
  beam: number | null
  cubic_meters: number | null
  gross_tonnage: number | null
  net_tonnage: number | null
  panama_gross_tonnage: number | null
  panama_net_tonnage: number | null
  suez_gross_tonnage: number | null
  suez_net_tonnage: number | null
  reduced_gross_tonnage: number | null
  length_between_perpendiculars: number | null
  molded_depth: number | null
  number_of_holds: number | null
  number_of_tanks: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
  country_id: number | null
  draft_sw: string | null
  built_year: number | null
}

/**
 * Model inquires
 * 
 */
export type inquires = {
  id: number
  title: string | null
  type: string | null
  shipping_id: number | null
  updated_by_user_id: number | null
  deleted: boolean
}

/**
 * Model inquires_comments
 * 
 */
export type inquires_comments = {
  id: number
  body: string | null
  is_done: boolean
  inquire_id: number | null
  user_id: number | null
  deleted: boolean
}

/**
 * Model group_emails
 * 
 */
export type group_emails = {
  id: number
  name: string | null
  emails: string | null
  vessel_id: number | null
  updated_by_user_id: number | null
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Berth_products
 * const berth_products = await prisma.berth_products.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Berth_products
   * const berth_products = await prisma.berth_products.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

  /**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P]): Promise<UnwrapTuple<P>>;


      /**
   * `prisma.berth_products`: Exposes CRUD operations for the **berth_products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Berth_products
    * const berth_products = await prisma.berth_products.findMany()
    * ```
    */
  get berth_products(): Prisma.berth_productsDelegate<GlobalReject>;

  /**
   * `prisma.berths`: Exposes CRUD operations for the **berths** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Berths
    * const berths = await prisma.berths.findMany()
    * ```
    */
  get berths(): Prisma.berthsDelegate<GlobalReject>;

  /**
   * `prisma.checklistTemplate`: Exposes CRUD operations for the **ChecklistTemplate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistTemplates
    * const checklistTemplates = await prisma.checklistTemplate.findMany()
    * ```
    */
  get checklistTemplate(): Prisma.ChecklistTemplateDelegate<GlobalReject>;

  /**
   * `prisma.checklistTemplateItem`: Exposes CRUD operations for the **ChecklistTemplateItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistTemplateItems
    * const checklistTemplateItems = await prisma.checklistTemplateItem.findMany()
    * ```
    */
  get checklistTemplateItem(): Prisma.ChecklistTemplateItemDelegate<GlobalReject>;

  /**
   * `prisma.shippingChecklistItem`: Exposes CRUD operations for the **ShippingChecklistItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShippingChecklistItems
    * const shippingChecklistItems = await prisma.shippingChecklistItem.findMany()
    * ```
    */
  get shippingChecklistItem(): Prisma.ShippingChecklistItemDelegate<GlobalReject>;

  /**
   * `prisma.country`: Exposes CRUD operations for the **Country** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Countries
    * const countries = await prisma.country.findMany()
    * ```
    */
  get country(): Prisma.CountryDelegate<GlobalReject>;

  /**
   * `prisma.migrations`: Exposes CRUD operations for the **migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Migrations
    * const migrations = await prisma.migrations.findMany()
    * ```
    */
  get migrations(): Prisma.migrationsDelegate<GlobalReject>;

  /**
   * `prisma.port_files`: Exposes CRUD operations for the **port_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Port_files
    * const port_files = await prisma.port_files.findMany()
    * ```
    */
  get port_files(): Prisma.port_filesDelegate<GlobalReject>;

  /**
   * `prisma.ports`: Exposes CRUD operations for the **ports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ports
    * const ports = await prisma.ports.findMany()
    * ```
    */
  get ports(): Prisma.portsDelegate<GlobalReject>;

  /**
   * `prisma.products`: Exposes CRUD operations for the **products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.products.findMany()
    * ```
    */
  get products(): Prisma.productsDelegate<GlobalReject>;

  /**
   * `prisma.proforma_files`: Exposes CRUD operations for the **proforma_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proforma_files
    * const proforma_files = await prisma.proforma_files.findMany()
    * ```
    */
  get proforma_files(): Prisma.proforma_filesDelegate<GlobalReject>;

  /**
   * `prisma.proformas`: Exposes CRUD operations for the **proformas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proformas
    * const proformas = await prisma.proformas.findMany()
    * ```
    */
  get proformas(): Prisma.proformasDelegate<GlobalReject>;

  /**
   * `prisma.shipping_documents`: Exposes CRUD operations for the **shipping_documents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shipping_documents
    * const shipping_documents = await prisma.shipping_documents.findMany()
    * ```
    */
  get shipping_documents(): Prisma.shipping_documentsDelegate<GlobalReject>;

  /**
   * `prisma.shipping_files`: Exposes CRUD operations for the **shipping_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shipping_files
    * const shipping_files = await prisma.shipping_files.findMany()
    * ```
    */
  get shipping_files(): Prisma.shipping_filesDelegate<GlobalReject>;

  /**
   * `prisma.shipping_ports`: Exposes CRUD operations for the **shipping_ports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shipping_ports
    * const shipping_ports = await prisma.shipping_ports.findMany()
    * ```
    */
  get shipping_ports(): Prisma.shipping_portsDelegate<GlobalReject>;

  /**
   * `prisma.shipping_products`: Exposes CRUD operations for the **shipping_products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shipping_products
    * const shipping_products = await prisma.shipping_products.findMany()
    * ```
    */
  get shipping_products(): Prisma.shipping_productsDelegate<GlobalReject>;

  /**
   * `prisma.shipping`: Exposes CRUD operations for the **Shipping** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shippings
    * const shippings = await prisma.shipping.findMany()
    * ```
    */
  get shipping(): Prisma.ShippingDelegate<GlobalReject>;

  /**
   * `prisma.subsets`: Exposes CRUD operations for the **subsets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subsets
    * const subsets = await prisma.subsets.findMany()
    * ```
    */
  get subsets(): Prisma.subsetsDelegate<GlobalReject>;

  /**
   * `prisma.user_files`: Exposes CRUD operations for the **user_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_files
    * const user_files = await prisma.user_files.findMany()
    * ```
    */
  get user_files(): Prisma.user_filesDelegate<GlobalReject>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<GlobalReject>;

  /**
   * `prisma.vessel_files`: Exposes CRUD operations for the **vessel_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vessel_files
    * const vessel_files = await prisma.vessel_files.findMany()
    * ```
    */
  get vessel_files(): Prisma.vessel_filesDelegate<GlobalReject>;

  /**
   * `prisma.vessel`: Exposes CRUD operations for the **Vessel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vessels
    * const vessels = await prisma.vessel.findMany()
    * ```
    */
  get vessel(): Prisma.VesselDelegate<GlobalReject>;

  /**
   * `prisma.inquires`: Exposes CRUD operations for the **inquires** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inquires
    * const inquires = await prisma.inquires.findMany()
    * ```
    */
  get inquires(): Prisma.inquiresDelegate<GlobalReject>;

  /**
   * `prisma.inquires_comments`: Exposes CRUD operations for the **inquires_comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inquires_comments
    * const inquires_comments = await prisma.inquires_comments.findMany()
    * ```
    */
  get inquires_comments(): Prisma.inquires_commentsDelegate<GlobalReject>;

  /**
   * `prisma.group_emails`: Exposes CRUD operations for the **group_emails** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Group_emails
    * const group_emails = await prisma.group_emails.findMany()
    * ```
    */
  get group_emails(): Prisma.group_emailsDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  /**
   * Prisma Client JS version: 3.8.1
   * Query Engine version: 34df67547cf5598f5a6cd3eb45f14ee70c3fb86f
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: 'DbNull'

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: 'JsonNull'

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: 'AnyNull'

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Buffer
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    berth_products: 'berth_products',
    berths: 'berths',
    ChecklistTemplate: 'ChecklistTemplate',
    ChecklistTemplateItem: 'ChecklistTemplateItem',
    ShippingChecklistItem: 'ShippingChecklistItem',
    Country: 'Country',
    migrations: 'migrations',
    port_files: 'port_files',
    ports: 'ports',
    products: 'products',
    proforma_files: 'proforma_files',
    proformas: 'proformas',
    shipping_documents: 'shipping_documents',
    shipping_files: 'shipping_files',
    shipping_ports: 'shipping_ports',
    shipping_products: 'shipping_products',
    Shipping: 'Shipping',
    subsets: 'subsets',
    user_files: 'user_files',
    users: 'users',
    vessel_files: 'vessel_files',
    Vessel: 'Vessel',
    inquires: 'inquires',
    inquires_comments: 'inquires_comments',
    group_emails: 'group_emails'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends boolean
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     *  * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your prisma.schema file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'

  /**
   * These options are being passed in to the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined; 
  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Berth_productsCountOutputType
   */


  export type Berth_productsCountOutputType = {
    proformas: number
  }

  export type Berth_productsCountOutputTypeSelect = {
    proformas?: boolean
  }

  export type Berth_productsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Berth_productsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Berth_productsCountOutputType
    : S extends undefined
    ? never
    : S extends Berth_productsCountOutputTypeArgs
    ?'include' extends U
    ? Berth_productsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Berth_productsCountOutputType ?Berth_productsCountOutputType [P]
  : 
     never
  } 
    : Berth_productsCountOutputType
  : Berth_productsCountOutputType




  // Custom InputTypes

  /**
   * Berth_productsCountOutputType without action
   */
  export type Berth_productsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Berth_productsCountOutputType
     * 
    **/
    select?: Berth_productsCountOutputTypeSelect | null
  }



  /**
   * Count Type BerthsCountOutputType
   */


  export type BerthsCountOutputType = {
    berth_products: number
    shipping_ports: number
  }

  export type BerthsCountOutputTypeSelect = {
    berth_products?: boolean
    shipping_ports?: boolean
  }

  export type BerthsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | BerthsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? BerthsCountOutputType
    : S extends undefined
    ? never
    : S extends BerthsCountOutputTypeArgs
    ?'include' extends U
    ? BerthsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof BerthsCountOutputType ?BerthsCountOutputType [P]
  : 
     never
  } 
    : BerthsCountOutputType
  : BerthsCountOutputType




  // Custom InputTypes

  /**
   * BerthsCountOutputType without action
   */
  export type BerthsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the BerthsCountOutputType
     * 
    **/
    select?: BerthsCountOutputTypeSelect | null
  }



  /**
   * Count Type ChecklistTemplateCountOutputType
   */


  export type ChecklistTemplateCountOutputType = {
    items: number
  }

  export type ChecklistTemplateCountOutputTypeSelect = {
    items?: boolean
  }

  export type ChecklistTemplateCountOutputTypeGetPayload<
    S extends boolean | null | undefined | ChecklistTemplateCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? ChecklistTemplateCountOutputType
    : S extends undefined
    ? never
    : S extends ChecklistTemplateCountOutputTypeArgs
    ?'include' extends U
    ? ChecklistTemplateCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ChecklistTemplateCountOutputType ?ChecklistTemplateCountOutputType [P]
  : 
     never
  } 
    : ChecklistTemplateCountOutputType
  : ChecklistTemplateCountOutputType




  // Custom InputTypes

  /**
   * ChecklistTemplateCountOutputType without action
   */
  export type ChecklistTemplateCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateCountOutputType
     * 
    **/
    select?: ChecklistTemplateCountOutputTypeSelect | null
  }



  /**
   * Count Type CountryCountOutputType
   */


  export type CountryCountOutputType = {
    ports: number
    vessels: number
  }

  export type CountryCountOutputTypeSelect = {
    ports?: boolean
    vessels?: boolean
  }

  export type CountryCountOutputTypeGetPayload<
    S extends boolean | null | undefined | CountryCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? CountryCountOutputType
    : S extends undefined
    ? never
    : S extends CountryCountOutputTypeArgs
    ?'include' extends U
    ? CountryCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof CountryCountOutputType ?CountryCountOutputType [P]
  : 
     never
  } 
    : CountryCountOutputType
  : CountryCountOutputType




  // Custom InputTypes

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the CountryCountOutputType
     * 
    **/
    select?: CountryCountOutputTypeSelect | null
  }



  /**
   * Count Type PortsCountOutputType
   */


  export type PortsCountOutputType = {
    berths: number
    port_files: number
    shipping_ports: number
  }

  export type PortsCountOutputTypeSelect = {
    berths?: boolean
    port_files?: boolean
    shipping_ports?: boolean
  }

  export type PortsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | PortsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? PortsCountOutputType
    : S extends undefined
    ? never
    : S extends PortsCountOutputTypeArgs
    ?'include' extends U
    ? PortsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof PortsCountOutputType ?PortsCountOutputType [P]
  : 
     never
  } 
    : PortsCountOutputType
  : PortsCountOutputType




  // Custom InputTypes

  /**
   * PortsCountOutputType without action
   */
  export type PortsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the PortsCountOutputType
     * 
    **/
    select?: PortsCountOutputTypeSelect | null
  }



  /**
   * Count Type ProductsCountOutputType
   */


  export type ProductsCountOutputType = {
    berth_products: number
    shipping_products: number
  }

  export type ProductsCountOutputTypeSelect = {
    berth_products?: boolean
    shipping_products?: boolean
  }

  export type ProductsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | ProductsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? ProductsCountOutputType
    : S extends undefined
    ? never
    : S extends ProductsCountOutputTypeArgs
    ?'include' extends U
    ? ProductsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProductsCountOutputType ?ProductsCountOutputType [P]
  : 
     never
  } 
    : ProductsCountOutputType
  : ProductsCountOutputType




  // Custom InputTypes

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ProductsCountOutputType
     * 
    **/
    select?: ProductsCountOutputTypeSelect | null
  }



  /**
   * Count Type ProformasCountOutputType
   */


  export type ProformasCountOutputType = {
    proforma_files: number
  }

  export type ProformasCountOutputTypeSelect = {
    proforma_files?: boolean
  }

  export type ProformasCountOutputTypeGetPayload<
    S extends boolean | null | undefined | ProformasCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? ProformasCountOutputType
    : S extends undefined
    ? never
    : S extends ProformasCountOutputTypeArgs
    ?'include' extends U
    ? ProformasCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProformasCountOutputType ?ProformasCountOutputType [P]
  : 
     never
  } 
    : ProformasCountOutputType
  : ProformasCountOutputType




  // Custom InputTypes

  /**
   * ProformasCountOutputType without action
   */
  export type ProformasCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ProformasCountOutputType
     * 
    **/
    select?: ProformasCountOutputTypeSelect | null
  }



  /**
   * Count Type Shipping_documentsCountOutputType
   */


  export type Shipping_documentsCountOutputType = {
    other_shipping_documents: number
  }

  export type Shipping_documentsCountOutputTypeSelect = {
    other_shipping_documents?: boolean
  }

  export type Shipping_documentsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Shipping_documentsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Shipping_documentsCountOutputType
    : S extends undefined
    ? never
    : S extends Shipping_documentsCountOutputTypeArgs
    ?'include' extends U
    ? Shipping_documentsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Shipping_documentsCountOutputType ?Shipping_documentsCountOutputType [P]
  : 
     never
  } 
    : Shipping_documentsCountOutputType
  : Shipping_documentsCountOutputType




  // Custom InputTypes

  /**
   * Shipping_documentsCountOutputType without action
   */
  export type Shipping_documentsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Shipping_documentsCountOutputType
     * 
    **/
    select?: Shipping_documentsCountOutputTypeSelect | null
  }



  /**
   * Count Type ShippingCountOutputType
   */


  export type ShippingCountOutputType = {
    shipping_documents: number
    shipping_files: number
    shipping_ports: number
    shipping_products: number
    subsets: number
    inquires: number
    ShippingChecklistItem: number
  }

  export type ShippingCountOutputTypeSelect = {
    shipping_documents?: boolean
    shipping_files?: boolean
    shipping_ports?: boolean
    shipping_products?: boolean
    subsets?: boolean
    inquires?: boolean
    ShippingChecklistItem?: boolean
  }

  export type ShippingCountOutputTypeGetPayload<
    S extends boolean | null | undefined | ShippingCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? ShippingCountOutputType
    : S extends undefined
    ? never
    : S extends ShippingCountOutputTypeArgs
    ?'include' extends U
    ? ShippingCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ShippingCountOutputType ?ShippingCountOutputType [P]
  : 
     never
  } 
    : ShippingCountOutputType
  : ShippingCountOutputType




  // Custom InputTypes

  /**
   * ShippingCountOutputType without action
   */
  export type ShippingCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ShippingCountOutputType
     * 
    **/
    select?: ShippingCountOutputTypeSelect | null
  }



  /**
   * Count Type UsersCountOutputType
   */


  export type UsersCountOutputType = {
    shipping_documents: number
    shipping_files: number
    shippings: number
    user_files: number
    inquires: number
    inquires_comments: number
    ShippingChecklistItem: number
    group_emails: number
    port_files: number
    vessel_files: number
  }

  export type UsersCountOutputTypeSelect = {
    shipping_documents?: boolean
    shipping_files?: boolean
    shippings?: boolean
    user_files?: boolean
    inquires?: boolean
    inquires_comments?: boolean
    ShippingChecklistItem?: boolean
    group_emails?: boolean
    port_files?: boolean
    vessel_files?: boolean
  }

  export type UsersCountOutputTypeGetPayload<
    S extends boolean | null | undefined | UsersCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? UsersCountOutputType
    : S extends undefined
    ? never
    : S extends UsersCountOutputTypeArgs
    ?'include' extends U
    ? UsersCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof UsersCountOutputType ?UsersCountOutputType [P]
  : 
     never
  } 
    : UsersCountOutputType
  : UsersCountOutputType




  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     * 
    **/
    select?: UsersCountOutputTypeSelect | null
  }



  /**
   * Count Type VesselCountOutputType
   */


  export type VesselCountOutputType = {
    shippings: number
    vessel_files: number
    group_emails: number
  }

  export type VesselCountOutputTypeSelect = {
    shippings?: boolean
    vessel_files?: boolean
    group_emails?: boolean
  }

  export type VesselCountOutputTypeGetPayload<
    S extends boolean | null | undefined | VesselCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? VesselCountOutputType
    : S extends undefined
    ? never
    : S extends VesselCountOutputTypeArgs
    ?'include' extends U
    ? VesselCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof VesselCountOutputType ?VesselCountOutputType [P]
  : 
     never
  } 
    : VesselCountOutputType
  : VesselCountOutputType




  // Custom InputTypes

  /**
   * VesselCountOutputType without action
   */
  export type VesselCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the VesselCountOutputType
     * 
    **/
    select?: VesselCountOutputTypeSelect | null
  }



  /**
   * Count Type InquiresCountOutputType
   */


  export type InquiresCountOutputType = {
    inquires_comments: number
  }

  export type InquiresCountOutputTypeSelect = {
    inquires_comments?: boolean
  }

  export type InquiresCountOutputTypeGetPayload<
    S extends boolean | null | undefined | InquiresCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? InquiresCountOutputType
    : S extends undefined
    ? never
    : S extends InquiresCountOutputTypeArgs
    ?'include' extends U
    ? InquiresCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof InquiresCountOutputType ?InquiresCountOutputType [P]
  : 
     never
  } 
    : InquiresCountOutputType
  : InquiresCountOutputType




  // Custom InputTypes

  /**
   * InquiresCountOutputType without action
   */
  export type InquiresCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the InquiresCountOutputType
     * 
    **/
    select?: InquiresCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model berth_products
   */


  export type AggregateBerth_products = {
    _count: Berth_productsCountAggregateOutputType | null
    _avg: Berth_productsAvgAggregateOutputType | null
    _sum: Berth_productsSumAggregateOutputType | null
    _min: Berth_productsMinAggregateOutputType | null
    _max: Berth_productsMaxAggregateOutputType | null
  }

  export type Berth_productsAvgAggregateOutputType = {
    id: number | null
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number | null
    productId: number | null
  }

  export type Berth_productsSumAggregateOutputType = {
    id: number | null
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number | null
    productId: number | null
  }

  export type Berth_productsMinAggregateOutputType = {
    id: number | null
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number | null
    productId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Berth_productsMaxAggregateOutputType = {
    id: number | null
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number | null
    productId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Berth_productsCountAggregateOutputType = {
    id: number
    loadingCapacity: number
    unloadingCapacity: number
    berthId: number
    productId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type Berth_productsAvgAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
  }

  export type Berth_productsSumAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
  }

  export type Berth_productsMinAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Berth_productsMaxAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Berth_productsCountAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type Berth_productsAggregateArgs = {
    /**
     * Filter which berth_products to aggregate.
     * 
    **/
    where?: berth_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berth_products to fetch.
     * 
    **/
    orderBy?: Enumerable<berth_productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: berth_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berth_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berth_products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned berth_products
    **/
    _count?: true | Berth_productsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Berth_productsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Berth_productsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Berth_productsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Berth_productsMaxAggregateInputType
  }

  export type GetBerth_productsAggregateType<T extends Berth_productsAggregateArgs> = {
        [P in keyof T & keyof AggregateBerth_products]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBerth_products[P]>
      : GetScalarType<T[P], AggregateBerth_products[P]>
  }




  export type Berth_productsGroupByArgs = {
    where?: berth_productsWhereInput
    orderBy?: Enumerable<berth_productsOrderByWithAggregationInput>
    by: Array<Berth_productsScalarFieldEnum>
    having?: berth_productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Berth_productsCountAggregateInputType | true
    _avg?: Berth_productsAvgAggregateInputType
    _sum?: Berth_productsSumAggregateInputType
    _min?: Berth_productsMinAggregateInputType
    _max?: Berth_productsMaxAggregateInputType
  }


  export type Berth_productsGroupByOutputType = {
    id: number
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number
    productId: number
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: Berth_productsCountAggregateOutputType | null
    _avg: Berth_productsAvgAggregateOutputType | null
    _sum: Berth_productsSumAggregateOutputType | null
    _min: Berth_productsMinAggregateOutputType | null
    _max: Berth_productsMaxAggregateOutputType | null
  }

  type GetBerth_productsGroupByPayload<T extends Berth_productsGroupByArgs> = Promise<
    Array<
      PickArray<Berth_productsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Berth_productsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Berth_productsGroupByOutputType[P]>
            : GetScalarType<T[P], Berth_productsGroupByOutputType[P]>
        }
      >
    >


  export type berth_productsSelect = {
    id?: boolean
    loadingCapacity?: boolean
    unloadingCapacity?: boolean
    berthId?: boolean
    productId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    berths?: boolean | berthsArgs
    products?: boolean | productsArgs
    proformas?: boolean | proformasFindManyArgs
    _count?: boolean | Berth_productsCountOutputTypeArgs
  }

  export type berth_productsInclude = {
    berths?: boolean | berthsArgs
    products?: boolean | productsArgs
    proformas?: boolean | proformasFindManyArgs
    _count?: boolean | Berth_productsCountOutputTypeArgs
  }

  export type berth_productsGetPayload<
    S extends boolean | null | undefined | berth_productsArgs,
    U = keyof S
      > = S extends true
        ? berth_products
    : S extends undefined
    ? never
    : S extends berth_productsArgs | berth_productsFindManyArgs
    ?'include' extends U
    ? berth_products  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'berths'
        ? berthsGetPayload<S['include'][P]> :
        P extends 'products'
        ? productsGetPayload<S['include'][P]> :
        P extends 'proformas'
        ? Array < proformasGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? Berth_productsCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof berth_products ?berth_products [P]
  : 
          P extends 'berths'
        ? berthsGetPayload<S['select'][P]> :
        P extends 'products'
        ? productsGetPayload<S['select'][P]> :
        P extends 'proformas'
        ? Array < proformasGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? Berth_productsCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : berth_products
  : berth_products


  type berth_productsCountArgs = Merge<
    Omit<berth_productsFindManyArgs, 'select' | 'include'> & {
      select?: Berth_productsCountAggregateInputType | true
    }
  >

  export interface berth_productsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Berth_products that matches the filter.
     * @param {berth_productsFindUniqueArgs} args - Arguments to find a Berth_products
     * @example
     * // Get one Berth_products
     * const berth_products = await prisma.berth_products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends berth_productsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, berth_productsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'berth_products'> extends True ? CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>> : CheckSelect<T, Prisma__berth_productsClient<berth_products | null >, Prisma__berth_productsClient<berth_productsGetPayload<T> | null >>

    /**
     * Find the first Berth_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berth_productsFindFirstArgs} args - Arguments to find a Berth_products
     * @example
     * // Get one Berth_products
     * const berth_products = await prisma.berth_products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends berth_productsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, berth_productsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'berth_products'> extends True ? CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>> : CheckSelect<T, Prisma__berth_productsClient<berth_products | null >, Prisma__berth_productsClient<berth_productsGetPayload<T> | null >>

    /**
     * Find zero or more Berth_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berth_productsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Berth_products
     * const berth_products = await prisma.berth_products.findMany()
     * 
     * // Get first 10 Berth_products
     * const berth_products = await prisma.berth_products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const berth_productsWithIdOnly = await prisma.berth_products.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends berth_productsFindManyArgs>(
      args?: SelectSubset<T, berth_productsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<berth_products>>, PrismaPromise<Array<berth_productsGetPayload<T>>>>

    /**
     * Create a Berth_products.
     * @param {berth_productsCreateArgs} args - Arguments to create a Berth_products.
     * @example
     * // Create one Berth_products
     * const Berth_products = await prisma.berth_products.create({
     *   data: {
     *     // ... data to create a Berth_products
     *   }
     * })
     * 
    **/
    create<T extends berth_productsCreateArgs>(
      args: SelectSubset<T, berth_productsCreateArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Create many Berth_products.
     *     @param {berth_productsCreateManyArgs} args - Arguments to create many Berth_products.
     *     @example
     *     // Create many Berth_products
     *     const berth_products = await prisma.berth_products.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends berth_productsCreateManyArgs>(
      args?: SelectSubset<T, berth_productsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Berth_products.
     * @param {berth_productsDeleteArgs} args - Arguments to delete one Berth_products.
     * @example
     * // Delete one Berth_products
     * const Berth_products = await prisma.berth_products.delete({
     *   where: {
     *     // ... filter to delete one Berth_products
     *   }
     * })
     * 
    **/
    delete<T extends berth_productsDeleteArgs>(
      args: SelectSubset<T, berth_productsDeleteArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Update one Berth_products.
     * @param {berth_productsUpdateArgs} args - Arguments to update one Berth_products.
     * @example
     * // Update one Berth_products
     * const berth_products = await prisma.berth_products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends berth_productsUpdateArgs>(
      args: SelectSubset<T, berth_productsUpdateArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Delete zero or more Berth_products.
     * @param {berth_productsDeleteManyArgs} args - Arguments to filter Berth_products to delete.
     * @example
     * // Delete a few Berth_products
     * const { count } = await prisma.berth_products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends berth_productsDeleteManyArgs>(
      args?: SelectSubset<T, berth_productsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Berth_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berth_productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Berth_products
     * const berth_products = await prisma.berth_products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends berth_productsUpdateManyArgs>(
      args: SelectSubset<T, berth_productsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Berth_products.
     * @param {berth_productsUpsertArgs} args - Arguments to update or create a Berth_products.
     * @example
     * // Update or create a Berth_products
     * const berth_products = await prisma.berth_products.upsert({
     *   create: {
     *     // ... data to create a Berth_products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Berth_products we want to update
     *   }
     * })
    **/
    upsert<T extends berth_productsUpsertArgs>(
      args: SelectSubset<T, berth_productsUpsertArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Count the number of Berth_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berth_productsCountArgs} args - Arguments to filter Berth_products to count.
     * @example
     * // Count the number of Berth_products
     * const count = await prisma.berth_products.count({
     *   where: {
     *     // ... the filter for the Berth_products we want to count
     *   }
     * })
    **/
    count<T extends berth_productsCountArgs>(
      args?: Subset<T, berth_productsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Berth_productsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Berth_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Berth_productsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Berth_productsAggregateArgs>(args: Subset<T, Berth_productsAggregateArgs>): PrismaPromise<GetBerth_productsAggregateType<T>>

    /**
     * Group by Berth_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Berth_productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Berth_productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Berth_productsGroupByArgs['orderBy'] }
        : { orderBy?: Berth_productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Berth_productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBerth_productsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for berth_products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__berth_productsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    berths<T extends berthsArgs = {}>(args?: Subset<T, berthsArgs>): CheckSelect<T, Prisma__berthsClient<berths | null >, Prisma__berthsClient<berthsGetPayload<T> | null >>;

    products<T extends productsArgs = {}>(args?: Subset<T, productsArgs>): CheckSelect<T, Prisma__productsClient<products | null >, Prisma__productsClient<productsGetPayload<T> | null >>;

    proformas<T extends proformasFindManyArgs = {}>(args?: Subset<T, proformasFindManyArgs>): CheckSelect<T, PrismaPromise<Array<proformas>>, PrismaPromise<Array<proformasGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * berth_products findUnique
   */
  export type berth_productsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * Throw an Error if a berth_products can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which berth_products to fetch.
     * 
    **/
    where: berth_productsWhereUniqueInput
  }


  /**
   * berth_products findFirst
   */
  export type berth_productsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * Throw an Error if a berth_products can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which berth_products to fetch.
     * 
    **/
    where?: berth_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berth_products to fetch.
     * 
    **/
    orderBy?: Enumerable<berth_productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for berth_products.
     * 
    **/
    cursor?: berth_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berth_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berth_products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of berth_products.
     * 
    **/
    distinct?: Enumerable<Berth_productsScalarFieldEnum>
  }


  /**
   * berth_products findMany
   */
  export type berth_productsFindManyArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * Filter, which berth_products to fetch.
     * 
    **/
    where?: berth_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berth_products to fetch.
     * 
    **/
    orderBy?: Enumerable<berth_productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing berth_products.
     * 
    **/
    cursor?: berth_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berth_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berth_products.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Berth_productsScalarFieldEnum>
  }


  /**
   * berth_products create
   */
  export type berth_productsCreateArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * The data needed to create a berth_products.
     * 
    **/
    data: XOR<berth_productsCreateInput, berth_productsUncheckedCreateInput>
  }


  /**
   * berth_products createMany
   */
  export type berth_productsCreateManyArgs = {
    data: Enumerable<berth_productsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * berth_products update
   */
  export type berth_productsUpdateArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * The data needed to update a berth_products.
     * 
    **/
    data: XOR<berth_productsUpdateInput, berth_productsUncheckedUpdateInput>
    /**
     * Choose, which berth_products to update.
     * 
    **/
    where: berth_productsWhereUniqueInput
  }


  /**
   * berth_products updateMany
   */
  export type berth_productsUpdateManyArgs = {
    data: XOR<berth_productsUpdateManyMutationInput, berth_productsUncheckedUpdateManyInput>
    where?: berth_productsWhereInput
  }


  /**
   * berth_products upsert
   */
  export type berth_productsUpsertArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * The filter to search for the berth_products to update in case it exists.
     * 
    **/
    where: berth_productsWhereUniqueInput
    /**
     * In case the berth_products found by the `where` argument doesn't exist, create a new berth_products with this data.
     * 
    **/
    create: XOR<berth_productsCreateInput, berth_productsUncheckedCreateInput>
    /**
     * In case the berth_products was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<berth_productsUpdateInput, berth_productsUncheckedUpdateInput>
  }


  /**
   * berth_products delete
   */
  export type berth_productsDeleteArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * Filter which berth_products to delete.
     * 
    **/
    where: berth_productsWhereUniqueInput
  }


  /**
   * berth_products deleteMany
   */
  export type berth_productsDeleteManyArgs = {
    where?: berth_productsWhereInput
  }


  /**
   * berth_products without action
   */
  export type berth_productsArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
  }



  /**
   * Model berths
   */


  export type AggregateBerths = {
    _count: BerthsCountAggregateOutputType | null
    _avg: BerthsAvgAggregateOutputType | null
    _sum: BerthsSumAggregateOutputType | null
    _min: BerthsMinAggregateOutputType | null
    _max: BerthsMaxAggregateOutputType | null
  }

  export type BerthsAvgAggregateOutputType = {
    id: number | null
    portId: number | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
  }

  export type BerthsSumAggregateOutputType = {
    id: number | null
    portId: number | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
  }

  export type BerthsMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    portId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
  }

  export type BerthsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    portId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
  }

  export type BerthsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    portId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    maxDraft: number
    airDraft: number
    maxLengthOverall: number
    maxDeadWeightTonnage: number
    maxBeam: number
    waterDensity: number
    _all: number
  }


  export type BerthsAvgAggregateInputType = {
    id?: true
    portId?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
  }

  export type BerthsSumAggregateInputType = {
    id?: true
    portId?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
  }

  export type BerthsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
  }

  export type BerthsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
  }

  export type BerthsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
    _all?: true
  }

  export type BerthsAggregateArgs = {
    /**
     * Filter which berths to aggregate.
     * 
    **/
    where?: berthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berths to fetch.
     * 
    **/
    orderBy?: Enumerable<berthsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: berthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berths from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berths.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned berths
    **/
    _count?: true | BerthsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BerthsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BerthsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BerthsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BerthsMaxAggregateInputType
  }

  export type GetBerthsAggregateType<T extends BerthsAggregateArgs> = {
        [P in keyof T & keyof AggregateBerths]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBerths[P]>
      : GetScalarType<T[P], AggregateBerths[P]>
  }




  export type BerthsGroupByArgs = {
    where?: berthsWhereInput
    orderBy?: Enumerable<berthsOrderByWithAggregationInput>
    by: Array<BerthsScalarFieldEnum>
    having?: berthsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BerthsCountAggregateInputType | true
    _avg?: BerthsAvgAggregateInputType
    _sum?: BerthsSumAggregateInputType
    _min?: BerthsMinAggregateInputType
    _max?: BerthsMaxAggregateInputType
  }


  export type BerthsGroupByOutputType = {
    id: number
    name: string | null
    description: string | null
    portId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
    _count: BerthsCountAggregateOutputType | null
    _avg: BerthsAvgAggregateOutputType | null
    _sum: BerthsSumAggregateOutputType | null
    _min: BerthsMinAggregateOutputType | null
    _max: BerthsMaxAggregateOutputType | null
  }

  type GetBerthsGroupByPayload<T extends BerthsGroupByArgs> = Promise<
    Array<
      PickArray<BerthsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BerthsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BerthsGroupByOutputType[P]>
            : GetScalarType<T[P], BerthsGroupByOutputType[P]>
        }
      >
    >


  export type berthsSelect = {
    id?: boolean
    name?: boolean
    description?: boolean
    portId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    maxDraft?: boolean
    airDraft?: boolean
    maxLengthOverall?: boolean
    maxDeadWeightTonnage?: boolean
    maxBeam?: boolean
    waterDensity?: boolean
    ports?: boolean | portsArgs
    berth_products?: boolean | berth_productsFindManyArgs
    shipping_ports?: boolean | shipping_portsFindManyArgs
    _count?: boolean | BerthsCountOutputTypeArgs
  }

  export type berthsInclude = {
    ports?: boolean | portsArgs
    berth_products?: boolean | berth_productsFindManyArgs
    shipping_ports?: boolean | shipping_portsFindManyArgs
    _count?: boolean | BerthsCountOutputTypeArgs
  }

  export type berthsGetPayload<
    S extends boolean | null | undefined | berthsArgs,
    U = keyof S
      > = S extends true
        ? berths
    : S extends undefined
    ? never
    : S extends berthsArgs | berthsFindManyArgs
    ?'include' extends U
    ? berths  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'ports'
        ? portsGetPayload<S['include'][P]> | null :
        P extends 'berth_products'
        ? Array < berth_productsGetPayload<S['include'][P]>>  :
        P extends 'shipping_ports'
        ? Array < shipping_portsGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? BerthsCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof berths ?berths [P]
  : 
          P extends 'ports'
        ? portsGetPayload<S['select'][P]> | null :
        P extends 'berth_products'
        ? Array < berth_productsGetPayload<S['select'][P]>>  :
        P extends 'shipping_ports'
        ? Array < shipping_portsGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? BerthsCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : berths
  : berths


  type berthsCountArgs = Merge<
    Omit<berthsFindManyArgs, 'select' | 'include'> & {
      select?: BerthsCountAggregateInputType | true
    }
  >

  export interface berthsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Berths that matches the filter.
     * @param {berthsFindUniqueArgs} args - Arguments to find a Berths
     * @example
     * // Get one Berths
     * const berths = await prisma.berths.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends berthsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, berthsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'berths'> extends True ? CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>> : CheckSelect<T, Prisma__berthsClient<berths | null >, Prisma__berthsClient<berthsGetPayload<T> | null >>

    /**
     * Find the first Berths that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berthsFindFirstArgs} args - Arguments to find a Berths
     * @example
     * // Get one Berths
     * const berths = await prisma.berths.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends berthsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, berthsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'berths'> extends True ? CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>> : CheckSelect<T, Prisma__berthsClient<berths | null >, Prisma__berthsClient<berthsGetPayload<T> | null >>

    /**
     * Find zero or more Berths that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berthsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Berths
     * const berths = await prisma.berths.findMany()
     * 
     * // Get first 10 Berths
     * const berths = await prisma.berths.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const berthsWithIdOnly = await prisma.berths.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends berthsFindManyArgs>(
      args?: SelectSubset<T, berthsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<berths>>, PrismaPromise<Array<berthsGetPayload<T>>>>

    /**
     * Create a Berths.
     * @param {berthsCreateArgs} args - Arguments to create a Berths.
     * @example
     * // Create one Berths
     * const Berths = await prisma.berths.create({
     *   data: {
     *     // ... data to create a Berths
     *   }
     * })
     * 
    **/
    create<T extends berthsCreateArgs>(
      args: SelectSubset<T, berthsCreateArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Create many Berths.
     *     @param {berthsCreateManyArgs} args - Arguments to create many Berths.
     *     @example
     *     // Create many Berths
     *     const berths = await prisma.berths.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends berthsCreateManyArgs>(
      args?: SelectSubset<T, berthsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Berths.
     * @param {berthsDeleteArgs} args - Arguments to delete one Berths.
     * @example
     * // Delete one Berths
     * const Berths = await prisma.berths.delete({
     *   where: {
     *     // ... filter to delete one Berths
     *   }
     * })
     * 
    **/
    delete<T extends berthsDeleteArgs>(
      args: SelectSubset<T, berthsDeleteArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Update one Berths.
     * @param {berthsUpdateArgs} args - Arguments to update one Berths.
     * @example
     * // Update one Berths
     * const berths = await prisma.berths.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends berthsUpdateArgs>(
      args: SelectSubset<T, berthsUpdateArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Delete zero or more Berths.
     * @param {berthsDeleteManyArgs} args - Arguments to filter Berths to delete.
     * @example
     * // Delete a few Berths
     * const { count } = await prisma.berths.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends berthsDeleteManyArgs>(
      args?: SelectSubset<T, berthsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Berths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berthsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Berths
     * const berths = await prisma.berths.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends berthsUpdateManyArgs>(
      args: SelectSubset<T, berthsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Berths.
     * @param {berthsUpsertArgs} args - Arguments to update or create a Berths.
     * @example
     * // Update or create a Berths
     * const berths = await prisma.berths.upsert({
     *   create: {
     *     // ... data to create a Berths
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Berths we want to update
     *   }
     * })
    **/
    upsert<T extends berthsUpsertArgs>(
      args: SelectSubset<T, berthsUpsertArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Count the number of Berths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berthsCountArgs} args - Arguments to filter Berths to count.
     * @example
     * // Count the number of Berths
     * const count = await prisma.berths.count({
     *   where: {
     *     // ... the filter for the Berths we want to count
     *   }
     * })
    **/
    count<T extends berthsCountArgs>(
      args?: Subset<T, berthsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BerthsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Berths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BerthsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BerthsAggregateArgs>(args: Subset<T, BerthsAggregateArgs>): PrismaPromise<GetBerthsAggregateType<T>>

    /**
     * Group by Berths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BerthsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BerthsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BerthsGroupByArgs['orderBy'] }
        : { orderBy?: BerthsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BerthsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBerthsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for berths.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__berthsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    ports<T extends portsArgs = {}>(args?: Subset<T, portsArgs>): CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>;

    berth_products<T extends berth_productsFindManyArgs = {}>(args?: Subset<T, berth_productsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<berth_products>>, PrismaPromise<Array<berth_productsGetPayload<T>>>>;

    shipping_ports<T extends shipping_portsFindManyArgs = {}>(args?: Subset<T, shipping_portsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_ports>>, PrismaPromise<Array<shipping_portsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * berths findUnique
   */
  export type berthsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * Throw an Error if a berths can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which berths to fetch.
     * 
    **/
    where: berthsWhereUniqueInput
  }


  /**
   * berths findFirst
   */
  export type berthsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * Throw an Error if a berths can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which berths to fetch.
     * 
    **/
    where?: berthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berths to fetch.
     * 
    **/
    orderBy?: Enumerable<berthsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for berths.
     * 
    **/
    cursor?: berthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berths from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berths.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of berths.
     * 
    **/
    distinct?: Enumerable<BerthsScalarFieldEnum>
  }


  /**
   * berths findMany
   */
  export type berthsFindManyArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * Filter, which berths to fetch.
     * 
    **/
    where?: berthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berths to fetch.
     * 
    **/
    orderBy?: Enumerable<berthsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing berths.
     * 
    **/
    cursor?: berthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berths from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berths.
     * 
    **/
    skip?: number
    distinct?: Enumerable<BerthsScalarFieldEnum>
  }


  /**
   * berths create
   */
  export type berthsCreateArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * The data needed to create a berths.
     * 
    **/
    data: XOR<berthsCreateInput, berthsUncheckedCreateInput>
  }


  /**
   * berths createMany
   */
  export type berthsCreateManyArgs = {
    data: Enumerable<berthsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * berths update
   */
  export type berthsUpdateArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * The data needed to update a berths.
     * 
    **/
    data: XOR<berthsUpdateInput, berthsUncheckedUpdateInput>
    /**
     * Choose, which berths to update.
     * 
    **/
    where: berthsWhereUniqueInput
  }


  /**
   * berths updateMany
   */
  export type berthsUpdateManyArgs = {
    data: XOR<berthsUpdateManyMutationInput, berthsUncheckedUpdateManyInput>
    where?: berthsWhereInput
  }


  /**
   * berths upsert
   */
  export type berthsUpsertArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * The filter to search for the berths to update in case it exists.
     * 
    **/
    where: berthsWhereUniqueInput
    /**
     * In case the berths found by the `where` argument doesn't exist, create a new berths with this data.
     * 
    **/
    create: XOR<berthsCreateInput, berthsUncheckedCreateInput>
    /**
     * In case the berths was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<berthsUpdateInput, berthsUncheckedUpdateInput>
  }


  /**
   * berths delete
   */
  export type berthsDeleteArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * Filter which berths to delete.
     * 
    **/
    where: berthsWhereUniqueInput
  }


  /**
   * berths deleteMany
   */
  export type berthsDeleteManyArgs = {
    where?: berthsWhereInput
  }


  /**
   * berths without action
   */
  export type berthsArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
  }



  /**
   * Model ChecklistTemplate
   */


  export type AggregateChecklistTemplate = {
    _count: ChecklistTemplateCountAggregateOutputType | null
    _avg: ChecklistTemplateAvgAggregateOutputType | null
    _sum: ChecklistTemplateSumAggregateOutputType | null
    _min: ChecklistTemplateMinAggregateOutputType | null
    _max: ChecklistTemplateMaxAggregateOutputType | null
  }

  export type ChecklistTemplateAvgAggregateOutputType = {
    id: number | null
  }

  export type ChecklistTemplateSumAggregateOutputType = {
    id: number | null
  }

  export type ChecklistTemplateMinAggregateOutputType = {
    id: number | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ChecklistTemplateMaxAggregateOutputType = {
    id: number | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ChecklistTemplateCountAggregateOutputType = {
    id: number
    name: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type ChecklistTemplateAvgAggregateInputType = {
    id?: true
  }

  export type ChecklistTemplateSumAggregateInputType = {
    id?: true
  }

  export type ChecklistTemplateMinAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ChecklistTemplateMaxAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ChecklistTemplateCountAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type ChecklistTemplateAggregateArgs = {
    /**
     * Filter which ChecklistTemplate to aggregate.
     * 
    **/
    where?: ChecklistTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplates to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ChecklistTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplates from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplates.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistTemplates
    **/
    _count?: true | ChecklistTemplateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistTemplateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistTemplateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistTemplateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistTemplateMaxAggregateInputType
  }

  export type GetChecklistTemplateAggregateType<T extends ChecklistTemplateAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistTemplate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistTemplate[P]>
      : GetScalarType<T[P], AggregateChecklistTemplate[P]>
  }




  export type ChecklistTemplateGroupByArgs = {
    where?: ChecklistTemplateWhereInput
    orderBy?: Enumerable<ChecklistTemplateOrderByWithAggregationInput>
    by: Array<ChecklistTemplateScalarFieldEnum>
    having?: ChecklistTemplateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistTemplateCountAggregateInputType | true
    _avg?: ChecklistTemplateAvgAggregateInputType
    _sum?: ChecklistTemplateSumAggregateInputType
    _min?: ChecklistTemplateMinAggregateInputType
    _max?: ChecklistTemplateMaxAggregateInputType
  }


  export type ChecklistTemplateGroupByOutputType = {
    id: number
    name: string
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: ChecklistTemplateCountAggregateOutputType | null
    _avg: ChecklistTemplateAvgAggregateOutputType | null
    _sum: ChecklistTemplateSumAggregateOutputType | null
    _min: ChecklistTemplateMinAggregateOutputType | null
    _max: ChecklistTemplateMaxAggregateOutputType | null
  }

  type GetChecklistTemplateGroupByPayload<T extends ChecklistTemplateGroupByArgs> = Promise<
    Array<
      PickArray<ChecklistTemplateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistTemplateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistTemplateGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistTemplateGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistTemplateSelect = {
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    items?: boolean | ChecklistTemplateItemFindManyArgs
    _count?: boolean | ChecklistTemplateCountOutputTypeArgs
  }

  export type ChecklistTemplateInclude = {
    items?: boolean | ChecklistTemplateItemFindManyArgs
    _count?: boolean | ChecklistTemplateCountOutputTypeArgs
  }

  export type ChecklistTemplateGetPayload<
    S extends boolean | null | undefined | ChecklistTemplateArgs,
    U = keyof S
      > = S extends true
        ? ChecklistTemplate
    : S extends undefined
    ? never
    : S extends ChecklistTemplateArgs | ChecklistTemplateFindManyArgs
    ?'include' extends U
    ? ChecklistTemplate  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'items'
        ? Array < ChecklistTemplateItemGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? ChecklistTemplateCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ChecklistTemplate ?ChecklistTemplate [P]
  : 
          P extends 'items'
        ? Array < ChecklistTemplateItemGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? ChecklistTemplateCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : ChecklistTemplate
  : ChecklistTemplate


  type ChecklistTemplateCountArgs = Merge<
    Omit<ChecklistTemplateFindManyArgs, 'select' | 'include'> & {
      select?: ChecklistTemplateCountAggregateInputType | true
    }
  >

  export interface ChecklistTemplateDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ChecklistTemplate that matches the filter.
     * @param {ChecklistTemplateFindUniqueArgs} args - Arguments to find a ChecklistTemplate
     * @example
     * // Get one ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ChecklistTemplateFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ChecklistTemplateFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ChecklistTemplate'> extends True ? CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>> : CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate | null >, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T> | null >>

    /**
     * Find the first ChecklistTemplate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateFindFirstArgs} args - Arguments to find a ChecklistTemplate
     * @example
     * // Get one ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ChecklistTemplateFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ChecklistTemplateFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ChecklistTemplate'> extends True ? CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>> : CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate | null >, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T> | null >>

    /**
     * Find zero or more ChecklistTemplates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistTemplates
     * const checklistTemplates = await prisma.checklistTemplate.findMany()
     * 
     * // Get first 10 ChecklistTemplates
     * const checklistTemplates = await prisma.checklistTemplate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistTemplateWithIdOnly = await prisma.checklistTemplate.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ChecklistTemplateFindManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ChecklistTemplate>>, PrismaPromise<Array<ChecklistTemplateGetPayload<T>>>>

    /**
     * Create a ChecklistTemplate.
     * @param {ChecklistTemplateCreateArgs} args - Arguments to create a ChecklistTemplate.
     * @example
     * // Create one ChecklistTemplate
     * const ChecklistTemplate = await prisma.checklistTemplate.create({
     *   data: {
     *     // ... data to create a ChecklistTemplate
     *   }
     * })
     * 
    **/
    create<T extends ChecklistTemplateCreateArgs>(
      args: SelectSubset<T, ChecklistTemplateCreateArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Create many ChecklistTemplates.
     *     @param {ChecklistTemplateCreateManyArgs} args - Arguments to create many ChecklistTemplates.
     *     @example
     *     // Create many ChecklistTemplates
     *     const checklistTemplate = await prisma.checklistTemplate.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ChecklistTemplateCreateManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistTemplate.
     * @param {ChecklistTemplateDeleteArgs} args - Arguments to delete one ChecklistTemplate.
     * @example
     * // Delete one ChecklistTemplate
     * const ChecklistTemplate = await prisma.checklistTemplate.delete({
     *   where: {
     *     // ... filter to delete one ChecklistTemplate
     *   }
     * })
     * 
    **/
    delete<T extends ChecklistTemplateDeleteArgs>(
      args: SelectSubset<T, ChecklistTemplateDeleteArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Update one ChecklistTemplate.
     * @param {ChecklistTemplateUpdateArgs} args - Arguments to update one ChecklistTemplate.
     * @example
     * // Update one ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ChecklistTemplateUpdateArgs>(
      args: SelectSubset<T, ChecklistTemplateUpdateArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Delete zero or more ChecklistTemplates.
     * @param {ChecklistTemplateDeleteManyArgs} args - Arguments to filter ChecklistTemplates to delete.
     * @example
     * // Delete a few ChecklistTemplates
     * const { count } = await prisma.checklistTemplate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ChecklistTemplateDeleteManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistTemplates
     * const checklistTemplate = await prisma.checklistTemplate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ChecklistTemplateUpdateManyArgs>(
      args: SelectSubset<T, ChecklistTemplateUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistTemplate.
     * @param {ChecklistTemplateUpsertArgs} args - Arguments to update or create a ChecklistTemplate.
     * @example
     * // Update or create a ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.upsert({
     *   create: {
     *     // ... data to create a ChecklistTemplate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistTemplate we want to update
     *   }
     * })
    **/
    upsert<T extends ChecklistTemplateUpsertArgs>(
      args: SelectSubset<T, ChecklistTemplateUpsertArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Count the number of ChecklistTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateCountArgs} args - Arguments to filter ChecklistTemplates to count.
     * @example
     * // Count the number of ChecklistTemplates
     * const count = await prisma.checklistTemplate.count({
     *   where: {
     *     // ... the filter for the ChecklistTemplates we want to count
     *   }
     * })
    **/
    count<T extends ChecklistTemplateCountArgs>(
      args?: Subset<T, ChecklistTemplateCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistTemplateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistTemplateAggregateArgs>(args: Subset<T, ChecklistTemplateAggregateArgs>): PrismaPromise<GetChecklistTemplateAggregateType<T>>

    /**
     * Group by ChecklistTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistTemplateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistTemplateGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistTemplateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistTemplateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistTemplateGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistTemplate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ChecklistTemplateClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    items<T extends ChecklistTemplateItemFindManyArgs = {}>(args?: Subset<T, ChecklistTemplateItemFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ChecklistTemplateItem>>, PrismaPromise<Array<ChecklistTemplateItemGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ChecklistTemplate findUnique
   */
  export type ChecklistTemplateFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * Throw an Error if a ChecklistTemplate can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ChecklistTemplate to fetch.
     * 
    **/
    where: ChecklistTemplateWhereUniqueInput
  }


  /**
   * ChecklistTemplate findFirst
   */
  export type ChecklistTemplateFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * Throw an Error if a ChecklistTemplate can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ChecklistTemplate to fetch.
     * 
    **/
    where?: ChecklistTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplates to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistTemplates.
     * 
    **/
    cursor?: ChecklistTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplates from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplates.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistTemplates.
     * 
    **/
    distinct?: Enumerable<ChecklistTemplateScalarFieldEnum>
  }


  /**
   * ChecklistTemplate findMany
   */
  export type ChecklistTemplateFindManyArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * Filter, which ChecklistTemplates to fetch.
     * 
    **/
    where?: ChecklistTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplates to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistTemplates.
     * 
    **/
    cursor?: ChecklistTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplates from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplates.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ChecklistTemplateScalarFieldEnum>
  }


  /**
   * ChecklistTemplate create
   */
  export type ChecklistTemplateCreateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * The data needed to create a ChecklistTemplate.
     * 
    **/
    data: XOR<ChecklistTemplateCreateInput, ChecklistTemplateUncheckedCreateInput>
  }


  /**
   * ChecklistTemplate createMany
   */
  export type ChecklistTemplateCreateManyArgs = {
    data: Enumerable<ChecklistTemplateCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ChecklistTemplate update
   */
  export type ChecklistTemplateUpdateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * The data needed to update a ChecklistTemplate.
     * 
    **/
    data: XOR<ChecklistTemplateUpdateInput, ChecklistTemplateUncheckedUpdateInput>
    /**
     * Choose, which ChecklistTemplate to update.
     * 
    **/
    where: ChecklistTemplateWhereUniqueInput
  }


  /**
   * ChecklistTemplate updateMany
   */
  export type ChecklistTemplateUpdateManyArgs = {
    data: XOR<ChecklistTemplateUpdateManyMutationInput, ChecklistTemplateUncheckedUpdateManyInput>
    where?: ChecklistTemplateWhereInput
  }


  /**
   * ChecklistTemplate upsert
   */
  export type ChecklistTemplateUpsertArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * The filter to search for the ChecklistTemplate to update in case it exists.
     * 
    **/
    where: ChecklistTemplateWhereUniqueInput
    /**
     * In case the ChecklistTemplate found by the `where` argument doesn't exist, create a new ChecklistTemplate with this data.
     * 
    **/
    create: XOR<ChecklistTemplateCreateInput, ChecklistTemplateUncheckedCreateInput>
    /**
     * In case the ChecklistTemplate was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ChecklistTemplateUpdateInput, ChecklistTemplateUncheckedUpdateInput>
  }


  /**
   * ChecklistTemplate delete
   */
  export type ChecklistTemplateDeleteArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * Filter which ChecklistTemplate to delete.
     * 
    **/
    where: ChecklistTemplateWhereUniqueInput
  }


  /**
   * ChecklistTemplate deleteMany
   */
  export type ChecklistTemplateDeleteManyArgs = {
    where?: ChecklistTemplateWhereInput
  }


  /**
   * ChecklistTemplate without action
   */
  export type ChecklistTemplateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
  }



  /**
   * Model ChecklistTemplateItem
   */


  export type AggregateChecklistTemplateItem = {
    _count: ChecklistTemplateItemCountAggregateOutputType | null
    _avg: ChecklistTemplateItemAvgAggregateOutputType | null
    _sum: ChecklistTemplateItemSumAggregateOutputType | null
    _min: ChecklistTemplateItemMinAggregateOutputType | null
    _max: ChecklistTemplateItemMaxAggregateOutputType | null
  }

  export type ChecklistTemplateItemAvgAggregateOutputType = {
    id: number | null
    working_days: number | null
    checklist_template_id: number | null
  }

  export type ChecklistTemplateItemSumAggregateOutputType = {
    id: number | null
    working_days: number | null
    checklist_template_id: number | null
  }

  export type ChecklistTemplateItemMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: string | null
    working_days: number | null
    checklist_template_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ChecklistTemplateItemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: string | null
    working_days: number | null
    checklist_template_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ChecklistTemplateItemCountAggregateOutputType = {
    id: number
    name: number
    description: number
    type: number
    working_days: number
    checklist_template_id: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ChecklistTemplateItemAvgAggregateInputType = {
    id?: true
    working_days?: true
    checklist_template_id?: true
  }

  export type ChecklistTemplateItemSumAggregateInputType = {
    id?: true
    working_days?: true
    checklist_template_id?: true
  }

  export type ChecklistTemplateItemMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    working_days?: true
    checklist_template_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ChecklistTemplateItemMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    working_days?: true
    checklist_template_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ChecklistTemplateItemCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    working_days?: true
    checklist_template_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ChecklistTemplateItemAggregateArgs = {
    /**
     * Filter which ChecklistTemplateItem to aggregate.
     * 
    **/
    where?: ChecklistTemplateItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplateItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ChecklistTemplateItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplateItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplateItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistTemplateItems
    **/
    _count?: true | ChecklistTemplateItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistTemplateItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistTemplateItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistTemplateItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistTemplateItemMaxAggregateInputType
  }

  export type GetChecklistTemplateItemAggregateType<T extends ChecklistTemplateItemAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistTemplateItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistTemplateItem[P]>
      : GetScalarType<T[P], AggregateChecklistTemplateItem[P]>
  }




  export type ChecklistTemplateItemGroupByArgs = {
    where?: ChecklistTemplateItemWhereInput
    orderBy?: Enumerable<ChecklistTemplateItemOrderByWithAggregationInput>
    by: Array<ChecklistTemplateItemScalarFieldEnum>
    having?: ChecklistTemplateItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistTemplateItemCountAggregateInputType | true
    _avg?: ChecklistTemplateItemAvgAggregateInputType
    _sum?: ChecklistTemplateItemSumAggregateInputType
    _min?: ChecklistTemplateItemMinAggregateInputType
    _max?: ChecklistTemplateItemMaxAggregateInputType
  }


  export type ChecklistTemplateItemGroupByOutputType = {
    id: number
    name: string
    description: string | null
    type: string
    working_days: number | null
    checklist_template_id: number
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ChecklistTemplateItemCountAggregateOutputType | null
    _avg: ChecklistTemplateItemAvgAggregateOutputType | null
    _sum: ChecklistTemplateItemSumAggregateOutputType | null
    _min: ChecklistTemplateItemMinAggregateOutputType | null
    _max: ChecklistTemplateItemMaxAggregateOutputType | null
  }

  type GetChecklistTemplateItemGroupByPayload<T extends ChecklistTemplateItemGroupByArgs> = Promise<
    Array<
      PickArray<ChecklistTemplateItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistTemplateItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistTemplateItemGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistTemplateItemGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistTemplateItemSelect = {
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    working_days?: boolean
    checklist_template_id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    checklistTemplate?: boolean | ChecklistTemplateArgs
  }

  export type ChecklistTemplateItemInclude = {
    checklistTemplate?: boolean | ChecklistTemplateArgs
  }

  export type ChecklistTemplateItemGetPayload<
    S extends boolean | null | undefined | ChecklistTemplateItemArgs,
    U = keyof S
      > = S extends true
        ? ChecklistTemplateItem
    : S extends undefined
    ? never
    : S extends ChecklistTemplateItemArgs | ChecklistTemplateItemFindManyArgs
    ?'include' extends U
    ? ChecklistTemplateItem  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'checklistTemplate'
        ? ChecklistTemplateGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ChecklistTemplateItem ?ChecklistTemplateItem [P]
  : 
          P extends 'checklistTemplate'
        ? ChecklistTemplateGetPayload<S['select'][P]> | null : never
  } 
    : ChecklistTemplateItem
  : ChecklistTemplateItem


  type ChecklistTemplateItemCountArgs = Merge<
    Omit<ChecklistTemplateItemFindManyArgs, 'select' | 'include'> & {
      select?: ChecklistTemplateItemCountAggregateInputType | true
    }
  >

  export interface ChecklistTemplateItemDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ChecklistTemplateItem that matches the filter.
     * @param {ChecklistTemplateItemFindUniqueArgs} args - Arguments to find a ChecklistTemplateItem
     * @example
     * // Get one ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ChecklistTemplateItemFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ChecklistTemplateItemFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ChecklistTemplateItem'> extends True ? CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>> : CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem | null >, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T> | null >>

    /**
     * Find the first ChecklistTemplateItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemFindFirstArgs} args - Arguments to find a ChecklistTemplateItem
     * @example
     * // Get one ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ChecklistTemplateItemFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ChecklistTemplateItemFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ChecklistTemplateItem'> extends True ? CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>> : CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem | null >, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T> | null >>

    /**
     * Find zero or more ChecklistTemplateItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistTemplateItems
     * const checklistTemplateItems = await prisma.checklistTemplateItem.findMany()
     * 
     * // Get first 10 ChecklistTemplateItems
     * const checklistTemplateItems = await prisma.checklistTemplateItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistTemplateItemWithIdOnly = await prisma.checklistTemplateItem.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ChecklistTemplateItemFindManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateItemFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ChecklistTemplateItem>>, PrismaPromise<Array<ChecklistTemplateItemGetPayload<T>>>>

    /**
     * Create a ChecklistTemplateItem.
     * @param {ChecklistTemplateItemCreateArgs} args - Arguments to create a ChecklistTemplateItem.
     * @example
     * // Create one ChecklistTemplateItem
     * const ChecklistTemplateItem = await prisma.checklistTemplateItem.create({
     *   data: {
     *     // ... data to create a ChecklistTemplateItem
     *   }
     * })
     * 
    **/
    create<T extends ChecklistTemplateItemCreateArgs>(
      args: SelectSubset<T, ChecklistTemplateItemCreateArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Create many ChecklistTemplateItems.
     *     @param {ChecklistTemplateItemCreateManyArgs} args - Arguments to create many ChecklistTemplateItems.
     *     @example
     *     // Create many ChecklistTemplateItems
     *     const checklistTemplateItem = await prisma.checklistTemplateItem.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ChecklistTemplateItemCreateManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateItemCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistTemplateItem.
     * @param {ChecklistTemplateItemDeleteArgs} args - Arguments to delete one ChecklistTemplateItem.
     * @example
     * // Delete one ChecklistTemplateItem
     * const ChecklistTemplateItem = await prisma.checklistTemplateItem.delete({
     *   where: {
     *     // ... filter to delete one ChecklistTemplateItem
     *   }
     * })
     * 
    **/
    delete<T extends ChecklistTemplateItemDeleteArgs>(
      args: SelectSubset<T, ChecklistTemplateItemDeleteArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Update one ChecklistTemplateItem.
     * @param {ChecklistTemplateItemUpdateArgs} args - Arguments to update one ChecklistTemplateItem.
     * @example
     * // Update one ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ChecklistTemplateItemUpdateArgs>(
      args: SelectSubset<T, ChecklistTemplateItemUpdateArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Delete zero or more ChecklistTemplateItems.
     * @param {ChecklistTemplateItemDeleteManyArgs} args - Arguments to filter ChecklistTemplateItems to delete.
     * @example
     * // Delete a few ChecklistTemplateItems
     * const { count } = await prisma.checklistTemplateItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ChecklistTemplateItemDeleteManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateItemDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistTemplateItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistTemplateItems
     * const checklistTemplateItem = await prisma.checklistTemplateItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ChecklistTemplateItemUpdateManyArgs>(
      args: SelectSubset<T, ChecklistTemplateItemUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistTemplateItem.
     * @param {ChecklistTemplateItemUpsertArgs} args - Arguments to update or create a ChecklistTemplateItem.
     * @example
     * // Update or create a ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.upsert({
     *   create: {
     *     // ... data to create a ChecklistTemplateItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistTemplateItem we want to update
     *   }
     * })
    **/
    upsert<T extends ChecklistTemplateItemUpsertArgs>(
      args: SelectSubset<T, ChecklistTemplateItemUpsertArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Count the number of ChecklistTemplateItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemCountArgs} args - Arguments to filter ChecklistTemplateItems to count.
     * @example
     * // Count the number of ChecklistTemplateItems
     * const count = await prisma.checklistTemplateItem.count({
     *   where: {
     *     // ... the filter for the ChecklistTemplateItems we want to count
     *   }
     * })
    **/
    count<T extends ChecklistTemplateItemCountArgs>(
      args?: Subset<T, ChecklistTemplateItemCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistTemplateItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistTemplateItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistTemplateItemAggregateArgs>(args: Subset<T, ChecklistTemplateItemAggregateArgs>): PrismaPromise<GetChecklistTemplateItemAggregateType<T>>

    /**
     * Group by ChecklistTemplateItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistTemplateItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistTemplateItemGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistTemplateItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistTemplateItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistTemplateItemGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistTemplateItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ChecklistTemplateItemClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    checklistTemplate<T extends ChecklistTemplateArgs = {}>(args?: Subset<T, ChecklistTemplateArgs>): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate | null >, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ChecklistTemplateItem findUnique
   */
  export type ChecklistTemplateItemFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * Throw an Error if a ChecklistTemplateItem can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ChecklistTemplateItem to fetch.
     * 
    **/
    where: ChecklistTemplateItemWhereUniqueInput
  }


  /**
   * ChecklistTemplateItem findFirst
   */
  export type ChecklistTemplateItemFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * Throw an Error if a ChecklistTemplateItem can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ChecklistTemplateItem to fetch.
     * 
    **/
    where?: ChecklistTemplateItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplateItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistTemplateItems.
     * 
    **/
    cursor?: ChecklistTemplateItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplateItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplateItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistTemplateItems.
     * 
    **/
    distinct?: Enumerable<ChecklistTemplateItemScalarFieldEnum>
  }


  /**
   * ChecklistTemplateItem findMany
   */
  export type ChecklistTemplateItemFindManyArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * Filter, which ChecklistTemplateItems to fetch.
     * 
    **/
    where?: ChecklistTemplateItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplateItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistTemplateItems.
     * 
    **/
    cursor?: ChecklistTemplateItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplateItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplateItems.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ChecklistTemplateItemScalarFieldEnum>
  }


  /**
   * ChecklistTemplateItem create
   */
  export type ChecklistTemplateItemCreateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * The data needed to create a ChecklistTemplateItem.
     * 
    **/
    data: XOR<ChecklistTemplateItemCreateInput, ChecklistTemplateItemUncheckedCreateInput>
  }


  /**
   * ChecklistTemplateItem createMany
   */
  export type ChecklistTemplateItemCreateManyArgs = {
    data: Enumerable<ChecklistTemplateItemCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ChecklistTemplateItem update
   */
  export type ChecklistTemplateItemUpdateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * The data needed to update a ChecklistTemplateItem.
     * 
    **/
    data: XOR<ChecklistTemplateItemUpdateInput, ChecklistTemplateItemUncheckedUpdateInput>
    /**
     * Choose, which ChecklistTemplateItem to update.
     * 
    **/
    where: ChecklistTemplateItemWhereUniqueInput
  }


  /**
   * ChecklistTemplateItem updateMany
   */
  export type ChecklistTemplateItemUpdateManyArgs = {
    data: XOR<ChecklistTemplateItemUpdateManyMutationInput, ChecklistTemplateItemUncheckedUpdateManyInput>
    where?: ChecklistTemplateItemWhereInput
  }


  /**
   * ChecklistTemplateItem upsert
   */
  export type ChecklistTemplateItemUpsertArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * The filter to search for the ChecklistTemplateItem to update in case it exists.
     * 
    **/
    where: ChecklistTemplateItemWhereUniqueInput
    /**
     * In case the ChecklistTemplateItem found by the `where` argument doesn't exist, create a new ChecklistTemplateItem with this data.
     * 
    **/
    create: XOR<ChecklistTemplateItemCreateInput, ChecklistTemplateItemUncheckedCreateInput>
    /**
     * In case the ChecklistTemplateItem was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ChecklistTemplateItemUpdateInput, ChecklistTemplateItemUncheckedUpdateInput>
  }


  /**
   * ChecklistTemplateItem delete
   */
  export type ChecklistTemplateItemDeleteArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * Filter which ChecklistTemplateItem to delete.
     * 
    **/
    where: ChecklistTemplateItemWhereUniqueInput
  }


  /**
   * ChecklistTemplateItem deleteMany
   */
  export type ChecklistTemplateItemDeleteManyArgs = {
    where?: ChecklistTemplateItemWhereInput
  }


  /**
   * ChecklistTemplateItem without action
   */
  export type ChecklistTemplateItemArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
  }



  /**
   * Model ShippingChecklistItem
   */


  export type AggregateShippingChecklistItem = {
    _count: ShippingChecklistItemCountAggregateOutputType | null
    _avg: ShippingChecklistItemAvgAggregateOutputType | null
    _sum: ShippingChecklistItemSumAggregateOutputType | null
    _min: ShippingChecklistItemMinAggregateOutputType | null
    _max: ShippingChecklistItemMaxAggregateOutputType | null
  }

  export type ShippingChecklistItemAvgAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    updated_by_user_id: number | null
  }

  export type ShippingChecklistItemSumAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    updated_by_user_id: number | null
  }

  export type ShippingChecklistItemMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: string | null
    deadline_date: string | null
    commentary: string | null
    is_done: boolean | null
    shipping_id: number | null
    updated_by_user_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ShippingChecklistItemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: string | null
    deadline_date: string | null
    commentary: string | null
    is_done: boolean | null
    shipping_id: number | null
    updated_by_user_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ShippingChecklistItemCountAggregateOutputType = {
    id: number
    name: number
    description: number
    type: number
    deadline_date: number
    commentary: number
    is_done: number
    shipping_id: number
    updated_by_user_id: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ShippingChecklistItemAvgAggregateInputType = {
    id?: true
    shipping_id?: true
    updated_by_user_id?: true
  }

  export type ShippingChecklistItemSumAggregateInputType = {
    id?: true
    shipping_id?: true
    updated_by_user_id?: true
  }

  export type ShippingChecklistItemMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    deadline_date?: true
    commentary?: true
    is_done?: true
    shipping_id?: true
    updated_by_user_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ShippingChecklistItemMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    deadline_date?: true
    commentary?: true
    is_done?: true
    shipping_id?: true
    updated_by_user_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ShippingChecklistItemCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    deadline_date?: true
    commentary?: true
    is_done?: true
    shipping_id?: true
    updated_by_user_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ShippingChecklistItemAggregateArgs = {
    /**
     * Filter which ShippingChecklistItem to aggregate.
     * 
    **/
    where?: ShippingChecklistItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingChecklistItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingChecklistItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ShippingChecklistItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingChecklistItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingChecklistItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShippingChecklistItems
    **/
    _count?: true | ShippingChecklistItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingChecklistItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingChecklistItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingChecklistItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingChecklistItemMaxAggregateInputType
  }

  export type GetShippingChecklistItemAggregateType<T extends ShippingChecklistItemAggregateArgs> = {
        [P in keyof T & keyof AggregateShippingChecklistItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShippingChecklistItem[P]>
      : GetScalarType<T[P], AggregateShippingChecklistItem[P]>
  }




  export type ShippingChecklistItemGroupByArgs = {
    where?: ShippingChecklistItemWhereInput
    orderBy?: Enumerable<ShippingChecklistItemOrderByWithAggregationInput>
    by: Array<ShippingChecklistItemScalarFieldEnum>
    having?: ShippingChecklistItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingChecklistItemCountAggregateInputType | true
    _avg?: ShippingChecklistItemAvgAggregateInputType
    _sum?: ShippingChecklistItemSumAggregateInputType
    _min?: ShippingChecklistItemMinAggregateInputType
    _max?: ShippingChecklistItemMaxAggregateInputType
  }


  export type ShippingChecklistItemGroupByOutputType = {
    id: number
    name: string
    description: string | null
    type: string
    deadline_date: string | null
    commentary: string | null
    is_done: boolean
    shipping_id: number
    updated_by_user_id: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ShippingChecklistItemCountAggregateOutputType | null
    _avg: ShippingChecklistItemAvgAggregateOutputType | null
    _sum: ShippingChecklistItemSumAggregateOutputType | null
    _min: ShippingChecklistItemMinAggregateOutputType | null
    _max: ShippingChecklistItemMaxAggregateOutputType | null
  }

  type GetShippingChecklistItemGroupByPayload<T extends ShippingChecklistItemGroupByArgs> = Promise<
    Array<
      PickArray<ShippingChecklistItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingChecklistItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingChecklistItemGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingChecklistItemGroupByOutputType[P]>
        }
      >
    >


  export type ShippingChecklistItemSelect = {
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    deadline_date?: boolean
    commentary?: boolean
    is_done?: boolean
    shipping_id?: boolean
    updated_by_user_id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    shipping?: boolean | ShippingArgs
    user?: boolean | usersArgs
  }

  export type ShippingChecklistItemInclude = {
    shipping?: boolean | ShippingArgs
    user?: boolean | usersArgs
  }

  export type ShippingChecklistItemGetPayload<
    S extends boolean | null | undefined | ShippingChecklistItemArgs,
    U = keyof S
      > = S extends true
        ? ShippingChecklistItem
    : S extends undefined
    ? never
    : S extends ShippingChecklistItemArgs | ShippingChecklistItemFindManyArgs
    ?'include' extends U
    ? ShippingChecklistItem  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'shipping'
        ? ShippingGetPayload<S['include'][P]> | null :
        P extends 'user'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ShippingChecklistItem ?ShippingChecklistItem [P]
  : 
          P extends 'shipping'
        ? ShippingGetPayload<S['select'][P]> | null :
        P extends 'user'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : ShippingChecklistItem
  : ShippingChecklistItem


  type ShippingChecklistItemCountArgs = Merge<
    Omit<ShippingChecklistItemFindManyArgs, 'select' | 'include'> & {
      select?: ShippingChecklistItemCountAggregateInputType | true
    }
  >

  export interface ShippingChecklistItemDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one ShippingChecklistItem that matches the filter.
     * @param {ShippingChecklistItemFindUniqueArgs} args - Arguments to find a ShippingChecklistItem
     * @example
     * // Get one ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShippingChecklistItemFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ShippingChecklistItemFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ShippingChecklistItem'> extends True ? CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>> : CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem | null >, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T> | null >>

    /**
     * Find the first ShippingChecklistItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemFindFirstArgs} args - Arguments to find a ShippingChecklistItem
     * @example
     * // Get one ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShippingChecklistItemFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ShippingChecklistItemFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ShippingChecklistItem'> extends True ? CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>> : CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem | null >, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T> | null >>

    /**
     * Find zero or more ShippingChecklistItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShippingChecklistItems
     * const shippingChecklistItems = await prisma.shippingChecklistItem.findMany()
     * 
     * // Get first 10 ShippingChecklistItems
     * const shippingChecklistItems = await prisma.shippingChecklistItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingChecklistItemWithIdOnly = await prisma.shippingChecklistItem.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShippingChecklistItemFindManyArgs>(
      args?: SelectSubset<T, ShippingChecklistItemFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ShippingChecklistItem>>, PrismaPromise<Array<ShippingChecklistItemGetPayload<T>>>>

    /**
     * Create a ShippingChecklistItem.
     * @param {ShippingChecklistItemCreateArgs} args - Arguments to create a ShippingChecklistItem.
     * @example
     * // Create one ShippingChecklistItem
     * const ShippingChecklistItem = await prisma.shippingChecklistItem.create({
     *   data: {
     *     // ... data to create a ShippingChecklistItem
     *   }
     * })
     * 
    **/
    create<T extends ShippingChecklistItemCreateArgs>(
      args: SelectSubset<T, ShippingChecklistItemCreateArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Create many ShippingChecklistItems.
     *     @param {ShippingChecklistItemCreateManyArgs} args - Arguments to create many ShippingChecklistItems.
     *     @example
     *     // Create many ShippingChecklistItems
     *     const shippingChecklistItem = await prisma.shippingChecklistItem.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ShippingChecklistItemCreateManyArgs>(
      args?: SelectSubset<T, ShippingChecklistItemCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ShippingChecklistItem.
     * @param {ShippingChecklistItemDeleteArgs} args - Arguments to delete one ShippingChecklistItem.
     * @example
     * // Delete one ShippingChecklistItem
     * const ShippingChecklistItem = await prisma.shippingChecklistItem.delete({
     *   where: {
     *     // ... filter to delete one ShippingChecklistItem
     *   }
     * })
     * 
    **/
    delete<T extends ShippingChecklistItemDeleteArgs>(
      args: SelectSubset<T, ShippingChecklistItemDeleteArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Update one ShippingChecklistItem.
     * @param {ShippingChecklistItemUpdateArgs} args - Arguments to update one ShippingChecklistItem.
     * @example
     * // Update one ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShippingChecklistItemUpdateArgs>(
      args: SelectSubset<T, ShippingChecklistItemUpdateArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Delete zero or more ShippingChecklistItems.
     * @param {ShippingChecklistItemDeleteManyArgs} args - Arguments to filter ShippingChecklistItems to delete.
     * @example
     * // Delete a few ShippingChecklistItems
     * const { count } = await prisma.shippingChecklistItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShippingChecklistItemDeleteManyArgs>(
      args?: SelectSubset<T, ShippingChecklistItemDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingChecklistItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShippingChecklistItems
     * const shippingChecklistItem = await prisma.shippingChecklistItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShippingChecklistItemUpdateManyArgs>(
      args: SelectSubset<T, ShippingChecklistItemUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ShippingChecklistItem.
     * @param {ShippingChecklistItemUpsertArgs} args - Arguments to update or create a ShippingChecklistItem.
     * @example
     * // Update or create a ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.upsert({
     *   create: {
     *     // ... data to create a ShippingChecklistItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShippingChecklistItem we want to update
     *   }
     * })
    **/
    upsert<T extends ShippingChecklistItemUpsertArgs>(
      args: SelectSubset<T, ShippingChecklistItemUpsertArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Count the number of ShippingChecklistItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemCountArgs} args - Arguments to filter ShippingChecklistItems to count.
     * @example
     * // Count the number of ShippingChecklistItems
     * const count = await prisma.shippingChecklistItem.count({
     *   where: {
     *     // ... the filter for the ShippingChecklistItems we want to count
     *   }
     * })
    **/
    count<T extends ShippingChecklistItemCountArgs>(
      args?: Subset<T, ShippingChecklistItemCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingChecklistItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShippingChecklistItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingChecklistItemAggregateArgs>(args: Subset<T, ShippingChecklistItemAggregateArgs>): PrismaPromise<GetShippingChecklistItemAggregateType<T>>

    /**
     * Group by ShippingChecklistItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingChecklistItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingChecklistItemGroupByArgs['orderBy'] }
        : { orderBy?: ShippingChecklistItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingChecklistItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingChecklistItemGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShippingChecklistItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ShippingChecklistItemClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shipping<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    user<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ShippingChecklistItem findUnique
   */
  export type ShippingChecklistItemFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * Throw an Error if a ShippingChecklistItem can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ShippingChecklistItem to fetch.
     * 
    **/
    where: ShippingChecklistItemWhereUniqueInput
  }


  /**
   * ShippingChecklistItem findFirst
   */
  export type ShippingChecklistItemFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * Throw an Error if a ShippingChecklistItem can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ShippingChecklistItem to fetch.
     * 
    **/
    where?: ShippingChecklistItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingChecklistItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingChecklistItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingChecklistItems.
     * 
    **/
    cursor?: ShippingChecklistItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingChecklistItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingChecklistItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingChecklistItems.
     * 
    **/
    distinct?: Enumerable<ShippingChecklistItemScalarFieldEnum>
  }


  /**
   * ShippingChecklistItem findMany
   */
  export type ShippingChecklistItemFindManyArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * Filter, which ShippingChecklistItems to fetch.
     * 
    **/
    where?: ShippingChecklistItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingChecklistItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingChecklistItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShippingChecklistItems.
     * 
    **/
    cursor?: ShippingChecklistItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingChecklistItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingChecklistItems.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ShippingChecklistItemScalarFieldEnum>
  }


  /**
   * ShippingChecklistItem create
   */
  export type ShippingChecklistItemCreateArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * The data needed to create a ShippingChecklistItem.
     * 
    **/
    data: XOR<ShippingChecklistItemCreateInput, ShippingChecklistItemUncheckedCreateInput>
  }


  /**
   * ShippingChecklistItem createMany
   */
  export type ShippingChecklistItemCreateManyArgs = {
    data: Enumerable<ShippingChecklistItemCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ShippingChecklistItem update
   */
  export type ShippingChecklistItemUpdateArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * The data needed to update a ShippingChecklistItem.
     * 
    **/
    data: XOR<ShippingChecklistItemUpdateInput, ShippingChecklistItemUncheckedUpdateInput>
    /**
     * Choose, which ShippingChecklistItem to update.
     * 
    **/
    where: ShippingChecklistItemWhereUniqueInput
  }


  /**
   * ShippingChecklistItem updateMany
   */
  export type ShippingChecklistItemUpdateManyArgs = {
    data: XOR<ShippingChecklistItemUpdateManyMutationInput, ShippingChecklistItemUncheckedUpdateManyInput>
    where?: ShippingChecklistItemWhereInput
  }


  /**
   * ShippingChecklistItem upsert
   */
  export type ShippingChecklistItemUpsertArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * The filter to search for the ShippingChecklistItem to update in case it exists.
     * 
    **/
    where: ShippingChecklistItemWhereUniqueInput
    /**
     * In case the ShippingChecklistItem found by the `where` argument doesn't exist, create a new ShippingChecklistItem with this data.
     * 
    **/
    create: XOR<ShippingChecklistItemCreateInput, ShippingChecklistItemUncheckedCreateInput>
    /**
     * In case the ShippingChecklistItem was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ShippingChecklistItemUpdateInput, ShippingChecklistItemUncheckedUpdateInput>
  }


  /**
   * ShippingChecklistItem delete
   */
  export type ShippingChecklistItemDeleteArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * Filter which ShippingChecklistItem to delete.
     * 
    **/
    where: ShippingChecklistItemWhereUniqueInput
  }


  /**
   * ShippingChecklistItem deleteMany
   */
  export type ShippingChecklistItemDeleteManyArgs = {
    where?: ShippingChecklistItemWhereInput
  }


  /**
   * ShippingChecklistItem without action
   */
  export type ShippingChecklistItemArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
  }



  /**
   * Model Country
   */


  export type AggregateCountry = {
    _count: CountryCountAggregateOutputType | null
    _avg: CountryAvgAggregateOutputType | null
    _sum: CountrySumAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  export type CountryAvgAggregateOutputType = {
    id: number | null
  }

  export type CountrySumAggregateOutputType = {
    id: number | null
  }

  export type CountryMinAggregateOutputType = {
    id: number | null
    name: string | null
    flag: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type CountryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    flag: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type CountryCountAggregateOutputType = {
    id: number
    name: number
    flag: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type CountryAvgAggregateInputType = {
    id?: true
  }

  export type CountrySumAggregateInputType = {
    id?: true
  }

  export type CountryMinAggregateInputType = {
    id?: true
    name?: true
    flag?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type CountryMaxAggregateInputType = {
    id?: true
    name?: true
    flag?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type CountryCountAggregateInputType = {
    id?: true
    name?: true
    flag?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type CountryAggregateArgs = {
    /**
     * Filter which Country to aggregate.
     * 
    **/
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     * 
    **/
    orderBy?: Enumerable<CountryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Countries
    **/
    _count?: true | CountryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CountryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CountrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CountryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CountryMaxAggregateInputType
  }

  export type GetCountryAggregateType<T extends CountryAggregateArgs> = {
        [P in keyof T & keyof AggregateCountry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCountry[P]>
      : GetScalarType<T[P], AggregateCountry[P]>
  }




  export type CountryGroupByArgs = {
    where?: CountryWhereInput
    orderBy?: Enumerable<CountryOrderByWithAggregationInput>
    by: Array<CountryScalarFieldEnum>
    having?: CountryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CountryCountAggregateInputType | true
    _avg?: CountryAvgAggregateInputType
    _sum?: CountrySumAggregateInputType
    _min?: CountryMinAggregateInputType
    _max?: CountryMaxAggregateInputType
  }


  export type CountryGroupByOutputType = {
    id: number
    name: string | null
    flag: string | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: CountryCountAggregateOutputType | null
    _avg: CountryAvgAggregateOutputType | null
    _sum: CountrySumAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  type GetCountryGroupByPayload<T extends CountryGroupByArgs> = Promise<
    Array<
      PickArray<CountryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CountryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CountryGroupByOutputType[P]>
            : GetScalarType<T[P], CountryGroupByOutputType[P]>
        }
      >
    >


  export type CountrySelect = {
    id?: boolean
    name?: boolean
    flag?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    ports?: boolean | portsFindManyArgs
    vessels?: boolean | VesselFindManyArgs
    _count?: boolean | CountryCountOutputTypeArgs
  }

  export type CountryInclude = {
    ports?: boolean | portsFindManyArgs
    vessels?: boolean | VesselFindManyArgs
    _count?: boolean | CountryCountOutputTypeArgs
  }

  export type CountryGetPayload<
    S extends boolean | null | undefined | CountryArgs,
    U = keyof S
      > = S extends true
        ? Country
    : S extends undefined
    ? never
    : S extends CountryArgs | CountryFindManyArgs
    ?'include' extends U
    ? Country  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'ports'
        ? Array < portsGetPayload<S['include'][P]>>  :
        P extends 'vessels'
        ? Array < VesselGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? CountryCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Country ?Country [P]
  : 
          P extends 'ports'
        ? Array < portsGetPayload<S['select'][P]>>  :
        P extends 'vessels'
        ? Array < VesselGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? CountryCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : Country
  : Country


  type CountryCountArgs = Merge<
    Omit<CountryFindManyArgs, 'select' | 'include'> & {
      select?: CountryCountAggregateInputType | true
    }
  >

  export interface CountryDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Country that matches the filter.
     * @param {CountryFindUniqueArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CountryFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, CountryFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Country'> extends True ? CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>> : CheckSelect<T, Prisma__CountryClient<Country | null >, Prisma__CountryClient<CountryGetPayload<T> | null >>

    /**
     * Find the first Country that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindFirstArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CountryFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, CountryFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Country'> extends True ? CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>> : CheckSelect<T, Prisma__CountryClient<Country | null >, Prisma__CountryClient<CountryGetPayload<T> | null >>

    /**
     * Find zero or more Countries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Countries
     * const countries = await prisma.country.findMany()
     * 
     * // Get first 10 Countries
     * const countries = await prisma.country.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const countryWithIdOnly = await prisma.country.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CountryFindManyArgs>(
      args?: SelectSubset<T, CountryFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Country>>, PrismaPromise<Array<CountryGetPayload<T>>>>

    /**
     * Create a Country.
     * @param {CountryCreateArgs} args - Arguments to create a Country.
     * @example
     * // Create one Country
     * const Country = await prisma.country.create({
     *   data: {
     *     // ... data to create a Country
     *   }
     * })
     * 
    **/
    create<T extends CountryCreateArgs>(
      args: SelectSubset<T, CountryCreateArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Create many Countries.
     *     @param {CountryCreateManyArgs} args - Arguments to create many Countries.
     *     @example
     *     // Create many Countries
     *     const country = await prisma.country.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CountryCreateManyArgs>(
      args?: SelectSubset<T, CountryCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Country.
     * @param {CountryDeleteArgs} args - Arguments to delete one Country.
     * @example
     * // Delete one Country
     * const Country = await prisma.country.delete({
     *   where: {
     *     // ... filter to delete one Country
     *   }
     * })
     * 
    **/
    delete<T extends CountryDeleteArgs>(
      args: SelectSubset<T, CountryDeleteArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Update one Country.
     * @param {CountryUpdateArgs} args - Arguments to update one Country.
     * @example
     * // Update one Country
     * const country = await prisma.country.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CountryUpdateArgs>(
      args: SelectSubset<T, CountryUpdateArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Delete zero or more Countries.
     * @param {CountryDeleteManyArgs} args - Arguments to filter Countries to delete.
     * @example
     * // Delete a few Countries
     * const { count } = await prisma.country.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CountryDeleteManyArgs>(
      args?: SelectSubset<T, CountryDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CountryUpdateManyArgs>(
      args: SelectSubset<T, CountryUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Country.
     * @param {CountryUpsertArgs} args - Arguments to update or create a Country.
     * @example
     * // Update or create a Country
     * const country = await prisma.country.upsert({
     *   create: {
     *     // ... data to create a Country
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Country we want to update
     *   }
     * })
    **/
    upsert<T extends CountryUpsertArgs>(
      args: SelectSubset<T, CountryUpsertArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Count the number of Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryCountArgs} args - Arguments to filter Countries to count.
     * @example
     * // Count the number of Countries
     * const count = await prisma.country.count({
     *   where: {
     *     // ... the filter for the Countries we want to count
     *   }
     * })
    **/
    count<T extends CountryCountArgs>(
      args?: Subset<T, CountryCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CountryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CountryAggregateArgs>(args: Subset<T, CountryAggregateArgs>): PrismaPromise<GetCountryAggregateType<T>>

    /**
     * Group by Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CountryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CountryGroupByArgs['orderBy'] }
        : { orderBy?: CountryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CountryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCountryGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for Country.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CountryClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    ports<T extends portsFindManyArgs = {}>(args?: Subset<T, portsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ports>>, PrismaPromise<Array<portsGetPayload<T>>>>;

    vessels<T extends VesselFindManyArgs = {}>(args?: Subset<T, VesselFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Vessel>>, PrismaPromise<Array<VesselGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Country findUnique
   */
  export type CountryFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * Throw an Error if a Country can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Country to fetch.
     * 
    **/
    where: CountryWhereUniqueInput
  }


  /**
   * Country findFirst
   */
  export type CountryFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * Throw an Error if a Country can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Country to fetch.
     * 
    **/
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     * 
    **/
    orderBy?: Enumerable<CountryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Countries.
     * 
    **/
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Countries.
     * 
    **/
    distinct?: Enumerable<CountryScalarFieldEnum>
  }


  /**
   * Country findMany
   */
  export type CountryFindManyArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * Filter, which Countries to fetch.
     * 
    **/
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     * 
    **/
    orderBy?: Enumerable<CountryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Countries.
     * 
    **/
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     * 
    **/
    skip?: number
    distinct?: Enumerable<CountryScalarFieldEnum>
  }


  /**
   * Country create
   */
  export type CountryCreateArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * The data needed to create a Country.
     * 
    **/
    data: XOR<CountryCreateInput, CountryUncheckedCreateInput>
  }


  /**
   * Country createMany
   */
  export type CountryCreateManyArgs = {
    data: Enumerable<CountryCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Country update
   */
  export type CountryUpdateArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * The data needed to update a Country.
     * 
    **/
    data: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
    /**
     * Choose, which Country to update.
     * 
    **/
    where: CountryWhereUniqueInput
  }


  /**
   * Country updateMany
   */
  export type CountryUpdateManyArgs = {
    data: XOR<CountryUpdateManyMutationInput, CountryUncheckedUpdateManyInput>
    where?: CountryWhereInput
  }


  /**
   * Country upsert
   */
  export type CountryUpsertArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * The filter to search for the Country to update in case it exists.
     * 
    **/
    where: CountryWhereUniqueInput
    /**
     * In case the Country found by the `where` argument doesn't exist, create a new Country with this data.
     * 
    **/
    create: XOR<CountryCreateInput, CountryUncheckedCreateInput>
    /**
     * In case the Country was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
  }


  /**
   * Country delete
   */
  export type CountryDeleteArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * Filter which Country to delete.
     * 
    **/
    where: CountryWhereUniqueInput
  }


  /**
   * Country deleteMany
   */
  export type CountryDeleteManyArgs = {
    where?: CountryWhereInput
  }


  /**
   * Country without action
   */
  export type CountryArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
  }



  /**
   * Model migrations
   */


  export type AggregateMigrations = {
    _count: MigrationsCountAggregateOutputType | null
    _avg: MigrationsAvgAggregateOutputType | null
    _sum: MigrationsSumAggregateOutputType | null
    _min: MigrationsMinAggregateOutputType | null
    _max: MigrationsMaxAggregateOutputType | null
  }

  export type MigrationsAvgAggregateOutputType = {
    id: number | null
    timestamp: number | null
  }

  export type MigrationsSumAggregateOutputType = {
    id: number | null
    timestamp: number | null
  }

  export type MigrationsMinAggregateOutputType = {
    id: number | null
    timestamp: number | null
    name: string | null
  }

  export type MigrationsMaxAggregateOutputType = {
    id: number | null
    timestamp: number | null
    name: string | null
  }

  export type MigrationsCountAggregateOutputType = {
    id: number
    timestamp: number
    name: number
    _all: number
  }


  export type MigrationsAvgAggregateInputType = {
    id?: true
    timestamp?: true
  }

  export type MigrationsSumAggregateInputType = {
    id?: true
    timestamp?: true
  }

  export type MigrationsMinAggregateInputType = {
    id?: true
    timestamp?: true
    name?: true
  }

  export type MigrationsMaxAggregateInputType = {
    id?: true
    timestamp?: true
    name?: true
  }

  export type MigrationsCountAggregateInputType = {
    id?: true
    timestamp?: true
    name?: true
    _all?: true
  }

  export type MigrationsAggregateArgs = {
    /**
     * Filter which migrations to aggregate.
     * 
    **/
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     * 
    **/
    orderBy?: Enumerable<migrationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned migrations
    **/
    _count?: true | MigrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MigrationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MigrationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MigrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MigrationsMaxAggregateInputType
  }

  export type GetMigrationsAggregateType<T extends MigrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateMigrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMigrations[P]>
      : GetScalarType<T[P], AggregateMigrations[P]>
  }




  export type MigrationsGroupByArgs = {
    where?: migrationsWhereInput
    orderBy?: Enumerable<migrationsOrderByWithAggregationInput>
    by: Array<MigrationsScalarFieldEnum>
    having?: migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MigrationsCountAggregateInputType | true
    _avg?: MigrationsAvgAggregateInputType
    _sum?: MigrationsSumAggregateInputType
    _min?: MigrationsMinAggregateInputType
    _max?: MigrationsMaxAggregateInputType
  }


  export type MigrationsGroupByOutputType = {
    id: number
    timestamp: number
    name: string
    _count: MigrationsCountAggregateOutputType | null
    _avg: MigrationsAvgAggregateOutputType | null
    _sum: MigrationsSumAggregateOutputType | null
    _min: MigrationsMinAggregateOutputType | null
    _max: MigrationsMaxAggregateOutputType | null
  }

  type GetMigrationsGroupByPayload<T extends MigrationsGroupByArgs> = Promise<
    Array<
      PickArray<MigrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MigrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MigrationsGroupByOutputType[P]>
            : GetScalarType<T[P], MigrationsGroupByOutputType[P]>
        }
      >
    >


  export type migrationsSelect = {
    id?: boolean
    timestamp?: boolean
    name?: boolean
  }

  export type migrationsGetPayload<
    S extends boolean | null | undefined | migrationsArgs,
    U = keyof S
      > = S extends true
        ? migrations
    : S extends undefined
    ? never
    : S extends migrationsArgs | migrationsFindManyArgs
    ?'include' extends U
    ? migrations 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof migrations ?migrations [P]
  : 
     never
  } 
    : migrations
  : migrations


  type migrationsCountArgs = Merge<
    Omit<migrationsFindManyArgs, 'select' | 'include'> & {
      select?: MigrationsCountAggregateInputType | true
    }
  >

  export interface migrationsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Migrations that matches the filter.
     * @param {migrationsFindUniqueArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends migrationsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, migrationsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'migrations'> extends True ? CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>> : CheckSelect<T, Prisma__migrationsClient<migrations | null >, Prisma__migrationsClient<migrationsGetPayload<T> | null >>

    /**
     * Find the first Migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindFirstArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends migrationsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, migrationsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'migrations'> extends True ? CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>> : CheckSelect<T, Prisma__migrationsClient<migrations | null >, Prisma__migrationsClient<migrationsGetPayload<T> | null >>

    /**
     * Find zero or more Migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Migrations
     * const migrations = await prisma.migrations.findMany()
     * 
     * // Get first 10 Migrations
     * const migrations = await prisma.migrations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const migrationsWithIdOnly = await prisma.migrations.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends migrationsFindManyArgs>(
      args?: SelectSubset<T, migrationsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<migrations>>, PrismaPromise<Array<migrationsGetPayload<T>>>>

    /**
     * Create a Migrations.
     * @param {migrationsCreateArgs} args - Arguments to create a Migrations.
     * @example
     * // Create one Migrations
     * const Migrations = await prisma.migrations.create({
     *   data: {
     *     // ... data to create a Migrations
     *   }
     * })
     * 
    **/
    create<T extends migrationsCreateArgs>(
      args: SelectSubset<T, migrationsCreateArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Create many Migrations.
     *     @param {migrationsCreateManyArgs} args - Arguments to create many Migrations.
     *     @example
     *     // Create many Migrations
     *     const migrations = await prisma.migrations.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends migrationsCreateManyArgs>(
      args?: SelectSubset<T, migrationsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Migrations.
     * @param {migrationsDeleteArgs} args - Arguments to delete one Migrations.
     * @example
     * // Delete one Migrations
     * const Migrations = await prisma.migrations.delete({
     *   where: {
     *     // ... filter to delete one Migrations
     *   }
     * })
     * 
    **/
    delete<T extends migrationsDeleteArgs>(
      args: SelectSubset<T, migrationsDeleteArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Update one Migrations.
     * @param {migrationsUpdateArgs} args - Arguments to update one Migrations.
     * @example
     * // Update one Migrations
     * const migrations = await prisma.migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends migrationsUpdateArgs>(
      args: SelectSubset<T, migrationsUpdateArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Delete zero or more Migrations.
     * @param {migrationsDeleteManyArgs} args - Arguments to filter Migrations to delete.
     * @example
     * // Delete a few Migrations
     * const { count } = await prisma.migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends migrationsDeleteManyArgs>(
      args?: SelectSubset<T, migrationsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Migrations
     * const migrations = await prisma.migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends migrationsUpdateManyArgs>(
      args: SelectSubset<T, migrationsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Migrations.
     * @param {migrationsUpsertArgs} args - Arguments to update or create a Migrations.
     * @example
     * // Update or create a Migrations
     * const migrations = await prisma.migrations.upsert({
     *   create: {
     *     // ... data to create a Migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Migrations we want to update
     *   }
     * })
    **/
    upsert<T extends migrationsUpsertArgs>(
      args: SelectSubset<T, migrationsUpsertArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Count the number of Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsCountArgs} args - Arguments to filter Migrations to count.
     * @example
     * // Count the number of Migrations
     * const count = await prisma.migrations.count({
     *   where: {
     *     // ... the filter for the Migrations we want to count
     *   }
     * })
    **/
    count<T extends migrationsCountArgs>(
      args?: Subset<T, migrationsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MigrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MigrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MigrationsAggregateArgs>(args: Subset<T, MigrationsAggregateArgs>): PrismaPromise<GetMigrationsAggregateType<T>>

    /**
     * Group by Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MigrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MigrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MigrationsGroupByArgs['orderBy'] }
        : { orderBy?: MigrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MigrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMigrationsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__migrationsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * migrations findUnique
   */
  export type migrationsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * Throw an Error if a migrations can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which migrations to fetch.
     * 
    **/
    where: migrationsWhereUniqueInput
  }


  /**
   * migrations findFirst
   */
  export type migrationsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * Throw an Error if a migrations can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which migrations to fetch.
     * 
    **/
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     * 
    **/
    orderBy?: Enumerable<migrationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for migrations.
     * 
    **/
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of migrations.
     * 
    **/
    distinct?: Enumerable<MigrationsScalarFieldEnum>
  }


  /**
   * migrations findMany
   */
  export type migrationsFindManyArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * Filter, which migrations to fetch.
     * 
    **/
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     * 
    **/
    orderBy?: Enumerable<migrationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing migrations.
     * 
    **/
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     * 
    **/
    skip?: number
    distinct?: Enumerable<MigrationsScalarFieldEnum>
  }


  /**
   * migrations create
   */
  export type migrationsCreateArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * The data needed to create a migrations.
     * 
    **/
    data: XOR<migrationsCreateInput, migrationsUncheckedCreateInput>
  }


  /**
   * migrations createMany
   */
  export type migrationsCreateManyArgs = {
    data: Enumerable<migrationsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * migrations update
   */
  export type migrationsUpdateArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * The data needed to update a migrations.
     * 
    **/
    data: XOR<migrationsUpdateInput, migrationsUncheckedUpdateInput>
    /**
     * Choose, which migrations to update.
     * 
    **/
    where: migrationsWhereUniqueInput
  }


  /**
   * migrations updateMany
   */
  export type migrationsUpdateManyArgs = {
    data: XOR<migrationsUpdateManyMutationInput, migrationsUncheckedUpdateManyInput>
    where?: migrationsWhereInput
  }


  /**
   * migrations upsert
   */
  export type migrationsUpsertArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * The filter to search for the migrations to update in case it exists.
     * 
    **/
    where: migrationsWhereUniqueInput
    /**
     * In case the migrations found by the `where` argument doesn't exist, create a new migrations with this data.
     * 
    **/
    create: XOR<migrationsCreateInput, migrationsUncheckedCreateInput>
    /**
     * In case the migrations was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<migrationsUpdateInput, migrationsUncheckedUpdateInput>
  }


  /**
   * migrations delete
   */
  export type migrationsDeleteArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * Filter which migrations to delete.
     * 
    **/
    where: migrationsWhereUniqueInput
  }


  /**
   * migrations deleteMany
   */
  export type migrationsDeleteManyArgs = {
    where?: migrationsWhereInput
  }


  /**
   * migrations without action
   */
  export type migrationsArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
  }



  /**
   * Model port_files
   */


  export type AggregatePort_files = {
    _count: Port_filesCountAggregateOutputType | null
    _avg: Port_filesAvgAggregateOutputType | null
    _sum: Port_filesSumAggregateOutputType | null
    _min: Port_filesMinAggregateOutputType | null
    _max: Port_filesMaxAggregateOutputType | null
  }

  export type Port_filesAvgAggregateOutputType = {
    id: number | null
    portId: number | null
    userId: number | null
  }

  export type Port_filesSumAggregateOutputType = {
    id: number | null
    portId: number | null
    userId: number | null
  }

  export type Port_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    portId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Port_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    portId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Port_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    portId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    userId: number
    _all: number
  }


  export type Port_filesAvgAggregateInputType = {
    id?: true
    portId?: true
    userId?: true
  }

  export type Port_filesSumAggregateInputType = {
    id?: true
    portId?: true
    userId?: true
  }

  export type Port_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Port_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Port_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
    _all?: true
  }

  export type Port_filesAggregateArgs = {
    /**
     * Filter which port_files to aggregate.
     * 
    **/
    where?: port_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of port_files to fetch.
     * 
    **/
    orderBy?: Enumerable<port_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: port_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` port_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` port_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned port_files
    **/
    _count?: true | Port_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Port_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Port_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Port_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Port_filesMaxAggregateInputType
  }

  export type GetPort_filesAggregateType<T extends Port_filesAggregateArgs> = {
        [P in keyof T & keyof AggregatePort_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePort_files[P]>
      : GetScalarType<T[P], AggregatePort_files[P]>
  }




  export type Port_filesGroupByArgs = {
    where?: port_filesWhereInput
    orderBy?: Enumerable<port_filesOrderByWithAggregationInput>
    by: Array<Port_filesScalarFieldEnum>
    having?: port_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Port_filesCountAggregateInputType | true
    _avg?: Port_filesAvgAggregateInputType
    _sum?: Port_filesSumAggregateInputType
    _min?: Port_filesMinAggregateInputType
    _max?: Port_filesMaxAggregateInputType
  }


  export type Port_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    portId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    userId: number | null
    _count: Port_filesCountAggregateOutputType | null
    _avg: Port_filesAvgAggregateOutputType | null
    _sum: Port_filesSumAggregateOutputType | null
    _min: Port_filesMinAggregateOutputType | null
    _max: Port_filesMaxAggregateOutputType | null
  }

  type GetPort_filesGroupByPayload<T extends Port_filesGroupByArgs> = Promise<
    Array<
      PickArray<Port_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Port_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Port_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Port_filesGroupByOutputType[P]>
        }
      >
    >


  export type port_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    portId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    userId?: boolean
    users?: boolean | usersArgs
    ports?: boolean | portsArgs
  }

  export type port_filesInclude = {
    users?: boolean | usersArgs
    ports?: boolean | portsArgs
  }

  export type port_filesGetPayload<
    S extends boolean | null | undefined | port_filesArgs,
    U = keyof S
      > = S extends true
        ? port_files
    : S extends undefined
    ? never
    : S extends port_filesArgs | port_filesFindManyArgs
    ?'include' extends U
    ? port_files  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'users'
        ? usersGetPayload<S['include'][P]> | null :
        P extends 'ports'
        ? portsGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof port_files ?port_files [P]
  : 
          P extends 'users'
        ? usersGetPayload<S['select'][P]> | null :
        P extends 'ports'
        ? portsGetPayload<S['select'][P]> | null : never
  } 
    : port_files
  : port_files


  type port_filesCountArgs = Merge<
    Omit<port_filesFindManyArgs, 'select' | 'include'> & {
      select?: Port_filesCountAggregateInputType | true
    }
  >

  export interface port_filesDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Port_files that matches the filter.
     * @param {port_filesFindUniqueArgs} args - Arguments to find a Port_files
     * @example
     * // Get one Port_files
     * const port_files = await prisma.port_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends port_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, port_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'port_files'> extends True ? CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>> : CheckSelect<T, Prisma__port_filesClient<port_files | null >, Prisma__port_filesClient<port_filesGetPayload<T> | null >>

    /**
     * Find the first Port_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {port_filesFindFirstArgs} args - Arguments to find a Port_files
     * @example
     * // Get one Port_files
     * const port_files = await prisma.port_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends port_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, port_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'port_files'> extends True ? CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>> : CheckSelect<T, Prisma__port_filesClient<port_files | null >, Prisma__port_filesClient<port_filesGetPayload<T> | null >>

    /**
     * Find zero or more Port_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {port_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Port_files
     * const port_files = await prisma.port_files.findMany()
     * 
     * // Get first 10 Port_files
     * const port_files = await prisma.port_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const port_filesWithIdOnly = await prisma.port_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends port_filesFindManyArgs>(
      args?: SelectSubset<T, port_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<port_files>>, PrismaPromise<Array<port_filesGetPayload<T>>>>

    /**
     * Create a Port_files.
     * @param {port_filesCreateArgs} args - Arguments to create a Port_files.
     * @example
     * // Create one Port_files
     * const Port_files = await prisma.port_files.create({
     *   data: {
     *     // ... data to create a Port_files
     *   }
     * })
     * 
    **/
    create<T extends port_filesCreateArgs>(
      args: SelectSubset<T, port_filesCreateArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Create many Port_files.
     *     @param {port_filesCreateManyArgs} args - Arguments to create many Port_files.
     *     @example
     *     // Create many Port_files
     *     const port_files = await prisma.port_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends port_filesCreateManyArgs>(
      args?: SelectSubset<T, port_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Port_files.
     * @param {port_filesDeleteArgs} args - Arguments to delete one Port_files.
     * @example
     * // Delete one Port_files
     * const Port_files = await prisma.port_files.delete({
     *   where: {
     *     // ... filter to delete one Port_files
     *   }
     * })
     * 
    **/
    delete<T extends port_filesDeleteArgs>(
      args: SelectSubset<T, port_filesDeleteArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Update one Port_files.
     * @param {port_filesUpdateArgs} args - Arguments to update one Port_files.
     * @example
     * // Update one Port_files
     * const port_files = await prisma.port_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends port_filesUpdateArgs>(
      args: SelectSubset<T, port_filesUpdateArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Delete zero or more Port_files.
     * @param {port_filesDeleteManyArgs} args - Arguments to filter Port_files to delete.
     * @example
     * // Delete a few Port_files
     * const { count } = await prisma.port_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends port_filesDeleteManyArgs>(
      args?: SelectSubset<T, port_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Port_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {port_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Port_files
     * const port_files = await prisma.port_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends port_filesUpdateManyArgs>(
      args: SelectSubset<T, port_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Port_files.
     * @param {port_filesUpsertArgs} args - Arguments to update or create a Port_files.
     * @example
     * // Update or create a Port_files
     * const port_files = await prisma.port_files.upsert({
     *   create: {
     *     // ... data to create a Port_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Port_files we want to update
     *   }
     * })
    **/
    upsert<T extends port_filesUpsertArgs>(
      args: SelectSubset<T, port_filesUpsertArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Count the number of Port_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {port_filesCountArgs} args - Arguments to filter Port_files to count.
     * @example
     * // Count the number of Port_files
     * const count = await prisma.port_files.count({
     *   where: {
     *     // ... the filter for the Port_files we want to count
     *   }
     * })
    **/
    count<T extends port_filesCountArgs>(
      args?: Subset<T, port_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Port_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Port_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Port_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Port_filesAggregateArgs>(args: Subset<T, Port_filesAggregateArgs>): PrismaPromise<GetPort_filesAggregateType<T>>

    /**
     * Group by Port_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Port_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Port_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Port_filesGroupByArgs['orderBy'] }
        : { orderBy?: Port_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Port_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPort_filesGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for port_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__port_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    ports<T extends portsArgs = {}>(args?: Subset<T, portsArgs>): CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * port_files findUnique
   */
  export type port_filesFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * Throw an Error if a port_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which port_files to fetch.
     * 
    **/
    where: port_filesWhereUniqueInput
  }


  /**
   * port_files findFirst
   */
  export type port_filesFindFirstArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * Throw an Error if a port_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which port_files to fetch.
     * 
    **/
    where?: port_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of port_files to fetch.
     * 
    **/
    orderBy?: Enumerable<port_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for port_files.
     * 
    **/
    cursor?: port_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` port_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` port_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of port_files.
     * 
    **/
    distinct?: Enumerable<Port_filesScalarFieldEnum>
  }


  /**
   * port_files findMany
   */
  export type port_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * Filter, which port_files to fetch.
     * 
    **/
    where?: port_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of port_files to fetch.
     * 
    **/
    orderBy?: Enumerable<port_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing port_files.
     * 
    **/
    cursor?: port_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` port_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` port_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Port_filesScalarFieldEnum>
  }


  /**
   * port_files create
   */
  export type port_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * The data needed to create a port_files.
     * 
    **/
    data: XOR<port_filesCreateInput, port_filesUncheckedCreateInput>
  }


  /**
   * port_files createMany
   */
  export type port_filesCreateManyArgs = {
    data: Enumerable<port_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * port_files update
   */
  export type port_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * The data needed to update a port_files.
     * 
    **/
    data: XOR<port_filesUpdateInput, port_filesUncheckedUpdateInput>
    /**
     * Choose, which port_files to update.
     * 
    **/
    where: port_filesWhereUniqueInput
  }


  /**
   * port_files updateMany
   */
  export type port_filesUpdateManyArgs = {
    data: XOR<port_filesUpdateManyMutationInput, port_filesUncheckedUpdateManyInput>
    where?: port_filesWhereInput
  }


  /**
   * port_files upsert
   */
  export type port_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * The filter to search for the port_files to update in case it exists.
     * 
    **/
    where: port_filesWhereUniqueInput
    /**
     * In case the port_files found by the `where` argument doesn't exist, create a new port_files with this data.
     * 
    **/
    create: XOR<port_filesCreateInput, port_filesUncheckedCreateInput>
    /**
     * In case the port_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<port_filesUpdateInput, port_filesUncheckedUpdateInput>
  }


  /**
   * port_files delete
   */
  export type port_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * Filter which port_files to delete.
     * 
    **/
    where: port_filesWhereUniqueInput
  }


  /**
   * port_files deleteMany
   */
  export type port_filesDeleteManyArgs = {
    where?: port_filesWhereInput
  }


  /**
   * port_files without action
   */
  export type port_filesArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
  }



  /**
   * Model ports
   */


  export type AggregatePorts = {
    _count: PortsCountAggregateOutputType | null
    _avg: PortsAvgAggregateOutputType | null
    _sum: PortsSumAggregateOutputType | null
    _min: PortsMinAggregateOutputType | null
    _max: PortsMaxAggregateOutputType | null
  }

  export type PortsAvgAggregateOutputType = {
    id: number | null
    countryId: number | null
  }

  export type PortsSumAggregateOutputType = {
    id: number | null
    countryId: number | null
  }

  export type PortsMinAggregateOutputType = {
    id: number | null
    name: string | null
    countryId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    slug: string | null
  }

  export type PortsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    countryId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    slug: string | null
  }

  export type PortsCountAggregateOutputType = {
    id: number
    name: number
    countryId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    slug: number
    _all: number
  }


  export type PortsAvgAggregateInputType = {
    id?: true
    countryId?: true
  }

  export type PortsSumAggregateInputType = {
    id?: true
    countryId?: true
  }

  export type PortsMinAggregateInputType = {
    id?: true
    name?: true
    countryId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    slug?: true
  }

  export type PortsMaxAggregateInputType = {
    id?: true
    name?: true
    countryId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    slug?: true
  }

  export type PortsCountAggregateInputType = {
    id?: true
    name?: true
    countryId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    slug?: true
    _all?: true
  }

  export type PortsAggregateArgs = {
    /**
     * Filter which ports to aggregate.
     * 
    **/
    where?: portsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ports to fetch.
     * 
    **/
    orderBy?: Enumerable<portsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: portsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ports.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ports
    **/
    _count?: true | PortsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PortsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PortsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PortsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PortsMaxAggregateInputType
  }

  export type GetPortsAggregateType<T extends PortsAggregateArgs> = {
        [P in keyof T & keyof AggregatePorts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePorts[P]>
      : GetScalarType<T[P], AggregatePorts[P]>
  }




  export type PortsGroupByArgs = {
    where?: portsWhereInput
    orderBy?: Enumerable<portsOrderByWithAggregationInput>
    by: Array<PortsScalarFieldEnum>
    having?: portsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PortsCountAggregateInputType | true
    _avg?: PortsAvgAggregateInputType
    _sum?: PortsSumAggregateInputType
    _min?: PortsMinAggregateInputType
    _max?: PortsMaxAggregateInputType
  }


  export type PortsGroupByOutputType = {
    id: number
    name: string | null
    countryId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    slug: string | null
    _count: PortsCountAggregateOutputType | null
    _avg: PortsAvgAggregateOutputType | null
    _sum: PortsSumAggregateOutputType | null
    _min: PortsMinAggregateOutputType | null
    _max: PortsMaxAggregateOutputType | null
  }

  type GetPortsGroupByPayload<T extends PortsGroupByArgs> = Promise<
    Array<
      PickArray<PortsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PortsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PortsGroupByOutputType[P]>
            : GetScalarType<T[P], PortsGroupByOutputType[P]>
        }
      >
    >


  export type portsSelect = {
    id?: boolean
    name?: boolean
    countryId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    slug?: boolean
    country?: boolean | CountryArgs
    berths?: boolean | berthsFindManyArgs
    port_files?: boolean | port_filesFindManyArgs
    shipping_ports?: boolean | shipping_portsFindManyArgs
    _count?: boolean | PortsCountOutputTypeArgs
  }

  export type portsInclude = {
    country?: boolean | CountryArgs
    berths?: boolean | berthsFindManyArgs
    port_files?: boolean | port_filesFindManyArgs
    shipping_ports?: boolean | shipping_portsFindManyArgs
    _count?: boolean | PortsCountOutputTypeArgs
  }

  export type portsGetPayload<
    S extends boolean | null | undefined | portsArgs,
    U = keyof S
      > = S extends true
        ? ports
    : S extends undefined
    ? never
    : S extends portsArgs | portsFindManyArgs
    ?'include' extends U
    ? ports  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'country'
        ? CountryGetPayload<S['include'][P]> | null :
        P extends 'berths'
        ? Array < berthsGetPayload<S['include'][P]>>  :
        P extends 'port_files'
        ? Array < port_filesGetPayload<S['include'][P]>>  :
        P extends 'shipping_ports'
        ? Array < shipping_portsGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? PortsCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ports ?ports [P]
  : 
          P extends 'country'
        ? CountryGetPayload<S['select'][P]> | null :
        P extends 'berths'
        ? Array < berthsGetPayload<S['select'][P]>>  :
        P extends 'port_files'
        ? Array < port_filesGetPayload<S['select'][P]>>  :
        P extends 'shipping_ports'
        ? Array < shipping_portsGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? PortsCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : ports
  : ports


  type portsCountArgs = Merge<
    Omit<portsFindManyArgs, 'select' | 'include'> & {
      select?: PortsCountAggregateInputType | true
    }
  >

  export interface portsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Ports that matches the filter.
     * @param {portsFindUniqueArgs} args - Arguments to find a Ports
     * @example
     * // Get one Ports
     * const ports = await prisma.ports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends portsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, portsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ports'> extends True ? CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>> : CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>

    /**
     * Find the first Ports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portsFindFirstArgs} args - Arguments to find a Ports
     * @example
     * // Get one Ports
     * const ports = await prisma.ports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends portsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, portsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ports'> extends True ? CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>> : CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>

    /**
     * Find zero or more Ports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ports
     * const ports = await prisma.ports.findMany()
     * 
     * // Get first 10 Ports
     * const ports = await prisma.ports.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const portsWithIdOnly = await prisma.ports.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends portsFindManyArgs>(
      args?: SelectSubset<T, portsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ports>>, PrismaPromise<Array<portsGetPayload<T>>>>

    /**
     * Create a Ports.
     * @param {portsCreateArgs} args - Arguments to create a Ports.
     * @example
     * // Create one Ports
     * const Ports = await prisma.ports.create({
     *   data: {
     *     // ... data to create a Ports
     *   }
     * })
     * 
    **/
    create<T extends portsCreateArgs>(
      args: SelectSubset<T, portsCreateArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Create many Ports.
     *     @param {portsCreateManyArgs} args - Arguments to create many Ports.
     *     @example
     *     // Create many Ports
     *     const ports = await prisma.ports.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends portsCreateManyArgs>(
      args?: SelectSubset<T, portsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Ports.
     * @param {portsDeleteArgs} args - Arguments to delete one Ports.
     * @example
     * // Delete one Ports
     * const Ports = await prisma.ports.delete({
     *   where: {
     *     // ... filter to delete one Ports
     *   }
     * })
     * 
    **/
    delete<T extends portsDeleteArgs>(
      args: SelectSubset<T, portsDeleteArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Update one Ports.
     * @param {portsUpdateArgs} args - Arguments to update one Ports.
     * @example
     * // Update one Ports
     * const ports = await prisma.ports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends portsUpdateArgs>(
      args: SelectSubset<T, portsUpdateArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Delete zero or more Ports.
     * @param {portsDeleteManyArgs} args - Arguments to filter Ports to delete.
     * @example
     * // Delete a few Ports
     * const { count } = await prisma.ports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends portsDeleteManyArgs>(
      args?: SelectSubset<T, portsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ports
     * const ports = await prisma.ports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends portsUpdateManyArgs>(
      args: SelectSubset<T, portsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Ports.
     * @param {portsUpsertArgs} args - Arguments to update or create a Ports.
     * @example
     * // Update or create a Ports
     * const ports = await prisma.ports.upsert({
     *   create: {
     *     // ... data to create a Ports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ports we want to update
     *   }
     * })
    **/
    upsert<T extends portsUpsertArgs>(
      args: SelectSubset<T, portsUpsertArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Count the number of Ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portsCountArgs} args - Arguments to filter Ports to count.
     * @example
     * // Count the number of Ports
     * const count = await prisma.ports.count({
     *   where: {
     *     // ... the filter for the Ports we want to count
     *   }
     * })
    **/
    count<T extends portsCountArgs>(
      args?: Subset<T, portsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PortsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PortsAggregateArgs>(args: Subset<T, PortsAggregateArgs>): PrismaPromise<GetPortsAggregateType<T>>

    /**
     * Group by Ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PortsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PortsGroupByArgs['orderBy'] }
        : { orderBy?: PortsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PortsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPortsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for ports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__portsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    country<T extends CountryArgs = {}>(args?: Subset<T, CountryArgs>): CheckSelect<T, Prisma__CountryClient<Country | null >, Prisma__CountryClient<CountryGetPayload<T> | null >>;

    berths<T extends berthsFindManyArgs = {}>(args?: Subset<T, berthsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<berths>>, PrismaPromise<Array<berthsGetPayload<T>>>>;

    port_files<T extends port_filesFindManyArgs = {}>(args?: Subset<T, port_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<port_files>>, PrismaPromise<Array<port_filesGetPayload<T>>>>;

    shipping_ports<T extends shipping_portsFindManyArgs = {}>(args?: Subset<T, shipping_portsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_ports>>, PrismaPromise<Array<shipping_portsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ports findUnique
   */
  export type portsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * Throw an Error if a ports can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ports to fetch.
     * 
    **/
    where: portsWhereUniqueInput
  }


  /**
   * ports findFirst
   */
  export type portsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * Throw an Error if a ports can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which ports to fetch.
     * 
    **/
    where?: portsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ports to fetch.
     * 
    **/
    orderBy?: Enumerable<portsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ports.
     * 
    **/
    cursor?: portsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ports.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ports.
     * 
    **/
    distinct?: Enumerable<PortsScalarFieldEnum>
  }


  /**
   * ports findMany
   */
  export type portsFindManyArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * Filter, which ports to fetch.
     * 
    **/
    where?: portsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ports to fetch.
     * 
    **/
    orderBy?: Enumerable<portsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ports.
     * 
    **/
    cursor?: portsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ports.
     * 
    **/
    skip?: number
    distinct?: Enumerable<PortsScalarFieldEnum>
  }


  /**
   * ports create
   */
  export type portsCreateArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * The data needed to create a ports.
     * 
    **/
    data: XOR<portsCreateInput, portsUncheckedCreateInput>
  }


  /**
   * ports createMany
   */
  export type portsCreateManyArgs = {
    data: Enumerable<portsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ports update
   */
  export type portsUpdateArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * The data needed to update a ports.
     * 
    **/
    data: XOR<portsUpdateInput, portsUncheckedUpdateInput>
    /**
     * Choose, which ports to update.
     * 
    **/
    where: portsWhereUniqueInput
  }


  /**
   * ports updateMany
   */
  export type portsUpdateManyArgs = {
    data: XOR<portsUpdateManyMutationInput, portsUncheckedUpdateManyInput>
    where?: portsWhereInput
  }


  /**
   * ports upsert
   */
  export type portsUpsertArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * The filter to search for the ports to update in case it exists.
     * 
    **/
    where: portsWhereUniqueInput
    /**
     * In case the ports found by the `where` argument doesn't exist, create a new ports with this data.
     * 
    **/
    create: XOR<portsCreateInput, portsUncheckedCreateInput>
    /**
     * In case the ports was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<portsUpdateInput, portsUncheckedUpdateInput>
  }


  /**
   * ports delete
   */
  export type portsDeleteArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * Filter which ports to delete.
     * 
    **/
    where: portsWhereUniqueInput
  }


  /**
   * ports deleteMany
   */
  export type portsDeleteManyArgs = {
    where?: portsWhereInput
  }


  /**
   * ports without action
   */
  export type portsArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
  }



  /**
   * Model products
   */


  export type AggregateProducts = {
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  export type ProductsAvgAggregateOutputType = {
    id: number | null
  }

  export type ProductsSumAggregateOutputType = {
    id: number | null
  }

  export type ProductsMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ProductsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ProductsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ProductsAvgAggregateInputType = {
    id?: true
  }

  export type ProductsSumAggregateInputType = {
    id?: true
  }

  export type ProductsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ProductsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ProductsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ProductsAggregateArgs = {
    /**
     * Filter which products to aggregate.
     * 
    **/
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     * 
    **/
    orderBy?: Enumerable<productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned products
    **/
    _count?: true | ProductsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductsMaxAggregateInputType
  }

  export type GetProductsAggregateType<T extends ProductsAggregateArgs> = {
        [P in keyof T & keyof AggregateProducts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducts[P]>
      : GetScalarType<T[P], AggregateProducts[P]>
  }




  export type ProductsGroupByArgs = {
    where?: productsWhereInput
    orderBy?: Enumerable<productsOrderByWithAggregationInput>
    by: Array<ProductsScalarFieldEnum>
    having?: productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductsCountAggregateInputType | true
    _avg?: ProductsAvgAggregateInputType
    _sum?: ProductsSumAggregateInputType
    _min?: ProductsMinAggregateInputType
    _max?: ProductsMaxAggregateInputType
  }


  export type ProductsGroupByOutputType = {
    id: number
    name: string | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  type GetProductsGroupByPayload<T extends ProductsGroupByArgs> = Promise<
    Array<
      PickArray<ProductsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductsGroupByOutputType[P]>
            : GetScalarType<T[P], ProductsGroupByOutputType[P]>
        }
      >
    >


  export type productsSelect = {
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    berth_products?: boolean | berth_productsFindManyArgs
    shipping_products?: boolean | shipping_productsFindManyArgs
    _count?: boolean | ProductsCountOutputTypeArgs
  }

  export type productsInclude = {
    berth_products?: boolean | berth_productsFindManyArgs
    shipping_products?: boolean | shipping_productsFindManyArgs
    _count?: boolean | ProductsCountOutputTypeArgs
  }

  export type productsGetPayload<
    S extends boolean | null | undefined | productsArgs,
    U = keyof S
      > = S extends true
        ? products
    : S extends undefined
    ? never
    : S extends productsArgs | productsFindManyArgs
    ?'include' extends U
    ? products  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'berth_products'
        ? Array < berth_productsGetPayload<S['include'][P]>>  :
        P extends 'shipping_products'
        ? Array < shipping_productsGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? ProductsCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof products ?products [P]
  : 
          P extends 'berth_products'
        ? Array < berth_productsGetPayload<S['select'][P]>>  :
        P extends 'shipping_products'
        ? Array < shipping_productsGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? ProductsCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : products
  : products


  type productsCountArgs = Merge<
    Omit<productsFindManyArgs, 'select' | 'include'> & {
      select?: ProductsCountAggregateInputType | true
    }
  >

  export interface productsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Products that matches the filter.
     * @param {productsFindUniqueArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends productsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, productsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'products'> extends True ? CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>> : CheckSelect<T, Prisma__productsClient<products | null >, Prisma__productsClient<productsGetPayload<T> | null >>

    /**
     * Find the first Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends productsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, productsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'products'> extends True ? CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>> : CheckSelect<T, Prisma__productsClient<products | null >, Prisma__productsClient<productsGetPayload<T> | null >>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.products.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productsWithIdOnly = await prisma.products.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends productsFindManyArgs>(
      args?: SelectSubset<T, productsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<products>>, PrismaPromise<Array<productsGetPayload<T>>>>

    /**
     * Create a Products.
     * @param {productsCreateArgs} args - Arguments to create a Products.
     * @example
     * // Create one Products
     * const Products = await prisma.products.create({
     *   data: {
     *     // ... data to create a Products
     *   }
     * })
     * 
    **/
    create<T extends productsCreateArgs>(
      args: SelectSubset<T, productsCreateArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Create many Products.
     *     @param {productsCreateManyArgs} args - Arguments to create many Products.
     *     @example
     *     // Create many Products
     *     const products = await prisma.products.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends productsCreateManyArgs>(
      args?: SelectSubset<T, productsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Products.
     * @param {productsDeleteArgs} args - Arguments to delete one Products.
     * @example
     * // Delete one Products
     * const Products = await prisma.products.delete({
     *   where: {
     *     // ... filter to delete one Products
     *   }
     * })
     * 
    **/
    delete<T extends productsDeleteArgs>(
      args: SelectSubset<T, productsDeleteArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Update one Products.
     * @param {productsUpdateArgs} args - Arguments to update one Products.
     * @example
     * // Update one Products
     * const products = await prisma.products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends productsUpdateArgs>(
      args: SelectSubset<T, productsUpdateArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Delete zero or more Products.
     * @param {productsDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends productsDeleteManyArgs>(
      args?: SelectSubset<T, productsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends productsUpdateManyArgs>(
      args: SelectSubset<T, productsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Products.
     * @param {productsUpsertArgs} args - Arguments to update or create a Products.
     * @example
     * // Update or create a Products
     * const products = await prisma.products.upsert({
     *   create: {
     *     // ... data to create a Products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Products we want to update
     *   }
     * })
    **/
    upsert<T extends productsUpsertArgs>(
      args: SelectSubset<T, productsUpsertArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.products.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends productsCountArgs>(
      args?: Subset<T, productsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductsAggregateArgs>(args: Subset<T, ProductsAggregateArgs>): PrismaPromise<GetProductsAggregateType<T>>

    /**
     * Group by Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductsGroupByArgs['orderBy'] }
        : { orderBy?: ProductsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__productsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    berth_products<T extends berth_productsFindManyArgs = {}>(args?: Subset<T, berth_productsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<berth_products>>, PrismaPromise<Array<berth_productsGetPayload<T>>>>;

    shipping_products<T extends shipping_productsFindManyArgs = {}>(args?: Subset<T, shipping_productsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_products>>, PrismaPromise<Array<shipping_productsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * products findUnique
   */
  export type productsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * Throw an Error if a products can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which products to fetch.
     * 
    **/
    where: productsWhereUniqueInput
  }


  /**
   * products findFirst
   */
  export type productsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * Throw an Error if a products can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which products to fetch.
     * 
    **/
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     * 
    **/
    orderBy?: Enumerable<productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     * 
    **/
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     * 
    **/
    distinct?: Enumerable<ProductsScalarFieldEnum>
  }


  /**
   * products findMany
   */
  export type productsFindManyArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * Filter, which products to fetch.
     * 
    **/
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     * 
    **/
    orderBy?: Enumerable<productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing products.
     * 
    **/
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProductsScalarFieldEnum>
  }


  /**
   * products create
   */
  export type productsCreateArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * The data needed to create a products.
     * 
    **/
    data: XOR<productsCreateInput, productsUncheckedCreateInput>
  }


  /**
   * products createMany
   */
  export type productsCreateManyArgs = {
    data: Enumerable<productsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * products update
   */
  export type productsUpdateArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * The data needed to update a products.
     * 
    **/
    data: XOR<productsUpdateInput, productsUncheckedUpdateInput>
    /**
     * Choose, which products to update.
     * 
    **/
    where: productsWhereUniqueInput
  }


  /**
   * products updateMany
   */
  export type productsUpdateManyArgs = {
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    where?: productsWhereInput
  }


  /**
   * products upsert
   */
  export type productsUpsertArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * The filter to search for the products to update in case it exists.
     * 
    **/
    where: productsWhereUniqueInput
    /**
     * In case the products found by the `where` argument doesn't exist, create a new products with this data.
     * 
    **/
    create: XOR<productsCreateInput, productsUncheckedCreateInput>
    /**
     * In case the products was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<productsUpdateInput, productsUncheckedUpdateInput>
  }


  /**
   * products delete
   */
  export type productsDeleteArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * Filter which products to delete.
     * 
    **/
    where: productsWhereUniqueInput
  }


  /**
   * products deleteMany
   */
  export type productsDeleteManyArgs = {
    where?: productsWhereInput
  }


  /**
   * products without action
   */
  export type productsArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
  }



  /**
   * Model proforma_files
   */


  export type AggregateProforma_files = {
    _count: Proforma_filesCountAggregateOutputType | null
    _avg: Proforma_filesAvgAggregateOutputType | null
    _sum: Proforma_filesSumAggregateOutputType | null
    _min: Proforma_filesMinAggregateOutputType | null
    _max: Proforma_filesMaxAggregateOutputType | null
  }

  export type Proforma_filesAvgAggregateOutputType = {
    id: number | null
    proformaId: number | null
  }

  export type Proforma_filesSumAggregateOutputType = {
    id: number | null
    proformaId: number | null
  }

  export type Proforma_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    proformaId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Proforma_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    proformaId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Proforma_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    proformaId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type Proforma_filesAvgAggregateInputType = {
    id?: true
    proformaId?: true
  }

  export type Proforma_filesSumAggregateInputType = {
    id?: true
    proformaId?: true
  }

  export type Proforma_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    proformaId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Proforma_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    proformaId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Proforma_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    proformaId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type Proforma_filesAggregateArgs = {
    /**
     * Filter which proforma_files to aggregate.
     * 
    **/
    where?: proforma_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proforma_files to fetch.
     * 
    **/
    orderBy?: Enumerable<proforma_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: proforma_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proforma_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proforma_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proforma_files
    **/
    _count?: true | Proforma_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Proforma_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Proforma_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Proforma_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Proforma_filesMaxAggregateInputType
  }

  export type GetProforma_filesAggregateType<T extends Proforma_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateProforma_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProforma_files[P]>
      : GetScalarType<T[P], AggregateProforma_files[P]>
  }




  export type Proforma_filesGroupByArgs = {
    where?: proforma_filesWhereInput
    orderBy?: Enumerable<proforma_filesOrderByWithAggregationInput>
    by: Array<Proforma_filesScalarFieldEnum>
    having?: proforma_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Proforma_filesCountAggregateInputType | true
    _avg?: Proforma_filesAvgAggregateInputType
    _sum?: Proforma_filesSumAggregateInputType
    _min?: Proforma_filesMinAggregateInputType
    _max?: Proforma_filesMaxAggregateInputType
  }


  export type Proforma_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    proformaId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: Proforma_filesCountAggregateOutputType | null
    _avg: Proforma_filesAvgAggregateOutputType | null
    _sum: Proforma_filesSumAggregateOutputType | null
    _min: Proforma_filesMinAggregateOutputType | null
    _max: Proforma_filesMaxAggregateOutputType | null
  }

  type GetProforma_filesGroupByPayload<T extends Proforma_filesGroupByArgs> = Promise<
    Array<
      PickArray<Proforma_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Proforma_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Proforma_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Proforma_filesGroupByOutputType[P]>
        }
      >
    >


  export type proforma_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    proformaId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    proformas?: boolean | proformasArgs
  }

  export type proforma_filesInclude = {
    proformas?: boolean | proformasArgs
  }

  export type proforma_filesGetPayload<
    S extends boolean | null | undefined | proforma_filesArgs,
    U = keyof S
      > = S extends true
        ? proforma_files
    : S extends undefined
    ? never
    : S extends proforma_filesArgs | proforma_filesFindManyArgs
    ?'include' extends U
    ? proforma_files  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'proformas'
        ? proformasGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof proforma_files ?proforma_files [P]
  : 
          P extends 'proformas'
        ? proformasGetPayload<S['select'][P]> | null : never
  } 
    : proforma_files
  : proforma_files


  type proforma_filesCountArgs = Merge<
    Omit<proforma_filesFindManyArgs, 'select' | 'include'> & {
      select?: Proforma_filesCountAggregateInputType | true
    }
  >

  export interface proforma_filesDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Proforma_files that matches the filter.
     * @param {proforma_filesFindUniqueArgs} args - Arguments to find a Proforma_files
     * @example
     * // Get one Proforma_files
     * const proforma_files = await prisma.proforma_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends proforma_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, proforma_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'proforma_files'> extends True ? CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>> : CheckSelect<T, Prisma__proforma_filesClient<proforma_files | null >, Prisma__proforma_filesClient<proforma_filesGetPayload<T> | null >>

    /**
     * Find the first Proforma_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proforma_filesFindFirstArgs} args - Arguments to find a Proforma_files
     * @example
     * // Get one Proforma_files
     * const proforma_files = await prisma.proforma_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends proforma_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, proforma_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'proforma_files'> extends True ? CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>> : CheckSelect<T, Prisma__proforma_filesClient<proforma_files | null >, Prisma__proforma_filesClient<proforma_filesGetPayload<T> | null >>

    /**
     * Find zero or more Proforma_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proforma_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proforma_files
     * const proforma_files = await prisma.proforma_files.findMany()
     * 
     * // Get first 10 Proforma_files
     * const proforma_files = await prisma.proforma_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proforma_filesWithIdOnly = await prisma.proforma_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends proforma_filesFindManyArgs>(
      args?: SelectSubset<T, proforma_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<proforma_files>>, PrismaPromise<Array<proforma_filesGetPayload<T>>>>

    /**
     * Create a Proforma_files.
     * @param {proforma_filesCreateArgs} args - Arguments to create a Proforma_files.
     * @example
     * // Create one Proforma_files
     * const Proforma_files = await prisma.proforma_files.create({
     *   data: {
     *     // ... data to create a Proforma_files
     *   }
     * })
     * 
    **/
    create<T extends proforma_filesCreateArgs>(
      args: SelectSubset<T, proforma_filesCreateArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Create many Proforma_files.
     *     @param {proforma_filesCreateManyArgs} args - Arguments to create many Proforma_files.
     *     @example
     *     // Create many Proforma_files
     *     const proforma_files = await prisma.proforma_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends proforma_filesCreateManyArgs>(
      args?: SelectSubset<T, proforma_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Proforma_files.
     * @param {proforma_filesDeleteArgs} args - Arguments to delete one Proforma_files.
     * @example
     * // Delete one Proforma_files
     * const Proforma_files = await prisma.proforma_files.delete({
     *   where: {
     *     // ... filter to delete one Proforma_files
     *   }
     * })
     * 
    **/
    delete<T extends proforma_filesDeleteArgs>(
      args: SelectSubset<T, proforma_filesDeleteArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Update one Proforma_files.
     * @param {proforma_filesUpdateArgs} args - Arguments to update one Proforma_files.
     * @example
     * // Update one Proforma_files
     * const proforma_files = await prisma.proforma_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends proforma_filesUpdateArgs>(
      args: SelectSubset<T, proforma_filesUpdateArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Delete zero or more Proforma_files.
     * @param {proforma_filesDeleteManyArgs} args - Arguments to filter Proforma_files to delete.
     * @example
     * // Delete a few Proforma_files
     * const { count } = await prisma.proforma_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends proforma_filesDeleteManyArgs>(
      args?: SelectSubset<T, proforma_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proforma_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proforma_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proforma_files
     * const proforma_files = await prisma.proforma_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends proforma_filesUpdateManyArgs>(
      args: SelectSubset<T, proforma_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Proforma_files.
     * @param {proforma_filesUpsertArgs} args - Arguments to update or create a Proforma_files.
     * @example
     * // Update or create a Proforma_files
     * const proforma_files = await prisma.proforma_files.upsert({
     *   create: {
     *     // ... data to create a Proforma_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proforma_files we want to update
     *   }
     * })
    **/
    upsert<T extends proforma_filesUpsertArgs>(
      args: SelectSubset<T, proforma_filesUpsertArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Count the number of Proforma_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proforma_filesCountArgs} args - Arguments to filter Proforma_files to count.
     * @example
     * // Count the number of Proforma_files
     * const count = await prisma.proforma_files.count({
     *   where: {
     *     // ... the filter for the Proforma_files we want to count
     *   }
     * })
    **/
    count<T extends proforma_filesCountArgs>(
      args?: Subset<T, proforma_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Proforma_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proforma_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Proforma_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Proforma_filesAggregateArgs>(args: Subset<T, Proforma_filesAggregateArgs>): PrismaPromise<GetProforma_filesAggregateType<T>>

    /**
     * Group by Proforma_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Proforma_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Proforma_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Proforma_filesGroupByArgs['orderBy'] }
        : { orderBy?: Proforma_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Proforma_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProforma_filesGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for proforma_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__proforma_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    proformas<T extends proformasArgs = {}>(args?: Subset<T, proformasArgs>): CheckSelect<T, Prisma__proformasClient<proformas | null >, Prisma__proformasClient<proformasGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * proforma_files findUnique
   */
  export type proforma_filesFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * Throw an Error if a proforma_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which proforma_files to fetch.
     * 
    **/
    where: proforma_filesWhereUniqueInput
  }


  /**
   * proforma_files findFirst
   */
  export type proforma_filesFindFirstArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * Throw an Error if a proforma_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which proforma_files to fetch.
     * 
    **/
    where?: proforma_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proforma_files to fetch.
     * 
    **/
    orderBy?: Enumerable<proforma_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proforma_files.
     * 
    **/
    cursor?: proforma_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proforma_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proforma_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proforma_files.
     * 
    **/
    distinct?: Enumerable<Proforma_filesScalarFieldEnum>
  }


  /**
   * proforma_files findMany
   */
  export type proforma_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * Filter, which proforma_files to fetch.
     * 
    **/
    where?: proforma_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proforma_files to fetch.
     * 
    **/
    orderBy?: Enumerable<proforma_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proforma_files.
     * 
    **/
    cursor?: proforma_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proforma_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proforma_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Proforma_filesScalarFieldEnum>
  }


  /**
   * proforma_files create
   */
  export type proforma_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * The data needed to create a proforma_files.
     * 
    **/
    data: XOR<proforma_filesCreateInput, proforma_filesUncheckedCreateInput>
  }


  /**
   * proforma_files createMany
   */
  export type proforma_filesCreateManyArgs = {
    data: Enumerable<proforma_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * proforma_files update
   */
  export type proforma_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * The data needed to update a proforma_files.
     * 
    **/
    data: XOR<proforma_filesUpdateInput, proforma_filesUncheckedUpdateInput>
    /**
     * Choose, which proforma_files to update.
     * 
    **/
    where: proforma_filesWhereUniqueInput
  }


  /**
   * proforma_files updateMany
   */
  export type proforma_filesUpdateManyArgs = {
    data: XOR<proforma_filesUpdateManyMutationInput, proforma_filesUncheckedUpdateManyInput>
    where?: proforma_filesWhereInput
  }


  /**
   * proforma_files upsert
   */
  export type proforma_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * The filter to search for the proforma_files to update in case it exists.
     * 
    **/
    where: proforma_filesWhereUniqueInput
    /**
     * In case the proforma_files found by the `where` argument doesn't exist, create a new proforma_files with this data.
     * 
    **/
    create: XOR<proforma_filesCreateInput, proforma_filesUncheckedCreateInput>
    /**
     * In case the proforma_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<proforma_filesUpdateInput, proforma_filesUncheckedUpdateInput>
  }


  /**
   * proforma_files delete
   */
  export type proforma_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * Filter which proforma_files to delete.
     * 
    **/
    where: proforma_filesWhereUniqueInput
  }


  /**
   * proforma_files deleteMany
   */
  export type proforma_filesDeleteManyArgs = {
    where?: proforma_filesWhereInput
  }


  /**
   * proforma_files without action
   */
  export type proforma_filesArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
  }



  /**
   * Model proformas
   */


  export type AggregateProformas = {
    _count: ProformasCountAggregateOutputType | null
    _avg: ProformasAvgAggregateOutputType | null
    _sum: ProformasSumAggregateOutputType | null
    _min: ProformasMinAggregateOutputType | null
    _max: ProformasMaxAggregateOutputType | null
  }

  export type ProformasAvgAggregateOutputType = {
    id: number | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    builtYear: number | null
    productTonnage: number | null
    usd: number | null
    beam: number | null
    draft: number | null
  }

  export type ProformasSumAggregateOutputType = {
    id: number | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    builtYear: number | null
    productTonnage: number | null
    usd: number | null
    beam: number | null
    draft: number | null
  }

  export type ProformasMinAggregateOutputType = {
    id: number | null
    taxes: string | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    idHash: string | null
    applicantName: string | null
    applicantEmail: string | null
    vesselName: string | null
    imo: string | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    package: string | null
    builtYear: number | null
    agencyType: string | null
    operationType: string | null
    productTonnage: number | null
    usd: number | null
    isCargillInternational: boolean | null
    beam: number | null
    etb: Date | null
    draft: number | null
    requestingCustomer: string | null
    vesselType: string | null
  }

  export type ProformasMaxAggregateOutputType = {
    id: number | null
    taxes: string | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    idHash: string | null
    applicantName: string | null
    applicantEmail: string | null
    vesselName: string | null
    imo: string | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    package: string | null
    builtYear: number | null
    agencyType: string | null
    operationType: string | null
    productTonnage: number | null
    usd: number | null
    isCargillInternational: boolean | null
    beam: number | null
    etb: Date | null
    draft: number | null
    requestingCustomer: string | null
    vesselType: string | null
  }

  export type ProformasCountAggregateOutputType = {
    id: number
    taxes: number
    totalValue: number
    berthedHours: number
    berthProductId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    idHash: number
    applicantName: number
    applicantEmail: number
    vesselName: number
    imo: number
    deadWeightTonnage: number
    lengthOverall: number
    grossTonnage: number
    package: number
    builtYear: number
    agencyType: number
    operationType: number
    productTonnage: number
    usd: number
    isCargillInternational: number
    beam: number
    etb: number
    draft: number
    requestingCustomer: number
    vesselType: number
    _all: number
  }


  export type ProformasAvgAggregateInputType = {
    id?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    builtYear?: true
    productTonnage?: true
    usd?: true
    beam?: true
    draft?: true
  }

  export type ProformasSumAggregateInputType = {
    id?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    builtYear?: true
    productTonnage?: true
    usd?: true
    beam?: true
    draft?: true
  }

  export type ProformasMinAggregateInputType = {
    id?: true
    taxes?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    idHash?: true
    applicantName?: true
    applicantEmail?: true
    vesselName?: true
    imo?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    package?: true
    builtYear?: true
    agencyType?: true
    operationType?: true
    productTonnage?: true
    usd?: true
    isCargillInternational?: true
    beam?: true
    etb?: true
    draft?: true
    requestingCustomer?: true
    vesselType?: true
  }

  export type ProformasMaxAggregateInputType = {
    id?: true
    taxes?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    idHash?: true
    applicantName?: true
    applicantEmail?: true
    vesselName?: true
    imo?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    package?: true
    builtYear?: true
    agencyType?: true
    operationType?: true
    productTonnage?: true
    usd?: true
    isCargillInternational?: true
    beam?: true
    etb?: true
    draft?: true
    requestingCustomer?: true
    vesselType?: true
  }

  export type ProformasCountAggregateInputType = {
    id?: true
    taxes?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    idHash?: true
    applicantName?: true
    applicantEmail?: true
    vesselName?: true
    imo?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    package?: true
    builtYear?: true
    agencyType?: true
    operationType?: true
    productTonnage?: true
    usd?: true
    isCargillInternational?: true
    beam?: true
    etb?: true
    draft?: true
    requestingCustomer?: true
    vesselType?: true
    _all?: true
  }

  export type ProformasAggregateArgs = {
    /**
     * Filter which proformas to aggregate.
     * 
    **/
    where?: proformasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proformas to fetch.
     * 
    **/
    orderBy?: Enumerable<proformasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: proformasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proformas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proformas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proformas
    **/
    _count?: true | ProformasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProformasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProformasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProformasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProformasMaxAggregateInputType
  }

  export type GetProformasAggregateType<T extends ProformasAggregateArgs> = {
        [P in keyof T & keyof AggregateProformas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProformas[P]>
      : GetScalarType<T[P], AggregateProformas[P]>
  }




  export type ProformasGroupByArgs = {
    where?: proformasWhereInput
    orderBy?: Enumerable<proformasOrderByWithAggregationInput>
    by: Array<ProformasScalarFieldEnum>
    having?: proformasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProformasCountAggregateInputType | true
    _avg?: ProformasAvgAggregateInputType
    _sum?: ProformasSumAggregateInputType
    _min?: ProformasMinAggregateInputType
    _max?: ProformasMaxAggregateInputType
  }


  export type ProformasGroupByOutputType = {
    id: number
    taxes: string | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    idHash: string | null
    applicantName: string | null
    applicantEmail: string | null
    vesselName: string | null
    imo: string | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    package: string | null
    builtYear: number | null
    agencyType: string | null
    operationType: string | null
    productTonnage: number | null
    usd: number | null
    isCargillInternational: boolean | null
    beam: number | null
    etb: Date | null
    draft: number | null
    requestingCustomer: string | null
    vesselType: string | null
    _count: ProformasCountAggregateOutputType | null
    _avg: ProformasAvgAggregateOutputType | null
    _sum: ProformasSumAggregateOutputType | null
    _min: ProformasMinAggregateOutputType | null
    _max: ProformasMaxAggregateOutputType | null
  }

  type GetProformasGroupByPayload<T extends ProformasGroupByArgs> = Promise<
    Array<
      PickArray<ProformasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProformasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProformasGroupByOutputType[P]>
            : GetScalarType<T[P], ProformasGroupByOutputType[P]>
        }
      >
    >


  export type proformasSelect = {
    id?: boolean
    taxes?: boolean
    totalValue?: boolean
    berthedHours?: boolean
    berthProductId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    idHash?: boolean
    applicantName?: boolean
    applicantEmail?: boolean
    vesselName?: boolean
    imo?: boolean
    deadWeightTonnage?: boolean
    lengthOverall?: boolean
    grossTonnage?: boolean
    package?: boolean
    builtYear?: boolean
    agencyType?: boolean
    operationType?: boolean
    productTonnage?: boolean
    usd?: boolean
    isCargillInternational?: boolean
    beam?: boolean
    etb?: boolean
    draft?: boolean
    requestingCustomer?: boolean
    vesselType?: boolean
    berth_products?: boolean | berth_productsArgs
    proforma_files?: boolean | proforma_filesFindManyArgs
    _count?: boolean | ProformasCountOutputTypeArgs
  }

  export type proformasInclude = {
    berth_products?: boolean | berth_productsArgs
    proforma_files?: boolean | proforma_filesFindManyArgs
    _count?: boolean | ProformasCountOutputTypeArgs
  }

  export type proformasGetPayload<
    S extends boolean | null | undefined | proformasArgs,
    U = keyof S
      > = S extends true
        ? proformas
    : S extends undefined
    ? never
    : S extends proformasArgs | proformasFindManyArgs
    ?'include' extends U
    ? proformas  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'berth_products'
        ? berth_productsGetPayload<S['include'][P]> :
        P extends 'proforma_files'
        ? Array < proforma_filesGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? ProformasCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof proformas ?proformas [P]
  : 
          P extends 'berth_products'
        ? berth_productsGetPayload<S['select'][P]> :
        P extends 'proforma_files'
        ? Array < proforma_filesGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? ProformasCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : proformas
  : proformas


  type proformasCountArgs = Merge<
    Omit<proformasFindManyArgs, 'select' | 'include'> & {
      select?: ProformasCountAggregateInputType | true
    }
  >

  export interface proformasDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Proformas that matches the filter.
     * @param {proformasFindUniqueArgs} args - Arguments to find a Proformas
     * @example
     * // Get one Proformas
     * const proformas = await prisma.proformas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends proformasFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, proformasFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'proformas'> extends True ? CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>> : CheckSelect<T, Prisma__proformasClient<proformas | null >, Prisma__proformasClient<proformasGetPayload<T> | null >>

    /**
     * Find the first Proformas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proformasFindFirstArgs} args - Arguments to find a Proformas
     * @example
     * // Get one Proformas
     * const proformas = await prisma.proformas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends proformasFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, proformasFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'proformas'> extends True ? CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>> : CheckSelect<T, Prisma__proformasClient<proformas | null >, Prisma__proformasClient<proformasGetPayload<T> | null >>

    /**
     * Find zero or more Proformas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proformasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proformas
     * const proformas = await prisma.proformas.findMany()
     * 
     * // Get first 10 Proformas
     * const proformas = await prisma.proformas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proformasWithIdOnly = await prisma.proformas.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends proformasFindManyArgs>(
      args?: SelectSubset<T, proformasFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<proformas>>, PrismaPromise<Array<proformasGetPayload<T>>>>

    /**
     * Create a Proformas.
     * @param {proformasCreateArgs} args - Arguments to create a Proformas.
     * @example
     * // Create one Proformas
     * const Proformas = await prisma.proformas.create({
     *   data: {
     *     // ... data to create a Proformas
     *   }
     * })
     * 
    **/
    create<T extends proformasCreateArgs>(
      args: SelectSubset<T, proformasCreateArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Create many Proformas.
     *     @param {proformasCreateManyArgs} args - Arguments to create many Proformas.
     *     @example
     *     // Create many Proformas
     *     const proformas = await prisma.proformas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends proformasCreateManyArgs>(
      args?: SelectSubset<T, proformasCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Proformas.
     * @param {proformasDeleteArgs} args - Arguments to delete one Proformas.
     * @example
     * // Delete one Proformas
     * const Proformas = await prisma.proformas.delete({
     *   where: {
     *     // ... filter to delete one Proformas
     *   }
     * })
     * 
    **/
    delete<T extends proformasDeleteArgs>(
      args: SelectSubset<T, proformasDeleteArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Update one Proformas.
     * @param {proformasUpdateArgs} args - Arguments to update one Proformas.
     * @example
     * // Update one Proformas
     * const proformas = await prisma.proformas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends proformasUpdateArgs>(
      args: SelectSubset<T, proformasUpdateArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Delete zero or more Proformas.
     * @param {proformasDeleteManyArgs} args - Arguments to filter Proformas to delete.
     * @example
     * // Delete a few Proformas
     * const { count } = await prisma.proformas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends proformasDeleteManyArgs>(
      args?: SelectSubset<T, proformasDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proformasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proformas
     * const proformas = await prisma.proformas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends proformasUpdateManyArgs>(
      args: SelectSubset<T, proformasUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Proformas.
     * @param {proformasUpsertArgs} args - Arguments to update or create a Proformas.
     * @example
     * // Update or create a Proformas
     * const proformas = await prisma.proformas.upsert({
     *   create: {
     *     // ... data to create a Proformas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proformas we want to update
     *   }
     * })
    **/
    upsert<T extends proformasUpsertArgs>(
      args: SelectSubset<T, proformasUpsertArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Count the number of Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proformasCountArgs} args - Arguments to filter Proformas to count.
     * @example
     * // Count the number of Proformas
     * const count = await prisma.proformas.count({
     *   where: {
     *     // ... the filter for the Proformas we want to count
     *   }
     * })
    **/
    count<T extends proformasCountArgs>(
      args?: Subset<T, proformasCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProformasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProformasAggregateArgs>(args: Subset<T, ProformasAggregateArgs>): PrismaPromise<GetProformasAggregateType<T>>

    /**
     * Group by Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProformasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProformasGroupByArgs['orderBy'] }
        : { orderBy?: ProformasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProformasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProformasGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for proformas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__proformasClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    berth_products<T extends berth_productsArgs = {}>(args?: Subset<T, berth_productsArgs>): CheckSelect<T, Prisma__berth_productsClient<berth_products | null >, Prisma__berth_productsClient<berth_productsGetPayload<T> | null >>;

    proforma_files<T extends proforma_filesFindManyArgs = {}>(args?: Subset<T, proforma_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<proforma_files>>, PrismaPromise<Array<proforma_filesGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * proformas findUnique
   */
  export type proformasFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * Throw an Error if a proformas can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which proformas to fetch.
     * 
    **/
    where: proformasWhereUniqueInput
  }


  /**
   * proformas findFirst
   */
  export type proformasFindFirstArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * Throw an Error if a proformas can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which proformas to fetch.
     * 
    **/
    where?: proformasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proformas to fetch.
     * 
    **/
    orderBy?: Enumerable<proformasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proformas.
     * 
    **/
    cursor?: proformasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proformas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proformas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proformas.
     * 
    **/
    distinct?: Enumerable<ProformasScalarFieldEnum>
  }


  /**
   * proformas findMany
   */
  export type proformasFindManyArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * Filter, which proformas to fetch.
     * 
    **/
    where?: proformasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proformas to fetch.
     * 
    **/
    orderBy?: Enumerable<proformasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proformas.
     * 
    **/
    cursor?: proformasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proformas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proformas.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProformasScalarFieldEnum>
  }


  /**
   * proformas create
   */
  export type proformasCreateArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * The data needed to create a proformas.
     * 
    **/
    data: XOR<proformasCreateInput, proformasUncheckedCreateInput>
  }


  /**
   * proformas createMany
   */
  export type proformasCreateManyArgs = {
    data: Enumerable<proformasCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * proformas update
   */
  export type proformasUpdateArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * The data needed to update a proformas.
     * 
    **/
    data: XOR<proformasUpdateInput, proformasUncheckedUpdateInput>
    /**
     * Choose, which proformas to update.
     * 
    **/
    where: proformasWhereUniqueInput
  }


  /**
   * proformas updateMany
   */
  export type proformasUpdateManyArgs = {
    data: XOR<proformasUpdateManyMutationInput, proformasUncheckedUpdateManyInput>
    where?: proformasWhereInput
  }


  /**
   * proformas upsert
   */
  export type proformasUpsertArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * The filter to search for the proformas to update in case it exists.
     * 
    **/
    where: proformasWhereUniqueInput
    /**
     * In case the proformas found by the `where` argument doesn't exist, create a new proformas with this data.
     * 
    **/
    create: XOR<proformasCreateInput, proformasUncheckedCreateInput>
    /**
     * In case the proformas was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<proformasUpdateInput, proformasUncheckedUpdateInput>
  }


  /**
   * proformas delete
   */
  export type proformasDeleteArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * Filter which proformas to delete.
     * 
    **/
    where: proformasWhereUniqueInput
  }


  /**
   * proformas deleteMany
   */
  export type proformasDeleteManyArgs = {
    where?: proformasWhereInput
  }


  /**
   * proformas without action
   */
  export type proformasArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
  }



  /**
   * Model shipping_documents
   */


  export type AggregateShipping_documents = {
    _count: Shipping_documentsCountAggregateOutputType | null
    _avg: Shipping_documentsAvgAggregateOutputType | null
    _sum: Shipping_documentsSumAggregateOutputType | null
    _min: Shipping_documentsMinAggregateOutputType | null
    _max: Shipping_documentsMaxAggregateOutputType | null
  }

  export type Shipping_documentsAvgAggregateOutputType = {
    id: number | null
    numberOfOriginalBillOfLanding: number | null
    shippingId: number | null
    userId: number | null
    order: number | null
    subsetId: number | null
    productGrossWeight: number | null
  }

  export type Shipping_documentsSumAggregateOutputType = {
    id: number | null
    numberOfOriginalBillOfLanding: number | null
    shippingId: number | null
    userId: number | null
    order: number | null
    subsetId: number | null
    productGrossWeight: number | null
  }

  export type Shipping_documentsMinAggregateOutputType = {
    id: number | null
    type: string | null
    documentNumber: string | null
    consignee: string | null
    vesselName: string | null
    portOfLoading: string | null
    portOfDischarge: string | null
    notify: string | null
    productName: string | null
    productNameExtraInfo: string | null
    productWeightExtraInfo: string | null
    freightType: string | null
    charterPartyDate: string | null
    shipBoardedDate: string | null
    issuePlaceDate: string | null
    numberOfOriginalBillOfLanding: number | null
    shipper: string | null
    masterName: string | null
    signature: string | null
    shippingId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    order: number | null
    subsetId: number | null
    productGrossWeight: number | null
  }

  export type Shipping_documentsMaxAggregateOutputType = {
    id: number | null
    type: string | null
    documentNumber: string | null
    consignee: string | null
    vesselName: string | null
    portOfLoading: string | null
    portOfDischarge: string | null
    notify: string | null
    productName: string | null
    productNameExtraInfo: string | null
    productWeightExtraInfo: string | null
    freightType: string | null
    charterPartyDate: string | null
    shipBoardedDate: string | null
    issuePlaceDate: string | null
    numberOfOriginalBillOfLanding: number | null
    shipper: string | null
    masterName: string | null
    signature: string | null
    shippingId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    order: number | null
    subsetId: number | null
    productGrossWeight: number | null
  }

  export type Shipping_documentsCountAggregateOutputType = {
    id: number
    type: number
    documentNumber: number
    consignee: number
    vesselName: number
    portOfLoading: number
    portOfDischarge: number
    notify: number
    productName: number
    productNameExtraInfo: number
    productWeightExtraInfo: number
    freightType: number
    charterPartyDate: number
    shipBoardedDate: number
    issuePlaceDate: number
    numberOfOriginalBillOfLanding: number
    shipper: number
    masterName: number
    signature: number
    shippingId: number
    userId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    order: number
    subsetId: number
    productGrossWeight: number
    _all: number
  }


  export type Shipping_documentsAvgAggregateInputType = {
    id?: true
    numberOfOriginalBillOfLanding?: true
    shippingId?: true
    userId?: true
    order?: true
    subsetId?: true
    productGrossWeight?: true
  }

  export type Shipping_documentsSumAggregateInputType = {
    id?: true
    numberOfOriginalBillOfLanding?: true
    shippingId?: true
    userId?: true
    order?: true
    subsetId?: true
    productGrossWeight?: true
  }

  export type Shipping_documentsMinAggregateInputType = {
    id?: true
    type?: true
    documentNumber?: true
    consignee?: true
    vesselName?: true
    portOfLoading?: true
    portOfDischarge?: true
    notify?: true
    productName?: true
    productNameExtraInfo?: true
    productWeightExtraInfo?: true
    freightType?: true
    charterPartyDate?: true
    shipBoardedDate?: true
    issuePlaceDate?: true
    numberOfOriginalBillOfLanding?: true
    shipper?: true
    masterName?: true
    signature?: true
    shippingId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    order?: true
    subsetId?: true
    productGrossWeight?: true
  }

  export type Shipping_documentsMaxAggregateInputType = {
    id?: true
    type?: true
    documentNumber?: true
    consignee?: true
    vesselName?: true
    portOfLoading?: true
    portOfDischarge?: true
    notify?: true
    productName?: true
    productNameExtraInfo?: true
    productWeightExtraInfo?: true
    freightType?: true
    charterPartyDate?: true
    shipBoardedDate?: true
    issuePlaceDate?: true
    numberOfOriginalBillOfLanding?: true
    shipper?: true
    masterName?: true
    signature?: true
    shippingId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    order?: true
    subsetId?: true
    productGrossWeight?: true
  }

  export type Shipping_documentsCountAggregateInputType = {
    id?: true
    type?: true
    documentNumber?: true
    consignee?: true
    vesselName?: true
    portOfLoading?: true
    portOfDischarge?: true
    notify?: true
    productName?: true
    productNameExtraInfo?: true
    productWeightExtraInfo?: true
    freightType?: true
    charterPartyDate?: true
    shipBoardedDate?: true
    issuePlaceDate?: true
    numberOfOriginalBillOfLanding?: true
    shipper?: true
    masterName?: true
    signature?: true
    shippingId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    order?: true
    subsetId?: true
    productGrossWeight?: true
    _all?: true
  }

  export type Shipping_documentsAggregateArgs = {
    /**
     * Filter which shipping_documents to aggregate.
     * 
    **/
    where?: shipping_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_documents to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_documentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: shipping_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_documents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_documents.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned shipping_documents
    **/
    _count?: true | Shipping_documentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Shipping_documentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Shipping_documentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Shipping_documentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Shipping_documentsMaxAggregateInputType
  }

  export type GetShipping_documentsAggregateType<T extends Shipping_documentsAggregateArgs> = {
        [P in keyof T & keyof AggregateShipping_documents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipping_documents[P]>
      : GetScalarType<T[P], AggregateShipping_documents[P]>
  }




  export type Shipping_documentsGroupByArgs = {
    where?: shipping_documentsWhereInput
    orderBy?: Enumerable<shipping_documentsOrderByWithAggregationInput>
    by: Array<Shipping_documentsScalarFieldEnum>
    having?: shipping_documentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Shipping_documentsCountAggregateInputType | true
    _avg?: Shipping_documentsAvgAggregateInputType
    _sum?: Shipping_documentsSumAggregateInputType
    _min?: Shipping_documentsMinAggregateInputType
    _max?: Shipping_documentsMaxAggregateInputType
  }


  export type Shipping_documentsGroupByOutputType = {
    id: number
    type: string | null
    documentNumber: string | null
    consignee: string | null
    vesselName: string | null
    portOfLoading: string | null
    portOfDischarge: string | null
    notify: string | null
    productName: string | null
    productNameExtraInfo: string | null
    productWeightExtraInfo: string | null
    freightType: string | null
    charterPartyDate: string | null
    shipBoardedDate: string | null
    issuePlaceDate: string | null
    numberOfOriginalBillOfLanding: number | null
    shipper: string | null
    masterName: string | null
    signature: string | null
    shippingId: number | null
    userId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    order: number | null
    subsetId: number | null
    productGrossWeight: number | null
    _count: Shipping_documentsCountAggregateOutputType | null
    _avg: Shipping_documentsAvgAggregateOutputType | null
    _sum: Shipping_documentsSumAggregateOutputType | null
    _min: Shipping_documentsMinAggregateOutputType | null
    _max: Shipping_documentsMaxAggregateOutputType | null
  }

  type GetShipping_documentsGroupByPayload<T extends Shipping_documentsGroupByArgs> = Promise<
    Array<
      PickArray<Shipping_documentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Shipping_documentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Shipping_documentsGroupByOutputType[P]>
            : GetScalarType<T[P], Shipping_documentsGroupByOutputType[P]>
        }
      >
    >


  export type shipping_documentsSelect = {
    id?: boolean
    type?: boolean
    documentNumber?: boolean
    consignee?: boolean
    vesselName?: boolean
    portOfLoading?: boolean
    portOfDischarge?: boolean
    notify?: boolean
    productName?: boolean
    productNameExtraInfo?: boolean
    productWeightExtraInfo?: boolean
    freightType?: boolean
    charterPartyDate?: boolean
    shipBoardedDate?: boolean
    issuePlaceDate?: boolean
    numberOfOriginalBillOfLanding?: boolean
    shipper?: boolean
    masterName?: boolean
    signature?: boolean
    shippingId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    order?: boolean
    subsetId?: boolean
    productGrossWeight?: boolean
    shippings?: boolean | ShippingArgs
    shipping_documents?: boolean | shipping_documentsArgs
    users?: boolean | usersArgs
    other_shipping_documents?: boolean | shipping_documentsFindManyArgs
    _count?: boolean | Shipping_documentsCountOutputTypeArgs
  }

  export type shipping_documentsInclude = {
    shippings?: boolean | ShippingArgs
    shipping_documents?: boolean | shipping_documentsArgs
    users?: boolean | usersArgs
    other_shipping_documents?: boolean | shipping_documentsFindManyArgs
    _count?: boolean | Shipping_documentsCountOutputTypeArgs
  }

  export type shipping_documentsGetPayload<
    S extends boolean | null | undefined | shipping_documentsArgs,
    U = keyof S
      > = S extends true
        ? shipping_documents
    : S extends undefined
    ? never
    : S extends shipping_documentsArgs | shipping_documentsFindManyArgs
    ?'include' extends U
    ? shipping_documents  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'shippings'
        ? ShippingGetPayload<S['include'][P]> | null :
        P extends 'shipping_documents'
        ? shipping_documentsGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null :
        P extends 'other_shipping_documents'
        ? Array < shipping_documentsGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? Shipping_documentsCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof shipping_documents ?shipping_documents [P]
  : 
          P extends 'shippings'
        ? ShippingGetPayload<S['select'][P]> | null :
        P extends 'shipping_documents'
        ? shipping_documentsGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null :
        P extends 'other_shipping_documents'
        ? Array < shipping_documentsGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? Shipping_documentsCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : shipping_documents
  : shipping_documents


  type shipping_documentsCountArgs = Merge<
    Omit<shipping_documentsFindManyArgs, 'select' | 'include'> & {
      select?: Shipping_documentsCountAggregateInputType | true
    }
  >

  export interface shipping_documentsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Shipping_documents that matches the filter.
     * @param {shipping_documentsFindUniqueArgs} args - Arguments to find a Shipping_documents
     * @example
     * // Get one Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends shipping_documentsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, shipping_documentsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'shipping_documents'> extends True ? CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>> : CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents | null >, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T> | null >>

    /**
     * Find the first Shipping_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_documentsFindFirstArgs} args - Arguments to find a Shipping_documents
     * @example
     * // Get one Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends shipping_documentsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, shipping_documentsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'shipping_documents'> extends True ? CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>> : CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents | null >, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T> | null >>

    /**
     * Find zero or more Shipping_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_documentsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findMany()
     * 
     * // Get first 10 Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipping_documentsWithIdOnly = await prisma.shipping_documents.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends shipping_documentsFindManyArgs>(
      args?: SelectSubset<T, shipping_documentsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>

    /**
     * Create a Shipping_documents.
     * @param {shipping_documentsCreateArgs} args - Arguments to create a Shipping_documents.
     * @example
     * // Create one Shipping_documents
     * const Shipping_documents = await prisma.shipping_documents.create({
     *   data: {
     *     // ... data to create a Shipping_documents
     *   }
     * })
     * 
    **/
    create<T extends shipping_documentsCreateArgs>(
      args: SelectSubset<T, shipping_documentsCreateArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Create many Shipping_documents.
     *     @param {shipping_documentsCreateManyArgs} args - Arguments to create many Shipping_documents.
     *     @example
     *     // Create many Shipping_documents
     *     const shipping_documents = await prisma.shipping_documents.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends shipping_documentsCreateManyArgs>(
      args?: SelectSubset<T, shipping_documentsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Shipping_documents.
     * @param {shipping_documentsDeleteArgs} args - Arguments to delete one Shipping_documents.
     * @example
     * // Delete one Shipping_documents
     * const Shipping_documents = await prisma.shipping_documents.delete({
     *   where: {
     *     // ... filter to delete one Shipping_documents
     *   }
     * })
     * 
    **/
    delete<T extends shipping_documentsDeleteArgs>(
      args: SelectSubset<T, shipping_documentsDeleteArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Update one Shipping_documents.
     * @param {shipping_documentsUpdateArgs} args - Arguments to update one Shipping_documents.
     * @example
     * // Update one Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends shipping_documentsUpdateArgs>(
      args: SelectSubset<T, shipping_documentsUpdateArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Delete zero or more Shipping_documents.
     * @param {shipping_documentsDeleteManyArgs} args - Arguments to filter Shipping_documents to delete.
     * @example
     * // Delete a few Shipping_documents
     * const { count } = await prisma.shipping_documents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends shipping_documentsDeleteManyArgs>(
      args?: SelectSubset<T, shipping_documentsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shipping_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_documentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends shipping_documentsUpdateManyArgs>(
      args: SelectSubset<T, shipping_documentsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Shipping_documents.
     * @param {shipping_documentsUpsertArgs} args - Arguments to update or create a Shipping_documents.
     * @example
     * // Update or create a Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.upsert({
     *   create: {
     *     // ... data to create a Shipping_documents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipping_documents we want to update
     *   }
     * })
    **/
    upsert<T extends shipping_documentsUpsertArgs>(
      args: SelectSubset<T, shipping_documentsUpsertArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Count the number of Shipping_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_documentsCountArgs} args - Arguments to filter Shipping_documents to count.
     * @example
     * // Count the number of Shipping_documents
     * const count = await prisma.shipping_documents.count({
     *   where: {
     *     // ... the filter for the Shipping_documents we want to count
     *   }
     * })
    **/
    count<T extends shipping_documentsCountArgs>(
      args?: Subset<T, shipping_documentsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Shipping_documentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipping_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_documentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Shipping_documentsAggregateArgs>(args: Subset<T, Shipping_documentsAggregateArgs>): PrismaPromise<GetShipping_documentsAggregateType<T>>

    /**
     * Group by Shipping_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_documentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Shipping_documentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Shipping_documentsGroupByArgs['orderBy'] }
        : { orderBy?: Shipping_documentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Shipping_documentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipping_documentsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for shipping_documents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__shipping_documentsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    shipping_documents<T extends shipping_documentsArgs = {}>(args?: Subset<T, shipping_documentsArgs>): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents | null >, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    other_shipping_documents<T extends shipping_documentsFindManyArgs = {}>(args?: Subset<T, shipping_documentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * shipping_documents findUnique
   */
  export type shipping_documentsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * Throw an Error if a shipping_documents can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which shipping_documents to fetch.
     * 
    **/
    where: shipping_documentsWhereUniqueInput
  }


  /**
   * shipping_documents findFirst
   */
  export type shipping_documentsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * Throw an Error if a shipping_documents can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which shipping_documents to fetch.
     * 
    **/
    where?: shipping_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_documents to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_documentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shipping_documents.
     * 
    **/
    cursor?: shipping_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_documents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_documents.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shipping_documents.
     * 
    **/
    distinct?: Enumerable<Shipping_documentsScalarFieldEnum>
  }


  /**
   * shipping_documents findMany
   */
  export type shipping_documentsFindManyArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * Filter, which shipping_documents to fetch.
     * 
    **/
    where?: shipping_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_documents to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_documentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing shipping_documents.
     * 
    **/
    cursor?: shipping_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_documents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_documents.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Shipping_documentsScalarFieldEnum>
  }


  /**
   * shipping_documents create
   */
  export type shipping_documentsCreateArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * The data needed to create a shipping_documents.
     * 
    **/
    data: XOR<shipping_documentsCreateInput, shipping_documentsUncheckedCreateInput>
  }


  /**
   * shipping_documents createMany
   */
  export type shipping_documentsCreateManyArgs = {
    data: Enumerable<shipping_documentsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * shipping_documents update
   */
  export type shipping_documentsUpdateArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * The data needed to update a shipping_documents.
     * 
    **/
    data: XOR<shipping_documentsUpdateInput, shipping_documentsUncheckedUpdateInput>
    /**
     * Choose, which shipping_documents to update.
     * 
    **/
    where: shipping_documentsWhereUniqueInput
  }


  /**
   * shipping_documents updateMany
   */
  export type shipping_documentsUpdateManyArgs = {
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyInput>
    where?: shipping_documentsWhereInput
  }


  /**
   * shipping_documents upsert
   */
  export type shipping_documentsUpsertArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * The filter to search for the shipping_documents to update in case it exists.
     * 
    **/
    where: shipping_documentsWhereUniqueInput
    /**
     * In case the shipping_documents found by the `where` argument doesn't exist, create a new shipping_documents with this data.
     * 
    **/
    create: XOR<shipping_documentsCreateInput, shipping_documentsUncheckedCreateInput>
    /**
     * In case the shipping_documents was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<shipping_documentsUpdateInput, shipping_documentsUncheckedUpdateInput>
  }


  /**
   * shipping_documents delete
   */
  export type shipping_documentsDeleteArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * Filter which shipping_documents to delete.
     * 
    **/
    where: shipping_documentsWhereUniqueInput
  }


  /**
   * shipping_documents deleteMany
   */
  export type shipping_documentsDeleteManyArgs = {
    where?: shipping_documentsWhereInput
  }


  /**
   * shipping_documents without action
   */
  export type shipping_documentsArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
  }



  /**
   * Model shipping_files
   */


  export type AggregateShipping_files = {
    _count: Shipping_filesCountAggregateOutputType | null
    _avg: Shipping_filesAvgAggregateOutputType | null
    _sum: Shipping_filesSumAggregateOutputType | null
    _min: Shipping_filesMinAggregateOutputType | null
    _max: Shipping_filesMaxAggregateOutputType | null
  }

  export type Shipping_filesAvgAggregateOutputType = {
    id: number | null
    shippingId: number | null
    userId: number | null
  }

  export type Shipping_filesSumAggregateOutputType = {
    id: number | null
    shippingId: number | null
    userId: number | null
  }

  export type Shipping_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    shippingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Shipping_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    shippingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Shipping_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    shippingId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    userId: number
    _all: number
  }


  export type Shipping_filesAvgAggregateInputType = {
    id?: true
    shippingId?: true
    userId?: true
  }

  export type Shipping_filesSumAggregateInputType = {
    id?: true
    shippingId?: true
    userId?: true
  }

  export type Shipping_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Shipping_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Shipping_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
    _all?: true
  }

  export type Shipping_filesAggregateArgs = {
    /**
     * Filter which shipping_files to aggregate.
     * 
    **/
    where?: shipping_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_files to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: shipping_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned shipping_files
    **/
    _count?: true | Shipping_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Shipping_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Shipping_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Shipping_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Shipping_filesMaxAggregateInputType
  }

  export type GetShipping_filesAggregateType<T extends Shipping_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateShipping_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipping_files[P]>
      : GetScalarType<T[P], AggregateShipping_files[P]>
  }




  export type Shipping_filesGroupByArgs = {
    where?: shipping_filesWhereInput
    orderBy?: Enumerable<shipping_filesOrderByWithAggregationInput>
    by: Array<Shipping_filesScalarFieldEnum>
    having?: shipping_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Shipping_filesCountAggregateInputType | true
    _avg?: Shipping_filesAvgAggregateInputType
    _sum?: Shipping_filesSumAggregateInputType
    _min?: Shipping_filesMinAggregateInputType
    _max?: Shipping_filesMaxAggregateInputType
  }


  export type Shipping_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    shippingId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    userId: number | null
    _count: Shipping_filesCountAggregateOutputType | null
    _avg: Shipping_filesAvgAggregateOutputType | null
    _sum: Shipping_filesSumAggregateOutputType | null
    _min: Shipping_filesMinAggregateOutputType | null
    _max: Shipping_filesMaxAggregateOutputType | null
  }

  type GetShipping_filesGroupByPayload<T extends Shipping_filesGroupByArgs> = Promise<
    Array<
      PickArray<Shipping_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Shipping_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Shipping_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Shipping_filesGroupByOutputType[P]>
        }
      >
    >


  export type shipping_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    shippingId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    userId?: boolean
    shippings?: boolean | ShippingArgs
    users?: boolean | usersArgs
  }

  export type shipping_filesInclude = {
    shippings?: boolean | ShippingArgs
    users?: boolean | usersArgs
  }

  export type shipping_filesGetPayload<
    S extends boolean | null | undefined | shipping_filesArgs,
    U = keyof S
      > = S extends true
        ? shipping_files
    : S extends undefined
    ? never
    : S extends shipping_filesArgs | shipping_filesFindManyArgs
    ?'include' extends U
    ? shipping_files  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'shippings'
        ? ShippingGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof shipping_files ?shipping_files [P]
  : 
          P extends 'shippings'
        ? ShippingGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : shipping_files
  : shipping_files


  type shipping_filesCountArgs = Merge<
    Omit<shipping_filesFindManyArgs, 'select' | 'include'> & {
      select?: Shipping_filesCountAggregateInputType | true
    }
  >

  export interface shipping_filesDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Shipping_files that matches the filter.
     * @param {shipping_filesFindUniqueArgs} args - Arguments to find a Shipping_files
     * @example
     * // Get one Shipping_files
     * const shipping_files = await prisma.shipping_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends shipping_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, shipping_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'shipping_files'> extends True ? CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>> : CheckSelect<T, Prisma__shipping_filesClient<shipping_files | null >, Prisma__shipping_filesClient<shipping_filesGetPayload<T> | null >>

    /**
     * Find the first Shipping_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_filesFindFirstArgs} args - Arguments to find a Shipping_files
     * @example
     * // Get one Shipping_files
     * const shipping_files = await prisma.shipping_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends shipping_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, shipping_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'shipping_files'> extends True ? CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>> : CheckSelect<T, Prisma__shipping_filesClient<shipping_files | null >, Prisma__shipping_filesClient<shipping_filesGetPayload<T> | null >>

    /**
     * Find zero or more Shipping_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shipping_files
     * const shipping_files = await prisma.shipping_files.findMany()
     * 
     * // Get first 10 Shipping_files
     * const shipping_files = await prisma.shipping_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipping_filesWithIdOnly = await prisma.shipping_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends shipping_filesFindManyArgs>(
      args?: SelectSubset<T, shipping_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<shipping_files>>, PrismaPromise<Array<shipping_filesGetPayload<T>>>>

    /**
     * Create a Shipping_files.
     * @param {shipping_filesCreateArgs} args - Arguments to create a Shipping_files.
     * @example
     * // Create one Shipping_files
     * const Shipping_files = await prisma.shipping_files.create({
     *   data: {
     *     // ... data to create a Shipping_files
     *   }
     * })
     * 
    **/
    create<T extends shipping_filesCreateArgs>(
      args: SelectSubset<T, shipping_filesCreateArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Create many Shipping_files.
     *     @param {shipping_filesCreateManyArgs} args - Arguments to create many Shipping_files.
     *     @example
     *     // Create many Shipping_files
     *     const shipping_files = await prisma.shipping_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends shipping_filesCreateManyArgs>(
      args?: SelectSubset<T, shipping_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Shipping_files.
     * @param {shipping_filesDeleteArgs} args - Arguments to delete one Shipping_files.
     * @example
     * // Delete one Shipping_files
     * const Shipping_files = await prisma.shipping_files.delete({
     *   where: {
     *     // ... filter to delete one Shipping_files
     *   }
     * })
     * 
    **/
    delete<T extends shipping_filesDeleteArgs>(
      args: SelectSubset<T, shipping_filesDeleteArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Update one Shipping_files.
     * @param {shipping_filesUpdateArgs} args - Arguments to update one Shipping_files.
     * @example
     * // Update one Shipping_files
     * const shipping_files = await prisma.shipping_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends shipping_filesUpdateArgs>(
      args: SelectSubset<T, shipping_filesUpdateArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Delete zero or more Shipping_files.
     * @param {shipping_filesDeleteManyArgs} args - Arguments to filter Shipping_files to delete.
     * @example
     * // Delete a few Shipping_files
     * const { count } = await prisma.shipping_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends shipping_filesDeleteManyArgs>(
      args?: SelectSubset<T, shipping_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shipping_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shipping_files
     * const shipping_files = await prisma.shipping_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends shipping_filesUpdateManyArgs>(
      args: SelectSubset<T, shipping_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Shipping_files.
     * @param {shipping_filesUpsertArgs} args - Arguments to update or create a Shipping_files.
     * @example
     * // Update or create a Shipping_files
     * const shipping_files = await prisma.shipping_files.upsert({
     *   create: {
     *     // ... data to create a Shipping_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipping_files we want to update
     *   }
     * })
    **/
    upsert<T extends shipping_filesUpsertArgs>(
      args: SelectSubset<T, shipping_filesUpsertArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Count the number of Shipping_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_filesCountArgs} args - Arguments to filter Shipping_files to count.
     * @example
     * // Count the number of Shipping_files
     * const count = await prisma.shipping_files.count({
     *   where: {
     *     // ... the filter for the Shipping_files we want to count
     *   }
     * })
    **/
    count<T extends shipping_filesCountArgs>(
      args?: Subset<T, shipping_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Shipping_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipping_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Shipping_filesAggregateArgs>(args: Subset<T, Shipping_filesAggregateArgs>): PrismaPromise<GetShipping_filesAggregateType<T>>

    /**
     * Group by Shipping_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Shipping_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Shipping_filesGroupByArgs['orderBy'] }
        : { orderBy?: Shipping_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Shipping_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipping_filesGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for shipping_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__shipping_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * shipping_files findUnique
   */
  export type shipping_filesFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * Throw an Error if a shipping_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which shipping_files to fetch.
     * 
    **/
    where: shipping_filesWhereUniqueInput
  }


  /**
   * shipping_files findFirst
   */
  export type shipping_filesFindFirstArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * Throw an Error if a shipping_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which shipping_files to fetch.
     * 
    **/
    where?: shipping_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_files to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shipping_files.
     * 
    **/
    cursor?: shipping_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shipping_files.
     * 
    **/
    distinct?: Enumerable<Shipping_filesScalarFieldEnum>
  }


  /**
   * shipping_files findMany
   */
  export type shipping_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * Filter, which shipping_files to fetch.
     * 
    **/
    where?: shipping_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_files to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing shipping_files.
     * 
    **/
    cursor?: shipping_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Shipping_filesScalarFieldEnum>
  }


  /**
   * shipping_files create
   */
  export type shipping_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * The data needed to create a shipping_files.
     * 
    **/
    data: XOR<shipping_filesCreateInput, shipping_filesUncheckedCreateInput>
  }


  /**
   * shipping_files createMany
   */
  export type shipping_filesCreateManyArgs = {
    data: Enumerable<shipping_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * shipping_files update
   */
  export type shipping_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * The data needed to update a shipping_files.
     * 
    **/
    data: XOR<shipping_filesUpdateInput, shipping_filesUncheckedUpdateInput>
    /**
     * Choose, which shipping_files to update.
     * 
    **/
    where: shipping_filesWhereUniqueInput
  }


  /**
   * shipping_files updateMany
   */
  export type shipping_filesUpdateManyArgs = {
    data: XOR<shipping_filesUpdateManyMutationInput, shipping_filesUncheckedUpdateManyInput>
    where?: shipping_filesWhereInput
  }


  /**
   * shipping_files upsert
   */
  export type shipping_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * The filter to search for the shipping_files to update in case it exists.
     * 
    **/
    where: shipping_filesWhereUniqueInput
    /**
     * In case the shipping_files found by the `where` argument doesn't exist, create a new shipping_files with this data.
     * 
    **/
    create: XOR<shipping_filesCreateInput, shipping_filesUncheckedCreateInput>
    /**
     * In case the shipping_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<shipping_filesUpdateInput, shipping_filesUncheckedUpdateInput>
  }


  /**
   * shipping_files delete
   */
  export type shipping_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * Filter which shipping_files to delete.
     * 
    **/
    where: shipping_filesWhereUniqueInput
  }


  /**
   * shipping_files deleteMany
   */
  export type shipping_filesDeleteManyArgs = {
    where?: shipping_filesWhereInput
  }


  /**
   * shipping_files without action
   */
  export type shipping_filesArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
  }



  /**
   * Model shipping_ports
   */


  export type AggregateShipping_ports = {
    _count: Shipping_portsCountAggregateOutputType | null
    _avg: Shipping_portsAvgAggregateOutputType | null
    _sum: Shipping_portsSumAggregateOutputType | null
    _min: Shipping_portsMinAggregateOutputType | null
    _max: Shipping_portsMaxAggregateOutputType | null
  }

  export type Shipping_portsAvgAggregateOutputType = {
    id: number | null
    shippingId: number | null
    portId: number | null
    berthId: number | null
  }

  export type Shipping_portsSumAggregateOutputType = {
    id: number | null
    shippingId: number | null
    portId: number | null
    berthId: number | null
  }

  export type Shipping_portsMinAggregateOutputType = {
    id: number | null
    estimatedTimeOfArrival: Date | null
    estimatedTimeOfBerthing: Date | null
    estimatedTimeOfSailing: Date | null
    timeOfArrival: Date | null
    timeOfBerthing: Date | null
    timeOfSailing: Date | null
    shippingId: number | null
    portId: number | null
    berthId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Shipping_portsMaxAggregateOutputType = {
    id: number | null
    estimatedTimeOfArrival: Date | null
    estimatedTimeOfBerthing: Date | null
    estimatedTimeOfSailing: Date | null
    timeOfArrival: Date | null
    timeOfBerthing: Date | null
    timeOfSailing: Date | null
    shippingId: number | null
    portId: number | null
    berthId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Shipping_portsCountAggregateOutputType = {
    id: number
    estimatedTimeOfArrival: number
    estimatedTimeOfBerthing: number
    estimatedTimeOfSailing: number
    timeOfArrival: number
    timeOfBerthing: number
    timeOfSailing: number
    shippingId: number
    portId: number
    berthId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type Shipping_portsAvgAggregateInputType = {
    id?: true
    shippingId?: true
    portId?: true
    berthId?: true
  }

  export type Shipping_portsSumAggregateInputType = {
    id?: true
    shippingId?: true
    portId?: true
    berthId?: true
  }

  export type Shipping_portsMinAggregateInputType = {
    id?: true
    estimatedTimeOfArrival?: true
    estimatedTimeOfBerthing?: true
    estimatedTimeOfSailing?: true
    timeOfArrival?: true
    timeOfBerthing?: true
    timeOfSailing?: true
    shippingId?: true
    portId?: true
    berthId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Shipping_portsMaxAggregateInputType = {
    id?: true
    estimatedTimeOfArrival?: true
    estimatedTimeOfBerthing?: true
    estimatedTimeOfSailing?: true
    timeOfArrival?: true
    timeOfBerthing?: true
    timeOfSailing?: true
    shippingId?: true
    portId?: true
    berthId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Shipping_portsCountAggregateInputType = {
    id?: true
    estimatedTimeOfArrival?: true
    estimatedTimeOfBerthing?: true
    estimatedTimeOfSailing?: true
    timeOfArrival?: true
    timeOfBerthing?: true
    timeOfSailing?: true
    shippingId?: true
    portId?: true
    berthId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type Shipping_portsAggregateArgs = {
    /**
     * Filter which shipping_ports to aggregate.
     * 
    **/
    where?: shipping_portsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_ports to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_portsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: shipping_portsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_ports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_ports.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned shipping_ports
    **/
    _count?: true | Shipping_portsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Shipping_portsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Shipping_portsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Shipping_portsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Shipping_portsMaxAggregateInputType
  }

  export type GetShipping_portsAggregateType<T extends Shipping_portsAggregateArgs> = {
        [P in keyof T & keyof AggregateShipping_ports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipping_ports[P]>
      : GetScalarType<T[P], AggregateShipping_ports[P]>
  }




  export type Shipping_portsGroupByArgs = {
    where?: shipping_portsWhereInput
    orderBy?: Enumerable<shipping_portsOrderByWithAggregationInput>
    by: Array<Shipping_portsScalarFieldEnum>
    having?: shipping_portsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Shipping_portsCountAggregateInputType | true
    _avg?: Shipping_portsAvgAggregateInputType
    _sum?: Shipping_portsSumAggregateInputType
    _min?: Shipping_portsMinAggregateInputType
    _max?: Shipping_portsMaxAggregateInputType
  }


  export type Shipping_portsGroupByOutputType = {
    id: number
    estimatedTimeOfArrival: Date | null
    estimatedTimeOfBerthing: Date | null
    estimatedTimeOfSailing: Date | null
    timeOfArrival: Date | null
    timeOfBerthing: Date | null
    timeOfSailing: Date | null
    shippingId: number | null
    portId: number | null
    berthId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: Shipping_portsCountAggregateOutputType | null
    _avg: Shipping_portsAvgAggregateOutputType | null
    _sum: Shipping_portsSumAggregateOutputType | null
    _min: Shipping_portsMinAggregateOutputType | null
    _max: Shipping_portsMaxAggregateOutputType | null
  }

  type GetShipping_portsGroupByPayload<T extends Shipping_portsGroupByArgs> = Promise<
    Array<
      PickArray<Shipping_portsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Shipping_portsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Shipping_portsGroupByOutputType[P]>
            : GetScalarType<T[P], Shipping_portsGroupByOutputType[P]>
        }
      >
    >


  export type shipping_portsSelect = {
    id?: boolean
    estimatedTimeOfArrival?: boolean
    estimatedTimeOfBerthing?: boolean
    estimatedTimeOfSailing?: boolean
    timeOfArrival?: boolean
    timeOfBerthing?: boolean
    timeOfSailing?: boolean
    shippingId?: boolean
    portId?: boolean
    berthId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    berths?: boolean | berthsArgs
    ports?: boolean | portsArgs
    shippings?: boolean | ShippingArgs
  }

  export type shipping_portsInclude = {
    berths?: boolean | berthsArgs
    ports?: boolean | portsArgs
    shippings?: boolean | ShippingArgs
  }

  export type shipping_portsGetPayload<
    S extends boolean | null | undefined | shipping_portsArgs,
    U = keyof S
      > = S extends true
        ? shipping_ports
    : S extends undefined
    ? never
    : S extends shipping_portsArgs | shipping_portsFindManyArgs
    ?'include' extends U
    ? shipping_ports  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'berths'
        ? berthsGetPayload<S['include'][P]> | null :
        P extends 'ports'
        ? portsGetPayload<S['include'][P]> | null :
        P extends 'shippings'
        ? ShippingGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof shipping_ports ?shipping_ports [P]
  : 
          P extends 'berths'
        ? berthsGetPayload<S['select'][P]> | null :
        P extends 'ports'
        ? portsGetPayload<S['select'][P]> | null :
        P extends 'shippings'
        ? ShippingGetPayload<S['select'][P]> | null : never
  } 
    : shipping_ports
  : shipping_ports


  type shipping_portsCountArgs = Merge<
    Omit<shipping_portsFindManyArgs, 'select' | 'include'> & {
      select?: Shipping_portsCountAggregateInputType | true
    }
  >

  export interface shipping_portsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Shipping_ports that matches the filter.
     * @param {shipping_portsFindUniqueArgs} args - Arguments to find a Shipping_ports
     * @example
     * // Get one Shipping_ports
     * const shipping_ports = await prisma.shipping_ports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends shipping_portsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, shipping_portsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'shipping_ports'> extends True ? CheckSelect<T, Prisma__shipping_portsClient<shipping_ports>, Prisma__shipping_portsClient<shipping_portsGetPayload<T>>> : CheckSelect<T, Prisma__shipping_portsClient<shipping_ports | null >, Prisma__shipping_portsClient<shipping_portsGetPayload<T> | null >>

    /**
     * Find the first Shipping_ports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_portsFindFirstArgs} args - Arguments to find a Shipping_ports
     * @example
     * // Get one Shipping_ports
     * const shipping_ports = await prisma.shipping_ports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends shipping_portsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, shipping_portsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'shipping_ports'> extends True ? CheckSelect<T, Prisma__shipping_portsClient<shipping_ports>, Prisma__shipping_portsClient<shipping_portsGetPayload<T>>> : CheckSelect<T, Prisma__shipping_portsClient<shipping_ports | null >, Prisma__shipping_portsClient<shipping_portsGetPayload<T> | null >>

    /**
     * Find zero or more Shipping_ports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_portsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shipping_ports
     * const shipping_ports = await prisma.shipping_ports.findMany()
     * 
     * // Get first 10 Shipping_ports
     * const shipping_ports = await prisma.shipping_ports.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipping_portsWithIdOnly = await prisma.shipping_ports.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends shipping_portsFindManyArgs>(
      args?: SelectSubset<T, shipping_portsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<shipping_ports>>, PrismaPromise<Array<shipping_portsGetPayload<T>>>>

    /**
     * Create a Shipping_ports.
     * @param {shipping_portsCreateArgs} args - Arguments to create a Shipping_ports.
     * @example
     * // Create one Shipping_ports
     * const Shipping_ports = await prisma.shipping_ports.create({
     *   data: {
     *     // ... data to create a Shipping_ports
     *   }
     * })
     * 
    **/
    create<T extends shipping_portsCreateArgs>(
      args: SelectSubset<T, shipping_portsCreateArgs>
    ): CheckSelect<T, Prisma__shipping_portsClient<shipping_ports>, Prisma__shipping_portsClient<shipping_portsGetPayload<T>>>

    /**
     * Create many Shipping_ports.
     *     @param {shipping_portsCreateManyArgs} args - Arguments to create many Shipping_ports.
     *     @example
     *     // Create many Shipping_ports
     *     const shipping_ports = await prisma.shipping_ports.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends shipping_portsCreateManyArgs>(
      args?: SelectSubset<T, shipping_portsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Shipping_ports.
     * @param {shipping_portsDeleteArgs} args - Arguments to delete one Shipping_ports.
     * @example
     * // Delete one Shipping_ports
     * const Shipping_ports = await prisma.shipping_ports.delete({
     *   where: {
     *     // ... filter to delete one Shipping_ports
     *   }
     * })
     * 
    **/
    delete<T extends shipping_portsDeleteArgs>(
      args: SelectSubset<T, shipping_portsDeleteArgs>
    ): CheckSelect<T, Prisma__shipping_portsClient<shipping_ports>, Prisma__shipping_portsClient<shipping_portsGetPayload<T>>>

    /**
     * Update one Shipping_ports.
     * @param {shipping_portsUpdateArgs} args - Arguments to update one Shipping_ports.
     * @example
     * // Update one Shipping_ports
     * const shipping_ports = await prisma.shipping_ports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends shipping_portsUpdateArgs>(
      args: SelectSubset<T, shipping_portsUpdateArgs>
    ): CheckSelect<T, Prisma__shipping_portsClient<shipping_ports>, Prisma__shipping_portsClient<shipping_portsGetPayload<T>>>

    /**
     * Delete zero or more Shipping_ports.
     * @param {shipping_portsDeleteManyArgs} args - Arguments to filter Shipping_ports to delete.
     * @example
     * // Delete a few Shipping_ports
     * const { count } = await prisma.shipping_ports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends shipping_portsDeleteManyArgs>(
      args?: SelectSubset<T, shipping_portsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shipping_ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_portsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shipping_ports
     * const shipping_ports = await prisma.shipping_ports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends shipping_portsUpdateManyArgs>(
      args: SelectSubset<T, shipping_portsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Shipping_ports.
     * @param {shipping_portsUpsertArgs} args - Arguments to update or create a Shipping_ports.
     * @example
     * // Update or create a Shipping_ports
     * const shipping_ports = await prisma.shipping_ports.upsert({
     *   create: {
     *     // ... data to create a Shipping_ports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipping_ports we want to update
     *   }
     * })
    **/
    upsert<T extends shipping_portsUpsertArgs>(
      args: SelectSubset<T, shipping_portsUpsertArgs>
    ): CheckSelect<T, Prisma__shipping_portsClient<shipping_ports>, Prisma__shipping_portsClient<shipping_portsGetPayload<T>>>

    /**
     * Count the number of Shipping_ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_portsCountArgs} args - Arguments to filter Shipping_ports to count.
     * @example
     * // Count the number of Shipping_ports
     * const count = await prisma.shipping_ports.count({
     *   where: {
     *     // ... the filter for the Shipping_ports we want to count
     *   }
     * })
    **/
    count<T extends shipping_portsCountArgs>(
      args?: Subset<T, shipping_portsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Shipping_portsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipping_ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_portsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Shipping_portsAggregateArgs>(args: Subset<T, Shipping_portsAggregateArgs>): PrismaPromise<GetShipping_portsAggregateType<T>>

    /**
     * Group by Shipping_ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_portsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Shipping_portsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Shipping_portsGroupByArgs['orderBy'] }
        : { orderBy?: Shipping_portsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Shipping_portsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipping_portsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for shipping_ports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__shipping_portsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    berths<T extends berthsArgs = {}>(args?: Subset<T, berthsArgs>): CheckSelect<T, Prisma__berthsClient<berths | null >, Prisma__berthsClient<berthsGetPayload<T> | null >>;

    ports<T extends portsArgs = {}>(args?: Subset<T, portsArgs>): CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>;

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * shipping_ports findUnique
   */
  export type shipping_portsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the shipping_ports
     * 
    **/
    select?: shipping_portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_portsInclude | null
    /**
     * Throw an Error if a shipping_ports can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which shipping_ports to fetch.
     * 
    **/
    where: shipping_portsWhereUniqueInput
  }


  /**
   * shipping_ports findFirst
   */
  export type shipping_portsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the shipping_ports
     * 
    **/
    select?: shipping_portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_portsInclude | null
    /**
     * Throw an Error if a shipping_ports can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which shipping_ports to fetch.
     * 
    **/
    where?: shipping_portsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_ports to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_portsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shipping_ports.
     * 
    **/
    cursor?: shipping_portsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_ports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_ports.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shipping_ports.
     * 
    **/
    distinct?: Enumerable<Shipping_portsScalarFieldEnum>
  }


  /**
   * shipping_ports findMany
   */
  export type shipping_portsFindManyArgs = {
    /**
     * Select specific fields to fetch from the shipping_ports
     * 
    **/
    select?: shipping_portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_portsInclude | null
    /**
     * Filter, which shipping_ports to fetch.
     * 
    **/
    where?: shipping_portsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_ports to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_portsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing shipping_ports.
     * 
    **/
    cursor?: shipping_portsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_ports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_ports.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Shipping_portsScalarFieldEnum>
  }


  /**
   * shipping_ports create
   */
  export type shipping_portsCreateArgs = {
    /**
     * Select specific fields to fetch from the shipping_ports
     * 
    **/
    select?: shipping_portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_portsInclude | null
    /**
     * The data needed to create a shipping_ports.
     * 
    **/
    data: XOR<shipping_portsCreateInput, shipping_portsUncheckedCreateInput>
  }


  /**
   * shipping_ports createMany
   */
  export type shipping_portsCreateManyArgs = {
    data: Enumerable<shipping_portsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * shipping_ports update
   */
  export type shipping_portsUpdateArgs = {
    /**
     * Select specific fields to fetch from the shipping_ports
     * 
    **/
    select?: shipping_portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_portsInclude | null
    /**
     * The data needed to update a shipping_ports.
     * 
    **/
    data: XOR<shipping_portsUpdateInput, shipping_portsUncheckedUpdateInput>
    /**
     * Choose, which shipping_ports to update.
     * 
    **/
    where: shipping_portsWhereUniqueInput
  }


  /**
   * shipping_ports updateMany
   */
  export type shipping_portsUpdateManyArgs = {
    data: XOR<shipping_portsUpdateManyMutationInput, shipping_portsUncheckedUpdateManyInput>
    where?: shipping_portsWhereInput
  }


  /**
   * shipping_ports upsert
   */
  export type shipping_portsUpsertArgs = {
    /**
     * Select specific fields to fetch from the shipping_ports
     * 
    **/
    select?: shipping_portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_portsInclude | null
    /**
     * The filter to search for the shipping_ports to update in case it exists.
     * 
    **/
    where: shipping_portsWhereUniqueInput
    /**
     * In case the shipping_ports found by the `where` argument doesn't exist, create a new shipping_ports with this data.
     * 
    **/
    create: XOR<shipping_portsCreateInput, shipping_portsUncheckedCreateInput>
    /**
     * In case the shipping_ports was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<shipping_portsUpdateInput, shipping_portsUncheckedUpdateInput>
  }


  /**
   * shipping_ports delete
   */
  export type shipping_portsDeleteArgs = {
    /**
     * Select specific fields to fetch from the shipping_ports
     * 
    **/
    select?: shipping_portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_portsInclude | null
    /**
     * Filter which shipping_ports to delete.
     * 
    **/
    where: shipping_portsWhereUniqueInput
  }


  /**
   * shipping_ports deleteMany
   */
  export type shipping_portsDeleteManyArgs = {
    where?: shipping_portsWhereInput
  }


  /**
   * shipping_ports without action
   */
  export type shipping_portsArgs = {
    /**
     * Select specific fields to fetch from the shipping_ports
     * 
    **/
    select?: shipping_portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_portsInclude | null
  }



  /**
   * Model shipping_products
   */


  export type AggregateShipping_products = {
    _count: Shipping_productsCountAggregateOutputType | null
    _avg: Shipping_productsAvgAggregateOutputType | null
    _sum: Shipping_productsSumAggregateOutputType | null
    _min: Shipping_productsMinAggregateOutputType | null
    _max: Shipping_productsMaxAggregateOutputType | null
  }

  export type Shipping_productsAvgAggregateOutputType = {
    id: number | null
    weight: number | null
    shippingId: number | null
    productId: number | null
  }

  export type Shipping_productsSumAggregateOutputType = {
    id: number | null
    weight: number | null
    shippingId: number | null
    productId: number | null
  }

  export type Shipping_productsMinAggregateOutputType = {
    id: number | null
    weight: number | null
    shippingId: number | null
    productId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Shipping_productsMaxAggregateOutputType = {
    id: number | null
    weight: number | null
    shippingId: number | null
    productId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Shipping_productsCountAggregateOutputType = {
    id: number
    weight: number
    shippingId: number
    productId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type Shipping_productsAvgAggregateInputType = {
    id?: true
    weight?: true
    shippingId?: true
    productId?: true
  }

  export type Shipping_productsSumAggregateInputType = {
    id?: true
    weight?: true
    shippingId?: true
    productId?: true
  }

  export type Shipping_productsMinAggregateInputType = {
    id?: true
    weight?: true
    shippingId?: true
    productId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Shipping_productsMaxAggregateInputType = {
    id?: true
    weight?: true
    shippingId?: true
    productId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Shipping_productsCountAggregateInputType = {
    id?: true
    weight?: true
    shippingId?: true
    productId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type Shipping_productsAggregateArgs = {
    /**
     * Filter which shipping_products to aggregate.
     * 
    **/
    where?: shipping_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_products to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: shipping_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned shipping_products
    **/
    _count?: true | Shipping_productsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Shipping_productsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Shipping_productsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Shipping_productsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Shipping_productsMaxAggregateInputType
  }

  export type GetShipping_productsAggregateType<T extends Shipping_productsAggregateArgs> = {
        [P in keyof T & keyof AggregateShipping_products]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipping_products[P]>
      : GetScalarType<T[P], AggregateShipping_products[P]>
  }




  export type Shipping_productsGroupByArgs = {
    where?: shipping_productsWhereInput
    orderBy?: Enumerable<shipping_productsOrderByWithAggregationInput>
    by: Array<Shipping_productsScalarFieldEnum>
    having?: shipping_productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Shipping_productsCountAggregateInputType | true
    _avg?: Shipping_productsAvgAggregateInputType
    _sum?: Shipping_productsSumAggregateInputType
    _min?: Shipping_productsMinAggregateInputType
    _max?: Shipping_productsMaxAggregateInputType
  }


  export type Shipping_productsGroupByOutputType = {
    id: number
    weight: number | null
    shippingId: number | null
    productId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: Shipping_productsCountAggregateOutputType | null
    _avg: Shipping_productsAvgAggregateOutputType | null
    _sum: Shipping_productsSumAggregateOutputType | null
    _min: Shipping_productsMinAggregateOutputType | null
    _max: Shipping_productsMaxAggregateOutputType | null
  }

  type GetShipping_productsGroupByPayload<T extends Shipping_productsGroupByArgs> = Promise<
    Array<
      PickArray<Shipping_productsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Shipping_productsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Shipping_productsGroupByOutputType[P]>
            : GetScalarType<T[P], Shipping_productsGroupByOutputType[P]>
        }
      >
    >


  export type shipping_productsSelect = {
    id?: boolean
    weight?: boolean
    shippingId?: boolean
    productId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    products?: boolean | productsArgs
    shippings?: boolean | ShippingArgs
  }

  export type shipping_productsInclude = {
    products?: boolean | productsArgs
    shippings?: boolean | ShippingArgs
  }

  export type shipping_productsGetPayload<
    S extends boolean | null | undefined | shipping_productsArgs,
    U = keyof S
      > = S extends true
        ? shipping_products
    : S extends undefined
    ? never
    : S extends shipping_productsArgs | shipping_productsFindManyArgs
    ?'include' extends U
    ? shipping_products  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'products'
        ? productsGetPayload<S['include'][P]> | null :
        P extends 'shippings'
        ? ShippingGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof shipping_products ?shipping_products [P]
  : 
          P extends 'products'
        ? productsGetPayload<S['select'][P]> | null :
        P extends 'shippings'
        ? ShippingGetPayload<S['select'][P]> | null : never
  } 
    : shipping_products
  : shipping_products


  type shipping_productsCountArgs = Merge<
    Omit<shipping_productsFindManyArgs, 'select' | 'include'> & {
      select?: Shipping_productsCountAggregateInputType | true
    }
  >

  export interface shipping_productsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Shipping_products that matches the filter.
     * @param {shipping_productsFindUniqueArgs} args - Arguments to find a Shipping_products
     * @example
     * // Get one Shipping_products
     * const shipping_products = await prisma.shipping_products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends shipping_productsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, shipping_productsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'shipping_products'> extends True ? CheckSelect<T, Prisma__shipping_productsClient<shipping_products>, Prisma__shipping_productsClient<shipping_productsGetPayload<T>>> : CheckSelect<T, Prisma__shipping_productsClient<shipping_products | null >, Prisma__shipping_productsClient<shipping_productsGetPayload<T> | null >>

    /**
     * Find the first Shipping_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_productsFindFirstArgs} args - Arguments to find a Shipping_products
     * @example
     * // Get one Shipping_products
     * const shipping_products = await prisma.shipping_products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends shipping_productsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, shipping_productsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'shipping_products'> extends True ? CheckSelect<T, Prisma__shipping_productsClient<shipping_products>, Prisma__shipping_productsClient<shipping_productsGetPayload<T>>> : CheckSelect<T, Prisma__shipping_productsClient<shipping_products | null >, Prisma__shipping_productsClient<shipping_productsGetPayload<T> | null >>

    /**
     * Find zero or more Shipping_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_productsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shipping_products
     * const shipping_products = await prisma.shipping_products.findMany()
     * 
     * // Get first 10 Shipping_products
     * const shipping_products = await prisma.shipping_products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipping_productsWithIdOnly = await prisma.shipping_products.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends shipping_productsFindManyArgs>(
      args?: SelectSubset<T, shipping_productsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<shipping_products>>, PrismaPromise<Array<shipping_productsGetPayload<T>>>>

    /**
     * Create a Shipping_products.
     * @param {shipping_productsCreateArgs} args - Arguments to create a Shipping_products.
     * @example
     * // Create one Shipping_products
     * const Shipping_products = await prisma.shipping_products.create({
     *   data: {
     *     // ... data to create a Shipping_products
     *   }
     * })
     * 
    **/
    create<T extends shipping_productsCreateArgs>(
      args: SelectSubset<T, shipping_productsCreateArgs>
    ): CheckSelect<T, Prisma__shipping_productsClient<shipping_products>, Prisma__shipping_productsClient<shipping_productsGetPayload<T>>>

    /**
     * Create many Shipping_products.
     *     @param {shipping_productsCreateManyArgs} args - Arguments to create many Shipping_products.
     *     @example
     *     // Create many Shipping_products
     *     const shipping_products = await prisma.shipping_products.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends shipping_productsCreateManyArgs>(
      args?: SelectSubset<T, shipping_productsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Shipping_products.
     * @param {shipping_productsDeleteArgs} args - Arguments to delete one Shipping_products.
     * @example
     * // Delete one Shipping_products
     * const Shipping_products = await prisma.shipping_products.delete({
     *   where: {
     *     // ... filter to delete one Shipping_products
     *   }
     * })
     * 
    **/
    delete<T extends shipping_productsDeleteArgs>(
      args: SelectSubset<T, shipping_productsDeleteArgs>
    ): CheckSelect<T, Prisma__shipping_productsClient<shipping_products>, Prisma__shipping_productsClient<shipping_productsGetPayload<T>>>

    /**
     * Update one Shipping_products.
     * @param {shipping_productsUpdateArgs} args - Arguments to update one Shipping_products.
     * @example
     * // Update one Shipping_products
     * const shipping_products = await prisma.shipping_products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends shipping_productsUpdateArgs>(
      args: SelectSubset<T, shipping_productsUpdateArgs>
    ): CheckSelect<T, Prisma__shipping_productsClient<shipping_products>, Prisma__shipping_productsClient<shipping_productsGetPayload<T>>>

    /**
     * Delete zero or more Shipping_products.
     * @param {shipping_productsDeleteManyArgs} args - Arguments to filter Shipping_products to delete.
     * @example
     * // Delete a few Shipping_products
     * const { count } = await prisma.shipping_products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends shipping_productsDeleteManyArgs>(
      args?: SelectSubset<T, shipping_productsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shipping_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shipping_products
     * const shipping_products = await prisma.shipping_products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends shipping_productsUpdateManyArgs>(
      args: SelectSubset<T, shipping_productsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Shipping_products.
     * @param {shipping_productsUpsertArgs} args - Arguments to update or create a Shipping_products.
     * @example
     * // Update or create a Shipping_products
     * const shipping_products = await prisma.shipping_products.upsert({
     *   create: {
     *     // ... data to create a Shipping_products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipping_products we want to update
     *   }
     * })
    **/
    upsert<T extends shipping_productsUpsertArgs>(
      args: SelectSubset<T, shipping_productsUpsertArgs>
    ): CheckSelect<T, Prisma__shipping_productsClient<shipping_products>, Prisma__shipping_productsClient<shipping_productsGetPayload<T>>>

    /**
     * Count the number of Shipping_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_productsCountArgs} args - Arguments to filter Shipping_products to count.
     * @example
     * // Count the number of Shipping_products
     * const count = await prisma.shipping_products.count({
     *   where: {
     *     // ... the filter for the Shipping_products we want to count
     *   }
     * })
    **/
    count<T extends shipping_productsCountArgs>(
      args?: Subset<T, shipping_productsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Shipping_productsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipping_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_productsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Shipping_productsAggregateArgs>(args: Subset<T, Shipping_productsAggregateArgs>): PrismaPromise<GetShipping_productsAggregateType<T>>

    /**
     * Group by Shipping_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Shipping_productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Shipping_productsGroupByArgs['orderBy'] }
        : { orderBy?: Shipping_productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Shipping_productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipping_productsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for shipping_products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__shipping_productsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    products<T extends productsArgs = {}>(args?: Subset<T, productsArgs>): CheckSelect<T, Prisma__productsClient<products | null >, Prisma__productsClient<productsGetPayload<T> | null >>;

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * shipping_products findUnique
   */
  export type shipping_productsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the shipping_products
     * 
    **/
    select?: shipping_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_productsInclude | null
    /**
     * Throw an Error if a shipping_products can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which shipping_products to fetch.
     * 
    **/
    where: shipping_productsWhereUniqueInput
  }


  /**
   * shipping_products findFirst
   */
  export type shipping_productsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the shipping_products
     * 
    **/
    select?: shipping_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_productsInclude | null
    /**
     * Throw an Error if a shipping_products can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which shipping_products to fetch.
     * 
    **/
    where?: shipping_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_products to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shipping_products.
     * 
    **/
    cursor?: shipping_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shipping_products.
     * 
    **/
    distinct?: Enumerable<Shipping_productsScalarFieldEnum>
  }


  /**
   * shipping_products findMany
   */
  export type shipping_productsFindManyArgs = {
    /**
     * Select specific fields to fetch from the shipping_products
     * 
    **/
    select?: shipping_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_productsInclude | null
    /**
     * Filter, which shipping_products to fetch.
     * 
    **/
    where?: shipping_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_products to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing shipping_products.
     * 
    **/
    cursor?: shipping_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_products.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Shipping_productsScalarFieldEnum>
  }


  /**
   * shipping_products create
   */
  export type shipping_productsCreateArgs = {
    /**
     * Select specific fields to fetch from the shipping_products
     * 
    **/
    select?: shipping_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_productsInclude | null
    /**
     * The data needed to create a shipping_products.
     * 
    **/
    data: XOR<shipping_productsCreateInput, shipping_productsUncheckedCreateInput>
  }


  /**
   * shipping_products createMany
   */
  export type shipping_productsCreateManyArgs = {
    data: Enumerable<shipping_productsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * shipping_products update
   */
  export type shipping_productsUpdateArgs = {
    /**
     * Select specific fields to fetch from the shipping_products
     * 
    **/
    select?: shipping_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_productsInclude | null
    /**
     * The data needed to update a shipping_products.
     * 
    **/
    data: XOR<shipping_productsUpdateInput, shipping_productsUncheckedUpdateInput>
    /**
     * Choose, which shipping_products to update.
     * 
    **/
    where: shipping_productsWhereUniqueInput
  }


  /**
   * shipping_products updateMany
   */
  export type shipping_productsUpdateManyArgs = {
    data: XOR<shipping_productsUpdateManyMutationInput, shipping_productsUncheckedUpdateManyInput>
    where?: shipping_productsWhereInput
  }


  /**
   * shipping_products upsert
   */
  export type shipping_productsUpsertArgs = {
    /**
     * Select specific fields to fetch from the shipping_products
     * 
    **/
    select?: shipping_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_productsInclude | null
    /**
     * The filter to search for the shipping_products to update in case it exists.
     * 
    **/
    where: shipping_productsWhereUniqueInput
    /**
     * In case the shipping_products found by the `where` argument doesn't exist, create a new shipping_products with this data.
     * 
    **/
    create: XOR<shipping_productsCreateInput, shipping_productsUncheckedCreateInput>
    /**
     * In case the shipping_products was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<shipping_productsUpdateInput, shipping_productsUncheckedUpdateInput>
  }


  /**
   * shipping_products delete
   */
  export type shipping_productsDeleteArgs = {
    /**
     * Select specific fields to fetch from the shipping_products
     * 
    **/
    select?: shipping_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_productsInclude | null
    /**
     * Filter which shipping_products to delete.
     * 
    **/
    where: shipping_productsWhereUniqueInput
  }


  /**
   * shipping_products deleteMany
   */
  export type shipping_productsDeleteManyArgs = {
    where?: shipping_productsWhereInput
  }


  /**
   * shipping_products without action
   */
  export type shipping_productsArgs = {
    /**
     * Select specific fields to fetch from the shipping_products
     * 
    **/
    select?: shipping_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_productsInclude | null
  }



  /**
   * Model Shipping
   */


  export type AggregateShipping = {
    _count: ShippingCountAggregateOutputType | null
    _avg: ShippingAvgAggregateOutputType | null
    _sum: ShippingSumAggregateOutputType | null
    _min: ShippingMinAggregateOutputType | null
    _max: ShippingMaxAggregateOutputType | null
  }

  export type ShippingAvgAggregateOutputType = {
    id: number | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
  }

  export type ShippingSumAggregateOutputType = {
    id: number | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
  }

  export type ShippingMinAggregateOutputType = {
    id: number | null
    status: string | null
    owner_head_name: string | null
    owner_head_address: string | null
    disponent_owner: string | null
    charter_name: string | null
    master_name: string | null
    master_email: string | null
    estimated_draft_arrival: string | null
    estimated_draft_departure: string | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_operator: string | null
    vessel_operator_email: string | null
    operation_type: string | null
    agency_type: string | null
    voyage_number: string | null
    external_code: string | null
    comments: string | null
    last_port: string | null
    next_port: string | null
    broker: string | null
    boat: string | null
    tugs: string | null
    garbage: string | null
    last_cargoes: string | null
    sscec_port: string | null
    sscec_exp: string | null
    in_marsat_c_number: string | null
    master_phone_01: string | null
    master_phone_02: string | null
    vessel_expert: string | null
    vessel_expert_phone01: string | null
    vessel_expert_phone02: string | null
    vessel_expert_alternate: string | null
    vessel_expert_alternate_phone01: string | null
    vessel_expert_alternate_phone02: string | null
    vessel_operator_phone01: string | null
    vessel_operator_phone02: string | null
    vessel_operator_city_country: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
  }

  export type ShippingMaxAggregateOutputType = {
    id: number | null
    status: string | null
    owner_head_name: string | null
    owner_head_address: string | null
    disponent_owner: string | null
    charter_name: string | null
    master_name: string | null
    master_email: string | null
    estimated_draft_arrival: string | null
    estimated_draft_departure: string | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_operator: string | null
    vessel_operator_email: string | null
    operation_type: string | null
    agency_type: string | null
    voyage_number: string | null
    external_code: string | null
    comments: string | null
    last_port: string | null
    next_port: string | null
    broker: string | null
    boat: string | null
    tugs: string | null
    garbage: string | null
    last_cargoes: string | null
    sscec_port: string | null
    sscec_exp: string | null
    in_marsat_c_number: string | null
    master_phone_01: string | null
    master_phone_02: string | null
    vessel_expert: string | null
    vessel_expert_phone01: string | null
    vessel_expert_phone02: string | null
    vessel_expert_alternate: string | null
    vessel_expert_alternate_phone01: string | null
    vessel_expert_alternate_phone02: string | null
    vessel_operator_phone01: string | null
    vessel_operator_phone02: string | null
    vessel_operator_city_country: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
  }

  export type ShippingCountAggregateOutputType = {
    id: number
    status: number
    owner_head_name: number
    owner_head_address: number
    disponent_owner: number
    charter_name: number
    master_name: number
    master_email: number
    estimated_draft_arrival: number
    estimated_draft_departure: number
    arrival_draft: number
    depart_draft: number
    vessel_operator: number
    vessel_operator_email: number
    operation_type: number
    agency_type: number
    voyage_number: number
    external_code: number
    comments: number
    last_port: number
    next_port: number
    broker: number
    boat: number
    tugs: number
    garbage: number
    last_cargoes: number
    sscec_port: number
    sscec_exp: number
    in_marsat_c_number: number
    master_phone_01: number
    master_phone_02: number
    vessel_expert: number
    vessel_expert_phone01: number
    vessel_expert_phone02: number
    vessel_expert_alternate: number
    vessel_expert_alternate_phone01: number
    vessel_expert_alternate_phone02: number
    vessel_operator_phone01: number
    vessel_operator_phone02: number
    vessel_operator_city_country: number
    created_at: number
    updated_at: number
    deleted_at: number
    vessel_id: number
    user_id: number
    total_load_expected: number
    total_load_actual: number
    _all: number
  }


  export type ShippingAvgAggregateInputType = {
    id?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
  }

  export type ShippingSumAggregateInputType = {
    id?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
  }

  export type ShippingMinAggregateInputType = {
    id?: true
    status?: true
    owner_head_name?: true
    owner_head_address?: true
    disponent_owner?: true
    charter_name?: true
    master_name?: true
    master_email?: true
    estimated_draft_arrival?: true
    estimated_draft_departure?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_operator?: true
    vessel_operator_email?: true
    operation_type?: true
    agency_type?: true
    voyage_number?: true
    external_code?: true
    comments?: true
    last_port?: true
    next_port?: true
    broker?: true
    boat?: true
    tugs?: true
    garbage?: true
    last_cargoes?: true
    sscec_port?: true
    sscec_exp?: true
    in_marsat_c_number?: true
    master_phone_01?: true
    master_phone_02?: true
    vessel_expert?: true
    vessel_expert_phone01?: true
    vessel_expert_phone02?: true
    vessel_expert_alternate?: true
    vessel_expert_alternate_phone01?: true
    vessel_expert_alternate_phone02?: true
    vessel_operator_phone01?: true
    vessel_operator_phone02?: true
    vessel_operator_city_country?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
  }

  export type ShippingMaxAggregateInputType = {
    id?: true
    status?: true
    owner_head_name?: true
    owner_head_address?: true
    disponent_owner?: true
    charter_name?: true
    master_name?: true
    master_email?: true
    estimated_draft_arrival?: true
    estimated_draft_departure?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_operator?: true
    vessel_operator_email?: true
    operation_type?: true
    agency_type?: true
    voyage_number?: true
    external_code?: true
    comments?: true
    last_port?: true
    next_port?: true
    broker?: true
    boat?: true
    tugs?: true
    garbage?: true
    last_cargoes?: true
    sscec_port?: true
    sscec_exp?: true
    in_marsat_c_number?: true
    master_phone_01?: true
    master_phone_02?: true
    vessel_expert?: true
    vessel_expert_phone01?: true
    vessel_expert_phone02?: true
    vessel_expert_alternate?: true
    vessel_expert_alternate_phone01?: true
    vessel_expert_alternate_phone02?: true
    vessel_operator_phone01?: true
    vessel_operator_phone02?: true
    vessel_operator_city_country?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
  }

  export type ShippingCountAggregateInputType = {
    id?: true
    status?: true
    owner_head_name?: true
    owner_head_address?: true
    disponent_owner?: true
    charter_name?: true
    master_name?: true
    master_email?: true
    estimated_draft_arrival?: true
    estimated_draft_departure?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_operator?: true
    vessel_operator_email?: true
    operation_type?: true
    agency_type?: true
    voyage_number?: true
    external_code?: true
    comments?: true
    last_port?: true
    next_port?: true
    broker?: true
    boat?: true
    tugs?: true
    garbage?: true
    last_cargoes?: true
    sscec_port?: true
    sscec_exp?: true
    in_marsat_c_number?: true
    master_phone_01?: true
    master_phone_02?: true
    vessel_expert?: true
    vessel_expert_phone01?: true
    vessel_expert_phone02?: true
    vessel_expert_alternate?: true
    vessel_expert_alternate_phone01?: true
    vessel_expert_alternate_phone02?: true
    vessel_operator_phone01?: true
    vessel_operator_phone02?: true
    vessel_operator_city_country?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
    _all?: true
  }

  export type ShippingAggregateArgs = {
    /**
     * Filter which Shipping to aggregate.
     * 
    **/
    where?: ShippingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shippings to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ShippingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shippings from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shippings.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Shippings
    **/
    _count?: true | ShippingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingMaxAggregateInputType
  }

  export type GetShippingAggregateType<T extends ShippingAggregateArgs> = {
        [P in keyof T & keyof AggregateShipping]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipping[P]>
      : GetScalarType<T[P], AggregateShipping[P]>
  }




  export type ShippingGroupByArgs = {
    where?: ShippingWhereInput
    orderBy?: Enumerable<ShippingOrderByWithAggregationInput>
    by: Array<ShippingScalarFieldEnum>
    having?: ShippingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingCountAggregateInputType | true
    _avg?: ShippingAvgAggregateInputType
    _sum?: ShippingSumAggregateInputType
    _min?: ShippingMinAggregateInputType
    _max?: ShippingMaxAggregateInputType
  }


  export type ShippingGroupByOutputType = {
    id: number
    status: string | null
    owner_head_name: string | null
    owner_head_address: string | null
    disponent_owner: string | null
    charter_name: string | null
    master_name: string | null
    master_email: string | null
    estimated_draft_arrival: string | null
    estimated_draft_departure: string | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_operator: string | null
    vessel_operator_email: string | null
    operation_type: string | null
    agency_type: string | null
    voyage_number: string | null
    external_code: string | null
    comments: string | null
    last_port: string | null
    next_port: string | null
    broker: string | null
    boat: string | null
    tugs: string | null
    garbage: string | null
    last_cargoes: string | null
    sscec_port: string | null
    sscec_exp: string | null
    in_marsat_c_number: string | null
    master_phone_01: string | null
    master_phone_02: string | null
    vessel_expert: string | null
    vessel_expert_phone01: string | null
    vessel_expert_phone02: string | null
    vessel_expert_alternate: string | null
    vessel_expert_alternate_phone01: string | null
    vessel_expert_alternate_phone02: string | null
    vessel_operator_phone01: string | null
    vessel_operator_phone02: string | null
    vessel_operator_city_country: string | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
    _count: ShippingCountAggregateOutputType | null
    _avg: ShippingAvgAggregateOutputType | null
    _sum: ShippingSumAggregateOutputType | null
    _min: ShippingMinAggregateOutputType | null
    _max: ShippingMaxAggregateOutputType | null
  }

  type GetShippingGroupByPayload<T extends ShippingGroupByArgs> = Promise<
    Array<
      PickArray<ShippingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingGroupByOutputType[P]>
        }
      >
    >


  export type ShippingSelect = {
    id?: boolean
    status?: boolean
    owner_head_name?: boolean
    owner_head_address?: boolean
    disponent_owner?: boolean
    charter_name?: boolean
    master_name?: boolean
    master_email?: boolean
    estimated_draft_arrival?: boolean
    estimated_draft_departure?: boolean
    arrival_draft?: boolean
    depart_draft?: boolean
    vessel_operator?: boolean
    vessel_operator_email?: boolean
    operation_type?: boolean
    agency_type?: boolean
    voyage_number?: boolean
    external_code?: boolean
    comments?: boolean
    last_port?: boolean
    next_port?: boolean
    broker?: boolean
    boat?: boolean
    tugs?: boolean
    garbage?: boolean
    last_cargoes?: boolean
    sscec_port?: boolean
    sscec_exp?: boolean
    in_marsat_c_number?: boolean
    master_phone_01?: boolean
    master_phone_02?: boolean
    vessel_expert?: boolean
    vessel_expert_phone01?: boolean
    vessel_expert_phone02?: boolean
    vessel_expert_alternate?: boolean
    vessel_expert_alternate_phone01?: boolean
    vessel_expert_alternate_phone02?: boolean
    vessel_operator_phone01?: boolean
    vessel_operator_phone02?: boolean
    vessel_operator_city_country?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    vessel_id?: boolean
    user_id?: boolean
    total_load_expected?: boolean
    total_load_actual?: boolean
    users?: boolean | usersArgs
    vessel?: boolean | VesselArgs
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    shipping_files?: boolean | shipping_filesFindManyArgs
    shipping_ports?: boolean | shipping_portsFindManyArgs
    shipping_products?: boolean | shipping_productsFindManyArgs
    subsets?: boolean | subsetsFindManyArgs
    inquires?: boolean | inquiresFindManyArgs
    ShippingChecklistItem?: boolean | ShippingChecklistItemFindManyArgs
    _count?: boolean | ShippingCountOutputTypeArgs
  }

  export type ShippingInclude = {
    users?: boolean | usersArgs
    vessel?: boolean | VesselArgs
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    shipping_files?: boolean | shipping_filesFindManyArgs
    shipping_ports?: boolean | shipping_portsFindManyArgs
    shipping_products?: boolean | shipping_productsFindManyArgs
    subsets?: boolean | subsetsFindManyArgs
    inquires?: boolean | inquiresFindManyArgs
    ShippingChecklistItem?: boolean | ShippingChecklistItemFindManyArgs
    _count?: boolean | ShippingCountOutputTypeArgs
  }

  export type ShippingGetPayload<
    S extends boolean | null | undefined | ShippingArgs,
    U = keyof S
      > = S extends true
        ? Shipping
    : S extends undefined
    ? never
    : S extends ShippingArgs | ShippingFindManyArgs
    ?'include' extends U
    ? Shipping  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'users'
        ? usersGetPayload<S['include'][P]> | null :
        P extends 'vessel'
        ? VesselGetPayload<S['include'][P]> | null :
        P extends 'shipping_documents'
        ? Array < shipping_documentsGetPayload<S['include'][P]>>  :
        P extends 'shipping_files'
        ? Array < shipping_filesGetPayload<S['include'][P]>>  :
        P extends 'shipping_ports'
        ? Array < shipping_portsGetPayload<S['include'][P]>>  :
        P extends 'shipping_products'
        ? Array < shipping_productsGetPayload<S['include'][P]>>  :
        P extends 'subsets'
        ? Array < subsetsGetPayload<S['include'][P]>>  :
        P extends 'inquires'
        ? Array < inquiresGetPayload<S['include'][P]>>  :
        P extends 'ShippingChecklistItem'
        ? Array < ShippingChecklistItemGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? ShippingCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Shipping ?Shipping [P]
  : 
          P extends 'users'
        ? usersGetPayload<S['select'][P]> | null :
        P extends 'vessel'
        ? VesselGetPayload<S['select'][P]> | null :
        P extends 'shipping_documents'
        ? Array < shipping_documentsGetPayload<S['select'][P]>>  :
        P extends 'shipping_files'
        ? Array < shipping_filesGetPayload<S['select'][P]>>  :
        P extends 'shipping_ports'
        ? Array < shipping_portsGetPayload<S['select'][P]>>  :
        P extends 'shipping_products'
        ? Array < shipping_productsGetPayload<S['select'][P]>>  :
        P extends 'subsets'
        ? Array < subsetsGetPayload<S['select'][P]>>  :
        P extends 'inquires'
        ? Array < inquiresGetPayload<S['select'][P]>>  :
        P extends 'ShippingChecklistItem'
        ? Array < ShippingChecklistItemGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? ShippingCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : Shipping
  : Shipping


  type ShippingCountArgs = Merge<
    Omit<ShippingFindManyArgs, 'select' | 'include'> & {
      select?: ShippingCountAggregateInputType | true
    }
  >

  export interface ShippingDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Shipping that matches the filter.
     * @param {ShippingFindUniqueArgs} args - Arguments to find a Shipping
     * @example
     * // Get one Shipping
     * const shipping = await prisma.shipping.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShippingFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ShippingFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Shipping'> extends True ? CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>> : CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>

    /**
     * Find the first Shipping that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingFindFirstArgs} args - Arguments to find a Shipping
     * @example
     * // Get one Shipping
     * const shipping = await prisma.shipping.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShippingFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ShippingFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Shipping'> extends True ? CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>> : CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>

    /**
     * Find zero or more Shippings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shippings
     * const shippings = await prisma.shipping.findMany()
     * 
     * // Get first 10 Shippings
     * const shippings = await prisma.shipping.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingWithIdOnly = await prisma.shipping.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShippingFindManyArgs>(
      args?: SelectSubset<T, ShippingFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Shipping>>, PrismaPromise<Array<ShippingGetPayload<T>>>>

    /**
     * Create a Shipping.
     * @param {ShippingCreateArgs} args - Arguments to create a Shipping.
     * @example
     * // Create one Shipping
     * const Shipping = await prisma.shipping.create({
     *   data: {
     *     // ... data to create a Shipping
     *   }
     * })
     * 
    **/
    create<T extends ShippingCreateArgs>(
      args: SelectSubset<T, ShippingCreateArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Create many Shippings.
     *     @param {ShippingCreateManyArgs} args - Arguments to create many Shippings.
     *     @example
     *     // Create many Shippings
     *     const shipping = await prisma.shipping.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ShippingCreateManyArgs>(
      args?: SelectSubset<T, ShippingCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Shipping.
     * @param {ShippingDeleteArgs} args - Arguments to delete one Shipping.
     * @example
     * // Delete one Shipping
     * const Shipping = await prisma.shipping.delete({
     *   where: {
     *     // ... filter to delete one Shipping
     *   }
     * })
     * 
    **/
    delete<T extends ShippingDeleteArgs>(
      args: SelectSubset<T, ShippingDeleteArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Update one Shipping.
     * @param {ShippingUpdateArgs} args - Arguments to update one Shipping.
     * @example
     * // Update one Shipping
     * const shipping = await prisma.shipping.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShippingUpdateArgs>(
      args: SelectSubset<T, ShippingUpdateArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Delete zero or more Shippings.
     * @param {ShippingDeleteManyArgs} args - Arguments to filter Shippings to delete.
     * @example
     * // Delete a few Shippings
     * const { count } = await prisma.shipping.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShippingDeleteManyArgs>(
      args?: SelectSubset<T, ShippingDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shippings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shippings
     * const shipping = await prisma.shipping.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShippingUpdateManyArgs>(
      args: SelectSubset<T, ShippingUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Shipping.
     * @param {ShippingUpsertArgs} args - Arguments to update or create a Shipping.
     * @example
     * // Update or create a Shipping
     * const shipping = await prisma.shipping.upsert({
     *   create: {
     *     // ... data to create a Shipping
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipping we want to update
     *   }
     * })
    **/
    upsert<T extends ShippingUpsertArgs>(
      args: SelectSubset<T, ShippingUpsertArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Count the number of Shippings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingCountArgs} args - Arguments to filter Shippings to count.
     * @example
     * // Count the number of Shippings
     * const count = await prisma.shipping.count({
     *   where: {
     *     // ... the filter for the Shippings we want to count
     *   }
     * })
    **/
    count<T extends ShippingCountArgs>(
      args?: Subset<T, ShippingCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingAggregateArgs>(args: Subset<T, ShippingAggregateArgs>): PrismaPromise<GetShippingAggregateType<T>>

    /**
     * Group by Shipping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingGroupByArgs['orderBy'] }
        : { orderBy?: ShippingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for Shipping.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ShippingClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    vessel<T extends VesselArgs = {}>(args?: Subset<T, VesselArgs>): CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>;

    shipping_documents<T extends shipping_documentsFindManyArgs = {}>(args?: Subset<T, shipping_documentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>;

    shipping_files<T extends shipping_filesFindManyArgs = {}>(args?: Subset<T, shipping_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_files>>, PrismaPromise<Array<shipping_filesGetPayload<T>>>>;

    shipping_ports<T extends shipping_portsFindManyArgs = {}>(args?: Subset<T, shipping_portsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_ports>>, PrismaPromise<Array<shipping_portsGetPayload<T>>>>;

    shipping_products<T extends shipping_productsFindManyArgs = {}>(args?: Subset<T, shipping_productsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_products>>, PrismaPromise<Array<shipping_productsGetPayload<T>>>>;

    subsets<T extends subsetsFindManyArgs = {}>(args?: Subset<T, subsetsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<subsets>>, PrismaPromise<Array<subsetsGetPayload<T>>>>;

    inquires<T extends inquiresFindManyArgs = {}>(args?: Subset<T, inquiresFindManyArgs>): CheckSelect<T, PrismaPromise<Array<inquires>>, PrismaPromise<Array<inquiresGetPayload<T>>>>;

    ShippingChecklistItem<T extends ShippingChecklistItemFindManyArgs = {}>(args?: Subset<T, ShippingChecklistItemFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingChecklistItem>>, PrismaPromise<Array<ShippingChecklistItemGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Shipping findUnique
   */
  export type ShippingFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * Throw an Error if a Shipping can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Shipping to fetch.
     * 
    **/
    where: ShippingWhereUniqueInput
  }


  /**
   * Shipping findFirst
   */
  export type ShippingFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * Throw an Error if a Shipping can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Shipping to fetch.
     * 
    **/
    where?: ShippingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shippings to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Shippings.
     * 
    **/
    cursor?: ShippingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shippings from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shippings.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Shippings.
     * 
    **/
    distinct?: Enumerable<ShippingScalarFieldEnum>
  }


  /**
   * Shipping findMany
   */
  export type ShippingFindManyArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * Filter, which Shippings to fetch.
     * 
    **/
    where?: ShippingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shippings to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Shippings.
     * 
    **/
    cursor?: ShippingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shippings from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shippings.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ShippingScalarFieldEnum>
  }


  /**
   * Shipping create
   */
  export type ShippingCreateArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * The data needed to create a Shipping.
     * 
    **/
    data: XOR<ShippingCreateInput, ShippingUncheckedCreateInput>
  }


  /**
   * Shipping createMany
   */
  export type ShippingCreateManyArgs = {
    data: Enumerable<ShippingCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Shipping update
   */
  export type ShippingUpdateArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * The data needed to update a Shipping.
     * 
    **/
    data: XOR<ShippingUpdateInput, ShippingUncheckedUpdateInput>
    /**
     * Choose, which Shipping to update.
     * 
    **/
    where: ShippingWhereUniqueInput
  }


  /**
   * Shipping updateMany
   */
  export type ShippingUpdateManyArgs = {
    data: XOR<ShippingUpdateManyMutationInput, ShippingUncheckedUpdateManyInput>
    where?: ShippingWhereInput
  }


  /**
   * Shipping upsert
   */
  export type ShippingUpsertArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * The filter to search for the Shipping to update in case it exists.
     * 
    **/
    where: ShippingWhereUniqueInput
    /**
     * In case the Shipping found by the `where` argument doesn't exist, create a new Shipping with this data.
     * 
    **/
    create: XOR<ShippingCreateInput, ShippingUncheckedCreateInput>
    /**
     * In case the Shipping was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ShippingUpdateInput, ShippingUncheckedUpdateInput>
  }


  /**
   * Shipping delete
   */
  export type ShippingDeleteArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * Filter which Shipping to delete.
     * 
    **/
    where: ShippingWhereUniqueInput
  }


  /**
   * Shipping deleteMany
   */
  export type ShippingDeleteManyArgs = {
    where?: ShippingWhereInput
  }


  /**
   * Shipping without action
   */
  export type ShippingArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
  }



  /**
   * Model subsets
   */


  export type AggregateSubsets = {
    _count: SubsetsCountAggregateOutputType | null
    _avg: SubsetsAvgAggregateOutputType | null
    _sum: SubsetsSumAggregateOutputType | null
    _min: SubsetsMinAggregateOutputType | null
    _max: SubsetsMaxAggregateOutputType | null
  }

  export type SubsetsAvgAggregateOutputType = {
    id: number | null
    shippingId: number | null
  }

  export type SubsetsSumAggregateOutputType = {
    id: number | null
    shippingId: number | null
  }

  export type SubsetsMinAggregateOutputType = {
    id: number | null
    name: string | null
    shippingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type SubsetsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    shippingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type SubsetsCountAggregateOutputType = {
    id: number
    name: number
    shippingId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type SubsetsAvgAggregateInputType = {
    id?: true
    shippingId?: true
  }

  export type SubsetsSumAggregateInputType = {
    id?: true
    shippingId?: true
  }

  export type SubsetsMinAggregateInputType = {
    id?: true
    name?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type SubsetsMaxAggregateInputType = {
    id?: true
    name?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type SubsetsCountAggregateInputType = {
    id?: true
    name?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type SubsetsAggregateArgs = {
    /**
     * Filter which subsets to aggregate.
     * 
    **/
    where?: subsetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subsets to fetch.
     * 
    **/
    orderBy?: Enumerable<subsetsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: subsetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subsets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subsets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned subsets
    **/
    _count?: true | SubsetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubsetsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubsetsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubsetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubsetsMaxAggregateInputType
  }

  export type GetSubsetsAggregateType<T extends SubsetsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubsets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubsets[P]>
      : GetScalarType<T[P], AggregateSubsets[P]>
  }




  export type SubsetsGroupByArgs = {
    where?: subsetsWhereInput
    orderBy?: Enumerable<subsetsOrderByWithAggregationInput>
    by: Array<SubsetsScalarFieldEnum>
    having?: subsetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubsetsCountAggregateInputType | true
    _avg?: SubsetsAvgAggregateInputType
    _sum?: SubsetsSumAggregateInputType
    _min?: SubsetsMinAggregateInputType
    _max?: SubsetsMaxAggregateInputType
  }


  export type SubsetsGroupByOutputType = {
    id: number
    name: string | null
    shippingId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: SubsetsCountAggregateOutputType | null
    _avg: SubsetsAvgAggregateOutputType | null
    _sum: SubsetsSumAggregateOutputType | null
    _min: SubsetsMinAggregateOutputType | null
    _max: SubsetsMaxAggregateOutputType | null
  }

  type GetSubsetsGroupByPayload<T extends SubsetsGroupByArgs> = Promise<
    Array<
      PickArray<SubsetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubsetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubsetsGroupByOutputType[P]>
            : GetScalarType<T[P], SubsetsGroupByOutputType[P]>
        }
      >
    >


  export type subsetsSelect = {
    id?: boolean
    name?: boolean
    shippingId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    shippings?: boolean | ShippingArgs
  }

  export type subsetsInclude = {
    shippings?: boolean | ShippingArgs
  }

  export type subsetsGetPayload<
    S extends boolean | null | undefined | subsetsArgs,
    U = keyof S
      > = S extends true
        ? subsets
    : S extends undefined
    ? never
    : S extends subsetsArgs | subsetsFindManyArgs
    ?'include' extends U
    ? subsets  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'shippings'
        ? ShippingGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof subsets ?subsets [P]
  : 
          P extends 'shippings'
        ? ShippingGetPayload<S['select'][P]> | null : never
  } 
    : subsets
  : subsets


  type subsetsCountArgs = Merge<
    Omit<subsetsFindManyArgs, 'select' | 'include'> & {
      select?: SubsetsCountAggregateInputType | true
    }
  >

  export interface subsetsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Subsets that matches the filter.
     * @param {subsetsFindUniqueArgs} args - Arguments to find a Subsets
     * @example
     * // Get one Subsets
     * const subsets = await prisma.subsets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends subsetsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, subsetsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'subsets'> extends True ? CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>> : CheckSelect<T, Prisma__subsetsClient<subsets | null >, Prisma__subsetsClient<subsetsGetPayload<T> | null >>

    /**
     * Find the first Subsets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subsetsFindFirstArgs} args - Arguments to find a Subsets
     * @example
     * // Get one Subsets
     * const subsets = await prisma.subsets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends subsetsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, subsetsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'subsets'> extends True ? CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>> : CheckSelect<T, Prisma__subsetsClient<subsets | null >, Prisma__subsetsClient<subsetsGetPayload<T> | null >>

    /**
     * Find zero or more Subsets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subsetsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subsets
     * const subsets = await prisma.subsets.findMany()
     * 
     * // Get first 10 Subsets
     * const subsets = await prisma.subsets.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subsetsWithIdOnly = await prisma.subsets.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends subsetsFindManyArgs>(
      args?: SelectSubset<T, subsetsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<subsets>>, PrismaPromise<Array<subsetsGetPayload<T>>>>

    /**
     * Create a Subsets.
     * @param {subsetsCreateArgs} args - Arguments to create a Subsets.
     * @example
     * // Create one Subsets
     * const Subsets = await prisma.subsets.create({
     *   data: {
     *     // ... data to create a Subsets
     *   }
     * })
     * 
    **/
    create<T extends subsetsCreateArgs>(
      args: SelectSubset<T, subsetsCreateArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Create many Subsets.
     *     @param {subsetsCreateManyArgs} args - Arguments to create many Subsets.
     *     @example
     *     // Create many Subsets
     *     const subsets = await prisma.subsets.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends subsetsCreateManyArgs>(
      args?: SelectSubset<T, subsetsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Subsets.
     * @param {subsetsDeleteArgs} args - Arguments to delete one Subsets.
     * @example
     * // Delete one Subsets
     * const Subsets = await prisma.subsets.delete({
     *   where: {
     *     // ... filter to delete one Subsets
     *   }
     * })
     * 
    **/
    delete<T extends subsetsDeleteArgs>(
      args: SelectSubset<T, subsetsDeleteArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Update one Subsets.
     * @param {subsetsUpdateArgs} args - Arguments to update one Subsets.
     * @example
     * // Update one Subsets
     * const subsets = await prisma.subsets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends subsetsUpdateArgs>(
      args: SelectSubset<T, subsetsUpdateArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Delete zero or more Subsets.
     * @param {subsetsDeleteManyArgs} args - Arguments to filter Subsets to delete.
     * @example
     * // Delete a few Subsets
     * const { count } = await prisma.subsets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends subsetsDeleteManyArgs>(
      args?: SelectSubset<T, subsetsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subsets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subsetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subsets
     * const subsets = await prisma.subsets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends subsetsUpdateManyArgs>(
      args: SelectSubset<T, subsetsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Subsets.
     * @param {subsetsUpsertArgs} args - Arguments to update or create a Subsets.
     * @example
     * // Update or create a Subsets
     * const subsets = await prisma.subsets.upsert({
     *   create: {
     *     // ... data to create a Subsets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subsets we want to update
     *   }
     * })
    **/
    upsert<T extends subsetsUpsertArgs>(
      args: SelectSubset<T, subsetsUpsertArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Count the number of Subsets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subsetsCountArgs} args - Arguments to filter Subsets to count.
     * @example
     * // Count the number of Subsets
     * const count = await prisma.subsets.count({
     *   where: {
     *     // ... the filter for the Subsets we want to count
     *   }
     * })
    **/
    count<T extends subsetsCountArgs>(
      args?: Subset<T, subsetsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubsetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subsets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubsetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubsetsAggregateArgs>(args: Subset<T, SubsetsAggregateArgs>): PrismaPromise<GetSubsetsAggregateType<T>>

    /**
     * Group by Subsets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubsetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubsetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubsetsGroupByArgs['orderBy'] }
        : { orderBy?: SubsetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubsetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubsetsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for subsets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__subsetsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * subsets findUnique
   */
  export type subsetsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * Throw an Error if a subsets can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which subsets to fetch.
     * 
    **/
    where: subsetsWhereUniqueInput
  }


  /**
   * subsets findFirst
   */
  export type subsetsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * Throw an Error if a subsets can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which subsets to fetch.
     * 
    **/
    where?: subsetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subsets to fetch.
     * 
    **/
    orderBy?: Enumerable<subsetsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subsets.
     * 
    **/
    cursor?: subsetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subsets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subsets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subsets.
     * 
    **/
    distinct?: Enumerable<SubsetsScalarFieldEnum>
  }


  /**
   * subsets findMany
   */
  export type subsetsFindManyArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * Filter, which subsets to fetch.
     * 
    **/
    where?: subsetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subsets to fetch.
     * 
    **/
    orderBy?: Enumerable<subsetsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing subsets.
     * 
    **/
    cursor?: subsetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subsets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subsets.
     * 
    **/
    skip?: number
    distinct?: Enumerable<SubsetsScalarFieldEnum>
  }


  /**
   * subsets create
   */
  export type subsetsCreateArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * The data needed to create a subsets.
     * 
    **/
    data: XOR<subsetsCreateInput, subsetsUncheckedCreateInput>
  }


  /**
   * subsets createMany
   */
  export type subsetsCreateManyArgs = {
    data: Enumerable<subsetsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * subsets update
   */
  export type subsetsUpdateArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * The data needed to update a subsets.
     * 
    **/
    data: XOR<subsetsUpdateInput, subsetsUncheckedUpdateInput>
    /**
     * Choose, which subsets to update.
     * 
    **/
    where: subsetsWhereUniqueInput
  }


  /**
   * subsets updateMany
   */
  export type subsetsUpdateManyArgs = {
    data: XOR<subsetsUpdateManyMutationInput, subsetsUncheckedUpdateManyInput>
    where?: subsetsWhereInput
  }


  /**
   * subsets upsert
   */
  export type subsetsUpsertArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * The filter to search for the subsets to update in case it exists.
     * 
    **/
    where: subsetsWhereUniqueInput
    /**
     * In case the subsets found by the `where` argument doesn't exist, create a new subsets with this data.
     * 
    **/
    create: XOR<subsetsCreateInput, subsetsUncheckedCreateInput>
    /**
     * In case the subsets was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<subsetsUpdateInput, subsetsUncheckedUpdateInput>
  }


  /**
   * subsets delete
   */
  export type subsetsDeleteArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * Filter which subsets to delete.
     * 
    **/
    where: subsetsWhereUniqueInput
  }


  /**
   * subsets deleteMany
   */
  export type subsetsDeleteManyArgs = {
    where?: subsetsWhereInput
  }


  /**
   * subsets without action
   */
  export type subsetsArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
  }



  /**
   * Model user_files
   */


  export type AggregateUser_files = {
    _count: User_filesCountAggregateOutputType | null
    _avg: User_filesAvgAggregateOutputType | null
    _sum: User_filesSumAggregateOutputType | null
    _min: User_filesMinAggregateOutputType | null
    _max: User_filesMaxAggregateOutputType | null
  }

  export type User_filesAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type User_filesSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type User_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type User_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type User_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    userId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type User_filesAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type User_filesSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type User_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type User_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type User_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type User_filesAggregateArgs = {
    /**
     * Filter which user_files to aggregate.
     * 
    **/
    where?: user_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_files to fetch.
     * 
    **/
    orderBy?: Enumerable<user_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: user_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_files
    **/
    _count?: true | User_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_filesMaxAggregateInputType
  }

  export type GetUser_filesAggregateType<T extends User_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_files[P]>
      : GetScalarType<T[P], AggregateUser_files[P]>
  }




  export type User_filesGroupByArgs = {
    where?: user_filesWhereInput
    orderBy?: Enumerable<user_filesOrderByWithAggregationInput>
    by: Array<User_filesScalarFieldEnum>
    having?: user_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_filesCountAggregateInputType | true
    _avg?: User_filesAvgAggregateInputType
    _sum?: User_filesSumAggregateInputType
    _min?: User_filesMinAggregateInputType
    _max?: User_filesMaxAggregateInputType
  }


  export type User_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    userId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: User_filesCountAggregateOutputType | null
    _avg: User_filesAvgAggregateOutputType | null
    _sum: User_filesSumAggregateOutputType | null
    _min: User_filesMinAggregateOutputType | null
    _max: User_filesMaxAggregateOutputType | null
  }

  type GetUser_filesGroupByPayload<T extends User_filesGroupByArgs> = Promise<
    Array<
      PickArray<User_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_filesGroupByOutputType[P]>
            : GetScalarType<T[P], User_filesGroupByOutputType[P]>
        }
      >
    >


  export type user_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    users?: boolean | usersArgs
  }

  export type user_filesInclude = {
    users?: boolean | usersArgs
  }

  export type user_filesGetPayload<
    S extends boolean | null | undefined | user_filesArgs,
    U = keyof S
      > = S extends true
        ? user_files
    : S extends undefined
    ? never
    : S extends user_filesArgs | user_filesFindManyArgs
    ?'include' extends U
    ? user_files  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof user_files ?user_files [P]
  : 
          P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : user_files
  : user_files


  type user_filesCountArgs = Merge<
    Omit<user_filesFindManyArgs, 'select' | 'include'> & {
      select?: User_filesCountAggregateInputType | true
    }
  >

  export interface user_filesDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one User_files that matches the filter.
     * @param {user_filesFindUniqueArgs} args - Arguments to find a User_files
     * @example
     * // Get one User_files
     * const user_files = await prisma.user_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends user_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, user_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'user_files'> extends True ? CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>> : CheckSelect<T, Prisma__user_filesClient<user_files | null >, Prisma__user_filesClient<user_filesGetPayload<T> | null >>

    /**
     * Find the first User_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_filesFindFirstArgs} args - Arguments to find a User_files
     * @example
     * // Get one User_files
     * const user_files = await prisma.user_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends user_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, user_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'user_files'> extends True ? CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>> : CheckSelect<T, Prisma__user_filesClient<user_files | null >, Prisma__user_filesClient<user_filesGetPayload<T> | null >>

    /**
     * Find zero or more User_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_files
     * const user_files = await prisma.user_files.findMany()
     * 
     * // Get first 10 User_files
     * const user_files = await prisma.user_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_filesWithIdOnly = await prisma.user_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends user_filesFindManyArgs>(
      args?: SelectSubset<T, user_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<user_files>>, PrismaPromise<Array<user_filesGetPayload<T>>>>

    /**
     * Create a User_files.
     * @param {user_filesCreateArgs} args - Arguments to create a User_files.
     * @example
     * // Create one User_files
     * const User_files = await prisma.user_files.create({
     *   data: {
     *     // ... data to create a User_files
     *   }
     * })
     * 
    **/
    create<T extends user_filesCreateArgs>(
      args: SelectSubset<T, user_filesCreateArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Create many User_files.
     *     @param {user_filesCreateManyArgs} args - Arguments to create many User_files.
     *     @example
     *     // Create many User_files
     *     const user_files = await prisma.user_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends user_filesCreateManyArgs>(
      args?: SelectSubset<T, user_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a User_files.
     * @param {user_filesDeleteArgs} args - Arguments to delete one User_files.
     * @example
     * // Delete one User_files
     * const User_files = await prisma.user_files.delete({
     *   where: {
     *     // ... filter to delete one User_files
     *   }
     * })
     * 
    **/
    delete<T extends user_filesDeleteArgs>(
      args: SelectSubset<T, user_filesDeleteArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Update one User_files.
     * @param {user_filesUpdateArgs} args - Arguments to update one User_files.
     * @example
     * // Update one User_files
     * const user_files = await prisma.user_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends user_filesUpdateArgs>(
      args: SelectSubset<T, user_filesUpdateArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Delete zero or more User_files.
     * @param {user_filesDeleteManyArgs} args - Arguments to filter User_files to delete.
     * @example
     * // Delete a few User_files
     * const { count } = await prisma.user_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends user_filesDeleteManyArgs>(
      args?: SelectSubset<T, user_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_files
     * const user_files = await prisma.user_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends user_filesUpdateManyArgs>(
      args: SelectSubset<T, user_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one User_files.
     * @param {user_filesUpsertArgs} args - Arguments to update or create a User_files.
     * @example
     * // Update or create a User_files
     * const user_files = await prisma.user_files.upsert({
     *   create: {
     *     // ... data to create a User_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_files we want to update
     *   }
     * })
    **/
    upsert<T extends user_filesUpsertArgs>(
      args: SelectSubset<T, user_filesUpsertArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Count the number of User_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_filesCountArgs} args - Arguments to filter User_files to count.
     * @example
     * // Count the number of User_files
     * const count = await prisma.user_files.count({
     *   where: {
     *     // ... the filter for the User_files we want to count
     *   }
     * })
    **/
    count<T extends user_filesCountArgs>(
      args?: Subset<T, user_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_filesAggregateArgs>(args: Subset<T, User_filesAggregateArgs>): PrismaPromise<GetUser_filesAggregateType<T>>

    /**
     * Group by User_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends User_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: User_filesGroupByArgs['orderBy'] }
        : { orderBy?: User_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, User_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_filesGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__user_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * user_files findUnique
   */
  export type user_filesFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * Throw an Error if a user_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which user_files to fetch.
     * 
    **/
    where: user_filesWhereUniqueInput
  }


  /**
   * user_files findFirst
   */
  export type user_filesFindFirstArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * Throw an Error if a user_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which user_files to fetch.
     * 
    **/
    where?: user_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_files to fetch.
     * 
    **/
    orderBy?: Enumerable<user_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_files.
     * 
    **/
    cursor?: user_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_files.
     * 
    **/
    distinct?: Enumerable<User_filesScalarFieldEnum>
  }


  /**
   * user_files findMany
   */
  export type user_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * Filter, which user_files to fetch.
     * 
    **/
    where?: user_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_files to fetch.
     * 
    **/
    orderBy?: Enumerable<user_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_files.
     * 
    **/
    cursor?: user_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<User_filesScalarFieldEnum>
  }


  /**
   * user_files create
   */
  export type user_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * The data needed to create a user_files.
     * 
    **/
    data: XOR<user_filesCreateInput, user_filesUncheckedCreateInput>
  }


  /**
   * user_files createMany
   */
  export type user_filesCreateManyArgs = {
    data: Enumerable<user_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * user_files update
   */
  export type user_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * The data needed to update a user_files.
     * 
    **/
    data: XOR<user_filesUpdateInput, user_filesUncheckedUpdateInput>
    /**
     * Choose, which user_files to update.
     * 
    **/
    where: user_filesWhereUniqueInput
  }


  /**
   * user_files updateMany
   */
  export type user_filesUpdateManyArgs = {
    data: XOR<user_filesUpdateManyMutationInput, user_filesUncheckedUpdateManyInput>
    where?: user_filesWhereInput
  }


  /**
   * user_files upsert
   */
  export type user_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * The filter to search for the user_files to update in case it exists.
     * 
    **/
    where: user_filesWhereUniqueInput
    /**
     * In case the user_files found by the `where` argument doesn't exist, create a new user_files with this data.
     * 
    **/
    create: XOR<user_filesCreateInput, user_filesUncheckedCreateInput>
    /**
     * In case the user_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<user_filesUpdateInput, user_filesUncheckedUpdateInput>
  }


  /**
   * user_files delete
   */
  export type user_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * Filter which user_files to delete.
     * 
    **/
    where: user_filesWhereUniqueInput
  }


  /**
   * user_files deleteMany
   */
  export type user_filesDeleteManyArgs = {
    where?: user_filesWhereInput
  }


  /**
   * user_files without action
   */
  export type user_filesArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
  }



  /**
   * Model users
   */


  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type UsersAggregateArgs = {
    /**
     * Filter which users to aggregate.
     * 
    **/
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     * 
    **/
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs = {
    where?: usersWhereInput
    orderBy?: Enumerable<usersOrderByWithAggregationInput>
    by: Array<UsersScalarFieldEnum>
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }


  export type UsersGroupByOutputType = {
    id: number
    name: string | null
    email: string | null
    password: string | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Promise<
    Array<
      PickArray<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    shipping_files?: boolean | shipping_filesFindManyArgs
    shippings?: boolean | ShippingFindManyArgs
    user_files?: boolean | user_filesFindManyArgs
    inquires?: boolean | inquiresFindManyArgs
    inquires_comments?: boolean | inquires_commentsFindManyArgs
    ShippingChecklistItem?: boolean | ShippingChecklistItemFindManyArgs
    group_emails?: boolean | group_emailsFindManyArgs
    port_files?: boolean | port_filesFindManyArgs
    vessel_files?: boolean | vessel_filesFindManyArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }

  export type usersInclude = {
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    shipping_files?: boolean | shipping_filesFindManyArgs
    shippings?: boolean | ShippingFindManyArgs
    user_files?: boolean | user_filesFindManyArgs
    inquires?: boolean | inquiresFindManyArgs
    inquires_comments?: boolean | inquires_commentsFindManyArgs
    ShippingChecklistItem?: boolean | ShippingChecklistItemFindManyArgs
    group_emails?: boolean | group_emailsFindManyArgs
    port_files?: boolean | port_filesFindManyArgs
    vessel_files?: boolean | vessel_filesFindManyArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }

  export type usersGetPayload<
    S extends boolean | null | undefined | usersArgs,
    U = keyof S
      > = S extends true
        ? users
    : S extends undefined
    ? never
    : S extends usersArgs | usersFindManyArgs
    ?'include' extends U
    ? users  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'shipping_documents'
        ? Array < shipping_documentsGetPayload<S['include'][P]>>  :
        P extends 'shipping_files'
        ? Array < shipping_filesGetPayload<S['include'][P]>>  :
        P extends 'shippings'
        ? Array < ShippingGetPayload<S['include'][P]>>  :
        P extends 'user_files'
        ? Array < user_filesGetPayload<S['include'][P]>>  :
        P extends 'inquires'
        ? Array < inquiresGetPayload<S['include'][P]>>  :
        P extends 'inquires_comments'
        ? Array < inquires_commentsGetPayload<S['include'][P]>>  :
        P extends 'ShippingChecklistItem'
        ? Array < ShippingChecklistItemGetPayload<S['include'][P]>>  :
        P extends 'group_emails'
        ? Array < group_emailsGetPayload<S['include'][P]>>  :
        P extends 'port_files'
        ? Array < port_filesGetPayload<S['include'][P]>>  :
        P extends 'vessel_files'
        ? Array < vessel_filesGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? UsersCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof users ?users [P]
  : 
          P extends 'shipping_documents'
        ? Array < shipping_documentsGetPayload<S['select'][P]>>  :
        P extends 'shipping_files'
        ? Array < shipping_filesGetPayload<S['select'][P]>>  :
        P extends 'shippings'
        ? Array < ShippingGetPayload<S['select'][P]>>  :
        P extends 'user_files'
        ? Array < user_filesGetPayload<S['select'][P]>>  :
        P extends 'inquires'
        ? Array < inquiresGetPayload<S['select'][P]>>  :
        P extends 'inquires_comments'
        ? Array < inquires_commentsGetPayload<S['select'][P]>>  :
        P extends 'ShippingChecklistItem'
        ? Array < ShippingChecklistItemGetPayload<S['select'][P]>>  :
        P extends 'group_emails'
        ? Array < group_emailsGetPayload<S['select'][P]>>  :
        P extends 'port_files'
        ? Array < port_filesGetPayload<S['select'][P]>>  :
        P extends 'vessel_files'
        ? Array < vessel_filesGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? UsersCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : users
  : users


  type usersCountArgs = Merge<
    Omit<usersFindManyArgs, 'select' | 'include'> & {
      select?: UsersCountAggregateInputType | true
    }
  >

  export interface usersDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'users'> extends True ? CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>> : CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'users'> extends True ? CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>> : CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs>(
      args?: SelectSubset<T, usersFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<users>>, PrismaPromise<Array<usersGetPayload<T>>>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs>(
      args: SelectSubset<T, usersCreateArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs>(
      args?: SelectSubset<T, usersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs>(
      args: SelectSubset<T, usersDeleteArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs>(
      args: SelectSubset<T, usersUpdateArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs>(
      args?: SelectSubset<T, usersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs>(
      args: SelectSubset<T, usersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs>(
      args: SelectSubset<T, usersUpsertArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__usersClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shipping_documents<T extends shipping_documentsFindManyArgs = {}>(args?: Subset<T, shipping_documentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>;

    shipping_files<T extends shipping_filesFindManyArgs = {}>(args?: Subset<T, shipping_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_files>>, PrismaPromise<Array<shipping_filesGetPayload<T>>>>;

    shippings<T extends ShippingFindManyArgs = {}>(args?: Subset<T, ShippingFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Shipping>>, PrismaPromise<Array<ShippingGetPayload<T>>>>;

    user_files<T extends user_filesFindManyArgs = {}>(args?: Subset<T, user_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<user_files>>, PrismaPromise<Array<user_filesGetPayload<T>>>>;

    inquires<T extends inquiresFindManyArgs = {}>(args?: Subset<T, inquiresFindManyArgs>): CheckSelect<T, PrismaPromise<Array<inquires>>, PrismaPromise<Array<inquiresGetPayload<T>>>>;

    inquires_comments<T extends inquires_commentsFindManyArgs = {}>(args?: Subset<T, inquires_commentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<inquires_comments>>, PrismaPromise<Array<inquires_commentsGetPayload<T>>>>;

    ShippingChecklistItem<T extends ShippingChecklistItemFindManyArgs = {}>(args?: Subset<T, ShippingChecklistItemFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingChecklistItem>>, PrismaPromise<Array<ShippingChecklistItemGetPayload<T>>>>;

    group_emails<T extends group_emailsFindManyArgs = {}>(args?: Subset<T, group_emailsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<group_emails>>, PrismaPromise<Array<group_emailsGetPayload<T>>>>;

    port_files<T extends port_filesFindManyArgs = {}>(args?: Subset<T, port_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<port_files>>, PrismaPromise<Array<port_filesGetPayload<T>>>>;

    vessel_files<T extends vessel_filesFindManyArgs = {}>(args?: Subset<T, vessel_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<vessel_files>>, PrismaPromise<Array<vessel_filesGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * users findUnique
   */
  export type usersFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Throw an Error if a users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which users to fetch.
     * 
    **/
    where: usersWhereUniqueInput
  }


  /**
   * users findFirst
   */
  export type usersFindFirstArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Throw an Error if a users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which users to fetch.
     * 
    **/
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     * 
    **/
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     * 
    **/
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     * 
    **/
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * users findMany
   */
  export type usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     * 
    **/
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     * 
    **/
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     * 
    **/
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * users create
   */
  export type usersCreateArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * The data needed to create a users.
     * 
    **/
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users createMany
   */
  export type usersCreateManyArgs = {
    data: Enumerable<usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * users update
   */
  export type usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * The data needed to update a users.
     * 
    **/
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     * 
    **/
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs = {
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * The filter to search for the users to update in case it exists.
     * 
    **/
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     * 
    **/
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Filter which users to delete.
     * 
    **/
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs = {
    where?: usersWhereInput
  }


  /**
   * users without action
   */
  export type usersArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
  }



  /**
   * Model vessel_files
   */


  export type AggregateVessel_files = {
    _count: Vessel_filesCountAggregateOutputType | null
    _avg: Vessel_filesAvgAggregateOutputType | null
    _sum: Vessel_filesSumAggregateOutputType | null
    _min: Vessel_filesMinAggregateOutputType | null
    _max: Vessel_filesMaxAggregateOutputType | null
  }

  export type Vessel_filesAvgAggregateOutputType = {
    id: number | null
    vesselId: number | null
    userId: number | null
  }

  export type Vessel_filesSumAggregateOutputType = {
    id: number | null
    vesselId: number | null
    userId: number | null
  }

  export type Vessel_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    vesselId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Vessel_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    vesselId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Vessel_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    vesselId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    userId: number
    _all: number
  }


  export type Vessel_filesAvgAggregateInputType = {
    id?: true
    vesselId?: true
    userId?: true
  }

  export type Vessel_filesSumAggregateInputType = {
    id?: true
    vesselId?: true
    userId?: true
  }

  export type Vessel_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    vesselId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Vessel_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    vesselId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Vessel_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    vesselId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
    _all?: true
  }

  export type Vessel_filesAggregateArgs = {
    /**
     * Filter which vessel_files to aggregate.
     * 
    **/
    where?: vessel_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vessel_files to fetch.
     * 
    **/
    orderBy?: Enumerable<vessel_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: vessel_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vessel_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vessel_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned vessel_files
    **/
    _count?: true | Vessel_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Vessel_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Vessel_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Vessel_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Vessel_filesMaxAggregateInputType
  }

  export type GetVessel_filesAggregateType<T extends Vessel_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateVessel_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVessel_files[P]>
      : GetScalarType<T[P], AggregateVessel_files[P]>
  }




  export type Vessel_filesGroupByArgs = {
    where?: vessel_filesWhereInput
    orderBy?: Enumerable<vessel_filesOrderByWithAggregationInput>
    by: Array<Vessel_filesScalarFieldEnum>
    having?: vessel_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Vessel_filesCountAggregateInputType | true
    _avg?: Vessel_filesAvgAggregateInputType
    _sum?: Vessel_filesSumAggregateInputType
    _min?: Vessel_filesMinAggregateInputType
    _max?: Vessel_filesMaxAggregateInputType
  }


  export type Vessel_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    vesselId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    userId: number | null
    _count: Vessel_filesCountAggregateOutputType | null
    _avg: Vessel_filesAvgAggregateOutputType | null
    _sum: Vessel_filesSumAggregateOutputType | null
    _min: Vessel_filesMinAggregateOutputType | null
    _max: Vessel_filesMaxAggregateOutputType | null
  }

  type GetVessel_filesGroupByPayload<T extends Vessel_filesGroupByArgs> = Promise<
    Array<
      PickArray<Vessel_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Vessel_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Vessel_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Vessel_filesGroupByOutputType[P]>
        }
      >
    >


  export type vessel_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    vesselId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    userId?: boolean
    users?: boolean | usersArgs
    vessels?: boolean | VesselArgs
  }

  export type vessel_filesInclude = {
    users?: boolean | usersArgs
    vessels?: boolean | VesselArgs
  }

  export type vessel_filesGetPayload<
    S extends boolean | null | undefined | vessel_filesArgs,
    U = keyof S
      > = S extends true
        ? vessel_files
    : S extends undefined
    ? never
    : S extends vessel_filesArgs | vessel_filesFindManyArgs
    ?'include' extends U
    ? vessel_files  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'users'
        ? usersGetPayload<S['include'][P]> | null :
        P extends 'vessels'
        ? VesselGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof vessel_files ?vessel_files [P]
  : 
          P extends 'users'
        ? usersGetPayload<S['select'][P]> | null :
        P extends 'vessels'
        ? VesselGetPayload<S['select'][P]> | null : never
  } 
    : vessel_files
  : vessel_files


  type vessel_filesCountArgs = Merge<
    Omit<vessel_filesFindManyArgs, 'select' | 'include'> & {
      select?: Vessel_filesCountAggregateInputType | true
    }
  >

  export interface vessel_filesDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Vessel_files that matches the filter.
     * @param {vessel_filesFindUniqueArgs} args - Arguments to find a Vessel_files
     * @example
     * // Get one Vessel_files
     * const vessel_files = await prisma.vessel_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends vessel_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, vessel_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'vessel_files'> extends True ? CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>> : CheckSelect<T, Prisma__vessel_filesClient<vessel_files | null >, Prisma__vessel_filesClient<vessel_filesGetPayload<T> | null >>

    /**
     * Find the first Vessel_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vessel_filesFindFirstArgs} args - Arguments to find a Vessel_files
     * @example
     * // Get one Vessel_files
     * const vessel_files = await prisma.vessel_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends vessel_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, vessel_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'vessel_files'> extends True ? CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>> : CheckSelect<T, Prisma__vessel_filesClient<vessel_files | null >, Prisma__vessel_filesClient<vessel_filesGetPayload<T> | null >>

    /**
     * Find zero or more Vessel_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vessel_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vessel_files
     * const vessel_files = await prisma.vessel_files.findMany()
     * 
     * // Get first 10 Vessel_files
     * const vessel_files = await prisma.vessel_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vessel_filesWithIdOnly = await prisma.vessel_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends vessel_filesFindManyArgs>(
      args?: SelectSubset<T, vessel_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<vessel_files>>, PrismaPromise<Array<vessel_filesGetPayload<T>>>>

    /**
     * Create a Vessel_files.
     * @param {vessel_filesCreateArgs} args - Arguments to create a Vessel_files.
     * @example
     * // Create one Vessel_files
     * const Vessel_files = await prisma.vessel_files.create({
     *   data: {
     *     // ... data to create a Vessel_files
     *   }
     * })
     * 
    **/
    create<T extends vessel_filesCreateArgs>(
      args: SelectSubset<T, vessel_filesCreateArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Create many Vessel_files.
     *     @param {vessel_filesCreateManyArgs} args - Arguments to create many Vessel_files.
     *     @example
     *     // Create many Vessel_files
     *     const vessel_files = await prisma.vessel_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends vessel_filesCreateManyArgs>(
      args?: SelectSubset<T, vessel_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Vessel_files.
     * @param {vessel_filesDeleteArgs} args - Arguments to delete one Vessel_files.
     * @example
     * // Delete one Vessel_files
     * const Vessel_files = await prisma.vessel_files.delete({
     *   where: {
     *     // ... filter to delete one Vessel_files
     *   }
     * })
     * 
    **/
    delete<T extends vessel_filesDeleteArgs>(
      args: SelectSubset<T, vessel_filesDeleteArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Update one Vessel_files.
     * @param {vessel_filesUpdateArgs} args - Arguments to update one Vessel_files.
     * @example
     * // Update one Vessel_files
     * const vessel_files = await prisma.vessel_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends vessel_filesUpdateArgs>(
      args: SelectSubset<T, vessel_filesUpdateArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Delete zero or more Vessel_files.
     * @param {vessel_filesDeleteManyArgs} args - Arguments to filter Vessel_files to delete.
     * @example
     * // Delete a few Vessel_files
     * const { count } = await prisma.vessel_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends vessel_filesDeleteManyArgs>(
      args?: SelectSubset<T, vessel_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vessel_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vessel_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vessel_files
     * const vessel_files = await prisma.vessel_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends vessel_filesUpdateManyArgs>(
      args: SelectSubset<T, vessel_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Vessel_files.
     * @param {vessel_filesUpsertArgs} args - Arguments to update or create a Vessel_files.
     * @example
     * // Update or create a Vessel_files
     * const vessel_files = await prisma.vessel_files.upsert({
     *   create: {
     *     // ... data to create a Vessel_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vessel_files we want to update
     *   }
     * })
    **/
    upsert<T extends vessel_filesUpsertArgs>(
      args: SelectSubset<T, vessel_filesUpsertArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Count the number of Vessel_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vessel_filesCountArgs} args - Arguments to filter Vessel_files to count.
     * @example
     * // Count the number of Vessel_files
     * const count = await prisma.vessel_files.count({
     *   where: {
     *     // ... the filter for the Vessel_files we want to count
     *   }
     * })
    **/
    count<T extends vessel_filesCountArgs>(
      args?: Subset<T, vessel_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Vessel_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vessel_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Vessel_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Vessel_filesAggregateArgs>(args: Subset<T, Vessel_filesAggregateArgs>): PrismaPromise<GetVessel_filesAggregateType<T>>

    /**
     * Group by Vessel_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Vessel_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Vessel_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Vessel_filesGroupByArgs['orderBy'] }
        : { orderBy?: Vessel_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Vessel_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVessel_filesGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for vessel_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__vessel_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    vessels<T extends VesselArgs = {}>(args?: Subset<T, VesselArgs>): CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * vessel_files findUnique
   */
  export type vessel_filesFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * Throw an Error if a vessel_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which vessel_files to fetch.
     * 
    **/
    where: vessel_filesWhereUniqueInput
  }


  /**
   * vessel_files findFirst
   */
  export type vessel_filesFindFirstArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * Throw an Error if a vessel_files can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which vessel_files to fetch.
     * 
    **/
    where?: vessel_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vessel_files to fetch.
     * 
    **/
    orderBy?: Enumerable<vessel_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vessel_files.
     * 
    **/
    cursor?: vessel_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vessel_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vessel_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vessel_files.
     * 
    **/
    distinct?: Enumerable<Vessel_filesScalarFieldEnum>
  }


  /**
   * vessel_files findMany
   */
  export type vessel_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * Filter, which vessel_files to fetch.
     * 
    **/
    where?: vessel_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vessel_files to fetch.
     * 
    **/
    orderBy?: Enumerable<vessel_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing vessel_files.
     * 
    **/
    cursor?: vessel_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vessel_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vessel_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Vessel_filesScalarFieldEnum>
  }


  /**
   * vessel_files create
   */
  export type vessel_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * The data needed to create a vessel_files.
     * 
    **/
    data: XOR<vessel_filesCreateInput, vessel_filesUncheckedCreateInput>
  }


  /**
   * vessel_files createMany
   */
  export type vessel_filesCreateManyArgs = {
    data: Enumerable<vessel_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * vessel_files update
   */
  export type vessel_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * The data needed to update a vessel_files.
     * 
    **/
    data: XOR<vessel_filesUpdateInput, vessel_filesUncheckedUpdateInput>
    /**
     * Choose, which vessel_files to update.
     * 
    **/
    where: vessel_filesWhereUniqueInput
  }


  /**
   * vessel_files updateMany
   */
  export type vessel_filesUpdateManyArgs = {
    data: XOR<vessel_filesUpdateManyMutationInput, vessel_filesUncheckedUpdateManyInput>
    where?: vessel_filesWhereInput
  }


  /**
   * vessel_files upsert
   */
  export type vessel_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * The filter to search for the vessel_files to update in case it exists.
     * 
    **/
    where: vessel_filesWhereUniqueInput
    /**
     * In case the vessel_files found by the `where` argument doesn't exist, create a new vessel_files with this data.
     * 
    **/
    create: XOR<vessel_filesCreateInput, vessel_filesUncheckedCreateInput>
    /**
     * In case the vessel_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<vessel_filesUpdateInput, vessel_filesUncheckedUpdateInput>
  }


  /**
   * vessel_files delete
   */
  export type vessel_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * Filter which vessel_files to delete.
     * 
    **/
    where: vessel_filesWhereUniqueInput
  }


  /**
   * vessel_files deleteMany
   */
  export type vessel_filesDeleteManyArgs = {
    where?: vessel_filesWhereInput
  }


  /**
   * vessel_files without action
   */
  export type vessel_filesArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
  }



  /**
   * Model Vessel
   */


  export type AggregateVessel = {
    _count: VesselCountAggregateOutputType | null
    _avg: VesselAvgAggregateOutputType | null
    _sum: VesselSumAggregateOutputType | null
    _min: VesselMinAggregateOutputType | null
    _max: VesselMaxAggregateOutputType | null
  }

  export type VesselAvgAggregateOutputType = {
    id: number | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    country_id: number | null
    built_year: number | null
  }

  export type VesselSumAggregateOutputType = {
    id: number | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    country_id: number | null
    built_year: number | null
  }

  export type VesselMinAggregateOutputType = {
    id: number | null
    name: string | null
    imo: string | null
    call_sign: string | null
    satellite_telephone: string | null
    classification_society: string | null
    type: string | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    country_id: number | null
    draft_sw: string | null
    built_year: number | null
  }

  export type VesselMaxAggregateOutputType = {
    id: number | null
    name: string | null
    imo: string | null
    call_sign: string | null
    satellite_telephone: string | null
    classification_society: string | null
    type: string | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    country_id: number | null
    draft_sw: string | null
    built_year: number | null
  }

  export type VesselCountAggregateOutputType = {
    id: number
    name: number
    imo: number
    call_sign: number
    satellite_telephone: number
    classification_society: number
    type: number
    length_overall: number
    dead_weight_tonnage: number
    beam: number
    cubic_meters: number
    gross_tonnage: number
    net_tonnage: number
    panama_gross_tonnage: number
    panama_net_tonnage: number
    suez_gross_tonnage: number
    suez_net_tonnage: number
    reduced_gross_tonnage: number
    length_between_perpendiculars: number
    molded_depth: number
    number_of_holds: number
    number_of_tanks: number
    created_at: number
    updated_at: number
    deleted_at: number
    country_id: number
    draft_sw: number
    built_year: number
    _all: number
  }


  export type VesselAvgAggregateInputType = {
    id?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    country_id?: true
    built_year?: true
  }

  export type VesselSumAggregateInputType = {
    id?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    country_id?: true
    built_year?: true
  }

  export type VesselMinAggregateInputType = {
    id?: true
    name?: true
    imo?: true
    call_sign?: true
    satellite_telephone?: true
    classification_society?: true
    type?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    country_id?: true
    draft_sw?: true
    built_year?: true
  }

  export type VesselMaxAggregateInputType = {
    id?: true
    name?: true
    imo?: true
    call_sign?: true
    satellite_telephone?: true
    classification_society?: true
    type?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    country_id?: true
    draft_sw?: true
    built_year?: true
  }

  export type VesselCountAggregateInputType = {
    id?: true
    name?: true
    imo?: true
    call_sign?: true
    satellite_telephone?: true
    classification_society?: true
    type?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    country_id?: true
    draft_sw?: true
    built_year?: true
    _all?: true
  }

  export type VesselAggregateArgs = {
    /**
     * Filter which Vessel to aggregate.
     * 
    **/
    where?: VesselWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vessels to fetch.
     * 
    **/
    orderBy?: Enumerable<VesselOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: VesselWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vessels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vessels.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vessels
    **/
    _count?: true | VesselCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VesselAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VesselSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VesselMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VesselMaxAggregateInputType
  }

  export type GetVesselAggregateType<T extends VesselAggregateArgs> = {
        [P in keyof T & keyof AggregateVessel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVessel[P]>
      : GetScalarType<T[P], AggregateVessel[P]>
  }




  export type VesselGroupByArgs = {
    where?: VesselWhereInput
    orderBy?: Enumerable<VesselOrderByWithAggregationInput>
    by: Array<VesselScalarFieldEnum>
    having?: VesselScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VesselCountAggregateInputType | true
    _avg?: VesselAvgAggregateInputType
    _sum?: VesselSumAggregateInputType
    _min?: VesselMinAggregateInputType
    _max?: VesselMaxAggregateInputType
  }


  export type VesselGroupByOutputType = {
    id: number
    name: string | null
    imo: string | null
    call_sign: string | null
    satellite_telephone: string | null
    classification_society: string | null
    type: string | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    country_id: number | null
    draft_sw: string | null
    built_year: number | null
    _count: VesselCountAggregateOutputType | null
    _avg: VesselAvgAggregateOutputType | null
    _sum: VesselSumAggregateOutputType | null
    _min: VesselMinAggregateOutputType | null
    _max: VesselMaxAggregateOutputType | null
  }

  type GetVesselGroupByPayload<T extends VesselGroupByArgs> = Promise<
    Array<
      PickArray<VesselGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VesselGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VesselGroupByOutputType[P]>
            : GetScalarType<T[P], VesselGroupByOutputType[P]>
        }
      >
    >


  export type VesselSelect = {
    id?: boolean
    name?: boolean
    imo?: boolean
    call_sign?: boolean
    satellite_telephone?: boolean
    classification_society?: boolean
    type?: boolean
    length_overall?: boolean
    dead_weight_tonnage?: boolean
    beam?: boolean
    cubic_meters?: boolean
    gross_tonnage?: boolean
    net_tonnage?: boolean
    panama_gross_tonnage?: boolean
    panama_net_tonnage?: boolean
    suez_gross_tonnage?: boolean
    suez_net_tonnage?: boolean
    reduced_gross_tonnage?: boolean
    length_between_perpendiculars?: boolean
    molded_depth?: boolean
    number_of_holds?: boolean
    number_of_tanks?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    country_id?: boolean
    draft_sw?: boolean
    built_year?: boolean
    country?: boolean | CountryArgs
    shippings?: boolean | ShippingFindManyArgs
    vessel_files?: boolean | vessel_filesFindManyArgs
    group_emails?: boolean | group_emailsFindManyArgs
    _count?: boolean | VesselCountOutputTypeArgs
  }

  export type VesselInclude = {
    country?: boolean | CountryArgs
    shippings?: boolean | ShippingFindManyArgs
    vessel_files?: boolean | vessel_filesFindManyArgs
    group_emails?: boolean | group_emailsFindManyArgs
    _count?: boolean | VesselCountOutputTypeArgs
  }

  export type VesselGetPayload<
    S extends boolean | null | undefined | VesselArgs,
    U = keyof S
      > = S extends true
        ? Vessel
    : S extends undefined
    ? never
    : S extends VesselArgs | VesselFindManyArgs
    ?'include' extends U
    ? Vessel  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'country'
        ? CountryGetPayload<S['include'][P]> | null :
        P extends 'shippings'
        ? Array < ShippingGetPayload<S['include'][P]>>  :
        P extends 'vessel_files'
        ? Array < vessel_filesGetPayload<S['include'][P]>>  :
        P extends 'group_emails'
        ? Array < group_emailsGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? VesselCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Vessel ?Vessel [P]
  : 
          P extends 'country'
        ? CountryGetPayload<S['select'][P]> | null :
        P extends 'shippings'
        ? Array < ShippingGetPayload<S['select'][P]>>  :
        P extends 'vessel_files'
        ? Array < vessel_filesGetPayload<S['select'][P]>>  :
        P extends 'group_emails'
        ? Array < group_emailsGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? VesselCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : Vessel
  : Vessel


  type VesselCountArgs = Merge<
    Omit<VesselFindManyArgs, 'select' | 'include'> & {
      select?: VesselCountAggregateInputType | true
    }
  >

  export interface VesselDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Vessel that matches the filter.
     * @param {VesselFindUniqueArgs} args - Arguments to find a Vessel
     * @example
     * // Get one Vessel
     * const vessel = await prisma.vessel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends VesselFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, VesselFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Vessel'> extends True ? CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>> : CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>

    /**
     * Find the first Vessel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselFindFirstArgs} args - Arguments to find a Vessel
     * @example
     * // Get one Vessel
     * const vessel = await prisma.vessel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends VesselFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, VesselFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Vessel'> extends True ? CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>> : CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>

    /**
     * Find zero or more Vessels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vessels
     * const vessels = await prisma.vessel.findMany()
     * 
     * // Get first 10 Vessels
     * const vessels = await prisma.vessel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vesselWithIdOnly = await prisma.vessel.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends VesselFindManyArgs>(
      args?: SelectSubset<T, VesselFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Vessel>>, PrismaPromise<Array<VesselGetPayload<T>>>>

    /**
     * Create a Vessel.
     * @param {VesselCreateArgs} args - Arguments to create a Vessel.
     * @example
     * // Create one Vessel
     * const Vessel = await prisma.vessel.create({
     *   data: {
     *     // ... data to create a Vessel
     *   }
     * })
     * 
    **/
    create<T extends VesselCreateArgs>(
      args: SelectSubset<T, VesselCreateArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Create many Vessels.
     *     @param {VesselCreateManyArgs} args - Arguments to create many Vessels.
     *     @example
     *     // Create many Vessels
     *     const vessel = await prisma.vessel.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends VesselCreateManyArgs>(
      args?: SelectSubset<T, VesselCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Vessel.
     * @param {VesselDeleteArgs} args - Arguments to delete one Vessel.
     * @example
     * // Delete one Vessel
     * const Vessel = await prisma.vessel.delete({
     *   where: {
     *     // ... filter to delete one Vessel
     *   }
     * })
     * 
    **/
    delete<T extends VesselDeleteArgs>(
      args: SelectSubset<T, VesselDeleteArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Update one Vessel.
     * @param {VesselUpdateArgs} args - Arguments to update one Vessel.
     * @example
     * // Update one Vessel
     * const vessel = await prisma.vessel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends VesselUpdateArgs>(
      args: SelectSubset<T, VesselUpdateArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Delete zero or more Vessels.
     * @param {VesselDeleteManyArgs} args - Arguments to filter Vessels to delete.
     * @example
     * // Delete a few Vessels
     * const { count } = await prisma.vessel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends VesselDeleteManyArgs>(
      args?: SelectSubset<T, VesselDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vessels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vessels
     * const vessel = await prisma.vessel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends VesselUpdateManyArgs>(
      args: SelectSubset<T, VesselUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Vessel.
     * @param {VesselUpsertArgs} args - Arguments to update or create a Vessel.
     * @example
     * // Update or create a Vessel
     * const vessel = await prisma.vessel.upsert({
     *   create: {
     *     // ... data to create a Vessel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vessel we want to update
     *   }
     * })
    **/
    upsert<T extends VesselUpsertArgs>(
      args: SelectSubset<T, VesselUpsertArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Count the number of Vessels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselCountArgs} args - Arguments to filter Vessels to count.
     * @example
     * // Count the number of Vessels
     * const count = await prisma.vessel.count({
     *   where: {
     *     // ... the filter for the Vessels we want to count
     *   }
     * })
    **/
    count<T extends VesselCountArgs>(
      args?: Subset<T, VesselCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VesselCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vessel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VesselAggregateArgs>(args: Subset<T, VesselAggregateArgs>): PrismaPromise<GetVesselAggregateType<T>>

    /**
     * Group by Vessel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VesselGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VesselGroupByArgs['orderBy'] }
        : { orderBy?: VesselGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VesselGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVesselGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vessel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__VesselClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    country<T extends CountryArgs = {}>(args?: Subset<T, CountryArgs>): CheckSelect<T, Prisma__CountryClient<Country | null >, Prisma__CountryClient<CountryGetPayload<T> | null >>;

    shippings<T extends ShippingFindManyArgs = {}>(args?: Subset<T, ShippingFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Shipping>>, PrismaPromise<Array<ShippingGetPayload<T>>>>;

    vessel_files<T extends vessel_filesFindManyArgs = {}>(args?: Subset<T, vessel_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<vessel_files>>, PrismaPromise<Array<vessel_filesGetPayload<T>>>>;

    group_emails<T extends group_emailsFindManyArgs = {}>(args?: Subset<T, group_emailsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<group_emails>>, PrismaPromise<Array<group_emailsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Vessel findUnique
   */
  export type VesselFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * Throw an Error if a Vessel can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Vessel to fetch.
     * 
    **/
    where: VesselWhereUniqueInput
  }


  /**
   * Vessel findFirst
   */
  export type VesselFindFirstArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * Throw an Error if a Vessel can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which Vessel to fetch.
     * 
    **/
    where?: VesselWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vessels to fetch.
     * 
    **/
    orderBy?: Enumerable<VesselOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vessels.
     * 
    **/
    cursor?: VesselWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vessels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vessels.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vessels.
     * 
    **/
    distinct?: Enumerable<VesselScalarFieldEnum>
  }


  /**
   * Vessel findMany
   */
  export type VesselFindManyArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * Filter, which Vessels to fetch.
     * 
    **/
    where?: VesselWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vessels to fetch.
     * 
    **/
    orderBy?: Enumerable<VesselOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vessels.
     * 
    **/
    cursor?: VesselWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vessels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vessels.
     * 
    **/
    skip?: number
    distinct?: Enumerable<VesselScalarFieldEnum>
  }


  /**
   * Vessel create
   */
  export type VesselCreateArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * The data needed to create a Vessel.
     * 
    **/
    data: XOR<VesselCreateInput, VesselUncheckedCreateInput>
  }


  /**
   * Vessel createMany
   */
  export type VesselCreateManyArgs = {
    data: Enumerable<VesselCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Vessel update
   */
  export type VesselUpdateArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * The data needed to update a Vessel.
     * 
    **/
    data: XOR<VesselUpdateInput, VesselUncheckedUpdateInput>
    /**
     * Choose, which Vessel to update.
     * 
    **/
    where: VesselWhereUniqueInput
  }


  /**
   * Vessel updateMany
   */
  export type VesselUpdateManyArgs = {
    data: XOR<VesselUpdateManyMutationInput, VesselUncheckedUpdateManyInput>
    where?: VesselWhereInput
  }


  /**
   * Vessel upsert
   */
  export type VesselUpsertArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * The filter to search for the Vessel to update in case it exists.
     * 
    **/
    where: VesselWhereUniqueInput
    /**
     * In case the Vessel found by the `where` argument doesn't exist, create a new Vessel with this data.
     * 
    **/
    create: XOR<VesselCreateInput, VesselUncheckedCreateInput>
    /**
     * In case the Vessel was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<VesselUpdateInput, VesselUncheckedUpdateInput>
  }


  /**
   * Vessel delete
   */
  export type VesselDeleteArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * Filter which Vessel to delete.
     * 
    **/
    where: VesselWhereUniqueInput
  }


  /**
   * Vessel deleteMany
   */
  export type VesselDeleteManyArgs = {
    where?: VesselWhereInput
  }


  /**
   * Vessel without action
   */
  export type VesselArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
  }



  /**
   * Model inquires
   */


  export type AggregateInquires = {
    _count: InquiresCountAggregateOutputType | null
    _avg: InquiresAvgAggregateOutputType | null
    _sum: InquiresSumAggregateOutputType | null
    _min: InquiresMinAggregateOutputType | null
    _max: InquiresMaxAggregateOutputType | null
  }

  export type InquiresAvgAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    updated_by_user_id: number | null
  }

  export type InquiresSumAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    updated_by_user_id: number | null
  }

  export type InquiresMinAggregateOutputType = {
    id: number | null
    title: string | null
    type: string | null
    shipping_id: number | null
    updated_by_user_id: number | null
    deleted: boolean | null
  }

  export type InquiresMaxAggregateOutputType = {
    id: number | null
    title: string | null
    type: string | null
    shipping_id: number | null
    updated_by_user_id: number | null
    deleted: boolean | null
  }

  export type InquiresCountAggregateOutputType = {
    id: number
    title: number
    type: number
    shipping_id: number
    updated_by_user_id: number
    deleted: number
    _all: number
  }


  export type InquiresAvgAggregateInputType = {
    id?: true
    shipping_id?: true
    updated_by_user_id?: true
  }

  export type InquiresSumAggregateInputType = {
    id?: true
    shipping_id?: true
    updated_by_user_id?: true
  }

  export type InquiresMinAggregateInputType = {
    id?: true
    title?: true
    type?: true
    shipping_id?: true
    updated_by_user_id?: true
    deleted?: true
  }

  export type InquiresMaxAggregateInputType = {
    id?: true
    title?: true
    type?: true
    shipping_id?: true
    updated_by_user_id?: true
    deleted?: true
  }

  export type InquiresCountAggregateInputType = {
    id?: true
    title?: true
    type?: true
    shipping_id?: true
    updated_by_user_id?: true
    deleted?: true
    _all?: true
  }

  export type InquiresAggregateArgs = {
    /**
     * Filter which inquires to aggregate.
     * 
    **/
    where?: inquiresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires to fetch.
     * 
    **/
    orderBy?: Enumerable<inquiresOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: inquiresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned inquires
    **/
    _count?: true | InquiresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InquiresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InquiresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InquiresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InquiresMaxAggregateInputType
  }

  export type GetInquiresAggregateType<T extends InquiresAggregateArgs> = {
        [P in keyof T & keyof AggregateInquires]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInquires[P]>
      : GetScalarType<T[P], AggregateInquires[P]>
  }




  export type InquiresGroupByArgs = {
    where?: inquiresWhereInput
    orderBy?: Enumerable<inquiresOrderByWithAggregationInput>
    by: Array<InquiresScalarFieldEnum>
    having?: inquiresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InquiresCountAggregateInputType | true
    _avg?: InquiresAvgAggregateInputType
    _sum?: InquiresSumAggregateInputType
    _min?: InquiresMinAggregateInputType
    _max?: InquiresMaxAggregateInputType
  }


  export type InquiresGroupByOutputType = {
    id: number
    title: string | null
    type: string | null
    shipping_id: number | null
    updated_by_user_id: number | null
    deleted: boolean
    _count: InquiresCountAggregateOutputType | null
    _avg: InquiresAvgAggregateOutputType | null
    _sum: InquiresSumAggregateOutputType | null
    _min: InquiresMinAggregateOutputType | null
    _max: InquiresMaxAggregateOutputType | null
  }

  type GetInquiresGroupByPayload<T extends InquiresGroupByArgs> = Promise<
    Array<
      PickArray<InquiresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InquiresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InquiresGroupByOutputType[P]>
            : GetScalarType<T[P], InquiresGroupByOutputType[P]>
        }
      >
    >


  export type inquiresSelect = {
    id?: boolean
    title?: boolean
    type?: boolean
    shipping_id?: boolean
    updated_by_user_id?: boolean
    shippings?: boolean | ShippingArgs
    users?: boolean | usersArgs
    inquires_comments?: boolean | inquires_commentsFindManyArgs
    deleted?: boolean
    _count?: boolean | InquiresCountOutputTypeArgs
  }

  export type inquiresInclude = {
    shippings?: boolean | ShippingArgs
    users?: boolean | usersArgs
    inquires_comments?: boolean | inquires_commentsFindManyArgs
    _count?: boolean | InquiresCountOutputTypeArgs
  }

  export type inquiresGetPayload<
    S extends boolean | null | undefined | inquiresArgs,
    U = keyof S
      > = S extends true
        ? inquires
    : S extends undefined
    ? never
    : S extends inquiresArgs | inquiresFindManyArgs
    ?'include' extends U
    ? inquires  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'shippings'
        ? ShippingGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null :
        P extends 'inquires_comments'
        ? Array < inquires_commentsGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? InquiresCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof inquires ?inquires [P]
  : 
          P extends 'shippings'
        ? ShippingGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null :
        P extends 'inquires_comments'
        ? Array < inquires_commentsGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? InquiresCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : inquires
  : inquires


  type inquiresCountArgs = Merge<
    Omit<inquiresFindManyArgs, 'select' | 'include'> & {
      select?: InquiresCountAggregateInputType | true
    }
  >

  export interface inquiresDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Inquires that matches the filter.
     * @param {inquiresFindUniqueArgs} args - Arguments to find a Inquires
     * @example
     * // Get one Inquires
     * const inquires = await prisma.inquires.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends inquiresFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, inquiresFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'inquires'> extends True ? CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>> : CheckSelect<T, Prisma__inquiresClient<inquires | null >, Prisma__inquiresClient<inquiresGetPayload<T> | null >>

    /**
     * Find the first Inquires that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquiresFindFirstArgs} args - Arguments to find a Inquires
     * @example
     * // Get one Inquires
     * const inquires = await prisma.inquires.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends inquiresFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, inquiresFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'inquires'> extends True ? CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>> : CheckSelect<T, Prisma__inquiresClient<inquires | null >, Prisma__inquiresClient<inquiresGetPayload<T> | null >>

    /**
     * Find zero or more Inquires that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquiresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inquires
     * const inquires = await prisma.inquires.findMany()
     * 
     * // Get first 10 Inquires
     * const inquires = await prisma.inquires.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inquiresWithIdOnly = await prisma.inquires.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends inquiresFindManyArgs>(
      args?: SelectSubset<T, inquiresFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<inquires>>, PrismaPromise<Array<inquiresGetPayload<T>>>>

    /**
     * Create a Inquires.
     * @param {inquiresCreateArgs} args - Arguments to create a Inquires.
     * @example
     * // Create one Inquires
     * const Inquires = await prisma.inquires.create({
     *   data: {
     *     // ... data to create a Inquires
     *   }
     * })
     * 
    **/
    create<T extends inquiresCreateArgs>(
      args: SelectSubset<T, inquiresCreateArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Create many Inquires.
     *     @param {inquiresCreateManyArgs} args - Arguments to create many Inquires.
     *     @example
     *     // Create many Inquires
     *     const inquires = await prisma.inquires.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends inquiresCreateManyArgs>(
      args?: SelectSubset<T, inquiresCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Inquires.
     * @param {inquiresDeleteArgs} args - Arguments to delete one Inquires.
     * @example
     * // Delete one Inquires
     * const Inquires = await prisma.inquires.delete({
     *   where: {
     *     // ... filter to delete one Inquires
     *   }
     * })
     * 
    **/
    delete<T extends inquiresDeleteArgs>(
      args: SelectSubset<T, inquiresDeleteArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Update one Inquires.
     * @param {inquiresUpdateArgs} args - Arguments to update one Inquires.
     * @example
     * // Update one Inquires
     * const inquires = await prisma.inquires.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends inquiresUpdateArgs>(
      args: SelectSubset<T, inquiresUpdateArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Delete zero or more Inquires.
     * @param {inquiresDeleteManyArgs} args - Arguments to filter Inquires to delete.
     * @example
     * // Delete a few Inquires
     * const { count } = await prisma.inquires.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends inquiresDeleteManyArgs>(
      args?: SelectSubset<T, inquiresDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inquires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquiresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inquires
     * const inquires = await prisma.inquires.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends inquiresUpdateManyArgs>(
      args: SelectSubset<T, inquiresUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Inquires.
     * @param {inquiresUpsertArgs} args - Arguments to update or create a Inquires.
     * @example
     * // Update or create a Inquires
     * const inquires = await prisma.inquires.upsert({
     *   create: {
     *     // ... data to create a Inquires
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inquires we want to update
     *   }
     * })
    **/
    upsert<T extends inquiresUpsertArgs>(
      args: SelectSubset<T, inquiresUpsertArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Count the number of Inquires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquiresCountArgs} args - Arguments to filter Inquires to count.
     * @example
     * // Count the number of Inquires
     * const count = await prisma.inquires.count({
     *   where: {
     *     // ... the filter for the Inquires we want to count
     *   }
     * })
    **/
    count<T extends inquiresCountArgs>(
      args?: Subset<T, inquiresCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InquiresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inquires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InquiresAggregateArgs>(args: Subset<T, InquiresAggregateArgs>): PrismaPromise<GetInquiresAggregateType<T>>

    /**
     * Group by Inquires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InquiresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InquiresGroupByArgs['orderBy'] }
        : { orderBy?: InquiresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InquiresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInquiresGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for inquires.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__inquiresClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    inquires_comments<T extends inquires_commentsFindManyArgs = {}>(args?: Subset<T, inquires_commentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<inquires_comments>>, PrismaPromise<Array<inquires_commentsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * inquires findUnique
   */
  export type inquiresFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * Throw an Error if a inquires can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which inquires to fetch.
     * 
    **/
    where: inquiresWhereUniqueInput
  }


  /**
   * inquires findFirst
   */
  export type inquiresFindFirstArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * Throw an Error if a inquires can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which inquires to fetch.
     * 
    **/
    where?: inquiresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires to fetch.
     * 
    **/
    orderBy?: Enumerable<inquiresOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inquires.
     * 
    **/
    cursor?: inquiresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inquires.
     * 
    **/
    distinct?: Enumerable<InquiresScalarFieldEnum>
  }


  /**
   * inquires findMany
   */
  export type inquiresFindManyArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * Filter, which inquires to fetch.
     * 
    **/
    where?: inquiresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires to fetch.
     * 
    **/
    orderBy?: Enumerable<inquiresOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing inquires.
     * 
    **/
    cursor?: inquiresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires.
     * 
    **/
    skip?: number
    distinct?: Enumerable<InquiresScalarFieldEnum>
  }


  /**
   * inquires create
   */
  export type inquiresCreateArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * The data needed to create a inquires.
     * 
    **/
    data: XOR<inquiresCreateInput, inquiresUncheckedCreateInput>
  }


  /**
   * inquires createMany
   */
  export type inquiresCreateManyArgs = {
    data: Enumerable<inquiresCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * inquires update
   */
  export type inquiresUpdateArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * The data needed to update a inquires.
     * 
    **/
    data: XOR<inquiresUpdateInput, inquiresUncheckedUpdateInput>
    /**
     * Choose, which inquires to update.
     * 
    **/
    where: inquiresWhereUniqueInput
  }


  /**
   * inquires updateMany
   */
  export type inquiresUpdateManyArgs = {
    data: XOR<inquiresUpdateManyMutationInput, inquiresUncheckedUpdateManyInput>
    where?: inquiresWhereInput
  }


  /**
   * inquires upsert
   */
  export type inquiresUpsertArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * The filter to search for the inquires to update in case it exists.
     * 
    **/
    where: inquiresWhereUniqueInput
    /**
     * In case the inquires found by the `where` argument doesn't exist, create a new inquires with this data.
     * 
    **/
    create: XOR<inquiresCreateInput, inquiresUncheckedCreateInput>
    /**
     * In case the inquires was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<inquiresUpdateInput, inquiresUncheckedUpdateInput>
  }


  /**
   * inquires delete
   */
  export type inquiresDeleteArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * Filter which inquires to delete.
     * 
    **/
    where: inquiresWhereUniqueInput
  }


  /**
   * inquires deleteMany
   */
  export type inquiresDeleteManyArgs = {
    where?: inquiresWhereInput
  }


  /**
   * inquires without action
   */
  export type inquiresArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
  }



  /**
   * Model inquires_comments
   */


  export type AggregateInquires_comments = {
    _count: Inquires_commentsCountAggregateOutputType | null
    _avg: Inquires_commentsAvgAggregateOutputType | null
    _sum: Inquires_commentsSumAggregateOutputType | null
    _min: Inquires_commentsMinAggregateOutputType | null
    _max: Inquires_commentsMaxAggregateOutputType | null
  }

  export type Inquires_commentsAvgAggregateOutputType = {
    id: number | null
    inquire_id: number | null
    user_id: number | null
  }

  export type Inquires_commentsSumAggregateOutputType = {
    id: number | null
    inquire_id: number | null
    user_id: number | null
  }

  export type Inquires_commentsMinAggregateOutputType = {
    id: number | null
    body: string | null
    is_done: boolean | null
    inquire_id: number | null
    user_id: number | null
    deleted: boolean | null
  }

  export type Inquires_commentsMaxAggregateOutputType = {
    id: number | null
    body: string | null
    is_done: boolean | null
    inquire_id: number | null
    user_id: number | null
    deleted: boolean | null
  }

  export type Inquires_commentsCountAggregateOutputType = {
    id: number
    body: number
    is_done: number
    inquire_id: number
    user_id: number
    deleted: number
    _all: number
  }


  export type Inquires_commentsAvgAggregateInputType = {
    id?: true
    inquire_id?: true
    user_id?: true
  }

  export type Inquires_commentsSumAggregateInputType = {
    id?: true
    inquire_id?: true
    user_id?: true
  }

  export type Inquires_commentsMinAggregateInputType = {
    id?: true
    body?: true
    is_done?: true
    inquire_id?: true
    user_id?: true
    deleted?: true
  }

  export type Inquires_commentsMaxAggregateInputType = {
    id?: true
    body?: true
    is_done?: true
    inquire_id?: true
    user_id?: true
    deleted?: true
  }

  export type Inquires_commentsCountAggregateInputType = {
    id?: true
    body?: true
    is_done?: true
    inquire_id?: true
    user_id?: true
    deleted?: true
    _all?: true
  }

  export type Inquires_commentsAggregateArgs = {
    /**
     * Filter which inquires_comments to aggregate.
     * 
    **/
    where?: inquires_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires_comments to fetch.
     * 
    **/
    orderBy?: Enumerable<inquires_commentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: inquires_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires_comments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires_comments.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned inquires_comments
    **/
    _count?: true | Inquires_commentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Inquires_commentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Inquires_commentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Inquires_commentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Inquires_commentsMaxAggregateInputType
  }

  export type GetInquires_commentsAggregateType<T extends Inquires_commentsAggregateArgs> = {
        [P in keyof T & keyof AggregateInquires_comments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInquires_comments[P]>
      : GetScalarType<T[P], AggregateInquires_comments[P]>
  }




  export type Inquires_commentsGroupByArgs = {
    where?: inquires_commentsWhereInput
    orderBy?: Enumerable<inquires_commentsOrderByWithAggregationInput>
    by: Array<Inquires_commentsScalarFieldEnum>
    having?: inquires_commentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Inquires_commentsCountAggregateInputType | true
    _avg?: Inquires_commentsAvgAggregateInputType
    _sum?: Inquires_commentsSumAggregateInputType
    _min?: Inquires_commentsMinAggregateInputType
    _max?: Inquires_commentsMaxAggregateInputType
  }


  export type Inquires_commentsGroupByOutputType = {
    id: number
    body: string | null
    is_done: boolean
    inquire_id: number | null
    user_id: number | null
    deleted: boolean
    _count: Inquires_commentsCountAggregateOutputType | null
    _avg: Inquires_commentsAvgAggregateOutputType | null
    _sum: Inquires_commentsSumAggregateOutputType | null
    _min: Inquires_commentsMinAggregateOutputType | null
    _max: Inquires_commentsMaxAggregateOutputType | null
  }

  type GetInquires_commentsGroupByPayload<T extends Inquires_commentsGroupByArgs> = Promise<
    Array<
      PickArray<Inquires_commentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Inquires_commentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Inquires_commentsGroupByOutputType[P]>
            : GetScalarType<T[P], Inquires_commentsGroupByOutputType[P]>
        }
      >
    >


  export type inquires_commentsSelect = {
    id?: boolean
    body?: boolean
    is_done?: boolean
    inquire_id?: boolean
    user_id?: boolean
    inquires?: boolean | inquiresArgs
    users?: boolean | usersArgs
    deleted?: boolean
  }

  export type inquires_commentsInclude = {
    inquires?: boolean | inquiresArgs
    users?: boolean | usersArgs
  }

  export type inquires_commentsGetPayload<
    S extends boolean | null | undefined | inquires_commentsArgs,
    U = keyof S
      > = S extends true
        ? inquires_comments
    : S extends undefined
    ? never
    : S extends inquires_commentsArgs | inquires_commentsFindManyArgs
    ?'include' extends U
    ? inquires_comments  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'inquires'
        ? inquiresGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof inquires_comments ?inquires_comments [P]
  : 
          P extends 'inquires'
        ? inquiresGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : inquires_comments
  : inquires_comments


  type inquires_commentsCountArgs = Merge<
    Omit<inquires_commentsFindManyArgs, 'select' | 'include'> & {
      select?: Inquires_commentsCountAggregateInputType | true
    }
  >

  export interface inquires_commentsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Inquires_comments that matches the filter.
     * @param {inquires_commentsFindUniqueArgs} args - Arguments to find a Inquires_comments
     * @example
     * // Get one Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends inquires_commentsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, inquires_commentsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'inquires_comments'> extends True ? CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>> : CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments | null >, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T> | null >>

    /**
     * Find the first Inquires_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquires_commentsFindFirstArgs} args - Arguments to find a Inquires_comments
     * @example
     * // Get one Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends inquires_commentsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, inquires_commentsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'inquires_comments'> extends True ? CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>> : CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments | null >, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T> | null >>

    /**
     * Find zero or more Inquires_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquires_commentsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findMany()
     * 
     * // Get first 10 Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inquires_commentsWithIdOnly = await prisma.inquires_comments.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends inquires_commentsFindManyArgs>(
      args?: SelectSubset<T, inquires_commentsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<inquires_comments>>, PrismaPromise<Array<inquires_commentsGetPayload<T>>>>

    /**
     * Create a Inquires_comments.
     * @param {inquires_commentsCreateArgs} args - Arguments to create a Inquires_comments.
     * @example
     * // Create one Inquires_comments
     * const Inquires_comments = await prisma.inquires_comments.create({
     *   data: {
     *     // ... data to create a Inquires_comments
     *   }
     * })
     * 
    **/
    create<T extends inquires_commentsCreateArgs>(
      args: SelectSubset<T, inquires_commentsCreateArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Create many Inquires_comments.
     *     @param {inquires_commentsCreateManyArgs} args - Arguments to create many Inquires_comments.
     *     @example
     *     // Create many Inquires_comments
     *     const inquires_comments = await prisma.inquires_comments.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends inquires_commentsCreateManyArgs>(
      args?: SelectSubset<T, inquires_commentsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Inquires_comments.
     * @param {inquires_commentsDeleteArgs} args - Arguments to delete one Inquires_comments.
     * @example
     * // Delete one Inquires_comments
     * const Inquires_comments = await prisma.inquires_comments.delete({
     *   where: {
     *     // ... filter to delete one Inquires_comments
     *   }
     * })
     * 
    **/
    delete<T extends inquires_commentsDeleteArgs>(
      args: SelectSubset<T, inquires_commentsDeleteArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Update one Inquires_comments.
     * @param {inquires_commentsUpdateArgs} args - Arguments to update one Inquires_comments.
     * @example
     * // Update one Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends inquires_commentsUpdateArgs>(
      args: SelectSubset<T, inquires_commentsUpdateArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Delete zero or more Inquires_comments.
     * @param {inquires_commentsDeleteManyArgs} args - Arguments to filter Inquires_comments to delete.
     * @example
     * // Delete a few Inquires_comments
     * const { count } = await prisma.inquires_comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends inquires_commentsDeleteManyArgs>(
      args?: SelectSubset<T, inquires_commentsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inquires_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquires_commentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends inquires_commentsUpdateManyArgs>(
      args: SelectSubset<T, inquires_commentsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Inquires_comments.
     * @param {inquires_commentsUpsertArgs} args - Arguments to update or create a Inquires_comments.
     * @example
     * // Update or create a Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.upsert({
     *   create: {
     *     // ... data to create a Inquires_comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inquires_comments we want to update
     *   }
     * })
    **/
    upsert<T extends inquires_commentsUpsertArgs>(
      args: SelectSubset<T, inquires_commentsUpsertArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Count the number of Inquires_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquires_commentsCountArgs} args - Arguments to filter Inquires_comments to count.
     * @example
     * // Count the number of Inquires_comments
     * const count = await prisma.inquires_comments.count({
     *   where: {
     *     // ... the filter for the Inquires_comments we want to count
     *   }
     * })
    **/
    count<T extends inquires_commentsCountArgs>(
      args?: Subset<T, inquires_commentsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Inquires_commentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inquires_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Inquires_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Inquires_commentsAggregateArgs>(args: Subset<T, Inquires_commentsAggregateArgs>): PrismaPromise<GetInquires_commentsAggregateType<T>>

    /**
     * Group by Inquires_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Inquires_commentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Inquires_commentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Inquires_commentsGroupByArgs['orderBy'] }
        : { orderBy?: Inquires_commentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Inquires_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInquires_commentsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for inquires_comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__inquires_commentsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    inquires<T extends inquiresArgs = {}>(args?: Subset<T, inquiresArgs>): CheckSelect<T, Prisma__inquiresClient<inquires | null >, Prisma__inquiresClient<inquiresGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * inquires_comments findUnique
   */
  export type inquires_commentsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * Throw an Error if a inquires_comments can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which inquires_comments to fetch.
     * 
    **/
    where: inquires_commentsWhereUniqueInput
  }


  /**
   * inquires_comments findFirst
   */
  export type inquires_commentsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * Throw an Error if a inquires_comments can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which inquires_comments to fetch.
     * 
    **/
    where?: inquires_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires_comments to fetch.
     * 
    **/
    orderBy?: Enumerable<inquires_commentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inquires_comments.
     * 
    **/
    cursor?: inquires_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires_comments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires_comments.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inquires_comments.
     * 
    **/
    distinct?: Enumerable<Inquires_commentsScalarFieldEnum>
  }


  /**
   * inquires_comments findMany
   */
  export type inquires_commentsFindManyArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * Filter, which inquires_comments to fetch.
     * 
    **/
    where?: inquires_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires_comments to fetch.
     * 
    **/
    orderBy?: Enumerable<inquires_commentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing inquires_comments.
     * 
    **/
    cursor?: inquires_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires_comments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires_comments.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Inquires_commentsScalarFieldEnum>
  }


  /**
   * inquires_comments create
   */
  export type inquires_commentsCreateArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * The data needed to create a inquires_comments.
     * 
    **/
    data: XOR<inquires_commentsCreateInput, inquires_commentsUncheckedCreateInput>
  }


  /**
   * inquires_comments createMany
   */
  export type inquires_commentsCreateManyArgs = {
    data: Enumerable<inquires_commentsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * inquires_comments update
   */
  export type inquires_commentsUpdateArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * The data needed to update a inquires_comments.
     * 
    **/
    data: XOR<inquires_commentsUpdateInput, inquires_commentsUncheckedUpdateInput>
    /**
     * Choose, which inquires_comments to update.
     * 
    **/
    where: inquires_commentsWhereUniqueInput
  }


  /**
   * inquires_comments updateMany
   */
  export type inquires_commentsUpdateManyArgs = {
    data: XOR<inquires_commentsUpdateManyMutationInput, inquires_commentsUncheckedUpdateManyInput>
    where?: inquires_commentsWhereInput
  }


  /**
   * inquires_comments upsert
   */
  export type inquires_commentsUpsertArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * The filter to search for the inquires_comments to update in case it exists.
     * 
    **/
    where: inquires_commentsWhereUniqueInput
    /**
     * In case the inquires_comments found by the `where` argument doesn't exist, create a new inquires_comments with this data.
     * 
    **/
    create: XOR<inquires_commentsCreateInput, inquires_commentsUncheckedCreateInput>
    /**
     * In case the inquires_comments was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<inquires_commentsUpdateInput, inquires_commentsUncheckedUpdateInput>
  }


  /**
   * inquires_comments delete
   */
  export type inquires_commentsDeleteArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * Filter which inquires_comments to delete.
     * 
    **/
    where: inquires_commentsWhereUniqueInput
  }


  /**
   * inquires_comments deleteMany
   */
  export type inquires_commentsDeleteManyArgs = {
    where?: inquires_commentsWhereInput
  }


  /**
   * inquires_comments without action
   */
  export type inquires_commentsArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
  }



  /**
   * Model group_emails
   */


  export type AggregateGroup_emails = {
    _count: Group_emailsCountAggregateOutputType | null
    _avg: Group_emailsAvgAggregateOutputType | null
    _sum: Group_emailsSumAggregateOutputType | null
    _min: Group_emailsMinAggregateOutputType | null
    _max: Group_emailsMaxAggregateOutputType | null
  }

  export type Group_emailsAvgAggregateOutputType = {
    id: number | null
    vessel_id: number | null
    updated_by_user_id: number | null
  }

  export type Group_emailsSumAggregateOutputType = {
    id: number | null
    vessel_id: number | null
    updated_by_user_id: number | null
  }

  export type Group_emailsMinAggregateOutputType = {
    id: number | null
    name: string | null
    emails: string | null
    vessel_id: number | null
    updated_by_user_id: number | null
  }

  export type Group_emailsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    emails: string | null
    vessel_id: number | null
    updated_by_user_id: number | null
  }

  export type Group_emailsCountAggregateOutputType = {
    id: number
    name: number
    emails: number
    vessel_id: number
    updated_by_user_id: number
    _all: number
  }


  export type Group_emailsAvgAggregateInputType = {
    id?: true
    vessel_id?: true
    updated_by_user_id?: true
  }

  export type Group_emailsSumAggregateInputType = {
    id?: true
    vessel_id?: true
    updated_by_user_id?: true
  }

  export type Group_emailsMinAggregateInputType = {
    id?: true
    name?: true
    emails?: true
    vessel_id?: true
    updated_by_user_id?: true
  }

  export type Group_emailsMaxAggregateInputType = {
    id?: true
    name?: true
    emails?: true
    vessel_id?: true
    updated_by_user_id?: true
  }

  export type Group_emailsCountAggregateInputType = {
    id?: true
    name?: true
    emails?: true
    vessel_id?: true
    updated_by_user_id?: true
    _all?: true
  }

  export type Group_emailsAggregateArgs = {
    /**
     * Filter which group_emails to aggregate.
     * 
    **/
    where?: group_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_emails to fetch.
     * 
    **/
    orderBy?: Enumerable<group_emailsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: group_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_emails from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_emails.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned group_emails
    **/
    _count?: true | Group_emailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Group_emailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Group_emailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Group_emailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Group_emailsMaxAggregateInputType
  }

  export type GetGroup_emailsAggregateType<T extends Group_emailsAggregateArgs> = {
        [P in keyof T & keyof AggregateGroup_emails]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroup_emails[P]>
      : GetScalarType<T[P], AggregateGroup_emails[P]>
  }




  export type Group_emailsGroupByArgs = {
    where?: group_emailsWhereInput
    orderBy?: Enumerable<group_emailsOrderByWithAggregationInput>
    by: Array<Group_emailsScalarFieldEnum>
    having?: group_emailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Group_emailsCountAggregateInputType | true
    _avg?: Group_emailsAvgAggregateInputType
    _sum?: Group_emailsSumAggregateInputType
    _min?: Group_emailsMinAggregateInputType
    _max?: Group_emailsMaxAggregateInputType
  }


  export type Group_emailsGroupByOutputType = {
    id: number
    name: string | null
    emails: string | null
    vessel_id: number | null
    updated_by_user_id: number | null
    _count: Group_emailsCountAggregateOutputType | null
    _avg: Group_emailsAvgAggregateOutputType | null
    _sum: Group_emailsSumAggregateOutputType | null
    _min: Group_emailsMinAggregateOutputType | null
    _max: Group_emailsMaxAggregateOutputType | null
  }

  type GetGroup_emailsGroupByPayload<T extends Group_emailsGroupByArgs> = Promise<
    Array<
      PickArray<Group_emailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Group_emailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Group_emailsGroupByOutputType[P]>
            : GetScalarType<T[P], Group_emailsGroupByOutputType[P]>
        }
      >
    >


  export type group_emailsSelect = {
    id?: boolean
    name?: boolean
    emails?: boolean
    vessel_id?: boolean
    updated_by_user_id?: boolean
    vessel?: boolean | VesselArgs
    users?: boolean | usersArgs
  }

  export type group_emailsInclude = {
    vessel?: boolean | VesselArgs
    users?: boolean | usersArgs
  }

  export type group_emailsGetPayload<
    S extends boolean | null | undefined | group_emailsArgs,
    U = keyof S
      > = S extends true
        ? group_emails
    : S extends undefined
    ? never
    : S extends group_emailsArgs | group_emailsFindManyArgs
    ?'include' extends U
    ? group_emails  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'vessel'
        ? VesselGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof group_emails ?group_emails [P]
  : 
          P extends 'vessel'
        ? VesselGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : group_emails
  : group_emails


  type group_emailsCountArgs = Merge<
    Omit<group_emailsFindManyArgs, 'select' | 'include'> & {
      select?: Group_emailsCountAggregateInputType | true
    }
  >

  export interface group_emailsDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Group_emails that matches the filter.
     * @param {group_emailsFindUniqueArgs} args - Arguments to find a Group_emails
     * @example
     * // Get one Group_emails
     * const group_emails = await prisma.group_emails.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends group_emailsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, group_emailsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'group_emails'> extends True ? CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>> : CheckSelect<T, Prisma__group_emailsClient<group_emails | null >, Prisma__group_emailsClient<group_emailsGetPayload<T> | null >>

    /**
     * Find the first Group_emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_emailsFindFirstArgs} args - Arguments to find a Group_emails
     * @example
     * // Get one Group_emails
     * const group_emails = await prisma.group_emails.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends group_emailsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, group_emailsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'group_emails'> extends True ? CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>> : CheckSelect<T, Prisma__group_emailsClient<group_emails | null >, Prisma__group_emailsClient<group_emailsGetPayload<T> | null >>

    /**
     * Find zero or more Group_emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_emailsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Group_emails
     * const group_emails = await prisma.group_emails.findMany()
     * 
     * // Get first 10 Group_emails
     * const group_emails = await prisma.group_emails.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const group_emailsWithIdOnly = await prisma.group_emails.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends group_emailsFindManyArgs>(
      args?: SelectSubset<T, group_emailsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<group_emails>>, PrismaPromise<Array<group_emailsGetPayload<T>>>>

    /**
     * Create a Group_emails.
     * @param {group_emailsCreateArgs} args - Arguments to create a Group_emails.
     * @example
     * // Create one Group_emails
     * const Group_emails = await prisma.group_emails.create({
     *   data: {
     *     // ... data to create a Group_emails
     *   }
     * })
     * 
    **/
    create<T extends group_emailsCreateArgs>(
      args: SelectSubset<T, group_emailsCreateArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Create many Group_emails.
     *     @param {group_emailsCreateManyArgs} args - Arguments to create many Group_emails.
     *     @example
     *     // Create many Group_emails
     *     const group_emails = await prisma.group_emails.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends group_emailsCreateManyArgs>(
      args?: SelectSubset<T, group_emailsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Group_emails.
     * @param {group_emailsDeleteArgs} args - Arguments to delete one Group_emails.
     * @example
     * // Delete one Group_emails
     * const Group_emails = await prisma.group_emails.delete({
     *   where: {
     *     // ... filter to delete one Group_emails
     *   }
     * })
     * 
    **/
    delete<T extends group_emailsDeleteArgs>(
      args: SelectSubset<T, group_emailsDeleteArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Update one Group_emails.
     * @param {group_emailsUpdateArgs} args - Arguments to update one Group_emails.
     * @example
     * // Update one Group_emails
     * const group_emails = await prisma.group_emails.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends group_emailsUpdateArgs>(
      args: SelectSubset<T, group_emailsUpdateArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Delete zero or more Group_emails.
     * @param {group_emailsDeleteManyArgs} args - Arguments to filter Group_emails to delete.
     * @example
     * // Delete a few Group_emails
     * const { count } = await prisma.group_emails.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends group_emailsDeleteManyArgs>(
      args?: SelectSubset<T, group_emailsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Group_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_emailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Group_emails
     * const group_emails = await prisma.group_emails.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends group_emailsUpdateManyArgs>(
      args: SelectSubset<T, group_emailsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Group_emails.
     * @param {group_emailsUpsertArgs} args - Arguments to update or create a Group_emails.
     * @example
     * // Update or create a Group_emails
     * const group_emails = await prisma.group_emails.upsert({
     *   create: {
     *     // ... data to create a Group_emails
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Group_emails we want to update
     *   }
     * })
    **/
    upsert<T extends group_emailsUpsertArgs>(
      args: SelectSubset<T, group_emailsUpsertArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Count the number of Group_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_emailsCountArgs} args - Arguments to filter Group_emails to count.
     * @example
     * // Count the number of Group_emails
     * const count = await prisma.group_emails.count({
     *   where: {
     *     // ... the filter for the Group_emails we want to count
     *   }
     * })
    **/
    count<T extends group_emailsCountArgs>(
      args?: Subset<T, group_emailsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Group_emailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Group_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Group_emailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Group_emailsAggregateArgs>(args: Subset<T, Group_emailsAggregateArgs>): PrismaPromise<GetGroup_emailsAggregateType<T>>

    /**
     * Group by Group_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Group_emailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Group_emailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Group_emailsGroupByArgs['orderBy'] }
        : { orderBy?: Group_emailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Group_emailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroup_emailsGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for group_emails.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__group_emailsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    vessel<T extends VesselArgs = {}>(args?: Subset<T, VesselArgs>): CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * group_emails findUnique
   */
  export type group_emailsFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * Throw an Error if a group_emails can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which group_emails to fetch.
     * 
    **/
    where: group_emailsWhereUniqueInput
  }


  /**
   * group_emails findFirst
   */
  export type group_emailsFindFirstArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * Throw an Error if a group_emails can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which group_emails to fetch.
     * 
    **/
    where?: group_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_emails to fetch.
     * 
    **/
    orderBy?: Enumerable<group_emailsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for group_emails.
     * 
    **/
    cursor?: group_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_emails from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_emails.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of group_emails.
     * 
    **/
    distinct?: Enumerable<Group_emailsScalarFieldEnum>
  }


  /**
   * group_emails findMany
   */
  export type group_emailsFindManyArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * Filter, which group_emails to fetch.
     * 
    **/
    where?: group_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_emails to fetch.
     * 
    **/
    orderBy?: Enumerable<group_emailsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing group_emails.
     * 
    **/
    cursor?: group_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_emails from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_emails.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Group_emailsScalarFieldEnum>
  }


  /**
   * group_emails create
   */
  export type group_emailsCreateArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * The data needed to create a group_emails.
     * 
    **/
    data: XOR<group_emailsCreateInput, group_emailsUncheckedCreateInput>
  }


  /**
   * group_emails createMany
   */
  export type group_emailsCreateManyArgs = {
    data: Enumerable<group_emailsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * group_emails update
   */
  export type group_emailsUpdateArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * The data needed to update a group_emails.
     * 
    **/
    data: XOR<group_emailsUpdateInput, group_emailsUncheckedUpdateInput>
    /**
     * Choose, which group_emails to update.
     * 
    **/
    where: group_emailsWhereUniqueInput
  }


  /**
   * group_emails updateMany
   */
  export type group_emailsUpdateManyArgs = {
    data: XOR<group_emailsUpdateManyMutationInput, group_emailsUncheckedUpdateManyInput>
    where?: group_emailsWhereInput
  }


  /**
   * group_emails upsert
   */
  export type group_emailsUpsertArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * The filter to search for the group_emails to update in case it exists.
     * 
    **/
    where: group_emailsWhereUniqueInput
    /**
     * In case the group_emails found by the `where` argument doesn't exist, create a new group_emails with this data.
     * 
    **/
    create: XOR<group_emailsCreateInput, group_emailsUncheckedCreateInput>
    /**
     * In case the group_emails was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<group_emailsUpdateInput, group_emailsUncheckedUpdateInput>
  }


  /**
   * group_emails delete
   */
  export type group_emailsDeleteArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * Filter which group_emails to delete.
     * 
    **/
    where: group_emailsWhereUniqueInput
  }


  /**
   * group_emails deleteMany
   */
  export type group_emailsDeleteManyArgs = {
    where?: group_emailsWhereInput
  }


  /**
   * group_emails without action
   */
  export type group_emailsArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const Berth_productsScalarFieldEnum: {
    id: 'id',
    loadingCapacity: 'loadingCapacity',
    unloadingCapacity: 'unloadingCapacity',
    berthId: 'berthId',
    productId: 'productId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type Berth_productsScalarFieldEnum = (typeof Berth_productsScalarFieldEnum)[keyof typeof Berth_productsScalarFieldEnum]


  export const BerthsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    portId: 'portId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    maxDraft: 'maxDraft',
    airDraft: 'airDraft',
    maxLengthOverall: 'maxLengthOverall',
    maxDeadWeightTonnage: 'maxDeadWeightTonnage',
    maxBeam: 'maxBeam',
    waterDensity: 'waterDensity'
  };

  export type BerthsScalarFieldEnum = (typeof BerthsScalarFieldEnum)[keyof typeof BerthsScalarFieldEnum]


  export const ChecklistTemplateScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type ChecklistTemplateScalarFieldEnum = (typeof ChecklistTemplateScalarFieldEnum)[keyof typeof ChecklistTemplateScalarFieldEnum]


  export const ChecklistTemplateItemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    type: 'type',
    working_days: 'working_days',
    checklist_template_id: 'checklist_template_id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ChecklistTemplateItemScalarFieldEnum = (typeof ChecklistTemplateItemScalarFieldEnum)[keyof typeof ChecklistTemplateItemScalarFieldEnum]


  export const ShippingChecklistItemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    type: 'type',
    deadline_date: 'deadline_date',
    commentary: 'commentary',
    is_done: 'is_done',
    shipping_id: 'shipping_id',
    updated_by_user_id: 'updated_by_user_id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ShippingChecklistItemScalarFieldEnum = (typeof ShippingChecklistItemScalarFieldEnum)[keyof typeof ShippingChecklistItemScalarFieldEnum]


  export const CountryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    flag: 'flag',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type CountryScalarFieldEnum = (typeof CountryScalarFieldEnum)[keyof typeof CountryScalarFieldEnum]


  export const MigrationsScalarFieldEnum: {
    id: 'id',
    timestamp: 'timestamp',
    name: 'name'
  };

  export type MigrationsScalarFieldEnum = (typeof MigrationsScalarFieldEnum)[keyof typeof MigrationsScalarFieldEnum]


  export const Port_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    portId: 'portId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    userId: 'userId'
  };

  export type Port_filesScalarFieldEnum = (typeof Port_filesScalarFieldEnum)[keyof typeof Port_filesScalarFieldEnum]


  export const PortsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    countryId: 'countryId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    slug: 'slug'
  };

  export type PortsScalarFieldEnum = (typeof PortsScalarFieldEnum)[keyof typeof PortsScalarFieldEnum]


  export const ProductsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ProductsScalarFieldEnum = (typeof ProductsScalarFieldEnum)[keyof typeof ProductsScalarFieldEnum]


  export const Proforma_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    proformaId: 'proformaId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type Proforma_filesScalarFieldEnum = (typeof Proforma_filesScalarFieldEnum)[keyof typeof Proforma_filesScalarFieldEnum]


  export const ProformasScalarFieldEnum: {
    id: 'id',
    taxes: 'taxes',
    totalValue: 'totalValue',
    berthedHours: 'berthedHours',
    berthProductId: 'berthProductId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    idHash: 'idHash',
    applicantName: 'applicantName',
    applicantEmail: 'applicantEmail',
    vesselName: 'vesselName',
    imo: 'imo',
    deadWeightTonnage: 'deadWeightTonnage',
    lengthOverall: 'lengthOverall',
    grossTonnage: 'grossTonnage',
    package: 'package',
    builtYear: 'builtYear',
    agencyType: 'agencyType',
    operationType: 'operationType',
    productTonnage: 'productTonnage',
    usd: 'usd',
    isCargillInternational: 'isCargillInternational',
    beam: 'beam',
    etb: 'etb',
    draft: 'draft',
    requestingCustomer: 'requestingCustomer',
    vesselType: 'vesselType'
  };

  export type ProformasScalarFieldEnum = (typeof ProformasScalarFieldEnum)[keyof typeof ProformasScalarFieldEnum]


  export const Shipping_documentsScalarFieldEnum: {
    id: 'id',
    type: 'type',
    documentNumber: 'documentNumber',
    consignee: 'consignee',
    vesselName: 'vesselName',
    portOfLoading: 'portOfLoading',
    portOfDischarge: 'portOfDischarge',
    notify: 'notify',
    productName: 'productName',
    productNameExtraInfo: 'productNameExtraInfo',
    productWeightExtraInfo: 'productWeightExtraInfo',
    freightType: 'freightType',
    charterPartyDate: 'charterPartyDate',
    shipBoardedDate: 'shipBoardedDate',
    issuePlaceDate: 'issuePlaceDate',
    numberOfOriginalBillOfLanding: 'numberOfOriginalBillOfLanding',
    shipper: 'shipper',
    masterName: 'masterName',
    signature: 'signature',
    shippingId: 'shippingId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    order: 'order',
    subsetId: 'subsetId',
    productGrossWeight: 'productGrossWeight'
  };

  export type Shipping_documentsScalarFieldEnum = (typeof Shipping_documentsScalarFieldEnum)[keyof typeof Shipping_documentsScalarFieldEnum]


  export const Shipping_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    shippingId: 'shippingId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    userId: 'userId'
  };

  export type Shipping_filesScalarFieldEnum = (typeof Shipping_filesScalarFieldEnum)[keyof typeof Shipping_filesScalarFieldEnum]


  export const Shipping_portsScalarFieldEnum: {
    id: 'id',
    estimatedTimeOfArrival: 'estimatedTimeOfArrival',
    estimatedTimeOfBerthing: 'estimatedTimeOfBerthing',
    estimatedTimeOfSailing: 'estimatedTimeOfSailing',
    timeOfArrival: 'timeOfArrival',
    timeOfBerthing: 'timeOfBerthing',
    timeOfSailing: 'timeOfSailing',
    shippingId: 'shippingId',
    portId: 'portId',
    berthId: 'berthId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type Shipping_portsScalarFieldEnum = (typeof Shipping_portsScalarFieldEnum)[keyof typeof Shipping_portsScalarFieldEnum]


  export const Shipping_productsScalarFieldEnum: {
    id: 'id',
    weight: 'weight',
    shippingId: 'shippingId',
    productId: 'productId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type Shipping_productsScalarFieldEnum = (typeof Shipping_productsScalarFieldEnum)[keyof typeof Shipping_productsScalarFieldEnum]


  export const ShippingScalarFieldEnum: {
    id: 'id',
    status: 'status',
    owner_head_name: 'owner_head_name',
    owner_head_address: 'owner_head_address',
    disponent_owner: 'disponent_owner',
    charter_name: 'charter_name',
    master_name: 'master_name',
    master_email: 'master_email',
    estimated_draft_arrival: 'estimated_draft_arrival',
    estimated_draft_departure: 'estimated_draft_departure',
    arrival_draft: 'arrival_draft',
    depart_draft: 'depart_draft',
    vessel_operator: 'vessel_operator',
    vessel_operator_email: 'vessel_operator_email',
    operation_type: 'operation_type',
    agency_type: 'agency_type',
    voyage_number: 'voyage_number',
    external_code: 'external_code',
    comments: 'comments',
    last_port: 'last_port',
    next_port: 'next_port',
    broker: 'broker',
    boat: 'boat',
    tugs: 'tugs',
    garbage: 'garbage',
    last_cargoes: 'last_cargoes',
    sscec_port: 'sscec_port',
    sscec_exp: 'sscec_exp',
    in_marsat_c_number: 'in_marsat_c_number',
    master_phone_01: 'master_phone_01',
    master_phone_02: 'master_phone_02',
    vessel_expert: 'vessel_expert',
    vessel_expert_phone01: 'vessel_expert_phone01',
    vessel_expert_phone02: 'vessel_expert_phone02',
    vessel_expert_alternate: 'vessel_expert_alternate',
    vessel_expert_alternate_phone01: 'vessel_expert_alternate_phone01',
    vessel_expert_alternate_phone02: 'vessel_expert_alternate_phone02',
    vessel_operator_phone01: 'vessel_operator_phone01',
    vessel_operator_phone02: 'vessel_operator_phone02',
    vessel_operator_city_country: 'vessel_operator_city_country',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at',
    vessel_id: 'vessel_id',
    user_id: 'user_id',
    total_load_expected: 'total_load_expected',
    total_load_actual: 'total_load_actual'
  };

  export type ShippingScalarFieldEnum = (typeof ShippingScalarFieldEnum)[keyof typeof ShippingScalarFieldEnum]


  export const SubsetsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    shippingId: 'shippingId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type SubsetsScalarFieldEnum = (typeof SubsetsScalarFieldEnum)[keyof typeof SubsetsScalarFieldEnum]


  export const User_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type User_filesScalarFieldEnum = (typeof User_filesScalarFieldEnum)[keyof typeof User_filesScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Vessel_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    vesselId: 'vesselId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    userId: 'userId'
  };

  export type Vessel_filesScalarFieldEnum = (typeof Vessel_filesScalarFieldEnum)[keyof typeof Vessel_filesScalarFieldEnum]


  export const VesselScalarFieldEnum: {
    id: 'id',
    name: 'name',
    imo: 'imo',
    call_sign: 'call_sign',
    satellite_telephone: 'satellite_telephone',
    classification_society: 'classification_society',
    type: 'type',
    length_overall: 'length_overall',
    dead_weight_tonnage: 'dead_weight_tonnage',
    beam: 'beam',
    cubic_meters: 'cubic_meters',
    gross_tonnage: 'gross_tonnage',
    net_tonnage: 'net_tonnage',
    panama_gross_tonnage: 'panama_gross_tonnage',
    panama_net_tonnage: 'panama_net_tonnage',
    suez_gross_tonnage: 'suez_gross_tonnage',
    suez_net_tonnage: 'suez_net_tonnage',
    reduced_gross_tonnage: 'reduced_gross_tonnage',
    length_between_perpendiculars: 'length_between_perpendiculars',
    molded_depth: 'molded_depth',
    number_of_holds: 'number_of_holds',
    number_of_tanks: 'number_of_tanks',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at',
    country_id: 'country_id',
    draft_sw: 'draft_sw',
    built_year: 'built_year'
  };

  export type VesselScalarFieldEnum = (typeof VesselScalarFieldEnum)[keyof typeof VesselScalarFieldEnum]


  export const InquiresScalarFieldEnum: {
    id: 'id',
    title: 'title',
    type: 'type',
    shipping_id: 'shipping_id',
    updated_by_user_id: 'updated_by_user_id',
    deleted: 'deleted'
  };

  export type InquiresScalarFieldEnum = (typeof InquiresScalarFieldEnum)[keyof typeof InquiresScalarFieldEnum]


  export const Inquires_commentsScalarFieldEnum: {
    id: 'id',
    body: 'body',
    is_done: 'is_done',
    inquire_id: 'inquire_id',
    user_id: 'user_id',
    deleted: 'deleted'
  };

  export type Inquires_commentsScalarFieldEnum = (typeof Inquires_commentsScalarFieldEnum)[keyof typeof Inquires_commentsScalarFieldEnum]


  export const Group_emailsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    emails: 'emails',
    vessel_id: 'vessel_id',
    updated_by_user_id: 'updated_by_user_id'
  };

  export type Group_emailsScalarFieldEnum = (typeof Group_emailsScalarFieldEnum)[keyof typeof Group_emailsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Deep Input Types
   */


  export type berth_productsWhereInput = {
    AND?: Enumerable<berth_productsWhereInput>
    OR?: Enumerable<berth_productsWhereInput>
    NOT?: Enumerable<berth_productsWhereInput>
    id?: IntFilter | number
    loadingCapacity?: FloatNullableFilter | number | null
    unloadingCapacity?: FloatNullableFilter | number | null
    berthId?: IntFilter | number
    productId?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    berths?: XOR<BerthsRelationFilter, berthsWhereInput>
    products?: XOR<ProductsRelationFilter, productsWhereInput>
    proformas?: ProformasListRelationFilter
  }

  export type berth_productsOrderByWithRelationInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    berths?: berthsOrderByWithRelationInput
    products?: productsOrderByWithRelationInput
    proformas?: proformasOrderByRelationAggregateInput
  }

  export type berth_productsWhereUniqueInput = {
    id?: number
  }

  export type berth_productsOrderByWithAggregationInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: berth_productsCountOrderByAggregateInput
    _avg?: berth_productsAvgOrderByAggregateInput
    _max?: berth_productsMaxOrderByAggregateInput
    _min?: berth_productsMinOrderByAggregateInput
    _sum?: berth_productsSumOrderByAggregateInput
  }

  export type berth_productsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<berth_productsScalarWhereWithAggregatesInput>
    OR?: Enumerable<berth_productsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<berth_productsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    loadingCapacity?: FloatNullableWithAggregatesFilter | number | null
    unloadingCapacity?: FloatNullableWithAggregatesFilter | number | null
    berthId?: IntWithAggregatesFilter | number
    productId?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type berthsWhereInput = {
    AND?: Enumerable<berthsWhereInput>
    OR?: Enumerable<berthsWhereInput>
    NOT?: Enumerable<berthsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    portId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    maxDraft?: FloatNullableFilter | number | null
    airDraft?: FloatNullableFilter | number | null
    maxLengthOverall?: FloatNullableFilter | number | null
    maxDeadWeightTonnage?: FloatNullableFilter | number | null
    maxBeam?: FloatNullableFilter | number | null
    waterDensity?: FloatNullableFilter | number | null
    ports?: XOR<PortsRelationFilter, portsWhereInput> | null
    berth_products?: Berth_productsListRelationFilter
    shipping_ports?: Shipping_portsListRelationFilter
  }

  export type berthsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
    ports?: portsOrderByWithRelationInput
    berth_products?: berth_productsOrderByRelationAggregateInput
    shipping_ports?: shipping_portsOrderByRelationAggregateInput
  }

  export type berthsWhereUniqueInput = {
    id?: number
  }

  export type berthsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
    _count?: berthsCountOrderByAggregateInput
    _avg?: berthsAvgOrderByAggregateInput
    _max?: berthsMaxOrderByAggregateInput
    _min?: berthsMinOrderByAggregateInput
    _sum?: berthsSumOrderByAggregateInput
  }

  export type berthsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<berthsScalarWhereWithAggregatesInput>
    OR?: Enumerable<berthsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<berthsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    description?: StringNullableWithAggregatesFilter | string | null
    portId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    maxDraft?: FloatNullableWithAggregatesFilter | number | null
    airDraft?: FloatNullableWithAggregatesFilter | number | null
    maxLengthOverall?: FloatNullableWithAggregatesFilter | number | null
    maxDeadWeightTonnage?: FloatNullableWithAggregatesFilter | number | null
    maxBeam?: FloatNullableWithAggregatesFilter | number | null
    waterDensity?: FloatNullableWithAggregatesFilter | number | null
  }

  export type ChecklistTemplateWhereInput = {
    AND?: Enumerable<ChecklistTemplateWhereInput>
    OR?: Enumerable<ChecklistTemplateWhereInput>
    NOT?: Enumerable<ChecklistTemplateWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    items?: ChecklistTemplateItemListRelationFilter
  }

  export type ChecklistTemplateOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    items?: ChecklistTemplateItemOrderByRelationAggregateInput
  }

  export type ChecklistTemplateWhereUniqueInput = {
    id?: number
  }

  export type ChecklistTemplateOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: ChecklistTemplateCountOrderByAggregateInput
    _avg?: ChecklistTemplateAvgOrderByAggregateInput
    _max?: ChecklistTemplateMaxOrderByAggregateInput
    _min?: ChecklistTemplateMinOrderByAggregateInput
    _sum?: ChecklistTemplateSumOrderByAggregateInput
  }

  export type ChecklistTemplateScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ChecklistTemplateScalarWhereWithAggregatesInput>
    OR?: Enumerable<ChecklistTemplateScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ChecklistTemplateScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type ChecklistTemplateItemWhereInput = {
    AND?: Enumerable<ChecklistTemplateItemWhereInput>
    OR?: Enumerable<ChecklistTemplateItemWhereInput>
    NOT?: Enumerable<ChecklistTemplateItemWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    type?: StringFilter | string
    working_days?: IntNullableFilter | number | null
    checklist_template_id?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    checklistTemplate?: XOR<ChecklistTemplateRelationFilter, ChecklistTemplateWhereInput> | null
  }

  export type ChecklistTemplateItemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    checklistTemplate?: ChecklistTemplateOrderByWithRelationInput
  }

  export type ChecklistTemplateItemWhereUniqueInput = {
    id?: number
  }

  export type ChecklistTemplateItemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: ChecklistTemplateItemCountOrderByAggregateInput
    _avg?: ChecklistTemplateItemAvgOrderByAggregateInput
    _max?: ChecklistTemplateItemMaxOrderByAggregateInput
    _min?: ChecklistTemplateItemMinOrderByAggregateInput
    _sum?: ChecklistTemplateItemSumOrderByAggregateInput
  }

  export type ChecklistTemplateItemScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ChecklistTemplateItemScalarWhereWithAggregatesInput>
    OR?: Enumerable<ChecklistTemplateItemScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ChecklistTemplateItemScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    type?: StringWithAggregatesFilter | string
    working_days?: IntNullableWithAggregatesFilter | number | null
    checklist_template_id?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type ShippingChecklistItemWhereInput = {
    AND?: Enumerable<ShippingChecklistItemWhereInput>
    OR?: Enumerable<ShippingChecklistItemWhereInput>
    NOT?: Enumerable<ShippingChecklistItemWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    type?: StringFilter | string
    deadline_date?: StringNullableFilter | string | null
    commentary?: StringNullableFilter | string | null
    is_done?: BoolFilter | boolean
    shipping_id?: IntFilter | number
    updated_by_user_id?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    shipping?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    user?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type ShippingChecklistItemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    shipping?: ShippingOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
  }

  export type ShippingChecklistItemWhereUniqueInput = {
    id?: number
  }

  export type ShippingChecklistItemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: ShippingChecklistItemCountOrderByAggregateInput
    _avg?: ShippingChecklistItemAvgOrderByAggregateInput
    _max?: ShippingChecklistItemMaxOrderByAggregateInput
    _min?: ShippingChecklistItemMinOrderByAggregateInput
    _sum?: ShippingChecklistItemSumOrderByAggregateInput
  }

  export type ShippingChecklistItemScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ShippingChecklistItemScalarWhereWithAggregatesInput>
    OR?: Enumerable<ShippingChecklistItemScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ShippingChecklistItemScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    type?: StringWithAggregatesFilter | string
    deadline_date?: StringNullableWithAggregatesFilter | string | null
    commentary?: StringNullableWithAggregatesFilter | string | null
    is_done?: BoolWithAggregatesFilter | boolean
    shipping_id?: IntWithAggregatesFilter | number
    updated_by_user_id?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type CountryWhereInput = {
    AND?: Enumerable<CountryWhereInput>
    OR?: Enumerable<CountryWhereInput>
    NOT?: Enumerable<CountryWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    flag?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    ports?: PortsListRelationFilter
    vessels?: VesselListRelationFilter
  }

  export type CountryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    ports?: portsOrderByRelationAggregateInput
    vessels?: VesselOrderByRelationAggregateInput
  }

  export type CountryWhereUniqueInput = {
    id?: number
  }

  export type CountryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: CountryCountOrderByAggregateInput
    _avg?: CountryAvgOrderByAggregateInput
    _max?: CountryMaxOrderByAggregateInput
    _min?: CountryMinOrderByAggregateInput
    _sum?: CountrySumOrderByAggregateInput
  }

  export type CountryScalarWhereWithAggregatesInput = {
    AND?: Enumerable<CountryScalarWhereWithAggregatesInput>
    OR?: Enumerable<CountryScalarWhereWithAggregatesInput>
    NOT?: Enumerable<CountryScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    flag?: StringNullableWithAggregatesFilter | string | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type migrationsWhereInput = {
    AND?: Enumerable<migrationsWhereInput>
    OR?: Enumerable<migrationsWhereInput>
    NOT?: Enumerable<migrationsWhereInput>
    id?: IntFilter | number
    timestamp?: IntFilter | number
    name?: StringFilter | string
  }

  export type migrationsOrderByWithRelationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
  }

  export type migrationsWhereUniqueInput = {
    id?: number
  }

  export type migrationsOrderByWithAggregationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
    _count?: migrationsCountOrderByAggregateInput
    _avg?: migrationsAvgOrderByAggregateInput
    _max?: migrationsMaxOrderByAggregateInput
    _min?: migrationsMinOrderByAggregateInput
    _sum?: migrationsSumOrderByAggregateInput
  }

  export type migrationsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<migrationsScalarWhereWithAggregatesInput>
    OR?: Enumerable<migrationsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<migrationsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    timestamp?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
  }

  export type port_filesWhereInput = {
    AND?: Enumerable<port_filesWhereInput>
    OR?: Enumerable<port_filesWhereInput>
    NOT?: Enumerable<port_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    portId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    ports?: XOR<PortsRelationFilter, portsWhereInput> | null
  }

  export type port_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    users?: usersOrderByWithRelationInput
    ports?: portsOrderByWithRelationInput
  }

  export type port_filesWhereUniqueInput = {
    id?: number
  }

  export type port_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    _count?: port_filesCountOrderByAggregateInput
    _avg?: port_filesAvgOrderByAggregateInput
    _max?: port_filesMaxOrderByAggregateInput
    _min?: port_filesMinOrderByAggregateInput
    _sum?: port_filesSumOrderByAggregateInput
  }

  export type port_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<port_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<port_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<port_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    portId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    userId?: IntNullableWithAggregatesFilter | number | null
  }

  export type portsWhereInput = {
    AND?: Enumerable<portsWhereInput>
    OR?: Enumerable<portsWhereInput>
    NOT?: Enumerable<portsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    countryId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    slug?: StringNullableFilter | string | null
    country?: XOR<CountryRelationFilter, CountryWhereInput> | null
    berths?: BerthsListRelationFilter
    port_files?: Port_filesListRelationFilter
    shipping_ports?: Shipping_portsListRelationFilter
  }

  export type portsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
    country?: CountryOrderByWithRelationInput
    berths?: berthsOrderByRelationAggregateInput
    port_files?: port_filesOrderByRelationAggregateInput
    shipping_ports?: shipping_portsOrderByRelationAggregateInput
  }

  export type portsWhereUniqueInput = {
    id?: number
  }

  export type portsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
    _count?: portsCountOrderByAggregateInput
    _avg?: portsAvgOrderByAggregateInput
    _max?: portsMaxOrderByAggregateInput
    _min?: portsMinOrderByAggregateInput
    _sum?: portsSumOrderByAggregateInput
  }

  export type portsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<portsScalarWhereWithAggregatesInput>
    OR?: Enumerable<portsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<portsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    countryId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    slug?: StringNullableWithAggregatesFilter | string | null
  }

  export type productsWhereInput = {
    AND?: Enumerable<productsWhereInput>
    OR?: Enumerable<productsWhereInput>
    NOT?: Enumerable<productsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    berth_products?: Berth_productsListRelationFilter
    shipping_products?: Shipping_productsListRelationFilter
  }

  export type productsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    berth_products?: berth_productsOrderByRelationAggregateInput
    shipping_products?: shipping_productsOrderByRelationAggregateInput
  }

  export type productsWhereUniqueInput = {
    id?: number
  }

  export type productsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: productsCountOrderByAggregateInput
    _avg?: productsAvgOrderByAggregateInput
    _max?: productsMaxOrderByAggregateInput
    _min?: productsMinOrderByAggregateInput
    _sum?: productsSumOrderByAggregateInput
  }

  export type productsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<productsScalarWhereWithAggregatesInput>
    OR?: Enumerable<productsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<productsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    description?: StringNullableWithAggregatesFilter | string | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type proforma_filesWhereInput = {
    AND?: Enumerable<proforma_filesWhereInput>
    OR?: Enumerable<proforma_filesWhereInput>
    NOT?: Enumerable<proforma_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    proformaId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    proformas?: XOR<ProformasRelationFilter, proformasWhereInput> | null
  }

  export type proforma_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    proformas?: proformasOrderByWithRelationInput
  }

  export type proforma_filesWhereUniqueInput = {
    id?: number
  }

  export type proforma_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: proforma_filesCountOrderByAggregateInput
    _avg?: proforma_filesAvgOrderByAggregateInput
    _max?: proforma_filesMaxOrderByAggregateInput
    _min?: proforma_filesMinOrderByAggregateInput
    _sum?: proforma_filesSumOrderByAggregateInput
  }

  export type proforma_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<proforma_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<proforma_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<proforma_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    proformaId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type proformasWhereInput = {
    AND?: Enumerable<proformasWhereInput>
    OR?: Enumerable<proformasWhereInput>
    NOT?: Enumerable<proformasWhereInput>
    id?: IntFilter | number
    taxes?: StringNullableFilter | string | null
    totalValue?: IntNullableFilter | number | null
    berthedHours?: IntNullableFilter | number | null
    berthProductId?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    idHash?: StringNullableFilter | string | null
    applicantName?: StringNullableFilter | string | null
    applicantEmail?: StringNullableFilter | string | null
    vesselName?: StringNullableFilter | string | null
    imo?: StringNullableFilter | string | null
    deadWeightTonnage?: FloatNullableFilter | number | null
    lengthOverall?: FloatNullableFilter | number | null
    grossTonnage?: FloatNullableFilter | number | null
    package?: StringNullableFilter | string | null
    builtYear?: IntNullableFilter | number | null
    agencyType?: StringNullableFilter | string | null
    operationType?: StringNullableFilter | string | null
    productTonnage?: FloatNullableFilter | number | null
    usd?: FloatNullableFilter | number | null
    isCargillInternational?: BoolNullableFilter | boolean | null
    beam?: FloatNullableFilter | number | null
    etb?: DateTimeNullableFilter | Date | string | null
    draft?: FloatNullableFilter | number | null
    requestingCustomer?: StringNullableFilter | string | null
    vesselType?: StringNullableFilter | string | null
    berth_products?: XOR<Berth_productsRelationFilter, berth_productsWhereInput>
    proforma_files?: Proforma_filesListRelationFilter
  }

  export type proformasOrderByWithRelationInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
    berth_products?: berth_productsOrderByWithRelationInput
    proforma_files?: proforma_filesOrderByRelationAggregateInput
  }

  export type proformasWhereUniqueInput = {
    id?: number
  }

  export type proformasOrderByWithAggregationInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
    _count?: proformasCountOrderByAggregateInput
    _avg?: proformasAvgOrderByAggregateInput
    _max?: proformasMaxOrderByAggregateInput
    _min?: proformasMinOrderByAggregateInput
    _sum?: proformasSumOrderByAggregateInput
  }

  export type proformasScalarWhereWithAggregatesInput = {
    AND?: Enumerable<proformasScalarWhereWithAggregatesInput>
    OR?: Enumerable<proformasScalarWhereWithAggregatesInput>
    NOT?: Enumerable<proformasScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    taxes?: StringNullableWithAggregatesFilter | string | null
    totalValue?: IntNullableWithAggregatesFilter | number | null
    berthedHours?: IntNullableWithAggregatesFilter | number | null
    berthProductId?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    idHash?: StringNullableWithAggregatesFilter | string | null
    applicantName?: StringNullableWithAggregatesFilter | string | null
    applicantEmail?: StringNullableWithAggregatesFilter | string | null
    vesselName?: StringNullableWithAggregatesFilter | string | null
    imo?: StringNullableWithAggregatesFilter | string | null
    deadWeightTonnage?: FloatNullableWithAggregatesFilter | number | null
    lengthOverall?: FloatNullableWithAggregatesFilter | number | null
    grossTonnage?: FloatNullableWithAggregatesFilter | number | null
    package?: StringNullableWithAggregatesFilter | string | null
    builtYear?: IntNullableWithAggregatesFilter | number | null
    agencyType?: StringNullableWithAggregatesFilter | string | null
    operationType?: StringNullableWithAggregatesFilter | string | null
    productTonnage?: FloatNullableWithAggregatesFilter | number | null
    usd?: FloatNullableWithAggregatesFilter | number | null
    isCargillInternational?: BoolNullableWithAggregatesFilter | boolean | null
    beam?: FloatNullableWithAggregatesFilter | number | null
    etb?: DateTimeNullableWithAggregatesFilter | Date | string | null
    draft?: FloatNullableWithAggregatesFilter | number | null
    requestingCustomer?: StringNullableWithAggregatesFilter | string | null
    vesselType?: StringNullableWithAggregatesFilter | string | null
  }

  export type shipping_documentsWhereInput = {
    AND?: Enumerable<shipping_documentsWhereInput>
    OR?: Enumerable<shipping_documentsWhereInput>
    NOT?: Enumerable<shipping_documentsWhereInput>
    id?: IntFilter | number
    type?: StringNullableFilter | string | null
    documentNumber?: StringNullableFilter | string | null
    consignee?: StringNullableFilter | string | null
    vesselName?: StringNullableFilter | string | null
    portOfLoading?: StringNullableFilter | string | null
    portOfDischarge?: StringNullableFilter | string | null
    notify?: StringNullableFilter | string | null
    productName?: StringNullableFilter | string | null
    productNameExtraInfo?: StringNullableFilter | string | null
    productWeightExtraInfo?: StringNullableFilter | string | null
    freightType?: StringNullableFilter | string | null
    charterPartyDate?: StringNullableFilter | string | null
    shipBoardedDate?: StringNullableFilter | string | null
    issuePlaceDate?: StringNullableFilter | string | null
    numberOfOriginalBillOfLanding?: FloatNullableFilter | number | null
    shipper?: StringNullableFilter | string | null
    masterName?: StringNullableFilter | string | null
    signature?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    userId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    order?: IntNullableFilter | number | null
    subsetId?: IntNullableFilter | number | null
    productGrossWeight?: FloatNullableFilter | number | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    shipping_documents?: XOR<Shipping_documentsRelationFilter, shipping_documentsWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    other_shipping_documents?: Shipping_documentsListRelationFilter
  }

  export type shipping_documentsOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    documentNumber?: SortOrder
    consignee?: SortOrder
    vesselName?: SortOrder
    portOfLoading?: SortOrder
    portOfDischarge?: SortOrder
    notify?: SortOrder
    productName?: SortOrder
    productNameExtraInfo?: SortOrder
    productWeightExtraInfo?: SortOrder
    freightType?: SortOrder
    charterPartyDate?: SortOrder
    shipBoardedDate?: SortOrder
    issuePlaceDate?: SortOrder
    numberOfOriginalBillOfLanding?: SortOrder
    shipper?: SortOrder
    masterName?: SortOrder
    signature?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subsetId?: SortOrder
    productGrossWeight?: SortOrder
    shippings?: ShippingOrderByWithRelationInput
    shipping_documents?: shipping_documentsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    other_shipping_documents?: shipping_documentsOrderByRelationAggregateInput
  }

  export type shipping_documentsWhereUniqueInput = {
    id?: number
  }

  export type shipping_documentsOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    documentNumber?: SortOrder
    consignee?: SortOrder
    vesselName?: SortOrder
    portOfLoading?: SortOrder
    portOfDischarge?: SortOrder
    notify?: SortOrder
    productName?: SortOrder
    productNameExtraInfo?: SortOrder
    productWeightExtraInfo?: SortOrder
    freightType?: SortOrder
    charterPartyDate?: SortOrder
    shipBoardedDate?: SortOrder
    issuePlaceDate?: SortOrder
    numberOfOriginalBillOfLanding?: SortOrder
    shipper?: SortOrder
    masterName?: SortOrder
    signature?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subsetId?: SortOrder
    productGrossWeight?: SortOrder
    _count?: shipping_documentsCountOrderByAggregateInput
    _avg?: shipping_documentsAvgOrderByAggregateInput
    _max?: shipping_documentsMaxOrderByAggregateInput
    _min?: shipping_documentsMinOrderByAggregateInput
    _sum?: shipping_documentsSumOrderByAggregateInput
  }

  export type shipping_documentsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<shipping_documentsScalarWhereWithAggregatesInput>
    OR?: Enumerable<shipping_documentsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<shipping_documentsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    type?: StringNullableWithAggregatesFilter | string | null
    documentNumber?: StringNullableWithAggregatesFilter | string | null
    consignee?: StringNullableWithAggregatesFilter | string | null
    vesselName?: StringNullableWithAggregatesFilter | string | null
    portOfLoading?: StringNullableWithAggregatesFilter | string | null
    portOfDischarge?: StringNullableWithAggregatesFilter | string | null
    notify?: StringNullableWithAggregatesFilter | string | null
    productName?: StringNullableWithAggregatesFilter | string | null
    productNameExtraInfo?: StringNullableWithAggregatesFilter | string | null
    productWeightExtraInfo?: StringNullableWithAggregatesFilter | string | null
    freightType?: StringNullableWithAggregatesFilter | string | null
    charterPartyDate?: StringNullableWithAggregatesFilter | string | null
    shipBoardedDate?: StringNullableWithAggregatesFilter | string | null
    issuePlaceDate?: StringNullableWithAggregatesFilter | string | null
    numberOfOriginalBillOfLanding?: FloatNullableWithAggregatesFilter | number | null
    shipper?: StringNullableWithAggregatesFilter | string | null
    masterName?: StringNullableWithAggregatesFilter | string | null
    signature?: StringNullableWithAggregatesFilter | string | null
    shippingId?: IntNullableWithAggregatesFilter | number | null
    userId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    order?: IntNullableWithAggregatesFilter | number | null
    subsetId?: IntNullableWithAggregatesFilter | number | null
    productGrossWeight?: FloatNullableWithAggregatesFilter | number | null
  }

  export type shipping_filesWhereInput = {
    AND?: Enumerable<shipping_filesWhereInput>
    OR?: Enumerable<shipping_filesWhereInput>
    NOT?: Enumerable<shipping_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type shipping_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    shippings?: ShippingOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type shipping_filesWhereUniqueInput = {
    id?: number
  }

  export type shipping_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    _count?: shipping_filesCountOrderByAggregateInput
    _avg?: shipping_filesAvgOrderByAggregateInput
    _max?: shipping_filesMaxOrderByAggregateInput
    _min?: shipping_filesMinOrderByAggregateInput
    _sum?: shipping_filesSumOrderByAggregateInput
  }

  export type shipping_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<shipping_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<shipping_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<shipping_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    shippingId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    userId?: IntNullableWithAggregatesFilter | number | null
  }

  export type shipping_portsWhereInput = {
    AND?: Enumerable<shipping_portsWhereInput>
    OR?: Enumerable<shipping_portsWhereInput>
    NOT?: Enumerable<shipping_portsWhereInput>
    id?: IntFilter | number
    estimatedTimeOfArrival?: DateTimeNullableFilter | Date | string | null
    estimatedTimeOfBerthing?: DateTimeNullableFilter | Date | string | null
    estimatedTimeOfSailing?: DateTimeNullableFilter | Date | string | null
    timeOfArrival?: DateTimeNullableFilter | Date | string | null
    timeOfBerthing?: DateTimeNullableFilter | Date | string | null
    timeOfSailing?: DateTimeNullableFilter | Date | string | null
    shippingId?: IntNullableFilter | number | null
    portId?: IntNullableFilter | number | null
    berthId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    berths?: XOR<BerthsRelationFilter, berthsWhereInput> | null
    ports?: XOR<PortsRelationFilter, portsWhereInput> | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
  }

  export type shipping_portsOrderByWithRelationInput = {
    id?: SortOrder
    estimatedTimeOfArrival?: SortOrder
    estimatedTimeOfBerthing?: SortOrder
    estimatedTimeOfSailing?: SortOrder
    timeOfArrival?: SortOrder
    timeOfBerthing?: SortOrder
    timeOfSailing?: SortOrder
    shippingId?: SortOrder
    portId?: SortOrder
    berthId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    berths?: berthsOrderByWithRelationInput
    ports?: portsOrderByWithRelationInput
    shippings?: ShippingOrderByWithRelationInput
  }

  export type shipping_portsWhereUniqueInput = {
    id?: number
  }

  export type shipping_portsOrderByWithAggregationInput = {
    id?: SortOrder
    estimatedTimeOfArrival?: SortOrder
    estimatedTimeOfBerthing?: SortOrder
    estimatedTimeOfSailing?: SortOrder
    timeOfArrival?: SortOrder
    timeOfBerthing?: SortOrder
    timeOfSailing?: SortOrder
    shippingId?: SortOrder
    portId?: SortOrder
    berthId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: shipping_portsCountOrderByAggregateInput
    _avg?: shipping_portsAvgOrderByAggregateInput
    _max?: shipping_portsMaxOrderByAggregateInput
    _min?: shipping_portsMinOrderByAggregateInput
    _sum?: shipping_portsSumOrderByAggregateInput
  }

  export type shipping_portsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<shipping_portsScalarWhereWithAggregatesInput>
    OR?: Enumerable<shipping_portsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<shipping_portsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    estimatedTimeOfArrival?: DateTimeNullableWithAggregatesFilter | Date | string | null
    estimatedTimeOfBerthing?: DateTimeNullableWithAggregatesFilter | Date | string | null
    estimatedTimeOfSailing?: DateTimeNullableWithAggregatesFilter | Date | string | null
    timeOfArrival?: DateTimeNullableWithAggregatesFilter | Date | string | null
    timeOfBerthing?: DateTimeNullableWithAggregatesFilter | Date | string | null
    timeOfSailing?: DateTimeNullableWithAggregatesFilter | Date | string | null
    shippingId?: IntNullableWithAggregatesFilter | number | null
    portId?: IntNullableWithAggregatesFilter | number | null
    berthId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type shipping_productsWhereInput = {
    AND?: Enumerable<shipping_productsWhereInput>
    OR?: Enumerable<shipping_productsWhereInput>
    NOT?: Enumerable<shipping_productsWhereInput>
    id?: IntFilter | number
    weight?: FloatNullableFilter | number | null
    shippingId?: IntNullableFilter | number | null
    productId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    products?: XOR<ProductsRelationFilter, productsWhereInput> | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
  }

  export type shipping_productsOrderByWithRelationInput = {
    id?: SortOrder
    weight?: SortOrder
    shippingId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    products?: productsOrderByWithRelationInput
    shippings?: ShippingOrderByWithRelationInput
  }

  export type shipping_productsWhereUniqueInput = {
    id?: number
  }

  export type shipping_productsOrderByWithAggregationInput = {
    id?: SortOrder
    weight?: SortOrder
    shippingId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: shipping_productsCountOrderByAggregateInput
    _avg?: shipping_productsAvgOrderByAggregateInput
    _max?: shipping_productsMaxOrderByAggregateInput
    _min?: shipping_productsMinOrderByAggregateInput
    _sum?: shipping_productsSumOrderByAggregateInput
  }

  export type shipping_productsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<shipping_productsScalarWhereWithAggregatesInput>
    OR?: Enumerable<shipping_productsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<shipping_productsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    weight?: FloatNullableWithAggregatesFilter | number | null
    shippingId?: IntNullableWithAggregatesFilter | number | null
    productId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type ShippingWhereInput = {
    AND?: Enumerable<ShippingWhereInput>
    OR?: Enumerable<ShippingWhereInput>
    NOT?: Enumerable<ShippingWhereInput>
    id?: IntFilter | number
    status?: StringNullableFilter | string | null
    owner_head_name?: StringNullableFilter | string | null
    owner_head_address?: StringNullableFilter | string | null
    disponent_owner?: StringNullableFilter | string | null
    charter_name?: StringNullableFilter | string | null
    master_name?: StringNullableFilter | string | null
    master_email?: StringNullableFilter | string | null
    estimated_draft_arrival?: StringNullableFilter | string | null
    estimated_draft_departure?: StringNullableFilter | string | null
    arrival_draft?: IntNullableFilter | number | null
    depart_draft?: IntNullableFilter | number | null
    vessel_operator?: StringNullableFilter | string | null
    vessel_operator_email?: StringNullableFilter | string | null
    operation_type?: StringNullableFilter | string | null
    agency_type?: StringNullableFilter | string | null
    voyage_number?: StringNullableFilter | string | null
    external_code?: StringNullableFilter | string | null
    comments?: StringNullableFilter | string | null
    last_port?: StringNullableFilter | string | null
    next_port?: StringNullableFilter | string | null
    broker?: StringNullableFilter | string | null
    boat?: StringNullableFilter | string | null
    tugs?: StringNullableFilter | string | null
    garbage?: StringNullableFilter | string | null
    last_cargoes?: StringNullableFilter | string | null
    sscec_port?: StringNullableFilter | string | null
    sscec_exp?: StringNullableFilter | string | null
    in_marsat_c_number?: StringNullableFilter | string | null
    master_phone_01?: StringNullableFilter | string | null
    master_phone_02?: StringNullableFilter | string | null
    vessel_expert?: StringNullableFilter | string | null
    vessel_expert_phone01?: StringNullableFilter | string | null
    vessel_expert_phone02?: StringNullableFilter | string | null
    vessel_expert_alternate?: StringNullableFilter | string | null
    vessel_expert_alternate_phone01?: StringNullableFilter | string | null
    vessel_expert_alternate_phone02?: StringNullableFilter | string | null
    vessel_operator_phone01?: StringNullableFilter | string | null
    vessel_operator_phone02?: StringNullableFilter | string | null
    vessel_operator_city_country?: StringNullableFilter | string | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    vessel_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    total_load_expected?: IntNullableFilter | number | null
    total_load_actual?: IntNullableFilter | number | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    vessel?: XOR<VesselRelationFilter, VesselWhereInput> | null
    shipping_documents?: Shipping_documentsListRelationFilter
    shipping_files?: Shipping_filesListRelationFilter
    shipping_ports?: Shipping_portsListRelationFilter
    shipping_products?: Shipping_productsListRelationFilter
    subsets?: SubsetsListRelationFilter
    inquires?: InquiresListRelationFilter
    ShippingChecklistItem?: ShippingChecklistItemListRelationFilter
  }

  export type ShippingOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
    users?: usersOrderByWithRelationInput
    vessel?: VesselOrderByWithRelationInput
    shipping_documents?: shipping_documentsOrderByRelationAggregateInput
    shipping_files?: shipping_filesOrderByRelationAggregateInput
    shipping_ports?: shipping_portsOrderByRelationAggregateInput
    shipping_products?: shipping_productsOrderByRelationAggregateInput
    subsets?: subsetsOrderByRelationAggregateInput
    inquires?: inquiresOrderByRelationAggregateInput
    ShippingChecklistItem?: ShippingChecklistItemOrderByRelationAggregateInput
  }

  export type ShippingWhereUniqueInput = {
    id?: number
  }

  export type ShippingOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
    _count?: ShippingCountOrderByAggregateInput
    _avg?: ShippingAvgOrderByAggregateInput
    _max?: ShippingMaxOrderByAggregateInput
    _min?: ShippingMinOrderByAggregateInput
    _sum?: ShippingSumOrderByAggregateInput
  }

  export type ShippingScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ShippingScalarWhereWithAggregatesInput>
    OR?: Enumerable<ShippingScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ShippingScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    status?: StringNullableWithAggregatesFilter | string | null
    owner_head_name?: StringNullableWithAggregatesFilter | string | null
    owner_head_address?: StringNullableWithAggregatesFilter | string | null
    disponent_owner?: StringNullableWithAggregatesFilter | string | null
    charter_name?: StringNullableWithAggregatesFilter | string | null
    master_name?: StringNullableWithAggregatesFilter | string | null
    master_email?: StringNullableWithAggregatesFilter | string | null
    estimated_draft_arrival?: StringNullableWithAggregatesFilter | string | null
    estimated_draft_departure?: StringNullableWithAggregatesFilter | string | null
    arrival_draft?: IntNullableWithAggregatesFilter | number | null
    depart_draft?: IntNullableWithAggregatesFilter | number | null
    vessel_operator?: StringNullableWithAggregatesFilter | string | null
    vessel_operator_email?: StringNullableWithAggregatesFilter | string | null
    operation_type?: StringNullableWithAggregatesFilter | string | null
    agency_type?: StringNullableWithAggregatesFilter | string | null
    voyage_number?: StringNullableWithAggregatesFilter | string | null
    external_code?: StringNullableWithAggregatesFilter | string | null
    comments?: StringNullableWithAggregatesFilter | string | null
    last_port?: StringNullableWithAggregatesFilter | string | null
    next_port?: StringNullableWithAggregatesFilter | string | null
    broker?: StringNullableWithAggregatesFilter | string | null
    boat?: StringNullableWithAggregatesFilter | string | null
    tugs?: StringNullableWithAggregatesFilter | string | null
    garbage?: StringNullableWithAggregatesFilter | string | null
    last_cargoes?: StringNullableWithAggregatesFilter | string | null
    sscec_port?: StringNullableWithAggregatesFilter | string | null
    sscec_exp?: StringNullableWithAggregatesFilter | string | null
    in_marsat_c_number?: StringNullableWithAggregatesFilter | string | null
    master_phone_01?: StringNullableWithAggregatesFilter | string | null
    master_phone_02?: StringNullableWithAggregatesFilter | string | null
    vessel_expert?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_phone01?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_phone02?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_alternate?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_alternate_phone01?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_alternate_phone02?: StringNullableWithAggregatesFilter | string | null
    vessel_operator_phone01?: StringNullableWithAggregatesFilter | string | null
    vessel_operator_phone02?: StringNullableWithAggregatesFilter | string | null
    vessel_operator_city_country?: StringNullableWithAggregatesFilter | string | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    vessel_id?: IntNullableWithAggregatesFilter | number | null
    user_id?: IntNullableWithAggregatesFilter | number | null
    total_load_expected?: IntNullableWithAggregatesFilter | number | null
    total_load_actual?: IntNullableWithAggregatesFilter | number | null
  }

  export type subsetsWhereInput = {
    AND?: Enumerable<subsetsWhereInput>
    OR?: Enumerable<subsetsWhereInput>
    NOT?: Enumerable<subsetsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
  }

  export type subsetsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    shippings?: ShippingOrderByWithRelationInput
  }

  export type subsetsWhereUniqueInput = {
    id?: number
  }

  export type subsetsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: subsetsCountOrderByAggregateInput
    _avg?: subsetsAvgOrderByAggregateInput
    _max?: subsetsMaxOrderByAggregateInput
    _min?: subsetsMinOrderByAggregateInput
    _sum?: subsetsSumOrderByAggregateInput
  }

  export type subsetsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<subsetsScalarWhereWithAggregatesInput>
    OR?: Enumerable<subsetsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<subsetsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    shippingId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type user_filesWhereInput = {
    AND?: Enumerable<user_filesWhereInput>
    OR?: Enumerable<user_filesWhereInput>
    NOT?: Enumerable<user_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    userId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type user_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_filesWhereUniqueInput = {
    id?: number
  }

  export type user_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: user_filesCountOrderByAggregateInput
    _avg?: user_filesAvgOrderByAggregateInput
    _max?: user_filesMaxOrderByAggregateInput
    _min?: user_filesMinOrderByAggregateInput
    _sum?: user_filesSumOrderByAggregateInput
  }

  export type user_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<user_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<user_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<user_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    userId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type usersWhereInput = {
    AND?: Enumerable<usersWhereInput>
    OR?: Enumerable<usersWhereInput>
    NOT?: Enumerable<usersWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    email?: StringNullableFilter | string | null
    password?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    shipping_documents?: Shipping_documentsListRelationFilter
    shipping_files?: Shipping_filesListRelationFilter
    shippings?: ShippingListRelationFilter
    user_files?: User_filesListRelationFilter
    inquires?: InquiresListRelationFilter
    inquires_comments?: Inquires_commentsListRelationFilter
    ShippingChecklistItem?: ShippingChecklistItemListRelationFilter
    group_emails?: Group_emailsListRelationFilter
    port_files?: Port_filesListRelationFilter
    vessel_files?: Vessel_filesListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    shipping_documents?: shipping_documentsOrderByRelationAggregateInput
    shipping_files?: shipping_filesOrderByRelationAggregateInput
    shippings?: ShippingOrderByRelationAggregateInput
    user_files?: user_filesOrderByRelationAggregateInput
    inquires?: inquiresOrderByRelationAggregateInput
    inquires_comments?: inquires_commentsOrderByRelationAggregateInput
    ShippingChecklistItem?: ShippingChecklistItemOrderByRelationAggregateInput
    group_emails?: group_emailsOrderByRelationAggregateInput
    port_files?: port_filesOrderByRelationAggregateInput
    vessel_files?: vessel_filesOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = {
    id?: number
  }

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<usersScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    email?: StringNullableWithAggregatesFilter | string | null
    password?: StringNullableWithAggregatesFilter | string | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type vessel_filesWhereInput = {
    AND?: Enumerable<vessel_filesWhereInput>
    OR?: Enumerable<vessel_filesWhereInput>
    NOT?: Enumerable<vessel_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    vesselId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    vessels?: XOR<VesselRelationFilter, VesselWhereInput> | null
  }

  export type vessel_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vesselId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    users?: usersOrderByWithRelationInput
    vessels?: VesselOrderByWithRelationInput
  }

  export type vessel_filesWhereUniqueInput = {
    id?: number
  }

  export type vessel_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vesselId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    _count?: vessel_filesCountOrderByAggregateInput
    _avg?: vessel_filesAvgOrderByAggregateInput
    _max?: vessel_filesMaxOrderByAggregateInput
    _min?: vessel_filesMinOrderByAggregateInput
    _sum?: vessel_filesSumOrderByAggregateInput
  }

  export type vessel_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<vessel_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<vessel_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<vessel_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    vesselId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    userId?: IntNullableWithAggregatesFilter | number | null
  }

  export type VesselWhereInput = {
    AND?: Enumerable<VesselWhereInput>
    OR?: Enumerable<VesselWhereInput>
    NOT?: Enumerable<VesselWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    imo?: StringNullableFilter | string | null
    call_sign?: StringNullableFilter | string | null
    satellite_telephone?: StringNullableFilter | string | null
    classification_society?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    length_overall?: FloatNullableFilter | number | null
    dead_weight_tonnage?: FloatNullableFilter | number | null
    beam?: FloatNullableFilter | number | null
    cubic_meters?: FloatNullableFilter | number | null
    gross_tonnage?: FloatNullableFilter | number | null
    net_tonnage?: FloatNullableFilter | number | null
    panama_gross_tonnage?: FloatNullableFilter | number | null
    panama_net_tonnage?: FloatNullableFilter | number | null
    suez_gross_tonnage?: FloatNullableFilter | number | null
    suez_net_tonnage?: FloatNullableFilter | number | null
    reduced_gross_tonnage?: FloatNullableFilter | number | null
    length_between_perpendiculars?: FloatNullableFilter | number | null
    molded_depth?: FloatNullableFilter | number | null
    number_of_holds?: FloatNullableFilter | number | null
    number_of_tanks?: FloatNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    country_id?: IntNullableFilter | number | null
    draft_sw?: StringNullableFilter | string | null
    built_year?: IntNullableFilter | number | null
    country?: XOR<CountryRelationFilter, CountryWhereInput> | null
    shippings?: ShippingListRelationFilter
    vessel_files?: Vessel_filesListRelationFilter
    group_emails?: Group_emailsListRelationFilter
  }

  export type VesselOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
    country?: CountryOrderByWithRelationInput
    shippings?: ShippingOrderByRelationAggregateInput
    vessel_files?: vessel_filesOrderByRelationAggregateInput
    group_emails?: group_emailsOrderByRelationAggregateInput
  }

  export type VesselWhereUniqueInput = {
    id?: number
    imo?: string
  }

  export type VesselOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
    _count?: VesselCountOrderByAggregateInput
    _avg?: VesselAvgOrderByAggregateInput
    _max?: VesselMaxOrderByAggregateInput
    _min?: VesselMinOrderByAggregateInput
    _sum?: VesselSumOrderByAggregateInput
  }

  export type VesselScalarWhereWithAggregatesInput = {
    AND?: Enumerable<VesselScalarWhereWithAggregatesInput>
    OR?: Enumerable<VesselScalarWhereWithAggregatesInput>
    NOT?: Enumerable<VesselScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    imo?: StringNullableWithAggregatesFilter | string | null
    call_sign?: StringNullableWithAggregatesFilter | string | null
    satellite_telephone?: StringNullableWithAggregatesFilter | string | null
    classification_society?: StringNullableWithAggregatesFilter | string | null
    type?: StringNullableWithAggregatesFilter | string | null
    length_overall?: FloatNullableWithAggregatesFilter | number | null
    dead_weight_tonnage?: FloatNullableWithAggregatesFilter | number | null
    beam?: FloatNullableWithAggregatesFilter | number | null
    cubic_meters?: FloatNullableWithAggregatesFilter | number | null
    gross_tonnage?: FloatNullableWithAggregatesFilter | number | null
    net_tonnage?: FloatNullableWithAggregatesFilter | number | null
    panama_gross_tonnage?: FloatNullableWithAggregatesFilter | number | null
    panama_net_tonnage?: FloatNullableWithAggregatesFilter | number | null
    suez_gross_tonnage?: FloatNullableWithAggregatesFilter | number | null
    suez_net_tonnage?: FloatNullableWithAggregatesFilter | number | null
    reduced_gross_tonnage?: FloatNullableWithAggregatesFilter | number | null
    length_between_perpendiculars?: FloatNullableWithAggregatesFilter | number | null
    molded_depth?: FloatNullableWithAggregatesFilter | number | null
    number_of_holds?: FloatNullableWithAggregatesFilter | number | null
    number_of_tanks?: FloatNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    country_id?: IntNullableWithAggregatesFilter | number | null
    draft_sw?: StringNullableWithAggregatesFilter | string | null
    built_year?: IntNullableWithAggregatesFilter | number | null
  }

  export type inquiresWhereInput = {
    AND?: Enumerable<inquiresWhereInput>
    OR?: Enumerable<inquiresWhereInput>
    NOT?: Enumerable<inquiresWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    shipping_id?: IntNullableFilter | number | null
    updated_by_user_id?: IntNullableFilter | number | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    inquires_comments?: Inquires_commentsListRelationFilter
    deleted?: BoolFilter | boolean
  }

  export type inquiresOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    shippings?: ShippingOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    inquires_comments?: inquires_commentsOrderByRelationAggregateInput
    deleted?: SortOrder
  }

  export type inquiresWhereUniqueInput = {
    id?: number
  }

  export type inquiresOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    deleted?: SortOrder
    _count?: inquiresCountOrderByAggregateInput
    _avg?: inquiresAvgOrderByAggregateInput
    _max?: inquiresMaxOrderByAggregateInput
    _min?: inquiresMinOrderByAggregateInput
    _sum?: inquiresSumOrderByAggregateInput
  }

  export type inquiresScalarWhereWithAggregatesInput = {
    AND?: Enumerable<inquiresScalarWhereWithAggregatesInput>
    OR?: Enumerable<inquiresScalarWhereWithAggregatesInput>
    NOT?: Enumerable<inquiresScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    type?: StringNullableWithAggregatesFilter | string | null
    shipping_id?: IntNullableWithAggregatesFilter | number | null
    updated_by_user_id?: IntNullableWithAggregatesFilter | number | null
    deleted?: BoolWithAggregatesFilter | boolean
  }

  export type inquires_commentsWhereInput = {
    AND?: Enumerable<inquires_commentsWhereInput>
    OR?: Enumerable<inquires_commentsWhereInput>
    NOT?: Enumerable<inquires_commentsWhereInput>
    id?: IntFilter | number
    body?: StringNullableFilter | string | null
    is_done?: BoolFilter | boolean
    inquire_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    inquires?: XOR<InquiresRelationFilter, inquiresWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    deleted?: BoolFilter | boolean
  }

  export type inquires_commentsOrderByWithRelationInput = {
    id?: SortOrder
    body?: SortOrder
    is_done?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    inquires?: inquiresOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    deleted?: SortOrder
  }

  export type inquires_commentsWhereUniqueInput = {
    id?: number
  }

  export type inquires_commentsOrderByWithAggregationInput = {
    id?: SortOrder
    body?: SortOrder
    is_done?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    deleted?: SortOrder
    _count?: inquires_commentsCountOrderByAggregateInput
    _avg?: inquires_commentsAvgOrderByAggregateInput
    _max?: inquires_commentsMaxOrderByAggregateInput
    _min?: inquires_commentsMinOrderByAggregateInput
    _sum?: inquires_commentsSumOrderByAggregateInput
  }

  export type inquires_commentsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<inquires_commentsScalarWhereWithAggregatesInput>
    OR?: Enumerable<inquires_commentsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<inquires_commentsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    body?: StringNullableWithAggregatesFilter | string | null
    is_done?: BoolWithAggregatesFilter | boolean
    inquire_id?: IntNullableWithAggregatesFilter | number | null
    user_id?: IntNullableWithAggregatesFilter | number | null
    deleted?: BoolWithAggregatesFilter | boolean
  }

  export type group_emailsWhereInput = {
    AND?: Enumerable<group_emailsWhereInput>
    OR?: Enumerable<group_emailsWhereInput>
    NOT?: Enumerable<group_emailsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    emails?: StringNullableFilter | string | null
    vessel_id?: IntNullableFilter | number | null
    updated_by_user_id?: IntNullableFilter | number | null
    vessel?: XOR<VesselRelationFilter, VesselWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type group_emailsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
    vessel?: VesselOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type group_emailsWhereUniqueInput = {
    id?: number
  }

  export type group_emailsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
    _count?: group_emailsCountOrderByAggregateInput
    _avg?: group_emailsAvgOrderByAggregateInput
    _max?: group_emailsMaxOrderByAggregateInput
    _min?: group_emailsMinOrderByAggregateInput
    _sum?: group_emailsSumOrderByAggregateInput
  }

  export type group_emailsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<group_emailsScalarWhereWithAggregatesInput>
    OR?: Enumerable<group_emailsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<group_emailsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    emails?: StringNullableWithAggregatesFilter | string | null
    vessel_id?: IntNullableWithAggregatesFilter | number | null
    updated_by_user_id?: IntNullableWithAggregatesFilter | number | null
  }

  export type berth_productsCreateInput = {
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berths: berthsCreateNestedOneWithoutBerth_productsInput
    products: productsCreateNestedOneWithoutBerth_productsInput
    proformas?: proformasCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedCreateInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    proformas?: proformasUncheckedCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsUpdateInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneRequiredWithoutBerth_productsInput
    products?: productsUpdateOneRequiredWithoutBerth_productsInput
    proformas?: proformasUpdateManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    berthId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proformas?: proformasUncheckedUpdateManyWithoutBerth_productsInput
  }

  export type berth_productsCreateManyInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type berth_productsUpdateManyMutationInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type berth_productsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    berthId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type berthsCreateInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    ports?: portsCreateNestedOneWithoutBerthsInput
    berth_products?: berth_productsCreateNestedManyWithoutBerthsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutBerthsInput
  }

  export type berthsUncheckedCreateInput = {
    id?: number
    name?: string | null
    description?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutBerthsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutBerthsInput
  }

  export type berthsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    ports?: portsUpdateOneWithoutBerthsInput
    berth_products?: berth_productsUpdateManyWithoutBerthsInput
    shipping_ports?: shipping_portsUpdateManyWithoutBerthsInput
  }

  export type berthsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutBerthsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutBerthsInput
  }

  export type berthsCreateManyInput = {
    id?: number
    name?: string | null
    description?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
  }

  export type berthsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type berthsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ChecklistTemplateCreateInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    items?: ChecklistTemplateItemCreateNestedManyWithoutChecklistTemplateInput
  }

  export type ChecklistTemplateUncheckedCreateInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    items?: ChecklistTemplateItemUncheckedCreateNestedManyWithoutChecklistTemplateInput
  }

  export type ChecklistTemplateUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: ChecklistTemplateItemUpdateManyWithoutChecklistTemplateInput
  }

  export type ChecklistTemplateUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: ChecklistTemplateItemUncheckedUpdateManyWithoutChecklistTemplateInput
  }

  export type ChecklistTemplateCreateManyInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ChecklistTemplateUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemCreateInput = {
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    checklistTemplate?: ChecklistTemplateCreateNestedOneWithoutItemsInput
  }

  export type ChecklistTemplateItemUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    checklist_template_id: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checklistTemplate?: ChecklistTemplateUpdateOneWithoutItemsInput
  }

  export type ChecklistTemplateItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    checklist_template_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    checklist_template_id: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    checklist_template_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemCreateInput = {
    name: string
    description?: string | null
    type: string
    deadline_date?: string | null
    commentary?: string | null
    is_done: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping?: ShippingCreateNestedOneWithoutShippingChecklistItemInput
    user?: usersCreateNestedOneWithoutShippingChecklistItemInput
  }

  export type ShippingChecklistItemUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: string | null
    commentary?: string | null
    is_done: boolean
    shipping_id: number
    updated_by_user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ShippingChecklistItemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping?: ShippingUpdateOneWithoutShippingChecklistItemInput
    user?: usersUpdateOneWithoutShippingChecklistItemInput
  }

  export type ShippingChecklistItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    shipping_id?: IntFieldUpdateOperationsInput | number
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: string | null
    commentary?: string | null
    is_done: boolean
    shipping_id: number
    updated_by_user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ShippingChecklistItemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    shipping_id?: IntFieldUpdateOperationsInput | number
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CountryCreateInput = {
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsCreateNestedManyWithoutCountryInput
    vessels?: VesselCreateNestedManyWithoutCountryInput
  }

  export type CountryUncheckedCreateInput = {
    id?: number
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsUncheckedCreateNestedManyWithoutCountryInput
    vessels?: VesselUncheckedCreateNestedManyWithoutCountryInput
  }

  export type CountryUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUpdateManyWithoutCountryInput
    vessels?: VesselUpdateManyWithoutCountryInput
  }

  export type CountryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUncheckedUpdateManyWithoutCountryInput
    vessels?: VesselUncheckedUpdateManyWithoutCountryInput
  }

  export type CountryCreateManyInput = {
    id?: number
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type CountryUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CountryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type migrationsCreateInput = {
    timestamp: number
    name: string
  }

  export type migrationsUncheckedCreateInput = {
    id?: number
    timestamp: number
    name: string
  }

  export type migrationsUpdateInput = {
    timestamp?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type migrationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    timestamp?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type migrationsCreateManyInput = {
    id?: number
    timestamp: number
    name: string
  }

  export type migrationsUpdateManyMutationInput = {
    timestamp?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type migrationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    timestamp?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type port_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutPort_filesInput
    ports?: portsCreateNestedOneWithoutPort_filesInput
  }

  export type port_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type port_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutPort_filesInput
    ports?: portsUpdateOneWithoutPort_filesInput
  }

  export type port_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type port_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type port_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type port_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type portsCreateInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    country?: CountryCreateNestedOneWithoutPortsInput
    berths?: berthsCreateNestedManyWithoutPortsInput
    port_files?: port_filesCreateNestedManyWithoutPortsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateInput = {
    id?: number
    name?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsUncheckedCreateNestedManyWithoutPortsInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutPortsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    country?: CountryUpdateOneWithoutPortsInput
    berths?: berthsUpdateManyWithoutPortsInput
    port_files?: port_filesUpdateManyWithoutPortsInput
    shipping_ports?: shipping_portsUpdateManyWithoutPortsInput
  }

  export type portsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUncheckedUpdateManyWithoutPortsInput
    port_files?: port_filesUncheckedUpdateManyWithoutPortsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutPortsInput
  }

  export type portsCreateManyInput = {
    id?: number
    name?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
  }

  export type portsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type portsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productsCreateInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berth_products?: berth_productsCreateNestedManyWithoutProductsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutProductsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berth_products?: berth_productsUpdateManyWithoutProductsInput
    shipping_products?: shipping_productsUpdateManyWithoutProductsInput
  }

  export type productsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutProductsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutProductsInput
  }

  export type productsCreateManyInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type productsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    proformas?: proformasCreateNestedOneWithoutProforma_filesInput
  }

  export type proforma_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    proformaId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proformas?: proformasUpdateOneWithoutProforma_filesInput
  }

  export type proforma_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    proformaId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    proformaId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    proformaId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proformasCreateInput = {
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    berth_products: berth_productsCreateNestedOneWithoutProformasInput
    proforma_files?: proforma_filesCreateNestedManyWithoutProformasInput
  }

  export type proformasUncheckedCreateInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    berthProductId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    proforma_files?: proforma_filesUncheckedCreateNestedManyWithoutProformasInput
  }

  export type proformasUpdateInput = {
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    berth_products?: berth_productsUpdateOneRequiredWithoutProformasInput
    proforma_files?: proforma_filesUpdateManyWithoutProformasInput
  }

  export type proformasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableIntFieldUpdateOperationsInput | number | null
    berthProductId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    proforma_files?: proforma_filesUncheckedUpdateManyWithoutProformasInput
  }

  export type proformasCreateManyInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    berthProductId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
  }

  export type proformasUpdateManyMutationInput = {
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type proformasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableIntFieldUpdateOperationsInput | number | null
    berthProductId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_documentsCreateInput = {
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    productGrossWeight?: number | null
    shippings?: ShippingCreateNestedOneWithoutShipping_documentsInput
    shipping_documents?: shipping_documentsCreateNestedOneWithoutOther_shipping_documentsInput
    users?: usersCreateNestedOneWithoutShipping_documentsInput
    other_shipping_documents?: shipping_documentsCreateNestedManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateInput = {
    id?: number
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    shippingId?: number | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subsetId?: number | null
    productGrossWeight?: number | null
    other_shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUpdateInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    shippings?: ShippingUpdateOneWithoutShipping_documentsInput
    shipping_documents?: shipping_documentsUpdateOneWithoutOther_shipping_documentsInput
    users?: usersUpdateOneWithoutShipping_documentsInput
    other_shipping_documents?: shipping_documentsUpdateManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subsetId?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    other_shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput
  }

  export type shipping_documentsCreateManyInput = {
    id?: number
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    shippingId?: number | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subsetId?: number | null
    productGrossWeight?: number | null
  }

  export type shipping_documentsUpdateManyMutationInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type shipping_documentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subsetId?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type shipping_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_filesInput
    users?: usersCreateNestedOneWithoutShipping_filesInput
  }

  export type shipping_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type shipping_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippings?: ShippingUpdateOneWithoutShipping_filesInput
    users?: usersUpdateOneWithoutShipping_filesInput
  }

  export type shipping_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type shipping_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type shipping_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type shipping_portsCreateInput = {
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berths?: berthsCreateNestedOneWithoutShipping_portsInput
    ports?: portsCreateNestedOneWithoutShipping_portsInput
    shippings?: ShippingCreateNestedOneWithoutShipping_portsInput
  }

  export type shipping_portsUncheckedCreateInput = {
    id?: number
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    shippingId?: number | null
    portId?: number | null
    berthId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_portsUpdateInput = {
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneWithoutShipping_portsInput
    ports?: portsUpdateOneWithoutShipping_portsInput
    shippings?: ShippingUpdateOneWithoutShipping_portsInput
  }

  export type shipping_portsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    berthId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_portsCreateManyInput = {
    id?: number
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    shippingId?: number | null
    portId?: number | null
    berthId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_portsUpdateManyMutationInput = {
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_portsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    berthId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_productsCreateInput = {
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    products?: productsCreateNestedOneWithoutShipping_productsInput
    shippings?: ShippingCreateNestedOneWithoutShipping_productsInput
  }

  export type shipping_productsUncheckedCreateInput = {
    id?: number
    weight?: number | null
    shippingId?: number | null
    productId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_productsUpdateInput = {
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: productsUpdateOneWithoutShipping_productsInput
    shippings?: ShippingUpdateOneWithoutShipping_productsInput
  }

  export type shipping_productsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    productId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_productsCreateManyInput = {
    id?: number
    weight?: number | null
    shippingId?: number | null
    productId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_productsUpdateManyMutationInput = {
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_productsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    productId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingCreateInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingUpdateInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutShippingsInput
    vessel?: VesselUpdateOneWithoutShippingsInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUpdateManyWithoutShippingsInput
    subsets?: subsetsUpdateManyWithoutShippingsInput
    inquires?: inquiresUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutShippingsInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput
  }

  export type ShippingCreateManyInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
  }

  export type ShippingUpdateManyMutationInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShippingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type subsetsCreateInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shippings?: ShippingCreateNestedOneWithoutSubsetsInput
  }

  export type subsetsUncheckedCreateInput = {
    id?: number
    name?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type subsetsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippings?: ShippingUpdateOneWithoutSubsetsInput
  }

  export type subsetsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subsetsCreateManyInput = {
    id?: number
    name?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type subsetsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subsetsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutUser_filesInput
  }

  export type user_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type user_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutUser_filesInput
  }

  export type user_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type user_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    port_files?: port_filesUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type usersCreateManyInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vessel_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutVessel_filesInput
    vessels?: VesselCreateNestedOneWithoutVessel_filesInput
  }

  export type vessel_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    vesselId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type vessel_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutVessel_filesInput
    vessels?: VesselUpdateOneWithoutVessel_filesInput
  }

  export type vessel_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    vesselId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type vessel_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    vesselId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type vessel_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vessel_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    vesselId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VesselCreateInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    country?: CountryCreateNestedOneWithoutVesselsInput
    shippings?: ShippingCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsCreateNestedManyWithoutVesselInput
  }

  export type VesselUncheckedCreateInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingUncheckedCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutVesselInput
  }

  export type VesselUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    country?: CountryUpdateOneWithoutVesselsInput
    shippings?: ShippingUpdateManyWithoutVesselInput
    vessel_files?: vessel_filesUpdateManyWithoutVesselsInput
    group_emails?: group_emailsUpdateManyWithoutVesselInput
  }

  export type VesselUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUncheckedUpdateManyWithoutVesselInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutVesselsInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutVesselInput
  }

  export type VesselCreateManyInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
  }

  export type VesselUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VesselUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type inquiresCreateInput = {
    title?: string | null
    type?: string | null
    deleted?: boolean
    shippings?: ShippingCreateNestedOneWithoutInquiresInput
    users?: usersCreateNestedOneWithoutInquiresInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutInquiresInput
  }

  export type inquiresUncheckedCreateInput = {
    id?: number
    title?: string | null
    type?: string | null
    shipping_id?: number | null
    updated_by_user_id?: number | null
    deleted?: boolean
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutInquiresInput
  }

  export type inquiresUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    shippings?: ShippingUpdateOneWithoutInquiresInput
    users?: usersUpdateOneWithoutInquiresInput
    inquires_comments?: inquires_commentsUpdateManyWithoutInquiresInput
  }

  export type inquiresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutInquiresInput
  }

  export type inquiresCreateManyInput = {
    id?: number
    title?: string | null
    type?: string | null
    shipping_id?: number | null
    updated_by_user_id?: number | null
    deleted?: boolean
  }

  export type inquiresUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type inquiresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type inquires_commentsCreateInput = {
    body?: string | null
    is_done: boolean
    deleted?: boolean
    inquires?: inquiresCreateNestedOneWithoutInquires_commentsInput
    users?: usersCreateNestedOneWithoutInquires_commentsInput
  }

  export type inquires_commentsUncheckedCreateInput = {
    id?: number
    body?: string | null
    is_done: boolean
    inquire_id?: number | null
    user_id?: number | null
    deleted?: boolean
  }

  export type inquires_commentsUpdateInput = {
    body?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    inquires?: inquiresUpdateOneWithoutInquires_commentsInput
    users?: usersUpdateOneWithoutInquires_commentsInput
  }

  export type inquires_commentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    inquire_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type inquires_commentsCreateManyInput = {
    id?: number
    body?: string | null
    is_done: boolean
    inquire_id?: number | null
    user_id?: number | null
    deleted?: boolean
  }

  export type inquires_commentsUpdateManyMutationInput = {
    body?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type inquires_commentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    inquire_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type group_emailsCreateInput = {
    name?: string | null
    emails?: string | null
    vessel?: VesselCreateNestedOneWithoutGroup_emailsInput
    users?: usersCreateNestedOneWithoutGroup_emailsInput
  }

  export type group_emailsUncheckedCreateInput = {
    id?: number
    name?: string | null
    emails?: string | null
    vessel_id?: number | null
    updated_by_user_id?: number | null
  }

  export type group_emailsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel?: VesselUpdateOneWithoutGroup_emailsInput
    users?: usersUpdateOneWithoutGroup_emailsInput
  }

  export type group_emailsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type group_emailsCreateManyInput = {
    id?: number
    name?: string | null
    emails?: string | null
    vessel_id?: number | null
    updated_by_user_id?: number | null
  }

  export type group_emailsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type group_emailsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type FloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type DateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type BerthsRelationFilter = {
    is?: berthsWhereInput | null
    isNot?: berthsWhereInput | null
  }

  export type ProductsRelationFilter = {
    is?: productsWhereInput | null
    isNot?: productsWhereInput | null
  }

  export type ProformasListRelationFilter = {
    every?: proformasWhereInput
    some?: proformasWhereInput
    none?: proformasWhereInput
  }

  export type proformasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type berth_productsCountOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type berth_productsAvgOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
  }

  export type berth_productsMaxOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type berth_productsMinOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type berth_productsSumOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type FloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type DateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type PortsRelationFilter = {
    is?: portsWhereInput | null
    isNot?: portsWhereInput | null
  }

  export type Berth_productsListRelationFilter = {
    every?: berth_productsWhereInput
    some?: berth_productsWhereInput
    none?: berth_productsWhereInput
  }

  export type Shipping_portsListRelationFilter = {
    every?: shipping_portsWhereInput
    some?: shipping_portsWhereInput
    none?: shipping_portsWhereInput
  }

  export type berth_productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type shipping_portsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type berthsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type berthsAvgOrderByAggregateInput = {
    id?: SortOrder
    portId?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type berthsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type berthsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type berthsSumOrderByAggregateInput = {
    id?: SortOrder
    portId?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type ChecklistTemplateItemListRelationFilter = {
    every?: ChecklistTemplateItemWhereInput
    some?: ChecklistTemplateItemWhereInput
    none?: ChecklistTemplateItemWhereInput
  }

  export type ChecklistTemplateItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChecklistTemplateCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ChecklistTemplateAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ChecklistTemplateMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ChecklistTemplateMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ChecklistTemplateSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type ChecklistTemplateRelationFilter = {
    is?: ChecklistTemplateWhereInput | null
    isNot?: ChecklistTemplateWhereInput | null
  }

  export type ChecklistTemplateItemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ChecklistTemplateItemAvgOrderByAggregateInput = {
    id?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
  }

  export type ChecklistTemplateItemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ChecklistTemplateItemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ChecklistTemplateItemSumOrderByAggregateInput = {
    id?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
  }

  export type BoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type ShippingRelationFilter = {
    is?: ShippingWhereInput | null
    isNot?: ShippingWhereInput | null
  }

  export type UsersRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type ShippingChecklistItemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ShippingChecklistItemAvgOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type ShippingChecklistItemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ShippingChecklistItemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ShippingChecklistItemSumOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type BoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type PortsListRelationFilter = {
    every?: portsWhereInput
    some?: portsWhereInput
    none?: portsWhereInput
  }

  export type VesselListRelationFilter = {
    every?: VesselWhereInput
    some?: VesselWhereInput
    none?: VesselWhereInput
  }

  export type portsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VesselOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CountryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type CountryAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CountryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type CountryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type CountrySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type migrationsCountOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
  }

  export type migrationsAvgOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
  }

  export type migrationsMaxOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
  }

  export type migrationsMinOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
  }

  export type migrationsSumOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
  }

  export type port_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type port_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    portId?: SortOrder
    userId?: SortOrder
  }

  export type port_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type port_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type port_filesSumOrderByAggregateInput = {
    id?: SortOrder
    portId?: SortOrder
    userId?: SortOrder
  }

  export type CountryRelationFilter = {
    is?: CountryWhereInput | null
    isNot?: CountryWhereInput | null
  }

  export type BerthsListRelationFilter = {
    every?: berthsWhereInput
    some?: berthsWhereInput
    none?: berthsWhereInput
  }

  export type Port_filesListRelationFilter = {
    every?: port_filesWhereInput
    some?: port_filesWhereInput
    none?: port_filesWhereInput
  }

  export type berthsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type port_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type portsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
  }

  export type portsAvgOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
  }

  export type portsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
  }

  export type portsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
  }

  export type portsSumOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
  }

  export type Shipping_productsListRelationFilter = {
    every?: shipping_productsWhereInput
    some?: shipping_productsWhereInput
    none?: shipping_productsWhereInput
  }

  export type shipping_productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type productsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type productsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type productsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type productsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ProformasRelationFilter = {
    is?: proformasWhereInput | null
    isNot?: proformasWhereInput | null
  }

  export type proforma_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type proforma_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    proformaId?: SortOrder
  }

  export type proforma_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type proforma_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type proforma_filesSumOrderByAggregateInput = {
    id?: SortOrder
    proformaId?: SortOrder
  }

  export type BoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type Berth_productsRelationFilter = {
    is?: berth_productsWhereInput
    isNot?: berth_productsWhereInput
  }

  export type Proforma_filesListRelationFilter = {
    every?: proforma_filesWhereInput
    some?: proforma_filesWhereInput
    none?: proforma_filesWhereInput
  }

  export type proforma_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type proformasCountOrderByAggregateInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
  }

  export type proformasAvgOrderByAggregateInput = {
    id?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    builtYear?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    beam?: SortOrder
    draft?: SortOrder
  }

  export type proformasMaxOrderByAggregateInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
  }

  export type proformasMinOrderByAggregateInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
  }

  export type proformasSumOrderByAggregateInput = {
    id?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    builtYear?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    beam?: SortOrder
    draft?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }

  export type Shipping_documentsRelationFilter = {
    is?: shipping_documentsWhereInput | null
    isNot?: shipping_documentsWhereInput | null
  }

  export type Shipping_documentsListRelationFilter = {
    every?: shipping_documentsWhereInput
    some?: shipping_documentsWhereInput
    none?: shipping_documentsWhereInput
  }

  export type shipping_documentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type shipping_documentsCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    documentNumber?: SortOrder
    consignee?: SortOrder
    vesselName?: SortOrder
    portOfLoading?: SortOrder
    portOfDischarge?: SortOrder
    notify?: SortOrder
    productName?: SortOrder
    productNameExtraInfo?: SortOrder
    productWeightExtraInfo?: SortOrder
    freightType?: SortOrder
    charterPartyDate?: SortOrder
    shipBoardedDate?: SortOrder
    issuePlaceDate?: SortOrder
    numberOfOriginalBillOfLanding?: SortOrder
    shipper?: SortOrder
    masterName?: SortOrder
    signature?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subsetId?: SortOrder
    productGrossWeight?: SortOrder
  }

  export type shipping_documentsAvgOrderByAggregateInput = {
    id?: SortOrder
    numberOfOriginalBillOfLanding?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
    order?: SortOrder
    subsetId?: SortOrder
    productGrossWeight?: SortOrder
  }

  export type shipping_documentsMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    documentNumber?: SortOrder
    consignee?: SortOrder
    vesselName?: SortOrder
    portOfLoading?: SortOrder
    portOfDischarge?: SortOrder
    notify?: SortOrder
    productName?: SortOrder
    productNameExtraInfo?: SortOrder
    productWeightExtraInfo?: SortOrder
    freightType?: SortOrder
    charterPartyDate?: SortOrder
    shipBoardedDate?: SortOrder
    issuePlaceDate?: SortOrder
    numberOfOriginalBillOfLanding?: SortOrder
    shipper?: SortOrder
    masterName?: SortOrder
    signature?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subsetId?: SortOrder
    productGrossWeight?: SortOrder
  }

  export type shipping_documentsMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    documentNumber?: SortOrder
    consignee?: SortOrder
    vesselName?: SortOrder
    portOfLoading?: SortOrder
    portOfDischarge?: SortOrder
    notify?: SortOrder
    productName?: SortOrder
    productNameExtraInfo?: SortOrder
    productWeightExtraInfo?: SortOrder
    freightType?: SortOrder
    charterPartyDate?: SortOrder
    shipBoardedDate?: SortOrder
    issuePlaceDate?: SortOrder
    numberOfOriginalBillOfLanding?: SortOrder
    shipper?: SortOrder
    masterName?: SortOrder
    signature?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subsetId?: SortOrder
    productGrossWeight?: SortOrder
  }

  export type shipping_documentsSumOrderByAggregateInput = {
    id?: SortOrder
    numberOfOriginalBillOfLanding?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
    order?: SortOrder
    subsetId?: SortOrder
    productGrossWeight?: SortOrder
  }

  export type shipping_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type shipping_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
  }

  export type shipping_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type shipping_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type shipping_filesSumOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
  }

  export type shipping_portsCountOrderByAggregateInput = {
    id?: SortOrder
    estimatedTimeOfArrival?: SortOrder
    estimatedTimeOfBerthing?: SortOrder
    estimatedTimeOfSailing?: SortOrder
    timeOfArrival?: SortOrder
    timeOfBerthing?: SortOrder
    timeOfSailing?: SortOrder
    shippingId?: SortOrder
    portId?: SortOrder
    berthId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type shipping_portsAvgOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
    portId?: SortOrder
    berthId?: SortOrder
  }

  export type shipping_portsMaxOrderByAggregateInput = {
    id?: SortOrder
    estimatedTimeOfArrival?: SortOrder
    estimatedTimeOfBerthing?: SortOrder
    estimatedTimeOfSailing?: SortOrder
    timeOfArrival?: SortOrder
    timeOfBerthing?: SortOrder
    timeOfSailing?: SortOrder
    shippingId?: SortOrder
    portId?: SortOrder
    berthId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type shipping_portsMinOrderByAggregateInput = {
    id?: SortOrder
    estimatedTimeOfArrival?: SortOrder
    estimatedTimeOfBerthing?: SortOrder
    estimatedTimeOfSailing?: SortOrder
    timeOfArrival?: SortOrder
    timeOfBerthing?: SortOrder
    timeOfSailing?: SortOrder
    shippingId?: SortOrder
    portId?: SortOrder
    berthId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type shipping_portsSumOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
    portId?: SortOrder
    berthId?: SortOrder
  }

  export type shipping_productsCountOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shippingId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type shipping_productsAvgOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shippingId?: SortOrder
    productId?: SortOrder
  }

  export type shipping_productsMaxOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shippingId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type shipping_productsMinOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shippingId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type shipping_productsSumOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shippingId?: SortOrder
    productId?: SortOrder
  }

  export type VesselRelationFilter = {
    is?: VesselWhereInput | null
    isNot?: VesselWhereInput | null
  }

  export type Shipping_filesListRelationFilter = {
    every?: shipping_filesWhereInput
    some?: shipping_filesWhereInput
    none?: shipping_filesWhereInput
  }

  export type SubsetsListRelationFilter = {
    every?: subsetsWhereInput
    some?: subsetsWhereInput
    none?: subsetsWhereInput
  }

  export type InquiresListRelationFilter = {
    every?: inquiresWhereInput
    some?: inquiresWhereInput
    none?: inquiresWhereInput
  }

  export type ShippingChecklistItemListRelationFilter = {
    every?: ShippingChecklistItemWhereInput
    some?: ShippingChecklistItemWhereInput
    none?: ShippingChecklistItemWhereInput
  }

  export type shipping_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type subsetsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type inquiresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShippingChecklistItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShippingCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
  }

  export type ShippingAvgOrderByAggregateInput = {
    id?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
  }

  export type ShippingMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
  }

  export type ShippingMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
  }

  export type ShippingSumOrderByAggregateInput = {
    id?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
  }

  export type subsetsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type subsetsAvgOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
  }

  export type subsetsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type subsetsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type subsetsSumOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
  }

  export type user_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type user_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type user_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type user_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type user_filesSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type ShippingListRelationFilter = {
    every?: ShippingWhereInput
    some?: ShippingWhereInput
    none?: ShippingWhereInput
  }

  export type User_filesListRelationFilter = {
    every?: user_filesWhereInput
    some?: user_filesWhereInput
    none?: user_filesWhereInput
  }

  export type Inquires_commentsListRelationFilter = {
    every?: inquires_commentsWhereInput
    some?: inquires_commentsWhereInput
    none?: inquires_commentsWhereInput
  }

  export type Group_emailsListRelationFilter = {
    every?: group_emailsWhereInput
    some?: group_emailsWhereInput
    none?: group_emailsWhereInput
  }

  export type Vessel_filesListRelationFilter = {
    every?: vessel_filesWhereInput
    some?: vessel_filesWhereInput
    none?: vessel_filesWhereInput
  }

  export type ShippingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type inquires_commentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type group_emailsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type vessel_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type vessel_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vesselId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type vessel_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    vesselId?: SortOrder
    userId?: SortOrder
  }

  export type vessel_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vesselId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type vessel_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vesselId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type vessel_filesSumOrderByAggregateInput = {
    id?: SortOrder
    vesselId?: SortOrder
    userId?: SortOrder
  }

  export type VesselCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
  }

  export type VesselAvgOrderByAggregateInput = {
    id?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    country_id?: SortOrder
    built_year?: SortOrder
  }

  export type VesselMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
  }

  export type VesselMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
  }

  export type VesselSumOrderByAggregateInput = {
    id?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    country_id?: SortOrder
    built_year?: SortOrder
  }

  export type inquiresCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    deleted?: SortOrder
  }

  export type inquiresAvgOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type inquiresMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    deleted?: SortOrder
  }

  export type inquiresMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    deleted?: SortOrder
  }

  export type inquiresSumOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type InquiresRelationFilter = {
    is?: inquiresWhereInput | null
    isNot?: inquiresWhereInput | null
  }

  export type inquires_commentsCountOrderByAggregateInput = {
    id?: SortOrder
    body?: SortOrder
    is_done?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    deleted?: SortOrder
  }

  export type inquires_commentsAvgOrderByAggregateInput = {
    id?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
  }

  export type inquires_commentsMaxOrderByAggregateInput = {
    id?: SortOrder
    body?: SortOrder
    is_done?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    deleted?: SortOrder
  }

  export type inquires_commentsMinOrderByAggregateInput = {
    id?: SortOrder
    body?: SortOrder
    is_done?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    deleted?: SortOrder
  }

  export type inquires_commentsSumOrderByAggregateInput = {
    id?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
  }

  export type group_emailsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type group_emailsAvgOrderByAggregateInput = {
    id?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type group_emailsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type group_emailsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type group_emailsSumOrderByAggregateInput = {
    id?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type berthsCreateNestedOneWithoutBerth_productsInput = {
    create?: XOR<berthsCreateWithoutBerth_productsInput, berthsUncheckedCreateWithoutBerth_productsInput>
    connectOrCreate?: berthsCreateOrConnectWithoutBerth_productsInput
    connect?: berthsWhereUniqueInput
  }

  export type productsCreateNestedOneWithoutBerth_productsInput = {
    create?: XOR<productsCreateWithoutBerth_productsInput, productsUncheckedCreateWithoutBerth_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutBerth_productsInput
    connect?: productsWhereUniqueInput
  }

  export type proformasCreateNestedManyWithoutBerth_productsInput = {
    create?: XOR<Enumerable<proformasCreateWithoutBerth_productsInput>, Enumerable<proformasUncheckedCreateWithoutBerth_productsInput>>
    connectOrCreate?: Enumerable<proformasCreateOrConnectWithoutBerth_productsInput>
    createMany?: proformasCreateManyBerth_productsInputEnvelope
    connect?: Enumerable<proformasWhereUniqueInput>
  }

  export type proformasUncheckedCreateNestedManyWithoutBerth_productsInput = {
    create?: XOR<Enumerable<proformasCreateWithoutBerth_productsInput>, Enumerable<proformasUncheckedCreateWithoutBerth_productsInput>>
    connectOrCreate?: Enumerable<proformasCreateOrConnectWithoutBerth_productsInput>
    createMany?: proformasCreateManyBerth_productsInputEnvelope
    connect?: Enumerable<proformasWhereUniqueInput>
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type berthsUpdateOneRequiredWithoutBerth_productsInput = {
    create?: XOR<berthsCreateWithoutBerth_productsInput, berthsUncheckedCreateWithoutBerth_productsInput>
    connectOrCreate?: berthsCreateOrConnectWithoutBerth_productsInput
    upsert?: berthsUpsertWithoutBerth_productsInput
    connect?: berthsWhereUniqueInput
    update?: XOR<berthsUpdateWithoutBerth_productsInput, berthsUncheckedUpdateWithoutBerth_productsInput>
  }

  export type productsUpdateOneRequiredWithoutBerth_productsInput = {
    create?: XOR<productsCreateWithoutBerth_productsInput, productsUncheckedCreateWithoutBerth_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutBerth_productsInput
    upsert?: productsUpsertWithoutBerth_productsInput
    connect?: productsWhereUniqueInput
    update?: XOR<productsUpdateWithoutBerth_productsInput, productsUncheckedUpdateWithoutBerth_productsInput>
  }

  export type proformasUpdateManyWithoutBerth_productsInput = {
    create?: XOR<Enumerable<proformasCreateWithoutBerth_productsInput>, Enumerable<proformasUncheckedCreateWithoutBerth_productsInput>>
    connectOrCreate?: Enumerable<proformasCreateOrConnectWithoutBerth_productsInput>
    upsert?: Enumerable<proformasUpsertWithWhereUniqueWithoutBerth_productsInput>
    createMany?: proformasCreateManyBerth_productsInputEnvelope
    set?: Enumerable<proformasWhereUniqueInput>
    disconnect?: Enumerable<proformasWhereUniqueInput>
    delete?: Enumerable<proformasWhereUniqueInput>
    connect?: Enumerable<proformasWhereUniqueInput>
    update?: Enumerable<proformasUpdateWithWhereUniqueWithoutBerth_productsInput>
    updateMany?: Enumerable<proformasUpdateManyWithWhereWithoutBerth_productsInput>
    deleteMany?: Enumerable<proformasScalarWhereInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type proformasUncheckedUpdateManyWithoutBerth_productsInput = {
    create?: XOR<Enumerable<proformasCreateWithoutBerth_productsInput>, Enumerable<proformasUncheckedCreateWithoutBerth_productsInput>>
    connectOrCreate?: Enumerable<proformasCreateOrConnectWithoutBerth_productsInput>
    upsert?: Enumerable<proformasUpsertWithWhereUniqueWithoutBerth_productsInput>
    createMany?: proformasCreateManyBerth_productsInputEnvelope
    set?: Enumerable<proformasWhereUniqueInput>
    disconnect?: Enumerable<proformasWhereUniqueInput>
    delete?: Enumerable<proformasWhereUniqueInput>
    connect?: Enumerable<proformasWhereUniqueInput>
    update?: Enumerable<proformasUpdateWithWhereUniqueWithoutBerth_productsInput>
    updateMany?: Enumerable<proformasUpdateManyWithWhereWithoutBerth_productsInput>
    deleteMany?: Enumerable<proformasScalarWhereInput>
  }

  export type portsCreateNestedOneWithoutBerthsInput = {
    create?: XOR<portsCreateWithoutBerthsInput, portsUncheckedCreateWithoutBerthsInput>
    connectOrCreate?: portsCreateOrConnectWithoutBerthsInput
    connect?: portsWhereUniqueInput
  }

  export type berth_productsCreateNestedManyWithoutBerthsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutBerthsInput>, Enumerable<berth_productsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutBerthsInput>
    createMany?: berth_productsCreateManyBerthsInputEnvelope
    connect?: Enumerable<berth_productsWhereUniqueInput>
  }

  export type shipping_portsCreateNestedManyWithoutBerthsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutBerthsInput>, Enumerable<shipping_portsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutBerthsInput>
    createMany?: shipping_portsCreateManyBerthsInputEnvelope
    connect?: Enumerable<shipping_portsWhereUniqueInput>
  }

  export type berth_productsUncheckedCreateNestedManyWithoutBerthsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutBerthsInput>, Enumerable<berth_productsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutBerthsInput>
    createMany?: berth_productsCreateManyBerthsInputEnvelope
    connect?: Enumerable<berth_productsWhereUniqueInput>
  }

  export type shipping_portsUncheckedCreateNestedManyWithoutBerthsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutBerthsInput>, Enumerable<shipping_portsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutBerthsInput>
    createMany?: shipping_portsCreateManyBerthsInputEnvelope
    connect?: Enumerable<shipping_portsWhereUniqueInput>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type portsUpdateOneWithoutBerthsInput = {
    create?: XOR<portsCreateWithoutBerthsInput, portsUncheckedCreateWithoutBerthsInput>
    connectOrCreate?: portsCreateOrConnectWithoutBerthsInput
    upsert?: portsUpsertWithoutBerthsInput
    disconnect?: boolean
    delete?: boolean
    connect?: portsWhereUniqueInput
    update?: XOR<portsUpdateWithoutBerthsInput, portsUncheckedUpdateWithoutBerthsInput>
  }

  export type berth_productsUpdateManyWithoutBerthsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutBerthsInput>, Enumerable<berth_productsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutBerthsInput>
    upsert?: Enumerable<berth_productsUpsertWithWhereUniqueWithoutBerthsInput>
    createMany?: berth_productsCreateManyBerthsInputEnvelope
    set?: Enumerable<berth_productsWhereUniqueInput>
    disconnect?: Enumerable<berth_productsWhereUniqueInput>
    delete?: Enumerable<berth_productsWhereUniqueInput>
    connect?: Enumerable<berth_productsWhereUniqueInput>
    update?: Enumerable<berth_productsUpdateWithWhereUniqueWithoutBerthsInput>
    updateMany?: Enumerable<berth_productsUpdateManyWithWhereWithoutBerthsInput>
    deleteMany?: Enumerable<berth_productsScalarWhereInput>
  }

  export type shipping_portsUpdateManyWithoutBerthsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutBerthsInput>, Enumerable<shipping_portsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutBerthsInput>
    upsert?: Enumerable<shipping_portsUpsertWithWhereUniqueWithoutBerthsInput>
    createMany?: shipping_portsCreateManyBerthsInputEnvelope
    set?: Enumerable<shipping_portsWhereUniqueInput>
    disconnect?: Enumerable<shipping_portsWhereUniqueInput>
    delete?: Enumerable<shipping_portsWhereUniqueInput>
    connect?: Enumerable<shipping_portsWhereUniqueInput>
    update?: Enumerable<shipping_portsUpdateWithWhereUniqueWithoutBerthsInput>
    updateMany?: Enumerable<shipping_portsUpdateManyWithWhereWithoutBerthsInput>
    deleteMany?: Enumerable<shipping_portsScalarWhereInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type berth_productsUncheckedUpdateManyWithoutBerthsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutBerthsInput>, Enumerable<berth_productsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutBerthsInput>
    upsert?: Enumerable<berth_productsUpsertWithWhereUniqueWithoutBerthsInput>
    createMany?: berth_productsCreateManyBerthsInputEnvelope
    set?: Enumerable<berth_productsWhereUniqueInput>
    disconnect?: Enumerable<berth_productsWhereUniqueInput>
    delete?: Enumerable<berth_productsWhereUniqueInput>
    connect?: Enumerable<berth_productsWhereUniqueInput>
    update?: Enumerable<berth_productsUpdateWithWhereUniqueWithoutBerthsInput>
    updateMany?: Enumerable<berth_productsUpdateManyWithWhereWithoutBerthsInput>
    deleteMany?: Enumerable<berth_productsScalarWhereInput>
  }

  export type shipping_portsUncheckedUpdateManyWithoutBerthsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutBerthsInput>, Enumerable<shipping_portsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutBerthsInput>
    upsert?: Enumerable<shipping_portsUpsertWithWhereUniqueWithoutBerthsInput>
    createMany?: shipping_portsCreateManyBerthsInputEnvelope
    set?: Enumerable<shipping_portsWhereUniqueInput>
    disconnect?: Enumerable<shipping_portsWhereUniqueInput>
    delete?: Enumerable<shipping_portsWhereUniqueInput>
    connect?: Enumerable<shipping_portsWhereUniqueInput>
    update?: Enumerable<shipping_portsUpdateWithWhereUniqueWithoutBerthsInput>
    updateMany?: Enumerable<shipping_portsUpdateManyWithWhereWithoutBerthsInput>
    deleteMany?: Enumerable<shipping_portsScalarWhereInput>
  }

  export type ChecklistTemplateItemCreateNestedManyWithoutChecklistTemplateInput = {
    create?: XOR<Enumerable<ChecklistTemplateItemCreateWithoutChecklistTemplateInput>, Enumerable<ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput>
    createMany?: ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope
    connect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
  }

  export type ChecklistTemplateItemUncheckedCreateNestedManyWithoutChecklistTemplateInput = {
    create?: XOR<Enumerable<ChecklistTemplateItemCreateWithoutChecklistTemplateInput>, Enumerable<ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput>
    createMany?: ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope
    connect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type ChecklistTemplateItemUpdateManyWithoutChecklistTemplateInput = {
    create?: XOR<Enumerable<ChecklistTemplateItemCreateWithoutChecklistTemplateInput>, Enumerable<ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput>
    upsert?: Enumerable<ChecklistTemplateItemUpsertWithWhereUniqueWithoutChecklistTemplateInput>
    createMany?: ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope
    set?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    disconnect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    delete?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    connect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    update?: Enumerable<ChecklistTemplateItemUpdateWithWhereUniqueWithoutChecklistTemplateInput>
    updateMany?: Enumerable<ChecklistTemplateItemUpdateManyWithWhereWithoutChecklistTemplateInput>
    deleteMany?: Enumerable<ChecklistTemplateItemScalarWhereInput>
  }

  export type ChecklistTemplateItemUncheckedUpdateManyWithoutChecklistTemplateInput = {
    create?: XOR<Enumerable<ChecklistTemplateItemCreateWithoutChecklistTemplateInput>, Enumerable<ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput>
    upsert?: Enumerable<ChecklistTemplateItemUpsertWithWhereUniqueWithoutChecklistTemplateInput>
    createMany?: ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope
    set?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    disconnect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    delete?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    connect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    update?: Enumerable<ChecklistTemplateItemUpdateWithWhereUniqueWithoutChecklistTemplateInput>
    updateMany?: Enumerable<ChecklistTemplateItemUpdateManyWithWhereWithoutChecklistTemplateInput>
    deleteMany?: Enumerable<ChecklistTemplateItemScalarWhereInput>
  }

  export type ChecklistTemplateCreateNestedOneWithoutItemsInput = {
    create?: XOR<ChecklistTemplateCreateWithoutItemsInput, ChecklistTemplateUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ChecklistTemplateCreateOrConnectWithoutItemsInput
    connect?: ChecklistTemplateWhereUniqueInput
  }

  export type ChecklistTemplateUpdateOneWithoutItemsInput = {
    create?: XOR<ChecklistTemplateCreateWithoutItemsInput, ChecklistTemplateUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ChecklistTemplateCreateOrConnectWithoutItemsInput
    upsert?: ChecklistTemplateUpsertWithoutItemsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ChecklistTemplateWhereUniqueInput
    update?: XOR<ChecklistTemplateUpdateWithoutItemsInput, ChecklistTemplateUncheckedUpdateWithoutItemsInput>
  }

  export type ShippingCreateNestedOneWithoutShippingChecklistItemInput = {
    create?: XOR<ShippingCreateWithoutShippingChecklistItemInput, ShippingUncheckedCreateWithoutShippingChecklistItemInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShippingChecklistItemInput
    connect?: ShippingWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutShippingChecklistItemInput = {
    create?: XOR<usersCreateWithoutShippingChecklistItemInput, usersUncheckedCreateWithoutShippingChecklistItemInput>
    connectOrCreate?: usersCreateOrConnectWithoutShippingChecklistItemInput
    connect?: usersWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ShippingUpdateOneWithoutShippingChecklistItemInput = {
    create?: XOR<ShippingCreateWithoutShippingChecklistItemInput, ShippingUncheckedCreateWithoutShippingChecklistItemInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShippingChecklistItemInput
    upsert?: ShippingUpsertWithoutShippingChecklistItemInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShippingChecklistItemInput, ShippingUncheckedUpdateWithoutShippingChecklistItemInput>
  }

  export type usersUpdateOneWithoutShippingChecklistItemInput = {
    create?: XOR<usersCreateWithoutShippingChecklistItemInput, usersUncheckedCreateWithoutShippingChecklistItemInput>
    connectOrCreate?: usersCreateOrConnectWithoutShippingChecklistItemInput
    upsert?: usersUpsertWithoutShippingChecklistItemInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutShippingChecklistItemInput, usersUncheckedUpdateWithoutShippingChecklistItemInput>
  }

  export type portsCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<portsCreateWithoutCountryInput>, Enumerable<portsUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<portsCreateOrConnectWithoutCountryInput>
    createMany?: portsCreateManyCountryInputEnvelope
    connect?: Enumerable<portsWhereUniqueInput>
  }

  export type VesselCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<VesselCreateWithoutCountryInput>, Enumerable<VesselUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<VesselCreateOrConnectWithoutCountryInput>
    createMany?: VesselCreateManyCountryInputEnvelope
    connect?: Enumerable<VesselWhereUniqueInput>
  }

  export type portsUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<portsCreateWithoutCountryInput>, Enumerable<portsUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<portsCreateOrConnectWithoutCountryInput>
    createMany?: portsCreateManyCountryInputEnvelope
    connect?: Enumerable<portsWhereUniqueInput>
  }

  export type VesselUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<VesselCreateWithoutCountryInput>, Enumerable<VesselUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<VesselCreateOrConnectWithoutCountryInput>
    createMany?: VesselCreateManyCountryInputEnvelope
    connect?: Enumerable<VesselWhereUniqueInput>
  }

  export type portsUpdateManyWithoutCountryInput = {
    create?: XOR<Enumerable<portsCreateWithoutCountryInput>, Enumerable<portsUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<portsCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<portsUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: portsCreateManyCountryInputEnvelope
    set?: Enumerable<portsWhereUniqueInput>
    disconnect?: Enumerable<portsWhereUniqueInput>
    delete?: Enumerable<portsWhereUniqueInput>
    connect?: Enumerable<portsWhereUniqueInput>
    update?: Enumerable<portsUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<portsUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<portsScalarWhereInput>
  }

  export type VesselUpdateManyWithoutCountryInput = {
    create?: XOR<Enumerable<VesselCreateWithoutCountryInput>, Enumerable<VesselUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<VesselCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<VesselUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: VesselCreateManyCountryInputEnvelope
    set?: Enumerable<VesselWhereUniqueInput>
    disconnect?: Enumerable<VesselWhereUniqueInput>
    delete?: Enumerable<VesselWhereUniqueInput>
    connect?: Enumerable<VesselWhereUniqueInput>
    update?: Enumerable<VesselUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<VesselUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<VesselScalarWhereInput>
  }

  export type portsUncheckedUpdateManyWithoutCountryInput = {
    create?: XOR<Enumerable<portsCreateWithoutCountryInput>, Enumerable<portsUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<portsCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<portsUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: portsCreateManyCountryInputEnvelope
    set?: Enumerable<portsWhereUniqueInput>
    disconnect?: Enumerable<portsWhereUniqueInput>
    delete?: Enumerable<portsWhereUniqueInput>
    connect?: Enumerable<portsWhereUniqueInput>
    update?: Enumerable<portsUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<portsUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<portsScalarWhereInput>
  }

  export type VesselUncheckedUpdateManyWithoutCountryInput = {
    create?: XOR<Enumerable<VesselCreateWithoutCountryInput>, Enumerable<VesselUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<VesselCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<VesselUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: VesselCreateManyCountryInputEnvelope
    set?: Enumerable<VesselWhereUniqueInput>
    disconnect?: Enumerable<VesselWhereUniqueInput>
    delete?: Enumerable<VesselWhereUniqueInput>
    connect?: Enumerable<VesselWhereUniqueInput>
    update?: Enumerable<VesselUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<VesselUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<VesselScalarWhereInput>
  }

  export type usersCreateNestedOneWithoutPort_filesInput = {
    create?: XOR<usersCreateWithoutPort_filesInput, usersUncheckedCreateWithoutPort_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutPort_filesInput
    connect?: usersWhereUniqueInput
  }

  export type portsCreateNestedOneWithoutPort_filesInput = {
    create?: XOR<portsCreateWithoutPort_filesInput, portsUncheckedCreateWithoutPort_filesInput>
    connectOrCreate?: portsCreateOrConnectWithoutPort_filesInput
    connect?: portsWhereUniqueInput
  }

  export type usersUpdateOneWithoutPort_filesInput = {
    create?: XOR<usersCreateWithoutPort_filesInput, usersUncheckedCreateWithoutPort_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutPort_filesInput
    upsert?: usersUpsertWithoutPort_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutPort_filesInput, usersUncheckedUpdateWithoutPort_filesInput>
  }

  export type portsUpdateOneWithoutPort_filesInput = {
    create?: XOR<portsCreateWithoutPort_filesInput, portsUncheckedCreateWithoutPort_filesInput>
    connectOrCreate?: portsCreateOrConnectWithoutPort_filesInput
    upsert?: portsUpsertWithoutPort_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: portsWhereUniqueInput
    update?: XOR<portsUpdateWithoutPort_filesInput, portsUncheckedUpdateWithoutPort_filesInput>
  }

  export type CountryCreateNestedOneWithoutPortsInput = {
    create?: XOR<CountryCreateWithoutPortsInput, CountryUncheckedCreateWithoutPortsInput>
    connectOrCreate?: CountryCreateOrConnectWithoutPortsInput
    connect?: CountryWhereUniqueInput
  }

  export type berthsCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<berthsCreateWithoutPortsInput>, Enumerable<berthsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<berthsCreateOrConnectWithoutPortsInput>
    createMany?: berthsCreateManyPortsInputEnvelope
    connect?: Enumerable<berthsWhereUniqueInput>
  }

  export type port_filesCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutPortsInput>, Enumerable<port_filesUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutPortsInput>
    createMany?: port_filesCreateManyPortsInputEnvelope
    connect?: Enumerable<port_filesWhereUniqueInput>
  }

  export type shipping_portsCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutPortsInput>, Enumerable<shipping_portsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutPortsInput>
    createMany?: shipping_portsCreateManyPortsInputEnvelope
    connect?: Enumerable<shipping_portsWhereUniqueInput>
  }

  export type berthsUncheckedCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<berthsCreateWithoutPortsInput>, Enumerable<berthsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<berthsCreateOrConnectWithoutPortsInput>
    createMany?: berthsCreateManyPortsInputEnvelope
    connect?: Enumerable<berthsWhereUniqueInput>
  }

  export type port_filesUncheckedCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutPortsInput>, Enumerable<port_filesUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutPortsInput>
    createMany?: port_filesCreateManyPortsInputEnvelope
    connect?: Enumerable<port_filesWhereUniqueInput>
  }

  export type shipping_portsUncheckedCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutPortsInput>, Enumerable<shipping_portsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutPortsInput>
    createMany?: shipping_portsCreateManyPortsInputEnvelope
    connect?: Enumerable<shipping_portsWhereUniqueInput>
  }

  export type CountryUpdateOneWithoutPortsInput = {
    create?: XOR<CountryCreateWithoutPortsInput, CountryUncheckedCreateWithoutPortsInput>
    connectOrCreate?: CountryCreateOrConnectWithoutPortsInput
    upsert?: CountryUpsertWithoutPortsInput
    disconnect?: boolean
    delete?: boolean
    connect?: CountryWhereUniqueInput
    update?: XOR<CountryUpdateWithoutPortsInput, CountryUncheckedUpdateWithoutPortsInput>
  }

  export type berthsUpdateManyWithoutPortsInput = {
    create?: XOR<Enumerable<berthsCreateWithoutPortsInput>, Enumerable<berthsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<berthsCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<berthsUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: berthsCreateManyPortsInputEnvelope
    set?: Enumerable<berthsWhereUniqueInput>
    disconnect?: Enumerable<berthsWhereUniqueInput>
    delete?: Enumerable<berthsWhereUniqueInput>
    connect?: Enumerable<berthsWhereUniqueInput>
    update?: Enumerable<berthsUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<berthsUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<berthsScalarWhereInput>
  }

  export type port_filesUpdateManyWithoutPortsInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutPortsInput>, Enumerable<port_filesUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<port_filesUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: port_filesCreateManyPortsInputEnvelope
    set?: Enumerable<port_filesWhereUniqueInput>
    disconnect?: Enumerable<port_filesWhereUniqueInput>
    delete?: Enumerable<port_filesWhereUniqueInput>
    connect?: Enumerable<port_filesWhereUniqueInput>
    update?: Enumerable<port_filesUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<port_filesUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<port_filesScalarWhereInput>
  }

  export type shipping_portsUpdateManyWithoutPortsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutPortsInput>, Enumerable<shipping_portsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<shipping_portsUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: shipping_portsCreateManyPortsInputEnvelope
    set?: Enumerable<shipping_portsWhereUniqueInput>
    disconnect?: Enumerable<shipping_portsWhereUniqueInput>
    delete?: Enumerable<shipping_portsWhereUniqueInput>
    connect?: Enumerable<shipping_portsWhereUniqueInput>
    update?: Enumerable<shipping_portsUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<shipping_portsUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<shipping_portsScalarWhereInput>
  }

  export type berthsUncheckedUpdateManyWithoutPortsInput = {
    create?: XOR<Enumerable<berthsCreateWithoutPortsInput>, Enumerable<berthsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<berthsCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<berthsUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: berthsCreateManyPortsInputEnvelope
    set?: Enumerable<berthsWhereUniqueInput>
    disconnect?: Enumerable<berthsWhereUniqueInput>
    delete?: Enumerable<berthsWhereUniqueInput>
    connect?: Enumerable<berthsWhereUniqueInput>
    update?: Enumerable<berthsUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<berthsUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<berthsScalarWhereInput>
  }

  export type port_filesUncheckedUpdateManyWithoutPortsInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutPortsInput>, Enumerable<port_filesUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<port_filesUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: port_filesCreateManyPortsInputEnvelope
    set?: Enumerable<port_filesWhereUniqueInput>
    disconnect?: Enumerable<port_filesWhereUniqueInput>
    delete?: Enumerable<port_filesWhereUniqueInput>
    connect?: Enumerable<port_filesWhereUniqueInput>
    update?: Enumerable<port_filesUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<port_filesUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<port_filesScalarWhereInput>
  }

  export type shipping_portsUncheckedUpdateManyWithoutPortsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutPortsInput>, Enumerable<shipping_portsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<shipping_portsUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: shipping_portsCreateManyPortsInputEnvelope
    set?: Enumerable<shipping_portsWhereUniqueInput>
    disconnect?: Enumerable<shipping_portsWhereUniqueInput>
    delete?: Enumerable<shipping_portsWhereUniqueInput>
    connect?: Enumerable<shipping_portsWhereUniqueInput>
    update?: Enumerable<shipping_portsUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<shipping_portsUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<shipping_portsScalarWhereInput>
  }

  export type berth_productsCreateNestedManyWithoutProductsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutProductsInput>, Enumerable<berth_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutProductsInput>
    createMany?: berth_productsCreateManyProductsInputEnvelope
    connect?: Enumerable<berth_productsWhereUniqueInput>
  }

  export type shipping_productsCreateNestedManyWithoutProductsInput = {
    create?: XOR<Enumerable<shipping_productsCreateWithoutProductsInput>, Enumerable<shipping_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<shipping_productsCreateOrConnectWithoutProductsInput>
    createMany?: shipping_productsCreateManyProductsInputEnvelope
    connect?: Enumerable<shipping_productsWhereUniqueInput>
  }

  export type berth_productsUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutProductsInput>, Enumerable<berth_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutProductsInput>
    createMany?: berth_productsCreateManyProductsInputEnvelope
    connect?: Enumerable<berth_productsWhereUniqueInput>
  }

  export type shipping_productsUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<Enumerable<shipping_productsCreateWithoutProductsInput>, Enumerable<shipping_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<shipping_productsCreateOrConnectWithoutProductsInput>
    createMany?: shipping_productsCreateManyProductsInputEnvelope
    connect?: Enumerable<shipping_productsWhereUniqueInput>
  }

  export type berth_productsUpdateManyWithoutProductsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutProductsInput>, Enumerable<berth_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutProductsInput>
    upsert?: Enumerable<berth_productsUpsertWithWhereUniqueWithoutProductsInput>
    createMany?: berth_productsCreateManyProductsInputEnvelope
    set?: Enumerable<berth_productsWhereUniqueInput>
    disconnect?: Enumerable<berth_productsWhereUniqueInput>
    delete?: Enumerable<berth_productsWhereUniqueInput>
    connect?: Enumerable<berth_productsWhereUniqueInput>
    update?: Enumerable<berth_productsUpdateWithWhereUniqueWithoutProductsInput>
    updateMany?: Enumerable<berth_productsUpdateManyWithWhereWithoutProductsInput>
    deleteMany?: Enumerable<berth_productsScalarWhereInput>
  }

  export type shipping_productsUpdateManyWithoutProductsInput = {
    create?: XOR<Enumerable<shipping_productsCreateWithoutProductsInput>, Enumerable<shipping_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<shipping_productsCreateOrConnectWithoutProductsInput>
    upsert?: Enumerable<shipping_productsUpsertWithWhereUniqueWithoutProductsInput>
    createMany?: shipping_productsCreateManyProductsInputEnvelope
    set?: Enumerable<shipping_productsWhereUniqueInput>
    disconnect?: Enumerable<shipping_productsWhereUniqueInput>
    delete?: Enumerable<shipping_productsWhereUniqueInput>
    connect?: Enumerable<shipping_productsWhereUniqueInput>
    update?: Enumerable<shipping_productsUpdateWithWhereUniqueWithoutProductsInput>
    updateMany?: Enumerable<shipping_productsUpdateManyWithWhereWithoutProductsInput>
    deleteMany?: Enumerable<shipping_productsScalarWhereInput>
  }

  export type berth_productsUncheckedUpdateManyWithoutProductsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutProductsInput>, Enumerable<berth_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutProductsInput>
    upsert?: Enumerable<berth_productsUpsertWithWhereUniqueWithoutProductsInput>
    createMany?: berth_productsCreateManyProductsInputEnvelope
    set?: Enumerable<berth_productsWhereUniqueInput>
    disconnect?: Enumerable<berth_productsWhereUniqueInput>
    delete?: Enumerable<berth_productsWhereUniqueInput>
    connect?: Enumerable<berth_productsWhereUniqueInput>
    update?: Enumerable<berth_productsUpdateWithWhereUniqueWithoutProductsInput>
    updateMany?: Enumerable<berth_productsUpdateManyWithWhereWithoutProductsInput>
    deleteMany?: Enumerable<berth_productsScalarWhereInput>
  }

  export type shipping_productsUncheckedUpdateManyWithoutProductsInput = {
    create?: XOR<Enumerable<shipping_productsCreateWithoutProductsInput>, Enumerable<shipping_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<shipping_productsCreateOrConnectWithoutProductsInput>
    upsert?: Enumerable<shipping_productsUpsertWithWhereUniqueWithoutProductsInput>
    createMany?: shipping_productsCreateManyProductsInputEnvelope
    set?: Enumerable<shipping_productsWhereUniqueInput>
    disconnect?: Enumerable<shipping_productsWhereUniqueInput>
    delete?: Enumerable<shipping_productsWhereUniqueInput>
    connect?: Enumerable<shipping_productsWhereUniqueInput>
    update?: Enumerable<shipping_productsUpdateWithWhereUniqueWithoutProductsInput>
    updateMany?: Enumerable<shipping_productsUpdateManyWithWhereWithoutProductsInput>
    deleteMany?: Enumerable<shipping_productsScalarWhereInput>
  }

  export type proformasCreateNestedOneWithoutProforma_filesInput = {
    create?: XOR<proformasCreateWithoutProforma_filesInput, proformasUncheckedCreateWithoutProforma_filesInput>
    connectOrCreate?: proformasCreateOrConnectWithoutProforma_filesInput
    connect?: proformasWhereUniqueInput
  }

  export type proformasUpdateOneWithoutProforma_filesInput = {
    create?: XOR<proformasCreateWithoutProforma_filesInput, proformasUncheckedCreateWithoutProforma_filesInput>
    connectOrCreate?: proformasCreateOrConnectWithoutProforma_filesInput
    upsert?: proformasUpsertWithoutProforma_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: proformasWhereUniqueInput
    update?: XOR<proformasUpdateWithoutProforma_filesInput, proformasUncheckedUpdateWithoutProforma_filesInput>
  }

  export type berth_productsCreateNestedOneWithoutProformasInput = {
    create?: XOR<berth_productsCreateWithoutProformasInput, berth_productsUncheckedCreateWithoutProformasInput>
    connectOrCreate?: berth_productsCreateOrConnectWithoutProformasInput
    connect?: berth_productsWhereUniqueInput
  }

  export type proforma_filesCreateNestedManyWithoutProformasInput = {
    create?: XOR<Enumerable<proforma_filesCreateWithoutProformasInput>, Enumerable<proforma_filesUncheckedCreateWithoutProformasInput>>
    connectOrCreate?: Enumerable<proforma_filesCreateOrConnectWithoutProformasInput>
    createMany?: proforma_filesCreateManyProformasInputEnvelope
    connect?: Enumerable<proforma_filesWhereUniqueInput>
  }

  export type proforma_filesUncheckedCreateNestedManyWithoutProformasInput = {
    create?: XOR<Enumerable<proforma_filesCreateWithoutProformasInput>, Enumerable<proforma_filesUncheckedCreateWithoutProformasInput>>
    connectOrCreate?: Enumerable<proforma_filesCreateOrConnectWithoutProformasInput>
    createMany?: proforma_filesCreateManyProformasInputEnvelope
    connect?: Enumerable<proforma_filesWhereUniqueInput>
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type berth_productsUpdateOneRequiredWithoutProformasInput = {
    create?: XOR<berth_productsCreateWithoutProformasInput, berth_productsUncheckedCreateWithoutProformasInput>
    connectOrCreate?: berth_productsCreateOrConnectWithoutProformasInput
    upsert?: berth_productsUpsertWithoutProformasInput
    connect?: berth_productsWhereUniqueInput
    update?: XOR<berth_productsUpdateWithoutProformasInput, berth_productsUncheckedUpdateWithoutProformasInput>
  }

  export type proforma_filesUpdateManyWithoutProformasInput = {
    create?: XOR<Enumerable<proforma_filesCreateWithoutProformasInput>, Enumerable<proforma_filesUncheckedCreateWithoutProformasInput>>
    connectOrCreate?: Enumerable<proforma_filesCreateOrConnectWithoutProformasInput>
    upsert?: Enumerable<proforma_filesUpsertWithWhereUniqueWithoutProformasInput>
    createMany?: proforma_filesCreateManyProformasInputEnvelope
    set?: Enumerable<proforma_filesWhereUniqueInput>
    disconnect?: Enumerable<proforma_filesWhereUniqueInput>
    delete?: Enumerable<proforma_filesWhereUniqueInput>
    connect?: Enumerable<proforma_filesWhereUniqueInput>
    update?: Enumerable<proforma_filesUpdateWithWhereUniqueWithoutProformasInput>
    updateMany?: Enumerable<proforma_filesUpdateManyWithWhereWithoutProformasInput>
    deleteMany?: Enumerable<proforma_filesScalarWhereInput>
  }

  export type proforma_filesUncheckedUpdateManyWithoutProformasInput = {
    create?: XOR<Enumerable<proforma_filesCreateWithoutProformasInput>, Enumerable<proforma_filesUncheckedCreateWithoutProformasInput>>
    connectOrCreate?: Enumerable<proforma_filesCreateOrConnectWithoutProformasInput>
    upsert?: Enumerable<proforma_filesUpsertWithWhereUniqueWithoutProformasInput>
    createMany?: proforma_filesCreateManyProformasInputEnvelope
    set?: Enumerable<proforma_filesWhereUniqueInput>
    disconnect?: Enumerable<proforma_filesWhereUniqueInput>
    delete?: Enumerable<proforma_filesWhereUniqueInput>
    connect?: Enumerable<proforma_filesWhereUniqueInput>
    update?: Enumerable<proforma_filesUpdateWithWhereUniqueWithoutProformasInput>
    updateMany?: Enumerable<proforma_filesUpdateManyWithWhereWithoutProformasInput>
    deleteMany?: Enumerable<proforma_filesScalarWhereInput>
  }

  export type ShippingCreateNestedOneWithoutShipping_documentsInput = {
    create?: XOR<ShippingCreateWithoutShipping_documentsInput, ShippingUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_documentsInput
    connect?: ShippingWhereUniqueInput
  }

  export type shipping_documentsCreateNestedOneWithoutOther_shipping_documentsInput = {
    create?: XOR<shipping_documentsCreateWithoutOther_shipping_documentsInput, shipping_documentsUncheckedCreateWithoutOther_shipping_documentsInput>
    connectOrCreate?: shipping_documentsCreateOrConnectWithoutOther_shipping_documentsInput
    connect?: shipping_documentsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutShipping_documentsInput = {
    create?: XOR<usersCreateWithoutShipping_documentsInput, usersUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_documentsInput
    connect?: usersWhereUniqueInput
  }

  export type shipping_documentsCreateNestedManyWithoutShipping_documentsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShipping_documentsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShipping_documentsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShipping_documentsInput>
    createMany?: shipping_documentsCreateManyShipping_documentsInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_documentsUncheckedCreateNestedManyWithoutShipping_documentsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShipping_documentsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShipping_documentsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShipping_documentsInput>
    createMany?: shipping_documentsCreateManyShipping_documentsInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type ShippingUpdateOneWithoutShipping_documentsInput = {
    create?: XOR<ShippingCreateWithoutShipping_documentsInput, ShippingUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_documentsInput
    upsert?: ShippingUpsertWithoutShipping_documentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShipping_documentsInput, ShippingUncheckedUpdateWithoutShipping_documentsInput>
  }

  export type shipping_documentsUpdateOneWithoutOther_shipping_documentsInput = {
    create?: XOR<shipping_documentsCreateWithoutOther_shipping_documentsInput, shipping_documentsUncheckedCreateWithoutOther_shipping_documentsInput>
    connectOrCreate?: shipping_documentsCreateOrConnectWithoutOther_shipping_documentsInput
    upsert?: shipping_documentsUpsertWithoutOther_shipping_documentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: shipping_documentsWhereUniqueInput
    update?: XOR<shipping_documentsUpdateWithoutOther_shipping_documentsInput, shipping_documentsUncheckedUpdateWithoutOther_shipping_documentsInput>
  }

  export type usersUpdateOneWithoutShipping_documentsInput = {
    create?: XOR<usersCreateWithoutShipping_documentsInput, usersUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_documentsInput
    upsert?: usersUpsertWithoutShipping_documentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutShipping_documentsInput, usersUncheckedUpdateWithoutShipping_documentsInput>
  }

  export type shipping_documentsUpdateManyWithoutShipping_documentsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShipping_documentsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShipping_documentsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShipping_documentsInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutShipping_documentsInput>
    createMany?: shipping_documentsCreateManyShipping_documentsInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutShipping_documentsInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutShipping_documentsInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShipping_documentsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShipping_documentsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShipping_documentsInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutShipping_documentsInput>
    createMany?: shipping_documentsCreateManyShipping_documentsInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutShipping_documentsInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutShipping_documentsInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type ShippingCreateNestedOneWithoutShipping_filesInput = {
    create?: XOR<ShippingCreateWithoutShipping_filesInput, ShippingUncheckedCreateWithoutShipping_filesInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_filesInput
    connect?: ShippingWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutShipping_filesInput = {
    create?: XOR<usersCreateWithoutShipping_filesInput, usersUncheckedCreateWithoutShipping_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_filesInput
    connect?: usersWhereUniqueInput
  }

  export type ShippingUpdateOneWithoutShipping_filesInput = {
    create?: XOR<ShippingCreateWithoutShipping_filesInput, ShippingUncheckedCreateWithoutShipping_filesInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_filesInput
    upsert?: ShippingUpsertWithoutShipping_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShipping_filesInput, ShippingUncheckedUpdateWithoutShipping_filesInput>
  }

  export type usersUpdateOneWithoutShipping_filesInput = {
    create?: XOR<usersCreateWithoutShipping_filesInput, usersUncheckedCreateWithoutShipping_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_filesInput
    upsert?: usersUpsertWithoutShipping_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutShipping_filesInput, usersUncheckedUpdateWithoutShipping_filesInput>
  }

  export type berthsCreateNestedOneWithoutShipping_portsInput = {
    create?: XOR<berthsCreateWithoutShipping_portsInput, berthsUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: berthsCreateOrConnectWithoutShipping_portsInput
    connect?: berthsWhereUniqueInput
  }

  export type portsCreateNestedOneWithoutShipping_portsInput = {
    create?: XOR<portsCreateWithoutShipping_portsInput, portsUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: portsCreateOrConnectWithoutShipping_portsInput
    connect?: portsWhereUniqueInput
  }

  export type ShippingCreateNestedOneWithoutShipping_portsInput = {
    create?: XOR<ShippingCreateWithoutShipping_portsInput, ShippingUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_portsInput
    connect?: ShippingWhereUniqueInput
  }

  export type berthsUpdateOneWithoutShipping_portsInput = {
    create?: XOR<berthsCreateWithoutShipping_portsInput, berthsUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: berthsCreateOrConnectWithoutShipping_portsInput
    upsert?: berthsUpsertWithoutShipping_portsInput
    disconnect?: boolean
    delete?: boolean
    connect?: berthsWhereUniqueInput
    update?: XOR<berthsUpdateWithoutShipping_portsInput, berthsUncheckedUpdateWithoutShipping_portsInput>
  }

  export type portsUpdateOneWithoutShipping_portsInput = {
    create?: XOR<portsCreateWithoutShipping_portsInput, portsUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: portsCreateOrConnectWithoutShipping_portsInput
    upsert?: portsUpsertWithoutShipping_portsInput
    disconnect?: boolean
    delete?: boolean
    connect?: portsWhereUniqueInput
    update?: XOR<portsUpdateWithoutShipping_portsInput, portsUncheckedUpdateWithoutShipping_portsInput>
  }

  export type ShippingUpdateOneWithoutShipping_portsInput = {
    create?: XOR<ShippingCreateWithoutShipping_portsInput, ShippingUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_portsInput
    upsert?: ShippingUpsertWithoutShipping_portsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShipping_portsInput, ShippingUncheckedUpdateWithoutShipping_portsInput>
  }

  export type productsCreateNestedOneWithoutShipping_productsInput = {
    create?: XOR<productsCreateWithoutShipping_productsInput, productsUncheckedCreateWithoutShipping_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutShipping_productsInput
    connect?: productsWhereUniqueInput
  }

  export type ShippingCreateNestedOneWithoutShipping_productsInput = {
    create?: XOR<ShippingCreateWithoutShipping_productsInput, ShippingUncheckedCreateWithoutShipping_productsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_productsInput
    connect?: ShippingWhereUniqueInput
  }

  export type productsUpdateOneWithoutShipping_productsInput = {
    create?: XOR<productsCreateWithoutShipping_productsInput, productsUncheckedCreateWithoutShipping_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutShipping_productsInput
    upsert?: productsUpsertWithoutShipping_productsInput
    disconnect?: boolean
    delete?: boolean
    connect?: productsWhereUniqueInput
    update?: XOR<productsUpdateWithoutShipping_productsInput, productsUncheckedUpdateWithoutShipping_productsInput>
  }

  export type ShippingUpdateOneWithoutShipping_productsInput = {
    create?: XOR<ShippingCreateWithoutShipping_productsInput, ShippingUncheckedCreateWithoutShipping_productsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_productsInput
    upsert?: ShippingUpsertWithoutShipping_productsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShipping_productsInput, ShippingUncheckedUpdateWithoutShipping_productsInput>
  }

  export type usersCreateNestedOneWithoutShippingsInput = {
    create?: XOR<usersCreateWithoutShippingsInput, usersUncheckedCreateWithoutShippingsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShippingsInput
    connect?: usersWhereUniqueInput
  }

  export type VesselCreateNestedOneWithoutShippingsInput = {
    create?: XOR<VesselCreateWithoutShippingsInput, VesselUncheckedCreateWithoutShippingsInput>
    connectOrCreate?: VesselCreateOrConnectWithoutShippingsInput
    connect?: VesselWhereUniqueInput
  }

  export type shipping_documentsCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShippingsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_documentsCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_filesCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutShippingsInput>, Enumerable<shipping_filesUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_filesCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_filesWhereUniqueInput>
  }

  export type shipping_portsCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutShippingsInput>, Enumerable<shipping_portsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_portsCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_portsWhereUniqueInput>
  }

  export type shipping_productsCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_productsCreateWithoutShippingsInput>, Enumerable<shipping_productsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_productsCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_productsCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_productsWhereUniqueInput>
  }

  export type subsetsCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<subsetsCreateWithoutShippingsInput>, Enumerable<subsetsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<subsetsCreateOrConnectWithoutShippingsInput>
    createMany?: subsetsCreateManyShippingsInputEnvelope
    connect?: Enumerable<subsetsWhereUniqueInput>
  }

  export type inquiresCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutShippingsInput>, Enumerable<inquiresUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutShippingsInput>
    createMany?: inquiresCreateManyShippingsInputEnvelope
    connect?: Enumerable<inquiresWhereUniqueInput>
  }

  export type ShippingChecklistItemCreateNestedManyWithoutShippingInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutShippingInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutShippingInput>
    createMany?: ShippingChecklistItemCreateManyShippingInputEnvelope
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
  }

  export type shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShippingsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_documentsCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_filesUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutShippingsInput>, Enumerable<shipping_filesUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_filesCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_filesWhereUniqueInput>
  }

  export type shipping_portsUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutShippingsInput>, Enumerable<shipping_portsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_portsCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_portsWhereUniqueInput>
  }

  export type shipping_productsUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_productsCreateWithoutShippingsInput>, Enumerable<shipping_productsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_productsCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_productsCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_productsWhereUniqueInput>
  }

  export type subsetsUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<subsetsCreateWithoutShippingsInput>, Enumerable<subsetsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<subsetsCreateOrConnectWithoutShippingsInput>
    createMany?: subsetsCreateManyShippingsInputEnvelope
    connect?: Enumerable<subsetsWhereUniqueInput>
  }

  export type inquiresUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutShippingsInput>, Enumerable<inquiresUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutShippingsInput>
    createMany?: inquiresCreateManyShippingsInputEnvelope
    connect?: Enumerable<inquiresWhereUniqueInput>
  }

  export type ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutShippingInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutShippingInput>
    createMany?: ShippingChecklistItemCreateManyShippingInputEnvelope
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
  }

  export type usersUpdateOneWithoutShippingsInput = {
    create?: XOR<usersCreateWithoutShippingsInput, usersUncheckedCreateWithoutShippingsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShippingsInput
    upsert?: usersUpsertWithoutShippingsInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutShippingsInput, usersUncheckedUpdateWithoutShippingsInput>
  }

  export type VesselUpdateOneWithoutShippingsInput = {
    create?: XOR<VesselCreateWithoutShippingsInput, VesselUncheckedCreateWithoutShippingsInput>
    connectOrCreate?: VesselCreateOrConnectWithoutShippingsInput
    upsert?: VesselUpsertWithoutShippingsInput
    disconnect?: boolean
    delete?: boolean
    connect?: VesselWhereUniqueInput
    update?: XOR<VesselUpdateWithoutShippingsInput, VesselUncheckedUpdateWithoutShippingsInput>
  }

  export type shipping_documentsUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShippingsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_documentsCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_filesUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutShippingsInput>, Enumerable<shipping_filesUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_filesUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_filesCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_filesWhereUniqueInput>
    disconnect?: Enumerable<shipping_filesWhereUniqueInput>
    delete?: Enumerable<shipping_filesWhereUniqueInput>
    connect?: Enumerable<shipping_filesWhereUniqueInput>
    update?: Enumerable<shipping_filesUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_filesUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_filesScalarWhereInput>
  }

  export type shipping_portsUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutShippingsInput>, Enumerable<shipping_portsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_portsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_portsCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_portsWhereUniqueInput>
    disconnect?: Enumerable<shipping_portsWhereUniqueInput>
    delete?: Enumerable<shipping_portsWhereUniqueInput>
    connect?: Enumerable<shipping_portsWhereUniqueInput>
    update?: Enumerable<shipping_portsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_portsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_portsScalarWhereInput>
  }

  export type shipping_productsUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_productsCreateWithoutShippingsInput>, Enumerable<shipping_productsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_productsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_productsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_productsCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_productsWhereUniqueInput>
    disconnect?: Enumerable<shipping_productsWhereUniqueInput>
    delete?: Enumerable<shipping_productsWhereUniqueInput>
    connect?: Enumerable<shipping_productsWhereUniqueInput>
    update?: Enumerable<shipping_productsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_productsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_productsScalarWhereInput>
  }

  export type subsetsUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<subsetsCreateWithoutShippingsInput>, Enumerable<subsetsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<subsetsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<subsetsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: subsetsCreateManyShippingsInputEnvelope
    set?: Enumerable<subsetsWhereUniqueInput>
    disconnect?: Enumerable<subsetsWhereUniqueInput>
    delete?: Enumerable<subsetsWhereUniqueInput>
    connect?: Enumerable<subsetsWhereUniqueInput>
    update?: Enumerable<subsetsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<subsetsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<subsetsScalarWhereInput>
  }

  export type inquiresUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutShippingsInput>, Enumerable<inquiresUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<inquiresUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: inquiresCreateManyShippingsInputEnvelope
    set?: Enumerable<inquiresWhereUniqueInput>
    disconnect?: Enumerable<inquiresWhereUniqueInput>
    delete?: Enumerable<inquiresWhereUniqueInput>
    connect?: Enumerable<inquiresWhereUniqueInput>
    update?: Enumerable<inquiresUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<inquiresUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<inquiresScalarWhereInput>
  }

  export type ShippingChecklistItemUpdateManyWithoutShippingInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutShippingInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutShippingInput>
    upsert?: Enumerable<ShippingChecklistItemUpsertWithWhereUniqueWithoutShippingInput>
    createMany?: ShippingChecklistItemCreateManyShippingInputEnvelope
    set?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    disconnect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    delete?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    update?: Enumerable<ShippingChecklistItemUpdateWithWhereUniqueWithoutShippingInput>
    updateMany?: Enumerable<ShippingChecklistItemUpdateManyWithWhereWithoutShippingInput>
    deleteMany?: Enumerable<ShippingChecklistItemScalarWhereInput>
  }

  export type shipping_documentsUncheckedUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShippingsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_documentsCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_filesUncheckedUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutShippingsInput>, Enumerable<shipping_filesUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_filesUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_filesCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_filesWhereUniqueInput>
    disconnect?: Enumerable<shipping_filesWhereUniqueInput>
    delete?: Enumerable<shipping_filesWhereUniqueInput>
    connect?: Enumerable<shipping_filesWhereUniqueInput>
    update?: Enumerable<shipping_filesUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_filesUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_filesScalarWhereInput>
  }

  export type shipping_portsUncheckedUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_portsCreateWithoutShippingsInput>, Enumerable<shipping_portsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_portsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_portsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_portsCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_portsWhereUniqueInput>
    disconnect?: Enumerable<shipping_portsWhereUniqueInput>
    delete?: Enumerable<shipping_portsWhereUniqueInput>
    connect?: Enumerable<shipping_portsWhereUniqueInput>
    update?: Enumerable<shipping_portsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_portsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_portsScalarWhereInput>
  }

  export type shipping_productsUncheckedUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_productsCreateWithoutShippingsInput>, Enumerable<shipping_productsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_productsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_productsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_productsCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_productsWhereUniqueInput>
    disconnect?: Enumerable<shipping_productsWhereUniqueInput>
    delete?: Enumerable<shipping_productsWhereUniqueInput>
    connect?: Enumerable<shipping_productsWhereUniqueInput>
    update?: Enumerable<shipping_productsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_productsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_productsScalarWhereInput>
  }

  export type subsetsUncheckedUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<subsetsCreateWithoutShippingsInput>, Enumerable<subsetsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<subsetsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<subsetsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: subsetsCreateManyShippingsInputEnvelope
    set?: Enumerable<subsetsWhereUniqueInput>
    disconnect?: Enumerable<subsetsWhereUniqueInput>
    delete?: Enumerable<subsetsWhereUniqueInput>
    connect?: Enumerable<subsetsWhereUniqueInput>
    update?: Enumerable<subsetsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<subsetsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<subsetsScalarWhereInput>
  }

  export type inquiresUncheckedUpdateManyWithoutShippingsInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutShippingsInput>, Enumerable<inquiresUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<inquiresUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: inquiresCreateManyShippingsInputEnvelope
    set?: Enumerable<inquiresWhereUniqueInput>
    disconnect?: Enumerable<inquiresWhereUniqueInput>
    delete?: Enumerable<inquiresWhereUniqueInput>
    connect?: Enumerable<inquiresWhereUniqueInput>
    update?: Enumerable<inquiresUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<inquiresUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<inquiresScalarWhereInput>
  }

  export type ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutShippingInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutShippingInput>
    upsert?: Enumerable<ShippingChecklistItemUpsertWithWhereUniqueWithoutShippingInput>
    createMany?: ShippingChecklistItemCreateManyShippingInputEnvelope
    set?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    disconnect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    delete?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    update?: Enumerable<ShippingChecklistItemUpdateWithWhereUniqueWithoutShippingInput>
    updateMany?: Enumerable<ShippingChecklistItemUpdateManyWithWhereWithoutShippingInput>
    deleteMany?: Enumerable<ShippingChecklistItemScalarWhereInput>
  }

  export type ShippingCreateNestedOneWithoutSubsetsInput = {
    create?: XOR<ShippingCreateWithoutSubsetsInput, ShippingUncheckedCreateWithoutSubsetsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutSubsetsInput
    connect?: ShippingWhereUniqueInput
  }

  export type ShippingUpdateOneWithoutSubsetsInput = {
    create?: XOR<ShippingCreateWithoutSubsetsInput, ShippingUncheckedCreateWithoutSubsetsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutSubsetsInput
    upsert?: ShippingUpsertWithoutSubsetsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutSubsetsInput, ShippingUncheckedUpdateWithoutSubsetsInput>
  }

  export type usersCreateNestedOneWithoutUser_filesInput = {
    create?: XOR<usersCreateWithoutUser_filesInput, usersUncheckedCreateWithoutUser_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_filesInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutUser_filesInput = {
    create?: XOR<usersCreateWithoutUser_filesInput, usersUncheckedCreateWithoutUser_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_filesInput
    upsert?: usersUpsertWithoutUser_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutUser_filesInput, usersUncheckedUpdateWithoutUser_filesInput>
  }

  export type shipping_documentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutUsersInput>, Enumerable<shipping_documentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutUsersInput>
    createMany?: shipping_documentsCreateManyUsersInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_filesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutUsersInput>, Enumerable<shipping_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutUsersInput>
    createMany?: shipping_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<shipping_filesWhereUniqueInput>
  }

  export type ShippingCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutUsersInput>, Enumerable<ShippingUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutUsersInput>
    createMany?: ShippingCreateManyUsersInputEnvelope
    connect?: Enumerable<ShippingWhereUniqueInput>
  }

  export type user_filesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<user_filesCreateWithoutUsersInput>, Enumerable<user_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<user_filesCreateOrConnectWithoutUsersInput>
    createMany?: user_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<user_filesWhereUniqueInput>
  }

  export type inquiresCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutUsersInput>, Enumerable<inquiresUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutUsersInput>
    createMany?: inquiresCreateManyUsersInputEnvelope
    connect?: Enumerable<inquiresWhereUniqueInput>
  }

  export type inquires_commentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutUsersInput>, Enumerable<inquires_commentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutUsersInput>
    createMany?: inquires_commentsCreateManyUsersInputEnvelope
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
  }

  export type ShippingChecklistItemCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutUserInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutUserInput>
    createMany?: ShippingChecklistItemCreateManyUserInputEnvelope
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
  }

  export type group_emailsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutUsersInput>, Enumerable<group_emailsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutUsersInput>
    createMany?: group_emailsCreateManyUsersInputEnvelope
    connect?: Enumerable<group_emailsWhereUniqueInput>
  }

  export type port_filesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutUsersInput>, Enumerable<port_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutUsersInput>
    createMany?: port_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<port_filesWhereUniqueInput>
  }

  export type vessel_filesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutUsersInput>, Enumerable<vessel_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutUsersInput>
    createMany?: vessel_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<vessel_filesWhereUniqueInput>
  }

  export type shipping_documentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutUsersInput>, Enumerable<shipping_documentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutUsersInput>
    createMany?: shipping_documentsCreateManyUsersInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_filesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutUsersInput>, Enumerable<shipping_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutUsersInput>
    createMany?: shipping_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<shipping_filesWhereUniqueInput>
  }

  export type ShippingUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutUsersInput>, Enumerable<ShippingUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutUsersInput>
    createMany?: ShippingCreateManyUsersInputEnvelope
    connect?: Enumerable<ShippingWhereUniqueInput>
  }

  export type user_filesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<user_filesCreateWithoutUsersInput>, Enumerable<user_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<user_filesCreateOrConnectWithoutUsersInput>
    createMany?: user_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<user_filesWhereUniqueInput>
  }

  export type inquiresUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutUsersInput>, Enumerable<inquiresUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutUsersInput>
    createMany?: inquiresCreateManyUsersInputEnvelope
    connect?: Enumerable<inquiresWhereUniqueInput>
  }

  export type inquires_commentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutUsersInput>, Enumerable<inquires_commentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutUsersInput>
    createMany?: inquires_commentsCreateManyUsersInputEnvelope
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
  }

  export type ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutUserInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutUserInput>
    createMany?: ShippingChecklistItemCreateManyUserInputEnvelope
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
  }

  export type group_emailsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutUsersInput>, Enumerable<group_emailsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutUsersInput>
    createMany?: group_emailsCreateManyUsersInputEnvelope
    connect?: Enumerable<group_emailsWhereUniqueInput>
  }

  export type port_filesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutUsersInput>, Enumerable<port_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutUsersInput>
    createMany?: port_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<port_filesWhereUniqueInput>
  }

  export type vessel_filesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutUsersInput>, Enumerable<vessel_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutUsersInput>
    createMany?: vessel_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<vessel_filesWhereUniqueInput>
  }

  export type shipping_documentsUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutUsersInput>, Enumerable<shipping_documentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: shipping_documentsCreateManyUsersInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_filesUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutUsersInput>, Enumerable<shipping_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<shipping_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: shipping_filesCreateManyUsersInputEnvelope
    set?: Enumerable<shipping_filesWhereUniqueInput>
    disconnect?: Enumerable<shipping_filesWhereUniqueInput>
    delete?: Enumerable<shipping_filesWhereUniqueInput>
    connect?: Enumerable<shipping_filesWhereUniqueInput>
    update?: Enumerable<shipping_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<shipping_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<shipping_filesScalarWhereInput>
  }

  export type ShippingUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutUsersInput>, Enumerable<ShippingUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<ShippingUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: ShippingCreateManyUsersInputEnvelope
    set?: Enumerable<ShippingWhereUniqueInput>
    disconnect?: Enumerable<ShippingWhereUniqueInput>
    delete?: Enumerable<ShippingWhereUniqueInput>
    connect?: Enumerable<ShippingWhereUniqueInput>
    update?: Enumerable<ShippingUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<ShippingUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<ShippingScalarWhereInput>
  }

  export type user_filesUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<user_filesCreateWithoutUsersInput>, Enumerable<user_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<user_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<user_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: user_filesCreateManyUsersInputEnvelope
    set?: Enumerable<user_filesWhereUniqueInput>
    disconnect?: Enumerable<user_filesWhereUniqueInput>
    delete?: Enumerable<user_filesWhereUniqueInput>
    connect?: Enumerable<user_filesWhereUniqueInput>
    update?: Enumerable<user_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<user_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<user_filesScalarWhereInput>
  }

  export type inquiresUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutUsersInput>, Enumerable<inquiresUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<inquiresUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: inquiresCreateManyUsersInputEnvelope
    set?: Enumerable<inquiresWhereUniqueInput>
    disconnect?: Enumerable<inquiresWhereUniqueInput>
    delete?: Enumerable<inquiresWhereUniqueInput>
    connect?: Enumerable<inquiresWhereUniqueInput>
    update?: Enumerable<inquiresUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<inquiresUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<inquiresScalarWhereInput>
  }

  export type inquires_commentsUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutUsersInput>, Enumerable<inquires_commentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<inquires_commentsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: inquires_commentsCreateManyUsersInputEnvelope
    set?: Enumerable<inquires_commentsWhereUniqueInput>
    disconnect?: Enumerable<inquires_commentsWhereUniqueInput>
    delete?: Enumerable<inquires_commentsWhereUniqueInput>
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
    update?: Enumerable<inquires_commentsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<inquires_commentsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<inquires_commentsScalarWhereInput>
  }

  export type ShippingChecklistItemUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutUserInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ShippingChecklistItemUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ShippingChecklistItemCreateManyUserInputEnvelope
    set?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    disconnect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    delete?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    update?: Enumerable<ShippingChecklistItemUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ShippingChecklistItemUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ShippingChecklistItemScalarWhereInput>
  }

  export type group_emailsUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutUsersInput>, Enumerable<group_emailsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<group_emailsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: group_emailsCreateManyUsersInputEnvelope
    set?: Enumerable<group_emailsWhereUniqueInput>
    disconnect?: Enumerable<group_emailsWhereUniqueInput>
    delete?: Enumerable<group_emailsWhereUniqueInput>
    connect?: Enumerable<group_emailsWhereUniqueInput>
    update?: Enumerable<group_emailsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<group_emailsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<group_emailsScalarWhereInput>
  }

  export type port_filesUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutUsersInput>, Enumerable<port_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<port_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: port_filesCreateManyUsersInputEnvelope
    set?: Enumerable<port_filesWhereUniqueInput>
    disconnect?: Enumerable<port_filesWhereUniqueInput>
    delete?: Enumerable<port_filesWhereUniqueInput>
    connect?: Enumerable<port_filesWhereUniqueInput>
    update?: Enumerable<port_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<port_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<port_filesScalarWhereInput>
  }

  export type vessel_filesUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutUsersInput>, Enumerable<vessel_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<vessel_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: vessel_filesCreateManyUsersInputEnvelope
    set?: Enumerable<vessel_filesWhereUniqueInput>
    disconnect?: Enumerable<vessel_filesWhereUniqueInput>
    delete?: Enumerable<vessel_filesWhereUniqueInput>
    connect?: Enumerable<vessel_filesWhereUniqueInput>
    update?: Enumerable<vessel_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<vessel_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<vessel_filesScalarWhereInput>
  }

  export type shipping_documentsUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutUsersInput>, Enumerable<shipping_documentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: shipping_documentsCreateManyUsersInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_filesUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutUsersInput>, Enumerable<shipping_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<shipping_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: shipping_filesCreateManyUsersInputEnvelope
    set?: Enumerable<shipping_filesWhereUniqueInput>
    disconnect?: Enumerable<shipping_filesWhereUniqueInput>
    delete?: Enumerable<shipping_filesWhereUniqueInput>
    connect?: Enumerable<shipping_filesWhereUniqueInput>
    update?: Enumerable<shipping_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<shipping_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<shipping_filesScalarWhereInput>
  }

  export type ShippingUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutUsersInput>, Enumerable<ShippingUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<ShippingUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: ShippingCreateManyUsersInputEnvelope
    set?: Enumerable<ShippingWhereUniqueInput>
    disconnect?: Enumerable<ShippingWhereUniqueInput>
    delete?: Enumerable<ShippingWhereUniqueInput>
    connect?: Enumerable<ShippingWhereUniqueInput>
    update?: Enumerable<ShippingUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<ShippingUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<ShippingScalarWhereInput>
  }

  export type user_filesUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<user_filesCreateWithoutUsersInput>, Enumerable<user_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<user_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<user_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: user_filesCreateManyUsersInputEnvelope
    set?: Enumerable<user_filesWhereUniqueInput>
    disconnect?: Enumerable<user_filesWhereUniqueInput>
    delete?: Enumerable<user_filesWhereUniqueInput>
    connect?: Enumerable<user_filesWhereUniqueInput>
    update?: Enumerable<user_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<user_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<user_filesScalarWhereInput>
  }

  export type inquiresUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutUsersInput>, Enumerable<inquiresUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<inquiresUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: inquiresCreateManyUsersInputEnvelope
    set?: Enumerable<inquiresWhereUniqueInput>
    disconnect?: Enumerable<inquiresWhereUniqueInput>
    delete?: Enumerable<inquiresWhereUniqueInput>
    connect?: Enumerable<inquiresWhereUniqueInput>
    update?: Enumerable<inquiresUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<inquiresUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<inquiresScalarWhereInput>
  }

  export type inquires_commentsUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutUsersInput>, Enumerable<inquires_commentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<inquires_commentsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: inquires_commentsCreateManyUsersInputEnvelope
    set?: Enumerable<inquires_commentsWhereUniqueInput>
    disconnect?: Enumerable<inquires_commentsWhereUniqueInput>
    delete?: Enumerable<inquires_commentsWhereUniqueInput>
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
    update?: Enumerable<inquires_commentsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<inquires_commentsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<inquires_commentsScalarWhereInput>
  }

  export type ShippingChecklistItemUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutUserInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ShippingChecklistItemUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ShippingChecklistItemCreateManyUserInputEnvelope
    set?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    disconnect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    delete?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    update?: Enumerable<ShippingChecklistItemUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ShippingChecklistItemUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ShippingChecklistItemScalarWhereInput>
  }

  export type group_emailsUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutUsersInput>, Enumerable<group_emailsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<group_emailsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: group_emailsCreateManyUsersInputEnvelope
    set?: Enumerable<group_emailsWhereUniqueInput>
    disconnect?: Enumerable<group_emailsWhereUniqueInput>
    delete?: Enumerable<group_emailsWhereUniqueInput>
    connect?: Enumerable<group_emailsWhereUniqueInput>
    update?: Enumerable<group_emailsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<group_emailsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<group_emailsScalarWhereInput>
  }

  export type port_filesUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutUsersInput>, Enumerable<port_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<port_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: port_filesCreateManyUsersInputEnvelope
    set?: Enumerable<port_filesWhereUniqueInput>
    disconnect?: Enumerable<port_filesWhereUniqueInput>
    delete?: Enumerable<port_filesWhereUniqueInput>
    connect?: Enumerable<port_filesWhereUniqueInput>
    update?: Enumerable<port_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<port_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<port_filesScalarWhereInput>
  }

  export type vessel_filesUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutUsersInput>, Enumerable<vessel_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<vessel_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: vessel_filesCreateManyUsersInputEnvelope
    set?: Enumerable<vessel_filesWhereUniqueInput>
    disconnect?: Enumerable<vessel_filesWhereUniqueInput>
    delete?: Enumerable<vessel_filesWhereUniqueInput>
    connect?: Enumerable<vessel_filesWhereUniqueInput>
    update?: Enumerable<vessel_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<vessel_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<vessel_filesScalarWhereInput>
  }

  export type usersCreateNestedOneWithoutVessel_filesInput = {
    create?: XOR<usersCreateWithoutVessel_filesInput, usersUncheckedCreateWithoutVessel_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutVessel_filesInput
    connect?: usersWhereUniqueInput
  }

  export type VesselCreateNestedOneWithoutVessel_filesInput = {
    create?: XOR<VesselCreateWithoutVessel_filesInput, VesselUncheckedCreateWithoutVessel_filesInput>
    connectOrCreate?: VesselCreateOrConnectWithoutVessel_filesInput
    connect?: VesselWhereUniqueInput
  }

  export type usersUpdateOneWithoutVessel_filesInput = {
    create?: XOR<usersCreateWithoutVessel_filesInput, usersUncheckedCreateWithoutVessel_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutVessel_filesInput
    upsert?: usersUpsertWithoutVessel_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutVessel_filesInput, usersUncheckedUpdateWithoutVessel_filesInput>
  }

  export type VesselUpdateOneWithoutVessel_filesInput = {
    create?: XOR<VesselCreateWithoutVessel_filesInput, VesselUncheckedCreateWithoutVessel_filesInput>
    connectOrCreate?: VesselCreateOrConnectWithoutVessel_filesInput
    upsert?: VesselUpsertWithoutVessel_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: VesselWhereUniqueInput
    update?: XOR<VesselUpdateWithoutVessel_filesInput, VesselUncheckedUpdateWithoutVessel_filesInput>
  }

  export type CountryCreateNestedOneWithoutVesselsInput = {
    create?: XOR<CountryCreateWithoutVesselsInput, CountryUncheckedCreateWithoutVesselsInput>
    connectOrCreate?: CountryCreateOrConnectWithoutVesselsInput
    connect?: CountryWhereUniqueInput
  }

  export type ShippingCreateNestedManyWithoutVesselInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutVesselInput>, Enumerable<ShippingUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutVesselInput>
    createMany?: ShippingCreateManyVesselInputEnvelope
    connect?: Enumerable<ShippingWhereUniqueInput>
  }

  export type vessel_filesCreateNestedManyWithoutVesselsInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutVesselsInput>, Enumerable<vessel_filesUncheckedCreateWithoutVesselsInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutVesselsInput>
    createMany?: vessel_filesCreateManyVesselsInputEnvelope
    connect?: Enumerable<vessel_filesWhereUniqueInput>
  }

  export type group_emailsCreateNestedManyWithoutVesselInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutVesselInput>, Enumerable<group_emailsUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutVesselInput>
    createMany?: group_emailsCreateManyVesselInputEnvelope
    connect?: Enumerable<group_emailsWhereUniqueInput>
  }

  export type ShippingUncheckedCreateNestedManyWithoutVesselInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutVesselInput>, Enumerable<ShippingUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutVesselInput>
    createMany?: ShippingCreateManyVesselInputEnvelope
    connect?: Enumerable<ShippingWhereUniqueInput>
  }

  export type vessel_filesUncheckedCreateNestedManyWithoutVesselsInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutVesselsInput>, Enumerable<vessel_filesUncheckedCreateWithoutVesselsInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutVesselsInput>
    createMany?: vessel_filesCreateManyVesselsInputEnvelope
    connect?: Enumerable<vessel_filesWhereUniqueInput>
  }

  export type group_emailsUncheckedCreateNestedManyWithoutVesselInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutVesselInput>, Enumerable<group_emailsUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutVesselInput>
    createMany?: group_emailsCreateManyVesselInputEnvelope
    connect?: Enumerable<group_emailsWhereUniqueInput>
  }

  export type CountryUpdateOneWithoutVesselsInput = {
    create?: XOR<CountryCreateWithoutVesselsInput, CountryUncheckedCreateWithoutVesselsInput>
    connectOrCreate?: CountryCreateOrConnectWithoutVesselsInput
    upsert?: CountryUpsertWithoutVesselsInput
    disconnect?: boolean
    delete?: boolean
    connect?: CountryWhereUniqueInput
    update?: XOR<CountryUpdateWithoutVesselsInput, CountryUncheckedUpdateWithoutVesselsInput>
  }

  export type ShippingUpdateManyWithoutVesselInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutVesselInput>, Enumerable<ShippingUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutVesselInput>
    upsert?: Enumerable<ShippingUpsertWithWhereUniqueWithoutVesselInput>
    createMany?: ShippingCreateManyVesselInputEnvelope
    set?: Enumerable<ShippingWhereUniqueInput>
    disconnect?: Enumerable<ShippingWhereUniqueInput>
    delete?: Enumerable<ShippingWhereUniqueInput>
    connect?: Enumerable<ShippingWhereUniqueInput>
    update?: Enumerable<ShippingUpdateWithWhereUniqueWithoutVesselInput>
    updateMany?: Enumerable<ShippingUpdateManyWithWhereWithoutVesselInput>
    deleteMany?: Enumerable<ShippingScalarWhereInput>
  }

  export type vessel_filesUpdateManyWithoutVesselsInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutVesselsInput>, Enumerable<vessel_filesUncheckedCreateWithoutVesselsInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutVesselsInput>
    upsert?: Enumerable<vessel_filesUpsertWithWhereUniqueWithoutVesselsInput>
    createMany?: vessel_filesCreateManyVesselsInputEnvelope
    set?: Enumerable<vessel_filesWhereUniqueInput>
    disconnect?: Enumerable<vessel_filesWhereUniqueInput>
    delete?: Enumerable<vessel_filesWhereUniqueInput>
    connect?: Enumerable<vessel_filesWhereUniqueInput>
    update?: Enumerable<vessel_filesUpdateWithWhereUniqueWithoutVesselsInput>
    updateMany?: Enumerable<vessel_filesUpdateManyWithWhereWithoutVesselsInput>
    deleteMany?: Enumerable<vessel_filesScalarWhereInput>
  }

  export type group_emailsUpdateManyWithoutVesselInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutVesselInput>, Enumerable<group_emailsUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutVesselInput>
    upsert?: Enumerable<group_emailsUpsertWithWhereUniqueWithoutVesselInput>
    createMany?: group_emailsCreateManyVesselInputEnvelope
    set?: Enumerable<group_emailsWhereUniqueInput>
    disconnect?: Enumerable<group_emailsWhereUniqueInput>
    delete?: Enumerable<group_emailsWhereUniqueInput>
    connect?: Enumerable<group_emailsWhereUniqueInput>
    update?: Enumerable<group_emailsUpdateWithWhereUniqueWithoutVesselInput>
    updateMany?: Enumerable<group_emailsUpdateManyWithWhereWithoutVesselInput>
    deleteMany?: Enumerable<group_emailsScalarWhereInput>
  }

  export type ShippingUncheckedUpdateManyWithoutVesselInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutVesselInput>, Enumerable<ShippingUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutVesselInput>
    upsert?: Enumerable<ShippingUpsertWithWhereUniqueWithoutVesselInput>
    createMany?: ShippingCreateManyVesselInputEnvelope
    set?: Enumerable<ShippingWhereUniqueInput>
    disconnect?: Enumerable<ShippingWhereUniqueInput>
    delete?: Enumerable<ShippingWhereUniqueInput>
    connect?: Enumerable<ShippingWhereUniqueInput>
    update?: Enumerable<ShippingUpdateWithWhereUniqueWithoutVesselInput>
    updateMany?: Enumerable<ShippingUpdateManyWithWhereWithoutVesselInput>
    deleteMany?: Enumerable<ShippingScalarWhereInput>
  }

  export type vessel_filesUncheckedUpdateManyWithoutVesselsInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutVesselsInput>, Enumerable<vessel_filesUncheckedCreateWithoutVesselsInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutVesselsInput>
    upsert?: Enumerable<vessel_filesUpsertWithWhereUniqueWithoutVesselsInput>
    createMany?: vessel_filesCreateManyVesselsInputEnvelope
    set?: Enumerable<vessel_filesWhereUniqueInput>
    disconnect?: Enumerable<vessel_filesWhereUniqueInput>
    delete?: Enumerable<vessel_filesWhereUniqueInput>
    connect?: Enumerable<vessel_filesWhereUniqueInput>
    update?: Enumerable<vessel_filesUpdateWithWhereUniqueWithoutVesselsInput>
    updateMany?: Enumerable<vessel_filesUpdateManyWithWhereWithoutVesselsInput>
    deleteMany?: Enumerable<vessel_filesScalarWhereInput>
  }

  export type group_emailsUncheckedUpdateManyWithoutVesselInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutVesselInput>, Enumerable<group_emailsUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutVesselInput>
    upsert?: Enumerable<group_emailsUpsertWithWhereUniqueWithoutVesselInput>
    createMany?: group_emailsCreateManyVesselInputEnvelope
    set?: Enumerable<group_emailsWhereUniqueInput>
    disconnect?: Enumerable<group_emailsWhereUniqueInput>
    delete?: Enumerable<group_emailsWhereUniqueInput>
    connect?: Enumerable<group_emailsWhereUniqueInput>
    update?: Enumerable<group_emailsUpdateWithWhereUniqueWithoutVesselInput>
    updateMany?: Enumerable<group_emailsUpdateManyWithWhereWithoutVesselInput>
    deleteMany?: Enumerable<group_emailsScalarWhereInput>
  }

  export type ShippingCreateNestedOneWithoutInquiresInput = {
    create?: XOR<ShippingCreateWithoutInquiresInput, ShippingUncheckedCreateWithoutInquiresInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutInquiresInput
    connect?: ShippingWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutInquiresInput = {
    create?: XOR<usersCreateWithoutInquiresInput, usersUncheckedCreateWithoutInquiresInput>
    connectOrCreate?: usersCreateOrConnectWithoutInquiresInput
    connect?: usersWhereUniqueInput
  }

  export type inquires_commentsCreateNestedManyWithoutInquiresInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutInquiresInput>, Enumerable<inquires_commentsUncheckedCreateWithoutInquiresInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutInquiresInput>
    createMany?: inquires_commentsCreateManyInquiresInputEnvelope
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
  }

  export type inquires_commentsUncheckedCreateNestedManyWithoutInquiresInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutInquiresInput>, Enumerable<inquires_commentsUncheckedCreateWithoutInquiresInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutInquiresInput>
    createMany?: inquires_commentsCreateManyInquiresInputEnvelope
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
  }

  export type ShippingUpdateOneWithoutInquiresInput = {
    create?: XOR<ShippingCreateWithoutInquiresInput, ShippingUncheckedCreateWithoutInquiresInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutInquiresInput
    upsert?: ShippingUpsertWithoutInquiresInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutInquiresInput, ShippingUncheckedUpdateWithoutInquiresInput>
  }

  export type usersUpdateOneWithoutInquiresInput = {
    create?: XOR<usersCreateWithoutInquiresInput, usersUncheckedCreateWithoutInquiresInput>
    connectOrCreate?: usersCreateOrConnectWithoutInquiresInput
    upsert?: usersUpsertWithoutInquiresInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutInquiresInput, usersUncheckedUpdateWithoutInquiresInput>
  }

  export type inquires_commentsUpdateManyWithoutInquiresInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutInquiresInput>, Enumerable<inquires_commentsUncheckedCreateWithoutInquiresInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutInquiresInput>
    upsert?: Enumerable<inquires_commentsUpsertWithWhereUniqueWithoutInquiresInput>
    createMany?: inquires_commentsCreateManyInquiresInputEnvelope
    set?: Enumerable<inquires_commentsWhereUniqueInput>
    disconnect?: Enumerable<inquires_commentsWhereUniqueInput>
    delete?: Enumerable<inquires_commentsWhereUniqueInput>
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
    update?: Enumerable<inquires_commentsUpdateWithWhereUniqueWithoutInquiresInput>
    updateMany?: Enumerable<inquires_commentsUpdateManyWithWhereWithoutInquiresInput>
    deleteMany?: Enumerable<inquires_commentsScalarWhereInput>
  }

  export type inquires_commentsUncheckedUpdateManyWithoutInquiresInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutInquiresInput>, Enumerable<inquires_commentsUncheckedCreateWithoutInquiresInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutInquiresInput>
    upsert?: Enumerable<inquires_commentsUpsertWithWhereUniqueWithoutInquiresInput>
    createMany?: inquires_commentsCreateManyInquiresInputEnvelope
    set?: Enumerable<inquires_commentsWhereUniqueInput>
    disconnect?: Enumerable<inquires_commentsWhereUniqueInput>
    delete?: Enumerable<inquires_commentsWhereUniqueInput>
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
    update?: Enumerable<inquires_commentsUpdateWithWhereUniqueWithoutInquiresInput>
    updateMany?: Enumerable<inquires_commentsUpdateManyWithWhereWithoutInquiresInput>
    deleteMany?: Enumerable<inquires_commentsScalarWhereInput>
  }

  export type inquiresCreateNestedOneWithoutInquires_commentsInput = {
    create?: XOR<inquiresCreateWithoutInquires_commentsInput, inquiresUncheckedCreateWithoutInquires_commentsInput>
    connectOrCreate?: inquiresCreateOrConnectWithoutInquires_commentsInput
    connect?: inquiresWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutInquires_commentsInput = {
    create?: XOR<usersCreateWithoutInquires_commentsInput, usersUncheckedCreateWithoutInquires_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutInquires_commentsInput
    connect?: usersWhereUniqueInput
  }

  export type inquiresUpdateOneWithoutInquires_commentsInput = {
    create?: XOR<inquiresCreateWithoutInquires_commentsInput, inquiresUncheckedCreateWithoutInquires_commentsInput>
    connectOrCreate?: inquiresCreateOrConnectWithoutInquires_commentsInput
    upsert?: inquiresUpsertWithoutInquires_commentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: inquiresWhereUniqueInput
    update?: XOR<inquiresUpdateWithoutInquires_commentsInput, inquiresUncheckedUpdateWithoutInquires_commentsInput>
  }

  export type usersUpdateOneWithoutInquires_commentsInput = {
    create?: XOR<usersCreateWithoutInquires_commentsInput, usersUncheckedCreateWithoutInquires_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutInquires_commentsInput
    upsert?: usersUpsertWithoutInquires_commentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutInquires_commentsInput, usersUncheckedUpdateWithoutInquires_commentsInput>
  }

  export type VesselCreateNestedOneWithoutGroup_emailsInput = {
    create?: XOR<VesselCreateWithoutGroup_emailsInput, VesselUncheckedCreateWithoutGroup_emailsInput>
    connectOrCreate?: VesselCreateOrConnectWithoutGroup_emailsInput
    connect?: VesselWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutGroup_emailsInput = {
    create?: XOR<usersCreateWithoutGroup_emailsInput, usersUncheckedCreateWithoutGroup_emailsInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_emailsInput
    connect?: usersWhereUniqueInput
  }

  export type VesselUpdateOneWithoutGroup_emailsInput = {
    create?: XOR<VesselCreateWithoutGroup_emailsInput, VesselUncheckedCreateWithoutGroup_emailsInput>
    connectOrCreate?: VesselCreateOrConnectWithoutGroup_emailsInput
    upsert?: VesselUpsertWithoutGroup_emailsInput
    disconnect?: boolean
    delete?: boolean
    connect?: VesselWhereUniqueInput
    update?: XOR<VesselUpdateWithoutGroup_emailsInput, VesselUncheckedUpdateWithoutGroup_emailsInput>
  }

  export type usersUpdateOneWithoutGroup_emailsInput = {
    create?: XOR<usersCreateWithoutGroup_emailsInput, usersUncheckedCreateWithoutGroup_emailsInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_emailsInput
    upsert?: usersUpsertWithoutGroup_emailsInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutGroup_emailsInput, usersUncheckedUpdateWithoutGroup_emailsInput>
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedDateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedFloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedDateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedBoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type NestedBoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type NestedBoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }

  export type berthsCreateWithoutBerth_productsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    ports?: portsCreateNestedOneWithoutBerthsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutBerthsInput
  }

  export type berthsUncheckedCreateWithoutBerth_productsInput = {
    id?: number
    name?: string | null
    description?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutBerthsInput
  }

  export type berthsCreateOrConnectWithoutBerth_productsInput = {
    where: berthsWhereUniqueInput
    create: XOR<berthsCreateWithoutBerth_productsInput, berthsUncheckedCreateWithoutBerth_productsInput>
  }

  export type productsCreateWithoutBerth_productsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_products?: shipping_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutBerth_productsInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutBerth_productsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutBerth_productsInput, productsUncheckedCreateWithoutBerth_productsInput>
  }

  export type proformasCreateWithoutBerth_productsInput = {
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    proforma_files?: proforma_filesCreateNestedManyWithoutProformasInput
  }

  export type proformasUncheckedCreateWithoutBerth_productsInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    proforma_files?: proforma_filesUncheckedCreateNestedManyWithoutProformasInput
  }

  export type proformasCreateOrConnectWithoutBerth_productsInput = {
    where: proformasWhereUniqueInput
    create: XOR<proformasCreateWithoutBerth_productsInput, proformasUncheckedCreateWithoutBerth_productsInput>
  }

  export type proformasCreateManyBerth_productsInputEnvelope = {
    data: Enumerable<proformasCreateManyBerth_productsInput>
    skipDuplicates?: boolean
  }

  export type berthsUpsertWithoutBerth_productsInput = {
    update: XOR<berthsUpdateWithoutBerth_productsInput, berthsUncheckedUpdateWithoutBerth_productsInput>
    create: XOR<berthsCreateWithoutBerth_productsInput, berthsUncheckedCreateWithoutBerth_productsInput>
  }

  export type berthsUpdateWithoutBerth_productsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    ports?: portsUpdateOneWithoutBerthsInput
    shipping_ports?: shipping_portsUpdateManyWithoutBerthsInput
  }

  export type berthsUncheckedUpdateWithoutBerth_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutBerthsInput
  }

  export type productsUpsertWithoutBerth_productsInput = {
    update: XOR<productsUpdateWithoutBerth_productsInput, productsUncheckedUpdateWithoutBerth_productsInput>
    create: XOR<productsCreateWithoutBerth_productsInput, productsUncheckedCreateWithoutBerth_productsInput>
  }

  export type productsUpdateWithoutBerth_productsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_products?: shipping_productsUpdateManyWithoutProductsInput
  }

  export type productsUncheckedUpdateWithoutBerth_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutProductsInput
  }

  export type proformasUpsertWithWhereUniqueWithoutBerth_productsInput = {
    where: proformasWhereUniqueInput
    update: XOR<proformasUpdateWithoutBerth_productsInput, proformasUncheckedUpdateWithoutBerth_productsInput>
    create: XOR<proformasCreateWithoutBerth_productsInput, proformasUncheckedCreateWithoutBerth_productsInput>
  }

  export type proformasUpdateWithWhereUniqueWithoutBerth_productsInput = {
    where: proformasWhereUniqueInput
    data: XOR<proformasUpdateWithoutBerth_productsInput, proformasUncheckedUpdateWithoutBerth_productsInput>
  }

  export type proformasUpdateManyWithWhereWithoutBerth_productsInput = {
    where: proformasScalarWhereInput
    data: XOR<proformasUpdateManyMutationInput, proformasUncheckedUpdateManyWithoutProformasInput>
  }

  export type proformasScalarWhereInput = {
    AND?: Enumerable<proformasScalarWhereInput>
    OR?: Enumerable<proformasScalarWhereInput>
    NOT?: Enumerable<proformasScalarWhereInput>
    id?: IntFilter | number
    taxes?: StringNullableFilter | string | null
    totalValue?: IntNullableFilter | number | null
    berthedHours?: IntNullableFilter | number | null
    berthProductId?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    idHash?: StringNullableFilter | string | null
    applicantName?: StringNullableFilter | string | null
    applicantEmail?: StringNullableFilter | string | null
    vesselName?: StringNullableFilter | string | null
    imo?: StringNullableFilter | string | null
    deadWeightTonnage?: FloatNullableFilter | number | null
    lengthOverall?: FloatNullableFilter | number | null
    grossTonnage?: FloatNullableFilter | number | null
    package?: StringNullableFilter | string | null
    builtYear?: IntNullableFilter | number | null
    agencyType?: StringNullableFilter | string | null
    operationType?: StringNullableFilter | string | null
    productTonnage?: FloatNullableFilter | number | null
    usd?: FloatNullableFilter | number | null
    isCargillInternational?: BoolNullableFilter | boolean | null
    beam?: FloatNullableFilter | number | null
    etb?: DateTimeNullableFilter | Date | string | null
    draft?: FloatNullableFilter | number | null
    requestingCustomer?: StringNullableFilter | string | null
    vesselType?: StringNullableFilter | string | null
  }

  export type portsCreateWithoutBerthsInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    country?: CountryCreateNestedOneWithoutPortsInput
    port_files?: port_filesCreateNestedManyWithoutPortsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateWithoutBerthsInput = {
    id?: number
    name?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    port_files?: port_filesUncheckedCreateNestedManyWithoutPortsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsCreateOrConnectWithoutBerthsInput = {
    where: portsWhereUniqueInput
    create: XOR<portsCreateWithoutBerthsInput, portsUncheckedCreateWithoutBerthsInput>
  }

  export type berth_productsCreateWithoutBerthsInput = {
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    products: productsCreateNestedOneWithoutBerth_productsInput
    proformas?: proformasCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedCreateWithoutBerthsInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    proformas?: proformasUncheckedCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsCreateOrConnectWithoutBerthsInput = {
    where: berth_productsWhereUniqueInput
    create: XOR<berth_productsCreateWithoutBerthsInput, berth_productsUncheckedCreateWithoutBerthsInput>
  }

  export type berth_productsCreateManyBerthsInputEnvelope = {
    data: Enumerable<berth_productsCreateManyBerthsInput>
    skipDuplicates?: boolean
  }

  export type shipping_portsCreateWithoutBerthsInput = {
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsCreateNestedOneWithoutShipping_portsInput
    shippings?: ShippingCreateNestedOneWithoutShipping_portsInput
  }

  export type shipping_portsUncheckedCreateWithoutBerthsInput = {
    id?: number
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    shippingId?: number | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_portsCreateOrConnectWithoutBerthsInput = {
    where: shipping_portsWhereUniqueInput
    create: XOR<shipping_portsCreateWithoutBerthsInput, shipping_portsUncheckedCreateWithoutBerthsInput>
  }

  export type shipping_portsCreateManyBerthsInputEnvelope = {
    data: Enumerable<shipping_portsCreateManyBerthsInput>
    skipDuplicates?: boolean
  }

  export type portsUpsertWithoutBerthsInput = {
    update: XOR<portsUpdateWithoutBerthsInput, portsUncheckedUpdateWithoutBerthsInput>
    create: XOR<portsCreateWithoutBerthsInput, portsUncheckedCreateWithoutBerthsInput>
  }

  export type portsUpdateWithoutBerthsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    country?: CountryUpdateOneWithoutPortsInput
    port_files?: port_filesUpdateManyWithoutPortsInput
    shipping_ports?: shipping_portsUpdateManyWithoutPortsInput
  }

  export type portsUncheckedUpdateWithoutBerthsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    port_files?: port_filesUncheckedUpdateManyWithoutPortsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutPortsInput
  }

  export type berth_productsUpsertWithWhereUniqueWithoutBerthsInput = {
    where: berth_productsWhereUniqueInput
    update: XOR<berth_productsUpdateWithoutBerthsInput, berth_productsUncheckedUpdateWithoutBerthsInput>
    create: XOR<berth_productsCreateWithoutBerthsInput, berth_productsUncheckedCreateWithoutBerthsInput>
  }

  export type berth_productsUpdateWithWhereUniqueWithoutBerthsInput = {
    where: berth_productsWhereUniqueInput
    data: XOR<berth_productsUpdateWithoutBerthsInput, berth_productsUncheckedUpdateWithoutBerthsInput>
  }

  export type berth_productsUpdateManyWithWhereWithoutBerthsInput = {
    where: berth_productsScalarWhereInput
    data: XOR<berth_productsUpdateManyMutationInput, berth_productsUncheckedUpdateManyWithoutBerth_productsInput>
  }

  export type berth_productsScalarWhereInput = {
    AND?: Enumerable<berth_productsScalarWhereInput>
    OR?: Enumerable<berth_productsScalarWhereInput>
    NOT?: Enumerable<berth_productsScalarWhereInput>
    id?: IntFilter | number
    loadingCapacity?: FloatNullableFilter | number | null
    unloadingCapacity?: FloatNullableFilter | number | null
    berthId?: IntFilter | number
    productId?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type shipping_portsUpsertWithWhereUniqueWithoutBerthsInput = {
    where: shipping_portsWhereUniqueInput
    update: XOR<shipping_portsUpdateWithoutBerthsInput, shipping_portsUncheckedUpdateWithoutBerthsInput>
    create: XOR<shipping_portsCreateWithoutBerthsInput, shipping_portsUncheckedCreateWithoutBerthsInput>
  }

  export type shipping_portsUpdateWithWhereUniqueWithoutBerthsInput = {
    where: shipping_portsWhereUniqueInput
    data: XOR<shipping_portsUpdateWithoutBerthsInput, shipping_portsUncheckedUpdateWithoutBerthsInput>
  }

  export type shipping_portsUpdateManyWithWhereWithoutBerthsInput = {
    where: shipping_portsScalarWhereInput
    data: XOR<shipping_portsUpdateManyMutationInput, shipping_portsUncheckedUpdateManyWithoutShipping_portsInput>
  }

  export type shipping_portsScalarWhereInput = {
    AND?: Enumerable<shipping_portsScalarWhereInput>
    OR?: Enumerable<shipping_portsScalarWhereInput>
    NOT?: Enumerable<shipping_portsScalarWhereInput>
    id?: IntFilter | number
    estimatedTimeOfArrival?: DateTimeNullableFilter | Date | string | null
    estimatedTimeOfBerthing?: DateTimeNullableFilter | Date | string | null
    estimatedTimeOfSailing?: DateTimeNullableFilter | Date | string | null
    timeOfArrival?: DateTimeNullableFilter | Date | string | null
    timeOfBerthing?: DateTimeNullableFilter | Date | string | null
    timeOfSailing?: DateTimeNullableFilter | Date | string | null
    shippingId?: IntNullableFilter | number | null
    portId?: IntNullableFilter | number | null
    berthId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type ChecklistTemplateItemCreateWithoutChecklistTemplateInput = {
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput = {
    where: ChecklistTemplateItemWhereUniqueInput
    create: XOR<ChecklistTemplateItemCreateWithoutChecklistTemplateInput, ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>
  }

  export type ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope = {
    data: Enumerable<ChecklistTemplateItemCreateManyChecklistTemplateInput>
    skipDuplicates?: boolean
  }

  export type ChecklistTemplateItemUpsertWithWhereUniqueWithoutChecklistTemplateInput = {
    where: ChecklistTemplateItemWhereUniqueInput
    update: XOR<ChecklistTemplateItemUpdateWithoutChecklistTemplateInput, ChecklistTemplateItemUncheckedUpdateWithoutChecklistTemplateInput>
    create: XOR<ChecklistTemplateItemCreateWithoutChecklistTemplateInput, ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>
  }

  export type ChecklistTemplateItemUpdateWithWhereUniqueWithoutChecklistTemplateInput = {
    where: ChecklistTemplateItemWhereUniqueInput
    data: XOR<ChecklistTemplateItemUpdateWithoutChecklistTemplateInput, ChecklistTemplateItemUncheckedUpdateWithoutChecklistTemplateInput>
  }

  export type ChecklistTemplateItemUpdateManyWithWhereWithoutChecklistTemplateInput = {
    where: ChecklistTemplateItemScalarWhereInput
    data: XOR<ChecklistTemplateItemUpdateManyMutationInput, ChecklistTemplateItemUncheckedUpdateManyWithoutItemsInput>
  }

  export type ChecklistTemplateItemScalarWhereInput = {
    AND?: Enumerable<ChecklistTemplateItemScalarWhereInput>
    OR?: Enumerable<ChecklistTemplateItemScalarWhereInput>
    NOT?: Enumerable<ChecklistTemplateItemScalarWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    type?: StringFilter | string
    working_days?: IntNullableFilter | number | null
    checklist_template_id?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type ChecklistTemplateCreateWithoutItemsInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ChecklistTemplateUncheckedCreateWithoutItemsInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ChecklistTemplateCreateOrConnectWithoutItemsInput = {
    where: ChecklistTemplateWhereUniqueInput
    create: XOR<ChecklistTemplateCreateWithoutItemsInput, ChecklistTemplateUncheckedCreateWithoutItemsInput>
  }

  export type ChecklistTemplateUpsertWithoutItemsInput = {
    update: XOR<ChecklistTemplateUpdateWithoutItemsInput, ChecklistTemplateUncheckedUpdateWithoutItemsInput>
    create: XOR<ChecklistTemplateCreateWithoutItemsInput, ChecklistTemplateUncheckedCreateWithoutItemsInput>
  }

  export type ChecklistTemplateUpdateWithoutItemsInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingCreateWithoutShippingChecklistItemInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
  }

  export type ShippingUncheckedCreateWithoutShippingChecklistItemInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
  }

  export type ShippingCreateOrConnectWithoutShippingChecklistItemInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShippingChecklistItemInput, ShippingUncheckedCreateWithoutShippingChecklistItemInput>
  }

  export type usersCreateWithoutShippingChecklistItemInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutShippingChecklistItemInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutShippingChecklistItemInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShippingChecklistItemInput, usersUncheckedCreateWithoutShippingChecklistItemInput>
  }

  export type ShippingUpsertWithoutShippingChecklistItemInput = {
    update: XOR<ShippingUpdateWithoutShippingChecklistItemInput, ShippingUncheckedUpdateWithoutShippingChecklistItemInput>
    create: XOR<ShippingCreateWithoutShippingChecklistItemInput, ShippingUncheckedCreateWithoutShippingChecklistItemInput>
  }

  export type ShippingUpdateWithoutShippingChecklistItemInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutShippingsInput
    vessel?: VesselUpdateOneWithoutShippingsInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUpdateManyWithoutShippingsInput
    subsets?: subsetsUpdateManyWithoutShippingsInput
    inquires?: inquiresUpdateManyWithoutShippingsInput
  }

  export type ShippingUncheckedUpdateWithoutShippingChecklistItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutShippingsInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsInput
  }

  export type usersUpsertWithoutShippingChecklistItemInput = {
    update: XOR<usersUpdateWithoutShippingChecklistItemInput, usersUncheckedUpdateWithoutShippingChecklistItemInput>
    create: XOR<usersCreateWithoutShippingChecklistItemInput, usersUncheckedCreateWithoutShippingChecklistItemInput>
  }

  export type usersUpdateWithoutShippingChecklistItemInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    port_files?: port_filesUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutShippingChecklistItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type portsCreateWithoutCountryInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsCreateNestedManyWithoutPortsInput
    port_files?: port_filesCreateNestedManyWithoutPortsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateWithoutCountryInput = {
    id?: number
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsUncheckedCreateNestedManyWithoutPortsInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutPortsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsCreateOrConnectWithoutCountryInput = {
    where: portsWhereUniqueInput
    create: XOR<portsCreateWithoutCountryInput, portsUncheckedCreateWithoutCountryInput>
  }

  export type portsCreateManyCountryInputEnvelope = {
    data: Enumerable<portsCreateManyCountryInput>
    skipDuplicates?: boolean
  }

  export type VesselCreateWithoutCountryInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsCreateNestedManyWithoutVesselInput
  }

  export type VesselUncheckedCreateWithoutCountryInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingUncheckedCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutVesselInput
  }

  export type VesselCreateOrConnectWithoutCountryInput = {
    where: VesselWhereUniqueInput
    create: XOR<VesselCreateWithoutCountryInput, VesselUncheckedCreateWithoutCountryInput>
  }

  export type VesselCreateManyCountryInputEnvelope = {
    data: Enumerable<VesselCreateManyCountryInput>
    skipDuplicates?: boolean
  }

  export type portsUpsertWithWhereUniqueWithoutCountryInput = {
    where: portsWhereUniqueInput
    update: XOR<portsUpdateWithoutCountryInput, portsUncheckedUpdateWithoutCountryInput>
    create: XOR<portsCreateWithoutCountryInput, portsUncheckedCreateWithoutCountryInput>
  }

  export type portsUpdateWithWhereUniqueWithoutCountryInput = {
    where: portsWhereUniqueInput
    data: XOR<portsUpdateWithoutCountryInput, portsUncheckedUpdateWithoutCountryInput>
  }

  export type portsUpdateManyWithWhereWithoutCountryInput = {
    where: portsScalarWhereInput
    data: XOR<portsUpdateManyMutationInput, portsUncheckedUpdateManyWithoutPortsInput>
  }

  export type portsScalarWhereInput = {
    AND?: Enumerable<portsScalarWhereInput>
    OR?: Enumerable<portsScalarWhereInput>
    NOT?: Enumerable<portsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    countryId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    slug?: StringNullableFilter | string | null
  }

  export type VesselUpsertWithWhereUniqueWithoutCountryInput = {
    where: VesselWhereUniqueInput
    update: XOR<VesselUpdateWithoutCountryInput, VesselUncheckedUpdateWithoutCountryInput>
    create: XOR<VesselCreateWithoutCountryInput, VesselUncheckedCreateWithoutCountryInput>
  }

  export type VesselUpdateWithWhereUniqueWithoutCountryInput = {
    where: VesselWhereUniqueInput
    data: XOR<VesselUpdateWithoutCountryInput, VesselUncheckedUpdateWithoutCountryInput>
  }

  export type VesselUpdateManyWithWhereWithoutCountryInput = {
    where: VesselScalarWhereInput
    data: XOR<VesselUpdateManyMutationInput, VesselUncheckedUpdateManyWithoutVesselsInput>
  }

  export type VesselScalarWhereInput = {
    AND?: Enumerable<VesselScalarWhereInput>
    OR?: Enumerable<VesselScalarWhereInput>
    NOT?: Enumerable<VesselScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    imo?: StringNullableFilter | string | null
    call_sign?: StringNullableFilter | string | null
    satellite_telephone?: StringNullableFilter | string | null
    classification_society?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    length_overall?: FloatNullableFilter | number | null
    dead_weight_tonnage?: FloatNullableFilter | number | null
    beam?: FloatNullableFilter | number | null
    cubic_meters?: FloatNullableFilter | number | null
    gross_tonnage?: FloatNullableFilter | number | null
    net_tonnage?: FloatNullableFilter | number | null
    panama_gross_tonnage?: FloatNullableFilter | number | null
    panama_net_tonnage?: FloatNullableFilter | number | null
    suez_gross_tonnage?: FloatNullableFilter | number | null
    suez_net_tonnage?: FloatNullableFilter | number | null
    reduced_gross_tonnage?: FloatNullableFilter | number | null
    length_between_perpendiculars?: FloatNullableFilter | number | null
    molded_depth?: FloatNullableFilter | number | null
    number_of_holds?: FloatNullableFilter | number | null
    number_of_tanks?: FloatNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    country_id?: IntNullableFilter | number | null
    draft_sw?: StringNullableFilter | string | null
    built_year?: IntNullableFilter | number | null
  }

  export type usersCreateWithoutPort_filesInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutPort_filesInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutPort_filesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPort_filesInput, usersUncheckedCreateWithoutPort_filesInput>
  }

  export type portsCreateWithoutPort_filesInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    country?: CountryCreateNestedOneWithoutPortsInput
    berths?: berthsCreateNestedManyWithoutPortsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateWithoutPort_filesInput = {
    id?: number
    name?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsUncheckedCreateNestedManyWithoutPortsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsCreateOrConnectWithoutPort_filesInput = {
    where: portsWhereUniqueInput
    create: XOR<portsCreateWithoutPort_filesInput, portsUncheckedCreateWithoutPort_filesInput>
  }

  export type usersUpsertWithoutPort_filesInput = {
    update: XOR<usersUpdateWithoutPort_filesInput, usersUncheckedUpdateWithoutPort_filesInput>
    create: XOR<usersCreateWithoutPort_filesInput, usersUncheckedCreateWithoutPort_filesInput>
  }

  export type usersUpdateWithoutPort_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutPort_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type portsUpsertWithoutPort_filesInput = {
    update: XOR<portsUpdateWithoutPort_filesInput, portsUncheckedUpdateWithoutPort_filesInput>
    create: XOR<portsCreateWithoutPort_filesInput, portsUncheckedCreateWithoutPort_filesInput>
  }

  export type portsUpdateWithoutPort_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    country?: CountryUpdateOneWithoutPortsInput
    berths?: berthsUpdateManyWithoutPortsInput
    shipping_ports?: shipping_portsUpdateManyWithoutPortsInput
  }

  export type portsUncheckedUpdateWithoutPort_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUncheckedUpdateManyWithoutPortsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutPortsInput
  }

  export type CountryCreateWithoutPortsInput = {
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    vessels?: VesselCreateNestedManyWithoutCountryInput
  }

  export type CountryUncheckedCreateWithoutPortsInput = {
    id?: number
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    vessels?: VesselUncheckedCreateNestedManyWithoutCountryInput
  }

  export type CountryCreateOrConnectWithoutPortsInput = {
    where: CountryWhereUniqueInput
    create: XOR<CountryCreateWithoutPortsInput, CountryUncheckedCreateWithoutPortsInput>
  }

  export type berthsCreateWithoutPortsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    berth_products?: berth_productsCreateNestedManyWithoutBerthsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutBerthsInput
  }

  export type berthsUncheckedCreateWithoutPortsInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutBerthsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutBerthsInput
  }

  export type berthsCreateOrConnectWithoutPortsInput = {
    where: berthsWhereUniqueInput
    create: XOR<berthsCreateWithoutPortsInput, berthsUncheckedCreateWithoutPortsInput>
  }

  export type berthsCreateManyPortsInputEnvelope = {
    data: Enumerable<berthsCreateManyPortsInput>
    skipDuplicates?: boolean
  }

  export type port_filesCreateWithoutPortsInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutPort_filesInput
  }

  export type port_filesUncheckedCreateWithoutPortsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type port_filesCreateOrConnectWithoutPortsInput = {
    where: port_filesWhereUniqueInput
    create: XOR<port_filesCreateWithoutPortsInput, port_filesUncheckedCreateWithoutPortsInput>
  }

  export type port_filesCreateManyPortsInputEnvelope = {
    data: Enumerable<port_filesCreateManyPortsInput>
    skipDuplicates?: boolean
  }

  export type shipping_portsCreateWithoutPortsInput = {
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berths?: berthsCreateNestedOneWithoutShipping_portsInput
    shippings?: ShippingCreateNestedOneWithoutShipping_portsInput
  }

  export type shipping_portsUncheckedCreateWithoutPortsInput = {
    id?: number
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    shippingId?: number | null
    berthId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_portsCreateOrConnectWithoutPortsInput = {
    where: shipping_portsWhereUniqueInput
    create: XOR<shipping_portsCreateWithoutPortsInput, shipping_portsUncheckedCreateWithoutPortsInput>
  }

  export type shipping_portsCreateManyPortsInputEnvelope = {
    data: Enumerable<shipping_portsCreateManyPortsInput>
    skipDuplicates?: boolean
  }

  export type CountryUpsertWithoutPortsInput = {
    update: XOR<CountryUpdateWithoutPortsInput, CountryUncheckedUpdateWithoutPortsInput>
    create: XOR<CountryCreateWithoutPortsInput, CountryUncheckedCreateWithoutPortsInput>
  }

  export type CountryUpdateWithoutPortsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessels?: VesselUpdateManyWithoutCountryInput
  }

  export type CountryUncheckedUpdateWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessels?: VesselUncheckedUpdateManyWithoutCountryInput
  }

  export type berthsUpsertWithWhereUniqueWithoutPortsInput = {
    where: berthsWhereUniqueInput
    update: XOR<berthsUpdateWithoutPortsInput, berthsUncheckedUpdateWithoutPortsInput>
    create: XOR<berthsCreateWithoutPortsInput, berthsUncheckedCreateWithoutPortsInput>
  }

  export type berthsUpdateWithWhereUniqueWithoutPortsInput = {
    where: berthsWhereUniqueInput
    data: XOR<berthsUpdateWithoutPortsInput, berthsUncheckedUpdateWithoutPortsInput>
  }

  export type berthsUpdateManyWithWhereWithoutPortsInput = {
    where: berthsScalarWhereInput
    data: XOR<berthsUpdateManyMutationInput, berthsUncheckedUpdateManyWithoutBerthsInput>
  }

  export type berthsScalarWhereInput = {
    AND?: Enumerable<berthsScalarWhereInput>
    OR?: Enumerable<berthsScalarWhereInput>
    NOT?: Enumerable<berthsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    portId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    maxDraft?: FloatNullableFilter | number | null
    airDraft?: FloatNullableFilter | number | null
    maxLengthOverall?: FloatNullableFilter | number | null
    maxDeadWeightTonnage?: FloatNullableFilter | number | null
    maxBeam?: FloatNullableFilter | number | null
    waterDensity?: FloatNullableFilter | number | null
  }

  export type port_filesUpsertWithWhereUniqueWithoutPortsInput = {
    where: port_filesWhereUniqueInput
    update: XOR<port_filesUpdateWithoutPortsInput, port_filesUncheckedUpdateWithoutPortsInput>
    create: XOR<port_filesCreateWithoutPortsInput, port_filesUncheckedCreateWithoutPortsInput>
  }

  export type port_filesUpdateWithWhereUniqueWithoutPortsInput = {
    where: port_filesWhereUniqueInput
    data: XOR<port_filesUpdateWithoutPortsInput, port_filesUncheckedUpdateWithoutPortsInput>
  }

  export type port_filesUpdateManyWithWhereWithoutPortsInput = {
    where: port_filesScalarWhereInput
    data: XOR<port_filesUpdateManyMutationInput, port_filesUncheckedUpdateManyWithoutPort_filesInput>
  }

  export type port_filesScalarWhereInput = {
    AND?: Enumerable<port_filesScalarWhereInput>
    OR?: Enumerable<port_filesScalarWhereInput>
    NOT?: Enumerable<port_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    portId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
  }

  export type shipping_portsUpsertWithWhereUniqueWithoutPortsInput = {
    where: shipping_portsWhereUniqueInput
    update: XOR<shipping_portsUpdateWithoutPortsInput, shipping_portsUncheckedUpdateWithoutPortsInput>
    create: XOR<shipping_portsCreateWithoutPortsInput, shipping_portsUncheckedCreateWithoutPortsInput>
  }

  export type shipping_portsUpdateWithWhereUniqueWithoutPortsInput = {
    where: shipping_portsWhereUniqueInput
    data: XOR<shipping_portsUpdateWithoutPortsInput, shipping_portsUncheckedUpdateWithoutPortsInput>
  }

  export type shipping_portsUpdateManyWithWhereWithoutPortsInput = {
    where: shipping_portsScalarWhereInput
    data: XOR<shipping_portsUpdateManyMutationInput, shipping_portsUncheckedUpdateManyWithoutShipping_portsInput>
  }

  export type berth_productsCreateWithoutProductsInput = {
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berths: berthsCreateNestedOneWithoutBerth_productsInput
    proformas?: proformasCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedCreateWithoutProductsInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    proformas?: proformasUncheckedCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsCreateOrConnectWithoutProductsInput = {
    where: berth_productsWhereUniqueInput
    create: XOR<berth_productsCreateWithoutProductsInput, berth_productsUncheckedCreateWithoutProductsInput>
  }

  export type berth_productsCreateManyProductsInputEnvelope = {
    data: Enumerable<berth_productsCreateManyProductsInput>
    skipDuplicates?: boolean
  }

  export type shipping_productsCreateWithoutProductsInput = {
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_productsInput
  }

  export type shipping_productsUncheckedCreateWithoutProductsInput = {
    id?: number
    weight?: number | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_productsCreateOrConnectWithoutProductsInput = {
    where: shipping_productsWhereUniqueInput
    create: XOR<shipping_productsCreateWithoutProductsInput, shipping_productsUncheckedCreateWithoutProductsInput>
  }

  export type shipping_productsCreateManyProductsInputEnvelope = {
    data: Enumerable<shipping_productsCreateManyProductsInput>
    skipDuplicates?: boolean
  }

  export type berth_productsUpsertWithWhereUniqueWithoutProductsInput = {
    where: berth_productsWhereUniqueInput
    update: XOR<berth_productsUpdateWithoutProductsInput, berth_productsUncheckedUpdateWithoutProductsInput>
    create: XOR<berth_productsCreateWithoutProductsInput, berth_productsUncheckedCreateWithoutProductsInput>
  }

  export type berth_productsUpdateWithWhereUniqueWithoutProductsInput = {
    where: berth_productsWhereUniqueInput
    data: XOR<berth_productsUpdateWithoutProductsInput, berth_productsUncheckedUpdateWithoutProductsInput>
  }

  export type berth_productsUpdateManyWithWhereWithoutProductsInput = {
    where: berth_productsScalarWhereInput
    data: XOR<berth_productsUpdateManyMutationInput, berth_productsUncheckedUpdateManyWithoutBerth_productsInput>
  }

  export type shipping_productsUpsertWithWhereUniqueWithoutProductsInput = {
    where: shipping_productsWhereUniqueInput
    update: XOR<shipping_productsUpdateWithoutProductsInput, shipping_productsUncheckedUpdateWithoutProductsInput>
    create: XOR<shipping_productsCreateWithoutProductsInput, shipping_productsUncheckedCreateWithoutProductsInput>
  }

  export type shipping_productsUpdateWithWhereUniqueWithoutProductsInput = {
    where: shipping_productsWhereUniqueInput
    data: XOR<shipping_productsUpdateWithoutProductsInput, shipping_productsUncheckedUpdateWithoutProductsInput>
  }

  export type shipping_productsUpdateManyWithWhereWithoutProductsInput = {
    where: shipping_productsScalarWhereInput
    data: XOR<shipping_productsUpdateManyMutationInput, shipping_productsUncheckedUpdateManyWithoutShipping_productsInput>
  }

  export type shipping_productsScalarWhereInput = {
    AND?: Enumerable<shipping_productsScalarWhereInput>
    OR?: Enumerable<shipping_productsScalarWhereInput>
    NOT?: Enumerable<shipping_productsScalarWhereInput>
    id?: IntFilter | number
    weight?: FloatNullableFilter | number | null
    shippingId?: IntNullableFilter | number | null
    productId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type proformasCreateWithoutProforma_filesInput = {
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    berth_products: berth_productsCreateNestedOneWithoutProformasInput
  }

  export type proformasUncheckedCreateWithoutProforma_filesInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    berthProductId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
  }

  export type proformasCreateOrConnectWithoutProforma_filesInput = {
    where: proformasWhereUniqueInput
    create: XOR<proformasCreateWithoutProforma_filesInput, proformasUncheckedCreateWithoutProforma_filesInput>
  }

  export type proformasUpsertWithoutProforma_filesInput = {
    update: XOR<proformasUpdateWithoutProforma_filesInput, proformasUncheckedUpdateWithoutProforma_filesInput>
    create: XOR<proformasCreateWithoutProforma_filesInput, proformasUncheckedCreateWithoutProforma_filesInput>
  }

  export type proformasUpdateWithoutProforma_filesInput = {
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    berth_products?: berth_productsUpdateOneRequiredWithoutProformasInput
  }

  export type proformasUncheckedUpdateWithoutProforma_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableIntFieldUpdateOperationsInput | number | null
    berthProductId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type berth_productsCreateWithoutProformasInput = {
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berths: berthsCreateNestedOneWithoutBerth_productsInput
    products: productsCreateNestedOneWithoutBerth_productsInput
  }

  export type berth_productsUncheckedCreateWithoutProformasInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type berth_productsCreateOrConnectWithoutProformasInput = {
    where: berth_productsWhereUniqueInput
    create: XOR<berth_productsCreateWithoutProformasInput, berth_productsUncheckedCreateWithoutProformasInput>
  }

  export type proforma_filesCreateWithoutProformasInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesUncheckedCreateWithoutProformasInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesCreateOrConnectWithoutProformasInput = {
    where: proforma_filesWhereUniqueInput
    create: XOR<proforma_filesCreateWithoutProformasInput, proforma_filesUncheckedCreateWithoutProformasInput>
  }

  export type proforma_filesCreateManyProformasInputEnvelope = {
    data: Enumerable<proforma_filesCreateManyProformasInput>
    skipDuplicates?: boolean
  }

  export type berth_productsUpsertWithoutProformasInput = {
    update: XOR<berth_productsUpdateWithoutProformasInput, berth_productsUncheckedUpdateWithoutProformasInput>
    create: XOR<berth_productsCreateWithoutProformasInput, berth_productsUncheckedCreateWithoutProformasInput>
  }

  export type berth_productsUpdateWithoutProformasInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneRequiredWithoutBerth_productsInput
    products?: productsUpdateOneRequiredWithoutBerth_productsInput
  }

  export type berth_productsUncheckedUpdateWithoutProformasInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    berthId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesUpsertWithWhereUniqueWithoutProformasInput = {
    where: proforma_filesWhereUniqueInput
    update: XOR<proforma_filesUpdateWithoutProformasInput, proforma_filesUncheckedUpdateWithoutProformasInput>
    create: XOR<proforma_filesCreateWithoutProformasInput, proforma_filesUncheckedCreateWithoutProformasInput>
  }

  export type proforma_filesUpdateWithWhereUniqueWithoutProformasInput = {
    where: proforma_filesWhereUniqueInput
    data: XOR<proforma_filesUpdateWithoutProformasInput, proforma_filesUncheckedUpdateWithoutProformasInput>
  }

  export type proforma_filesUpdateManyWithWhereWithoutProformasInput = {
    where: proforma_filesScalarWhereInput
    data: XOR<proforma_filesUpdateManyMutationInput, proforma_filesUncheckedUpdateManyWithoutProforma_filesInput>
  }

  export type proforma_filesScalarWhereInput = {
    AND?: Enumerable<proforma_filesScalarWhereInput>
    OR?: Enumerable<proforma_filesScalarWhereInput>
    NOT?: Enumerable<proforma_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    proformaId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type ShippingCreateWithoutShipping_documentsInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutShipping_documentsInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutShipping_documentsInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShipping_documentsInput, ShippingUncheckedCreateWithoutShipping_documentsInput>
  }

  export type shipping_documentsCreateWithoutOther_shipping_documentsInput = {
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    productGrossWeight?: number | null
    shippings?: ShippingCreateNestedOneWithoutShipping_documentsInput
    shipping_documents?: shipping_documentsCreateNestedOneWithoutOther_shipping_documentsInput
    users?: usersCreateNestedOneWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateWithoutOther_shipping_documentsInput = {
    id?: number
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    shippingId?: number | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subsetId?: number | null
    productGrossWeight?: number | null
  }

  export type shipping_documentsCreateOrConnectWithoutOther_shipping_documentsInput = {
    where: shipping_documentsWhereUniqueInput
    create: XOR<shipping_documentsCreateWithoutOther_shipping_documentsInput, shipping_documentsUncheckedCreateWithoutOther_shipping_documentsInput>
  }

  export type usersCreateWithoutShipping_documentsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutShipping_documentsInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutShipping_documentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShipping_documentsInput, usersUncheckedCreateWithoutShipping_documentsInput>
  }

  export type shipping_documentsCreateWithoutShipping_documentsInput = {
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    productGrossWeight?: number | null
    shippings?: ShippingCreateNestedOneWithoutShipping_documentsInput
    users?: usersCreateNestedOneWithoutShipping_documentsInput
    other_shipping_documents?: shipping_documentsCreateNestedManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateWithoutShipping_documentsInput = {
    id?: number
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    shippingId?: number | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    productGrossWeight?: number | null
    other_shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShipping_documentsInput
  }

  export type shipping_documentsCreateOrConnectWithoutShipping_documentsInput = {
    where: shipping_documentsWhereUniqueInput
    create: XOR<shipping_documentsCreateWithoutShipping_documentsInput, shipping_documentsUncheckedCreateWithoutShipping_documentsInput>
  }

  export type shipping_documentsCreateManyShipping_documentsInputEnvelope = {
    data: Enumerable<shipping_documentsCreateManyShipping_documentsInput>
    skipDuplicates?: boolean
  }

  export type ShippingUpsertWithoutShipping_documentsInput = {
    update: XOR<ShippingUpdateWithoutShipping_documentsInput, ShippingUncheckedUpdateWithoutShipping_documentsInput>
    create: XOR<ShippingCreateWithoutShipping_documentsInput, ShippingUncheckedCreateWithoutShipping_documentsInput>
  }

  export type ShippingUpdateWithoutShipping_documentsInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutShippingsInput
    vessel?: VesselUpdateOneWithoutShippingsInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUpdateManyWithoutShippingsInput
    subsets?: subsetsUpdateManyWithoutShippingsInput
    inquires?: inquiresUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateWithoutShipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutShippingsInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput
  }

  export type shipping_documentsUpsertWithoutOther_shipping_documentsInput = {
    update: XOR<shipping_documentsUpdateWithoutOther_shipping_documentsInput, shipping_documentsUncheckedUpdateWithoutOther_shipping_documentsInput>
    create: XOR<shipping_documentsCreateWithoutOther_shipping_documentsInput, shipping_documentsUncheckedCreateWithoutOther_shipping_documentsInput>
  }

  export type shipping_documentsUpdateWithoutOther_shipping_documentsInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    shippings?: ShippingUpdateOneWithoutShipping_documentsInput
    shipping_documents?: shipping_documentsUpdateOneWithoutOther_shipping_documentsInput
    users?: usersUpdateOneWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedUpdateWithoutOther_shipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subsetId?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type usersUpsertWithoutShipping_documentsInput = {
    update: XOR<usersUpdateWithoutShipping_documentsInput, usersUncheckedUpdateWithoutShipping_documentsInput>
    create: XOR<usersCreateWithoutShipping_documentsInput, usersUncheckedCreateWithoutShipping_documentsInput>
  }

  export type usersUpdateWithoutShipping_documentsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    port_files?: port_filesUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutShipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type shipping_documentsUpsertWithWhereUniqueWithoutShipping_documentsInput = {
    where: shipping_documentsWhereUniqueInput
    update: XOR<shipping_documentsUpdateWithoutShipping_documentsInput, shipping_documentsUncheckedUpdateWithoutShipping_documentsInput>
    create: XOR<shipping_documentsCreateWithoutShipping_documentsInput, shipping_documentsUncheckedCreateWithoutShipping_documentsInput>
  }

  export type shipping_documentsUpdateWithWhereUniqueWithoutShipping_documentsInput = {
    where: shipping_documentsWhereUniqueInput
    data: XOR<shipping_documentsUpdateWithoutShipping_documentsInput, shipping_documentsUncheckedUpdateWithoutShipping_documentsInput>
  }

  export type shipping_documentsUpdateManyWithWhereWithoutShipping_documentsInput = {
    where: shipping_documentsScalarWhereInput
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyWithoutOther_shipping_documentsInput>
  }

  export type shipping_documentsScalarWhereInput = {
    AND?: Enumerable<shipping_documentsScalarWhereInput>
    OR?: Enumerable<shipping_documentsScalarWhereInput>
    NOT?: Enumerable<shipping_documentsScalarWhereInput>
    id?: IntFilter | number
    type?: StringNullableFilter | string | null
    documentNumber?: StringNullableFilter | string | null
    consignee?: StringNullableFilter | string | null
    vesselName?: StringNullableFilter | string | null
    portOfLoading?: StringNullableFilter | string | null
    portOfDischarge?: StringNullableFilter | string | null
    notify?: StringNullableFilter | string | null
    productName?: StringNullableFilter | string | null
    productNameExtraInfo?: StringNullableFilter | string | null
    productWeightExtraInfo?: StringNullableFilter | string | null
    freightType?: StringNullableFilter | string | null
    charterPartyDate?: StringNullableFilter | string | null
    shipBoardedDate?: StringNullableFilter | string | null
    issuePlaceDate?: StringNullableFilter | string | null
    numberOfOriginalBillOfLanding?: FloatNullableFilter | number | null
    shipper?: StringNullableFilter | string | null
    masterName?: StringNullableFilter | string | null
    signature?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    userId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    order?: IntNullableFilter | number | null
    subsetId?: IntNullableFilter | number | null
    productGrossWeight?: FloatNullableFilter | number | null
  }

  export type ShippingCreateWithoutShipping_filesInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutShipping_filesInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutShipping_filesInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShipping_filesInput, ShippingUncheckedCreateWithoutShipping_filesInput>
  }

  export type usersCreateWithoutShipping_filesInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutShipping_filesInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutShipping_filesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShipping_filesInput, usersUncheckedCreateWithoutShipping_filesInput>
  }

  export type ShippingUpsertWithoutShipping_filesInput = {
    update: XOR<ShippingUpdateWithoutShipping_filesInput, ShippingUncheckedUpdateWithoutShipping_filesInput>
    create: XOR<ShippingCreateWithoutShipping_filesInput, ShippingUncheckedCreateWithoutShipping_filesInput>
  }

  export type ShippingUpdateWithoutShipping_filesInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutShippingsInput
    vessel?: VesselUpdateOneWithoutShippingsInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUpdateManyWithoutShippingsInput
    subsets?: subsetsUpdateManyWithoutShippingsInput
    inquires?: inquiresUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateWithoutShipping_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutShippingsInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput
  }

  export type usersUpsertWithoutShipping_filesInput = {
    update: XOR<usersUpdateWithoutShipping_filesInput, usersUncheckedUpdateWithoutShipping_filesInput>
    create: XOR<usersCreateWithoutShipping_filesInput, usersUncheckedCreateWithoutShipping_filesInput>
  }

  export type usersUpdateWithoutShipping_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    port_files?: port_filesUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutShipping_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type berthsCreateWithoutShipping_portsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    ports?: portsCreateNestedOneWithoutBerthsInput
    berth_products?: berth_productsCreateNestedManyWithoutBerthsInput
  }

  export type berthsUncheckedCreateWithoutShipping_portsInput = {
    id?: number
    name?: string | null
    description?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutBerthsInput
  }

  export type berthsCreateOrConnectWithoutShipping_portsInput = {
    where: berthsWhereUniqueInput
    create: XOR<berthsCreateWithoutShipping_portsInput, berthsUncheckedCreateWithoutShipping_portsInput>
  }

  export type portsCreateWithoutShipping_portsInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    country?: CountryCreateNestedOneWithoutPortsInput
    berths?: berthsCreateNestedManyWithoutPortsInput
    port_files?: port_filesCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateWithoutShipping_portsInput = {
    id?: number
    name?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsUncheckedCreateNestedManyWithoutPortsInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsCreateOrConnectWithoutShipping_portsInput = {
    where: portsWhereUniqueInput
    create: XOR<portsCreateWithoutShipping_portsInput, portsUncheckedCreateWithoutShipping_portsInput>
  }

  export type ShippingCreateWithoutShipping_portsInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutShipping_portsInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutShipping_portsInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShipping_portsInput, ShippingUncheckedCreateWithoutShipping_portsInput>
  }

  export type berthsUpsertWithoutShipping_portsInput = {
    update: XOR<berthsUpdateWithoutShipping_portsInput, berthsUncheckedUpdateWithoutShipping_portsInput>
    create: XOR<berthsCreateWithoutShipping_portsInput, berthsUncheckedCreateWithoutShipping_portsInput>
  }

  export type berthsUpdateWithoutShipping_portsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    ports?: portsUpdateOneWithoutBerthsInput
    berth_products?: berth_productsUpdateManyWithoutBerthsInput
  }

  export type berthsUncheckedUpdateWithoutShipping_portsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutBerthsInput
  }

  export type portsUpsertWithoutShipping_portsInput = {
    update: XOR<portsUpdateWithoutShipping_portsInput, portsUncheckedUpdateWithoutShipping_portsInput>
    create: XOR<portsCreateWithoutShipping_portsInput, portsUncheckedCreateWithoutShipping_portsInput>
  }

  export type portsUpdateWithoutShipping_portsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    country?: CountryUpdateOneWithoutPortsInput
    berths?: berthsUpdateManyWithoutPortsInput
    port_files?: port_filesUpdateManyWithoutPortsInput
  }

  export type portsUncheckedUpdateWithoutShipping_portsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUncheckedUpdateManyWithoutPortsInput
    port_files?: port_filesUncheckedUpdateManyWithoutPortsInput
  }

  export type ShippingUpsertWithoutShipping_portsInput = {
    update: XOR<ShippingUpdateWithoutShipping_portsInput, ShippingUncheckedUpdateWithoutShipping_portsInput>
    create: XOR<ShippingCreateWithoutShipping_portsInput, ShippingUncheckedCreateWithoutShipping_portsInput>
  }

  export type ShippingUpdateWithoutShipping_portsInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutShippingsInput
    vessel?: VesselUpdateOneWithoutShippingsInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUpdateManyWithoutShippingsInput
    subsets?: subsetsUpdateManyWithoutShippingsInput
    inquires?: inquiresUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateWithoutShipping_portsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutShippingsInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput
  }

  export type productsCreateWithoutShipping_productsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berth_products?: berth_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutShipping_productsInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutShipping_productsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutShipping_productsInput, productsUncheckedCreateWithoutShipping_productsInput>
  }

  export type ShippingCreateWithoutShipping_productsInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutShipping_productsInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutShipping_productsInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShipping_productsInput, ShippingUncheckedCreateWithoutShipping_productsInput>
  }

  export type productsUpsertWithoutShipping_productsInput = {
    update: XOR<productsUpdateWithoutShipping_productsInput, productsUncheckedUpdateWithoutShipping_productsInput>
    create: XOR<productsCreateWithoutShipping_productsInput, productsUncheckedCreateWithoutShipping_productsInput>
  }

  export type productsUpdateWithoutShipping_productsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berth_products?: berth_productsUpdateManyWithoutProductsInput
  }

  export type productsUncheckedUpdateWithoutShipping_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutProductsInput
  }

  export type ShippingUpsertWithoutShipping_productsInput = {
    update: XOR<ShippingUpdateWithoutShipping_productsInput, ShippingUncheckedUpdateWithoutShipping_productsInput>
    create: XOR<ShippingCreateWithoutShipping_productsInput, ShippingUncheckedCreateWithoutShipping_productsInput>
  }

  export type ShippingUpdateWithoutShipping_productsInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutShippingsInput
    vessel?: VesselUpdateOneWithoutShippingsInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUpdateManyWithoutShippingsInput
    subsets?: subsetsUpdateManyWithoutShippingsInput
    inquires?: inquiresUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateWithoutShipping_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutShippingsInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput
  }

  export type usersCreateWithoutShippingsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutShippingsInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutShippingsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShippingsInput, usersUncheckedCreateWithoutShippingsInput>
  }

  export type VesselCreateWithoutShippingsInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    country?: CountryCreateNestedOneWithoutVesselsInput
    vessel_files?: vessel_filesCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsCreateNestedManyWithoutVesselInput
  }

  export type VesselUncheckedCreateWithoutShippingsInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutVesselInput
  }

  export type VesselCreateOrConnectWithoutShippingsInput = {
    where: VesselWhereUniqueInput
    create: XOR<VesselCreateWithoutShippingsInput, VesselUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_documentsCreateWithoutShippingsInput = {
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    productGrossWeight?: number | null
    shipping_documents?: shipping_documentsCreateNestedOneWithoutOther_shipping_documentsInput
    users?: usersCreateNestedOneWithoutShipping_documentsInput
    other_shipping_documents?: shipping_documentsCreateNestedManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateWithoutShippingsInput = {
    id?: number
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subsetId?: number | null
    productGrossWeight?: number | null
    other_shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShipping_documentsInput
  }

  export type shipping_documentsCreateOrConnectWithoutShippingsInput = {
    where: shipping_documentsWhereUniqueInput
    create: XOR<shipping_documentsCreateWithoutShippingsInput, shipping_documentsUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_documentsCreateManyShippingsInputEnvelope = {
    data: Enumerable<shipping_documentsCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type shipping_filesCreateWithoutShippingsInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutShipping_filesInput
  }

  export type shipping_filesUncheckedCreateWithoutShippingsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type shipping_filesCreateOrConnectWithoutShippingsInput = {
    where: shipping_filesWhereUniqueInput
    create: XOR<shipping_filesCreateWithoutShippingsInput, shipping_filesUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_filesCreateManyShippingsInputEnvelope = {
    data: Enumerable<shipping_filesCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type shipping_portsCreateWithoutShippingsInput = {
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berths?: berthsCreateNestedOneWithoutShipping_portsInput
    ports?: portsCreateNestedOneWithoutShipping_portsInput
  }

  export type shipping_portsUncheckedCreateWithoutShippingsInput = {
    id?: number
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    portId?: number | null
    berthId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_portsCreateOrConnectWithoutShippingsInput = {
    where: shipping_portsWhereUniqueInput
    create: XOR<shipping_portsCreateWithoutShippingsInput, shipping_portsUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_portsCreateManyShippingsInputEnvelope = {
    data: Enumerable<shipping_portsCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type shipping_productsCreateWithoutShippingsInput = {
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    products?: productsCreateNestedOneWithoutShipping_productsInput
  }

  export type shipping_productsUncheckedCreateWithoutShippingsInput = {
    id?: number
    weight?: number | null
    productId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_productsCreateOrConnectWithoutShippingsInput = {
    where: shipping_productsWhereUniqueInput
    create: XOR<shipping_productsCreateWithoutShippingsInput, shipping_productsUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_productsCreateManyShippingsInputEnvelope = {
    data: Enumerable<shipping_productsCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type subsetsCreateWithoutShippingsInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type subsetsUncheckedCreateWithoutShippingsInput = {
    id?: number
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type subsetsCreateOrConnectWithoutShippingsInput = {
    where: subsetsWhereUniqueInput
    create: XOR<subsetsCreateWithoutShippingsInput, subsetsUncheckedCreateWithoutShippingsInput>
  }

  export type subsetsCreateManyShippingsInputEnvelope = {
    data: Enumerable<subsetsCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type inquiresCreateWithoutShippingsInput = {
    title?: string | null
    type?: string | null
    deleted?: boolean
    users?: usersCreateNestedOneWithoutInquiresInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutInquiresInput
  }

  export type inquiresUncheckedCreateWithoutShippingsInput = {
    id?: number
    title?: string | null
    type?: string | null
    updated_by_user_id?: number | null
    deleted?: boolean
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutInquiresInput
  }

  export type inquiresCreateOrConnectWithoutShippingsInput = {
    where: inquiresWhereUniqueInput
    create: XOR<inquiresCreateWithoutShippingsInput, inquiresUncheckedCreateWithoutShippingsInput>
  }

  export type inquiresCreateManyShippingsInputEnvelope = {
    data: Enumerable<inquiresCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type ShippingChecklistItemCreateWithoutShippingInput = {
    name: string
    description?: string | null
    type: string
    deadline_date?: string | null
    commentary?: string | null
    is_done: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    user?: usersCreateNestedOneWithoutShippingChecklistItemInput
  }

  export type ShippingChecklistItemUncheckedCreateWithoutShippingInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: string | null
    commentary?: string | null
    is_done: boolean
    updated_by_user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ShippingChecklistItemCreateOrConnectWithoutShippingInput = {
    where: ShippingChecklistItemWhereUniqueInput
    create: XOR<ShippingChecklistItemCreateWithoutShippingInput, ShippingChecklistItemUncheckedCreateWithoutShippingInput>
  }

  export type ShippingChecklistItemCreateManyShippingInputEnvelope = {
    data: Enumerable<ShippingChecklistItemCreateManyShippingInput>
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutShippingsInput = {
    update: XOR<usersUpdateWithoutShippingsInput, usersUncheckedUpdateWithoutShippingsInput>
    create: XOR<usersCreateWithoutShippingsInput, usersUncheckedCreateWithoutShippingsInput>
  }

  export type usersUpdateWithoutShippingsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    port_files?: port_filesUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type VesselUpsertWithoutShippingsInput = {
    update: XOR<VesselUpdateWithoutShippingsInput, VesselUncheckedUpdateWithoutShippingsInput>
    create: XOR<VesselCreateWithoutShippingsInput, VesselUncheckedCreateWithoutShippingsInput>
  }

  export type VesselUpdateWithoutShippingsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    country?: CountryUpdateOneWithoutVesselsInput
    vessel_files?: vessel_filesUpdateManyWithoutVesselsInput
    group_emails?: group_emailsUpdateManyWithoutVesselInput
  }

  export type VesselUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutVesselsInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutVesselInput
  }

  export type shipping_documentsUpsertWithWhereUniqueWithoutShippingsInput = {
    where: shipping_documentsWhereUniqueInput
    update: XOR<shipping_documentsUpdateWithoutShippingsInput, shipping_documentsUncheckedUpdateWithoutShippingsInput>
    create: XOR<shipping_documentsCreateWithoutShippingsInput, shipping_documentsUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_documentsUpdateWithWhereUniqueWithoutShippingsInput = {
    where: shipping_documentsWhereUniqueInput
    data: XOR<shipping_documentsUpdateWithoutShippingsInput, shipping_documentsUncheckedUpdateWithoutShippingsInput>
  }

  export type shipping_documentsUpdateManyWithWhereWithoutShippingsInput = {
    where: shipping_documentsScalarWhereInput
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput>
  }

  export type shipping_filesUpsertWithWhereUniqueWithoutShippingsInput = {
    where: shipping_filesWhereUniqueInput
    update: XOR<shipping_filesUpdateWithoutShippingsInput, shipping_filesUncheckedUpdateWithoutShippingsInput>
    create: XOR<shipping_filesCreateWithoutShippingsInput, shipping_filesUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_filesUpdateWithWhereUniqueWithoutShippingsInput = {
    where: shipping_filesWhereUniqueInput
    data: XOR<shipping_filesUpdateWithoutShippingsInput, shipping_filesUncheckedUpdateWithoutShippingsInput>
  }

  export type shipping_filesUpdateManyWithWhereWithoutShippingsInput = {
    where: shipping_filesScalarWhereInput
    data: XOR<shipping_filesUpdateManyMutationInput, shipping_filesUncheckedUpdateManyWithoutShipping_filesInput>
  }

  export type shipping_filesScalarWhereInput = {
    AND?: Enumerable<shipping_filesScalarWhereInput>
    OR?: Enumerable<shipping_filesScalarWhereInput>
    NOT?: Enumerable<shipping_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
  }

  export type shipping_portsUpsertWithWhereUniqueWithoutShippingsInput = {
    where: shipping_portsWhereUniqueInput
    update: XOR<shipping_portsUpdateWithoutShippingsInput, shipping_portsUncheckedUpdateWithoutShippingsInput>
    create: XOR<shipping_portsCreateWithoutShippingsInput, shipping_portsUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_portsUpdateWithWhereUniqueWithoutShippingsInput = {
    where: shipping_portsWhereUniqueInput
    data: XOR<shipping_portsUpdateWithoutShippingsInput, shipping_portsUncheckedUpdateWithoutShippingsInput>
  }

  export type shipping_portsUpdateManyWithWhereWithoutShippingsInput = {
    where: shipping_portsScalarWhereInput
    data: XOR<shipping_portsUpdateManyMutationInput, shipping_portsUncheckedUpdateManyWithoutShipping_portsInput>
  }

  export type shipping_productsUpsertWithWhereUniqueWithoutShippingsInput = {
    where: shipping_productsWhereUniqueInput
    update: XOR<shipping_productsUpdateWithoutShippingsInput, shipping_productsUncheckedUpdateWithoutShippingsInput>
    create: XOR<shipping_productsCreateWithoutShippingsInput, shipping_productsUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_productsUpdateWithWhereUniqueWithoutShippingsInput = {
    where: shipping_productsWhereUniqueInput
    data: XOR<shipping_productsUpdateWithoutShippingsInput, shipping_productsUncheckedUpdateWithoutShippingsInput>
  }

  export type shipping_productsUpdateManyWithWhereWithoutShippingsInput = {
    where: shipping_productsScalarWhereInput
    data: XOR<shipping_productsUpdateManyMutationInput, shipping_productsUncheckedUpdateManyWithoutShipping_productsInput>
  }

  export type subsetsUpsertWithWhereUniqueWithoutShippingsInput = {
    where: subsetsWhereUniqueInput
    update: XOR<subsetsUpdateWithoutShippingsInput, subsetsUncheckedUpdateWithoutShippingsInput>
    create: XOR<subsetsCreateWithoutShippingsInput, subsetsUncheckedCreateWithoutShippingsInput>
  }

  export type subsetsUpdateWithWhereUniqueWithoutShippingsInput = {
    where: subsetsWhereUniqueInput
    data: XOR<subsetsUpdateWithoutShippingsInput, subsetsUncheckedUpdateWithoutShippingsInput>
  }

  export type subsetsUpdateManyWithWhereWithoutShippingsInput = {
    where: subsetsScalarWhereInput
    data: XOR<subsetsUpdateManyMutationInput, subsetsUncheckedUpdateManyWithoutSubsetsInput>
  }

  export type subsetsScalarWhereInput = {
    AND?: Enumerable<subsetsScalarWhereInput>
    OR?: Enumerable<subsetsScalarWhereInput>
    NOT?: Enumerable<subsetsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type inquiresUpsertWithWhereUniqueWithoutShippingsInput = {
    where: inquiresWhereUniqueInput
    update: XOR<inquiresUpdateWithoutShippingsInput, inquiresUncheckedUpdateWithoutShippingsInput>
    create: XOR<inquiresCreateWithoutShippingsInput, inquiresUncheckedCreateWithoutShippingsInput>
  }

  export type inquiresUpdateWithWhereUniqueWithoutShippingsInput = {
    where: inquiresWhereUniqueInput
    data: XOR<inquiresUpdateWithoutShippingsInput, inquiresUncheckedUpdateWithoutShippingsInput>
  }

  export type inquiresUpdateManyWithWhereWithoutShippingsInput = {
    where: inquiresScalarWhereInput
    data: XOR<inquiresUpdateManyMutationInput, inquiresUncheckedUpdateManyWithoutInquiresInput>
  }

  export type inquiresScalarWhereInput = {
    AND?: Enumerable<inquiresScalarWhereInput>
    OR?: Enumerable<inquiresScalarWhereInput>
    NOT?: Enumerable<inquiresScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    shipping_id?: IntNullableFilter | number | null
    updated_by_user_id?: IntNullableFilter | number | null
    deleted?: BoolFilter | boolean
  }

  export type ShippingChecklistItemUpsertWithWhereUniqueWithoutShippingInput = {
    where: ShippingChecklistItemWhereUniqueInput
    update: XOR<ShippingChecklistItemUpdateWithoutShippingInput, ShippingChecklistItemUncheckedUpdateWithoutShippingInput>
    create: XOR<ShippingChecklistItemCreateWithoutShippingInput, ShippingChecklistItemUncheckedCreateWithoutShippingInput>
  }

  export type ShippingChecklistItemUpdateWithWhereUniqueWithoutShippingInput = {
    where: ShippingChecklistItemWhereUniqueInput
    data: XOR<ShippingChecklistItemUpdateWithoutShippingInput, ShippingChecklistItemUncheckedUpdateWithoutShippingInput>
  }

  export type ShippingChecklistItemUpdateManyWithWhereWithoutShippingInput = {
    where: ShippingChecklistItemScalarWhereInput
    data: XOR<ShippingChecklistItemUpdateManyMutationInput, ShippingChecklistItemUncheckedUpdateManyWithoutShippingChecklistItemInput>
  }

  export type ShippingChecklistItemScalarWhereInput = {
    AND?: Enumerable<ShippingChecklistItemScalarWhereInput>
    OR?: Enumerable<ShippingChecklistItemScalarWhereInput>
    NOT?: Enumerable<ShippingChecklistItemScalarWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    type?: StringFilter | string
    deadline_date?: StringNullableFilter | string | null
    commentary?: StringNullableFilter | string | null
    is_done?: BoolFilter | boolean
    shipping_id?: IntFilter | number
    updated_by_user_id?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type ShippingCreateWithoutSubsetsInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutSubsetsInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutSubsetsInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutSubsetsInput, ShippingUncheckedCreateWithoutSubsetsInput>
  }

  export type ShippingUpsertWithoutSubsetsInput = {
    update: XOR<ShippingUpdateWithoutSubsetsInput, ShippingUncheckedUpdateWithoutSubsetsInput>
    create: XOR<ShippingCreateWithoutSubsetsInput, ShippingUncheckedCreateWithoutSubsetsInput>
  }

  export type ShippingUpdateWithoutSubsetsInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutShippingsInput
    vessel?: VesselUpdateOneWithoutShippingsInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUpdateManyWithoutShippingsInput
    inquires?: inquiresUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateWithoutSubsetsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutShippingsInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput
  }

  export type usersCreateWithoutUser_filesInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_filesInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_filesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_filesInput, usersUncheckedCreateWithoutUser_filesInput>
  }

  export type usersUpsertWithoutUser_filesInput = {
    update: XOR<usersUpdateWithoutUser_filesInput, usersUncheckedUpdateWithoutUser_filesInput>
    create: XOR<usersCreateWithoutUser_filesInput, usersUncheckedCreateWithoutUser_filesInput>
  }

  export type usersUpdateWithoutUser_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    port_files?: port_filesUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutUser_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type shipping_documentsCreateWithoutUsersInput = {
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    productGrossWeight?: number | null
    shippings?: ShippingCreateNestedOneWithoutShipping_documentsInput
    shipping_documents?: shipping_documentsCreateNestedOneWithoutOther_shipping_documentsInput
    other_shipping_documents?: shipping_documentsCreateNestedManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateWithoutUsersInput = {
    id?: number
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subsetId?: number | null
    productGrossWeight?: number | null
    other_shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShipping_documentsInput
  }

  export type shipping_documentsCreateOrConnectWithoutUsersInput = {
    where: shipping_documentsWhereUniqueInput
    create: XOR<shipping_documentsCreateWithoutUsersInput, shipping_documentsUncheckedCreateWithoutUsersInput>
  }

  export type shipping_documentsCreateManyUsersInputEnvelope = {
    data: Enumerable<shipping_documentsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type shipping_filesCreateWithoutUsersInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_filesInput
  }

  export type shipping_filesUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_filesCreateOrConnectWithoutUsersInput = {
    where: shipping_filesWhereUniqueInput
    create: XOR<shipping_filesCreateWithoutUsersInput, shipping_filesUncheckedCreateWithoutUsersInput>
  }

  export type shipping_filesCreateManyUsersInputEnvelope = {
    data: Enumerable<shipping_filesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type ShippingCreateWithoutUsersInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutUsersInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutUsersInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutUsersInput, ShippingUncheckedCreateWithoutUsersInput>
  }

  export type ShippingCreateManyUsersInputEnvelope = {
    data: Enumerable<ShippingCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type user_filesCreateWithoutUsersInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type user_filesUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type user_filesCreateOrConnectWithoutUsersInput = {
    where: user_filesWhereUniqueInput
    create: XOR<user_filesCreateWithoutUsersInput, user_filesUncheckedCreateWithoutUsersInput>
  }

  export type user_filesCreateManyUsersInputEnvelope = {
    data: Enumerable<user_filesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type inquiresCreateWithoutUsersInput = {
    title?: string | null
    type?: string | null
    deleted?: boolean
    shippings?: ShippingCreateNestedOneWithoutInquiresInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutInquiresInput
  }

  export type inquiresUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    type?: string | null
    shipping_id?: number | null
    deleted?: boolean
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutInquiresInput
  }

  export type inquiresCreateOrConnectWithoutUsersInput = {
    where: inquiresWhereUniqueInput
    create: XOR<inquiresCreateWithoutUsersInput, inquiresUncheckedCreateWithoutUsersInput>
  }

  export type inquiresCreateManyUsersInputEnvelope = {
    data: Enumerable<inquiresCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type inquires_commentsCreateWithoutUsersInput = {
    body?: string | null
    is_done: boolean
    deleted?: boolean
    inquires?: inquiresCreateNestedOneWithoutInquires_commentsInput
  }

  export type inquires_commentsUncheckedCreateWithoutUsersInput = {
    id?: number
    body?: string | null
    is_done: boolean
    inquire_id?: number | null
    deleted?: boolean
  }

  export type inquires_commentsCreateOrConnectWithoutUsersInput = {
    where: inquires_commentsWhereUniqueInput
    create: XOR<inquires_commentsCreateWithoutUsersInput, inquires_commentsUncheckedCreateWithoutUsersInput>
  }

  export type inquires_commentsCreateManyUsersInputEnvelope = {
    data: Enumerable<inquires_commentsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type ShippingChecklistItemCreateWithoutUserInput = {
    name: string
    description?: string | null
    type: string
    deadline_date?: string | null
    commentary?: string | null
    is_done: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping?: ShippingCreateNestedOneWithoutShippingChecklistItemInput
  }

  export type ShippingChecklistItemUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: string | null
    commentary?: string | null
    is_done: boolean
    shipping_id: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ShippingChecklistItemCreateOrConnectWithoutUserInput = {
    where: ShippingChecklistItemWhereUniqueInput
    create: XOR<ShippingChecklistItemCreateWithoutUserInput, ShippingChecklistItemUncheckedCreateWithoutUserInput>
  }

  export type ShippingChecklistItemCreateManyUserInputEnvelope = {
    data: Enumerable<ShippingChecklistItemCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type group_emailsCreateWithoutUsersInput = {
    name?: string | null
    emails?: string | null
    vessel?: VesselCreateNestedOneWithoutGroup_emailsInput
  }

  export type group_emailsUncheckedCreateWithoutUsersInput = {
    id?: number
    name?: string | null
    emails?: string | null
    vessel_id?: number | null
  }

  export type group_emailsCreateOrConnectWithoutUsersInput = {
    where: group_emailsWhereUniqueInput
    create: XOR<group_emailsCreateWithoutUsersInput, group_emailsUncheckedCreateWithoutUsersInput>
  }

  export type group_emailsCreateManyUsersInputEnvelope = {
    data: Enumerable<group_emailsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type port_filesCreateWithoutUsersInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsCreateNestedOneWithoutPort_filesInput
  }

  export type port_filesUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type port_filesCreateOrConnectWithoutUsersInput = {
    where: port_filesWhereUniqueInput
    create: XOR<port_filesCreateWithoutUsersInput, port_filesUncheckedCreateWithoutUsersInput>
  }

  export type port_filesCreateManyUsersInputEnvelope = {
    data: Enumerable<port_filesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type vessel_filesCreateWithoutUsersInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    vessels?: VesselCreateNestedOneWithoutVessel_filesInput
  }

  export type vessel_filesUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    vesselId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type vessel_filesCreateOrConnectWithoutUsersInput = {
    where: vessel_filesWhereUniqueInput
    create: XOR<vessel_filesCreateWithoutUsersInput, vessel_filesUncheckedCreateWithoutUsersInput>
  }

  export type vessel_filesCreateManyUsersInputEnvelope = {
    data: Enumerable<vessel_filesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type shipping_documentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: shipping_documentsWhereUniqueInput
    update: XOR<shipping_documentsUpdateWithoutUsersInput, shipping_documentsUncheckedUpdateWithoutUsersInput>
    create: XOR<shipping_documentsCreateWithoutUsersInput, shipping_documentsUncheckedCreateWithoutUsersInput>
  }

  export type shipping_documentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: shipping_documentsWhereUniqueInput
    data: XOR<shipping_documentsUpdateWithoutUsersInput, shipping_documentsUncheckedUpdateWithoutUsersInput>
  }

  export type shipping_documentsUpdateManyWithWhereWithoutUsersInput = {
    where: shipping_documentsScalarWhereInput
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput>
  }

  export type shipping_filesUpsertWithWhereUniqueWithoutUsersInput = {
    where: shipping_filesWhereUniqueInput
    update: XOR<shipping_filesUpdateWithoutUsersInput, shipping_filesUncheckedUpdateWithoutUsersInput>
    create: XOR<shipping_filesCreateWithoutUsersInput, shipping_filesUncheckedCreateWithoutUsersInput>
  }

  export type shipping_filesUpdateWithWhereUniqueWithoutUsersInput = {
    where: shipping_filesWhereUniqueInput
    data: XOR<shipping_filesUpdateWithoutUsersInput, shipping_filesUncheckedUpdateWithoutUsersInput>
  }

  export type shipping_filesUpdateManyWithWhereWithoutUsersInput = {
    where: shipping_filesScalarWhereInput
    data: XOR<shipping_filesUpdateManyMutationInput, shipping_filesUncheckedUpdateManyWithoutShipping_filesInput>
  }

  export type ShippingUpsertWithWhereUniqueWithoutUsersInput = {
    where: ShippingWhereUniqueInput
    update: XOR<ShippingUpdateWithoutUsersInput, ShippingUncheckedUpdateWithoutUsersInput>
    create: XOR<ShippingCreateWithoutUsersInput, ShippingUncheckedCreateWithoutUsersInput>
  }

  export type ShippingUpdateWithWhereUniqueWithoutUsersInput = {
    where: ShippingWhereUniqueInput
    data: XOR<ShippingUpdateWithoutUsersInput, ShippingUncheckedUpdateWithoutUsersInput>
  }

  export type ShippingUpdateManyWithWhereWithoutUsersInput = {
    where: ShippingScalarWhereInput
    data: XOR<ShippingUpdateManyMutationInput, ShippingUncheckedUpdateManyWithoutShippingsInput>
  }

  export type ShippingScalarWhereInput = {
    AND?: Enumerable<ShippingScalarWhereInput>
    OR?: Enumerable<ShippingScalarWhereInput>
    NOT?: Enumerable<ShippingScalarWhereInput>
    id?: IntFilter | number
    status?: StringNullableFilter | string | null
    owner_head_name?: StringNullableFilter | string | null
    owner_head_address?: StringNullableFilter | string | null
    disponent_owner?: StringNullableFilter | string | null
    charter_name?: StringNullableFilter | string | null
    master_name?: StringNullableFilter | string | null
    master_email?: StringNullableFilter | string | null
    estimated_draft_arrival?: StringNullableFilter | string | null
    estimated_draft_departure?: StringNullableFilter | string | null
    arrival_draft?: IntNullableFilter | number | null
    depart_draft?: IntNullableFilter | number | null
    vessel_operator?: StringNullableFilter | string | null
    vessel_operator_email?: StringNullableFilter | string | null
    operation_type?: StringNullableFilter | string | null
    agency_type?: StringNullableFilter | string | null
    voyage_number?: StringNullableFilter | string | null
    external_code?: StringNullableFilter | string | null
    comments?: StringNullableFilter | string | null
    last_port?: StringNullableFilter | string | null
    next_port?: StringNullableFilter | string | null
    broker?: StringNullableFilter | string | null
    boat?: StringNullableFilter | string | null
    tugs?: StringNullableFilter | string | null
    garbage?: StringNullableFilter | string | null
    last_cargoes?: StringNullableFilter | string | null
    sscec_port?: StringNullableFilter | string | null
    sscec_exp?: StringNullableFilter | string | null
    in_marsat_c_number?: StringNullableFilter | string | null
    master_phone_01?: StringNullableFilter | string | null
    master_phone_02?: StringNullableFilter | string | null
    vessel_expert?: StringNullableFilter | string | null
    vessel_expert_phone01?: StringNullableFilter | string | null
    vessel_expert_phone02?: StringNullableFilter | string | null
    vessel_expert_alternate?: StringNullableFilter | string | null
    vessel_expert_alternate_phone01?: StringNullableFilter | string | null
    vessel_expert_alternate_phone02?: StringNullableFilter | string | null
    vessel_operator_phone01?: StringNullableFilter | string | null
    vessel_operator_phone02?: StringNullableFilter | string | null
    vessel_operator_city_country?: StringNullableFilter | string | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    vessel_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    total_load_expected?: IntNullableFilter | number | null
    total_load_actual?: IntNullableFilter | number | null
  }

  export type user_filesUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_filesWhereUniqueInput
    update: XOR<user_filesUpdateWithoutUsersInput, user_filesUncheckedUpdateWithoutUsersInput>
    create: XOR<user_filesCreateWithoutUsersInput, user_filesUncheckedCreateWithoutUsersInput>
  }

  export type user_filesUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_filesWhereUniqueInput
    data: XOR<user_filesUpdateWithoutUsersInput, user_filesUncheckedUpdateWithoutUsersInput>
  }

  export type user_filesUpdateManyWithWhereWithoutUsersInput = {
    where: user_filesScalarWhereInput
    data: XOR<user_filesUpdateManyMutationInput, user_filesUncheckedUpdateManyWithoutUser_filesInput>
  }

  export type user_filesScalarWhereInput = {
    AND?: Enumerable<user_filesScalarWhereInput>
    OR?: Enumerable<user_filesScalarWhereInput>
    NOT?: Enumerable<user_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    userId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type inquiresUpsertWithWhereUniqueWithoutUsersInput = {
    where: inquiresWhereUniqueInput
    update: XOR<inquiresUpdateWithoutUsersInput, inquiresUncheckedUpdateWithoutUsersInput>
    create: XOR<inquiresCreateWithoutUsersInput, inquiresUncheckedCreateWithoutUsersInput>
  }

  export type inquiresUpdateWithWhereUniqueWithoutUsersInput = {
    where: inquiresWhereUniqueInput
    data: XOR<inquiresUpdateWithoutUsersInput, inquiresUncheckedUpdateWithoutUsersInput>
  }

  export type inquiresUpdateManyWithWhereWithoutUsersInput = {
    where: inquiresScalarWhereInput
    data: XOR<inquiresUpdateManyMutationInput, inquiresUncheckedUpdateManyWithoutInquiresInput>
  }

  export type inquires_commentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: inquires_commentsWhereUniqueInput
    update: XOR<inquires_commentsUpdateWithoutUsersInput, inquires_commentsUncheckedUpdateWithoutUsersInput>
    create: XOR<inquires_commentsCreateWithoutUsersInput, inquires_commentsUncheckedCreateWithoutUsersInput>
  }

  export type inquires_commentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: inquires_commentsWhereUniqueInput
    data: XOR<inquires_commentsUpdateWithoutUsersInput, inquires_commentsUncheckedUpdateWithoutUsersInput>
  }

  export type inquires_commentsUpdateManyWithWhereWithoutUsersInput = {
    where: inquires_commentsScalarWhereInput
    data: XOR<inquires_commentsUpdateManyMutationInput, inquires_commentsUncheckedUpdateManyWithoutInquires_commentsInput>
  }

  export type inquires_commentsScalarWhereInput = {
    AND?: Enumerable<inquires_commentsScalarWhereInput>
    OR?: Enumerable<inquires_commentsScalarWhereInput>
    NOT?: Enumerable<inquires_commentsScalarWhereInput>
    id?: IntFilter | number
    body?: StringNullableFilter | string | null
    is_done?: BoolFilter | boolean
    inquire_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    deleted?: BoolFilter | boolean
  }

  export type ShippingChecklistItemUpsertWithWhereUniqueWithoutUserInput = {
    where: ShippingChecklistItemWhereUniqueInput
    update: XOR<ShippingChecklistItemUpdateWithoutUserInput, ShippingChecklistItemUncheckedUpdateWithoutUserInput>
    create: XOR<ShippingChecklistItemCreateWithoutUserInput, ShippingChecklistItemUncheckedCreateWithoutUserInput>
  }

  export type ShippingChecklistItemUpdateWithWhereUniqueWithoutUserInput = {
    where: ShippingChecklistItemWhereUniqueInput
    data: XOR<ShippingChecklistItemUpdateWithoutUserInput, ShippingChecklistItemUncheckedUpdateWithoutUserInput>
  }

  export type ShippingChecklistItemUpdateManyWithWhereWithoutUserInput = {
    where: ShippingChecklistItemScalarWhereInput
    data: XOR<ShippingChecklistItemUpdateManyMutationInput, ShippingChecklistItemUncheckedUpdateManyWithoutShippingChecklistItemInput>
  }

  export type group_emailsUpsertWithWhereUniqueWithoutUsersInput = {
    where: group_emailsWhereUniqueInput
    update: XOR<group_emailsUpdateWithoutUsersInput, group_emailsUncheckedUpdateWithoutUsersInput>
    create: XOR<group_emailsCreateWithoutUsersInput, group_emailsUncheckedCreateWithoutUsersInput>
  }

  export type group_emailsUpdateWithWhereUniqueWithoutUsersInput = {
    where: group_emailsWhereUniqueInput
    data: XOR<group_emailsUpdateWithoutUsersInput, group_emailsUncheckedUpdateWithoutUsersInput>
  }

  export type group_emailsUpdateManyWithWhereWithoutUsersInput = {
    where: group_emailsScalarWhereInput
    data: XOR<group_emailsUpdateManyMutationInput, group_emailsUncheckedUpdateManyWithoutGroup_emailsInput>
  }

  export type group_emailsScalarWhereInput = {
    AND?: Enumerable<group_emailsScalarWhereInput>
    OR?: Enumerable<group_emailsScalarWhereInput>
    NOT?: Enumerable<group_emailsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    emails?: StringNullableFilter | string | null
    vessel_id?: IntNullableFilter | number | null
    updated_by_user_id?: IntNullableFilter | number | null
  }

  export type port_filesUpsertWithWhereUniqueWithoutUsersInput = {
    where: port_filesWhereUniqueInput
    update: XOR<port_filesUpdateWithoutUsersInput, port_filesUncheckedUpdateWithoutUsersInput>
    create: XOR<port_filesCreateWithoutUsersInput, port_filesUncheckedCreateWithoutUsersInput>
  }

  export type port_filesUpdateWithWhereUniqueWithoutUsersInput = {
    where: port_filesWhereUniqueInput
    data: XOR<port_filesUpdateWithoutUsersInput, port_filesUncheckedUpdateWithoutUsersInput>
  }

  export type port_filesUpdateManyWithWhereWithoutUsersInput = {
    where: port_filesScalarWhereInput
    data: XOR<port_filesUpdateManyMutationInput, port_filesUncheckedUpdateManyWithoutPort_filesInput>
  }

  export type vessel_filesUpsertWithWhereUniqueWithoutUsersInput = {
    where: vessel_filesWhereUniqueInput
    update: XOR<vessel_filesUpdateWithoutUsersInput, vessel_filesUncheckedUpdateWithoutUsersInput>
    create: XOR<vessel_filesCreateWithoutUsersInput, vessel_filesUncheckedCreateWithoutUsersInput>
  }

  export type vessel_filesUpdateWithWhereUniqueWithoutUsersInput = {
    where: vessel_filesWhereUniqueInput
    data: XOR<vessel_filesUpdateWithoutUsersInput, vessel_filesUncheckedUpdateWithoutUsersInput>
  }

  export type vessel_filesUpdateManyWithWhereWithoutUsersInput = {
    where: vessel_filesScalarWhereInput
    data: XOR<vessel_filesUpdateManyMutationInput, vessel_filesUncheckedUpdateManyWithoutVessel_filesInput>
  }

  export type vessel_filesScalarWhereInput = {
    AND?: Enumerable<vessel_filesScalarWhereInput>
    OR?: Enumerable<vessel_filesScalarWhereInput>
    NOT?: Enumerable<vessel_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    vesselId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
  }

  export type usersCreateWithoutVessel_filesInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutVessel_filesInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutVessel_filesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutVessel_filesInput, usersUncheckedCreateWithoutVessel_filesInput>
  }

  export type VesselCreateWithoutVessel_filesInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    country?: CountryCreateNestedOneWithoutVesselsInput
    shippings?: ShippingCreateNestedManyWithoutVesselInput
    group_emails?: group_emailsCreateNestedManyWithoutVesselInput
  }

  export type VesselUncheckedCreateWithoutVessel_filesInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingUncheckedCreateNestedManyWithoutVesselInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutVesselInput
  }

  export type VesselCreateOrConnectWithoutVessel_filesInput = {
    where: VesselWhereUniqueInput
    create: XOR<VesselCreateWithoutVessel_filesInput, VesselUncheckedCreateWithoutVessel_filesInput>
  }

  export type usersUpsertWithoutVessel_filesInput = {
    update: XOR<usersUpdateWithoutVessel_filesInput, usersUncheckedUpdateWithoutVessel_filesInput>
    create: XOR<usersCreateWithoutVessel_filesInput, usersUncheckedCreateWithoutVessel_filesInput>
  }

  export type usersUpdateWithoutVessel_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    port_files?: port_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutVessel_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type VesselUpsertWithoutVessel_filesInput = {
    update: XOR<VesselUpdateWithoutVessel_filesInput, VesselUncheckedUpdateWithoutVessel_filesInput>
    create: XOR<VesselCreateWithoutVessel_filesInput, VesselUncheckedCreateWithoutVessel_filesInput>
  }

  export type VesselUpdateWithoutVessel_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    country?: CountryUpdateOneWithoutVesselsInput
    shippings?: ShippingUpdateManyWithoutVesselInput
    group_emails?: group_emailsUpdateManyWithoutVesselInput
  }

  export type VesselUncheckedUpdateWithoutVessel_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUncheckedUpdateManyWithoutVesselInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutVesselInput
  }

  export type CountryCreateWithoutVesselsInput = {
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsCreateNestedManyWithoutCountryInput
  }

  export type CountryUncheckedCreateWithoutVesselsInput = {
    id?: number
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsUncheckedCreateNestedManyWithoutCountryInput
  }

  export type CountryCreateOrConnectWithoutVesselsInput = {
    where: CountryWhereUniqueInput
    create: XOR<CountryCreateWithoutVesselsInput, CountryUncheckedCreateWithoutVesselsInput>
  }

  export type ShippingCreateWithoutVesselInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    users?: usersCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutVesselInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutVesselInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutVesselInput, ShippingUncheckedCreateWithoutVesselInput>
  }

  export type ShippingCreateManyVesselInputEnvelope = {
    data: Enumerable<ShippingCreateManyVesselInput>
    skipDuplicates?: boolean
  }

  export type vessel_filesCreateWithoutVesselsInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutVessel_filesInput
  }

  export type vessel_filesUncheckedCreateWithoutVesselsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type vessel_filesCreateOrConnectWithoutVesselsInput = {
    where: vessel_filesWhereUniqueInput
    create: XOR<vessel_filesCreateWithoutVesselsInput, vessel_filesUncheckedCreateWithoutVesselsInput>
  }

  export type vessel_filesCreateManyVesselsInputEnvelope = {
    data: Enumerable<vessel_filesCreateManyVesselsInput>
    skipDuplicates?: boolean
  }

  export type group_emailsCreateWithoutVesselInput = {
    name?: string | null
    emails?: string | null
    users?: usersCreateNestedOneWithoutGroup_emailsInput
  }

  export type group_emailsUncheckedCreateWithoutVesselInput = {
    id?: number
    name?: string | null
    emails?: string | null
    updated_by_user_id?: number | null
  }

  export type group_emailsCreateOrConnectWithoutVesselInput = {
    where: group_emailsWhereUniqueInput
    create: XOR<group_emailsCreateWithoutVesselInput, group_emailsUncheckedCreateWithoutVesselInput>
  }

  export type group_emailsCreateManyVesselInputEnvelope = {
    data: Enumerable<group_emailsCreateManyVesselInput>
    skipDuplicates?: boolean
  }

  export type CountryUpsertWithoutVesselsInput = {
    update: XOR<CountryUpdateWithoutVesselsInput, CountryUncheckedUpdateWithoutVesselsInput>
    create: XOR<CountryCreateWithoutVesselsInput, CountryUncheckedCreateWithoutVesselsInput>
  }

  export type CountryUpdateWithoutVesselsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUpdateManyWithoutCountryInput
  }

  export type CountryUncheckedUpdateWithoutVesselsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUncheckedUpdateManyWithoutCountryInput
  }

  export type ShippingUpsertWithWhereUniqueWithoutVesselInput = {
    where: ShippingWhereUniqueInput
    update: XOR<ShippingUpdateWithoutVesselInput, ShippingUncheckedUpdateWithoutVesselInput>
    create: XOR<ShippingCreateWithoutVesselInput, ShippingUncheckedCreateWithoutVesselInput>
  }

  export type ShippingUpdateWithWhereUniqueWithoutVesselInput = {
    where: ShippingWhereUniqueInput
    data: XOR<ShippingUpdateWithoutVesselInput, ShippingUncheckedUpdateWithoutVesselInput>
  }

  export type ShippingUpdateManyWithWhereWithoutVesselInput = {
    where: ShippingScalarWhereInput
    data: XOR<ShippingUpdateManyMutationInput, ShippingUncheckedUpdateManyWithoutShippingsInput>
  }

  export type vessel_filesUpsertWithWhereUniqueWithoutVesselsInput = {
    where: vessel_filesWhereUniqueInput
    update: XOR<vessel_filesUpdateWithoutVesselsInput, vessel_filesUncheckedUpdateWithoutVesselsInput>
    create: XOR<vessel_filesCreateWithoutVesselsInput, vessel_filesUncheckedCreateWithoutVesselsInput>
  }

  export type vessel_filesUpdateWithWhereUniqueWithoutVesselsInput = {
    where: vessel_filesWhereUniqueInput
    data: XOR<vessel_filesUpdateWithoutVesselsInput, vessel_filesUncheckedUpdateWithoutVesselsInput>
  }

  export type vessel_filesUpdateManyWithWhereWithoutVesselsInput = {
    where: vessel_filesScalarWhereInput
    data: XOR<vessel_filesUpdateManyMutationInput, vessel_filesUncheckedUpdateManyWithoutVessel_filesInput>
  }

  export type group_emailsUpsertWithWhereUniqueWithoutVesselInput = {
    where: group_emailsWhereUniqueInput
    update: XOR<group_emailsUpdateWithoutVesselInput, group_emailsUncheckedUpdateWithoutVesselInput>
    create: XOR<group_emailsCreateWithoutVesselInput, group_emailsUncheckedCreateWithoutVesselInput>
  }

  export type group_emailsUpdateWithWhereUniqueWithoutVesselInput = {
    where: group_emailsWhereUniqueInput
    data: XOR<group_emailsUpdateWithoutVesselInput, group_emailsUncheckedUpdateWithoutVesselInput>
  }

  export type group_emailsUpdateManyWithWhereWithoutVesselInput = {
    where: group_emailsScalarWhereInput
    data: XOR<group_emailsUpdateManyMutationInput, group_emailsUncheckedUpdateManyWithoutGroup_emailsInput>
  }

  export type ShippingCreateWithoutInquiresInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutInquiresInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutInquiresInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutInquiresInput, ShippingUncheckedCreateWithoutInquiresInput>
  }

  export type usersCreateWithoutInquiresInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutInquiresInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutInquiresInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutInquiresInput, usersUncheckedCreateWithoutInquiresInput>
  }

  export type inquires_commentsCreateWithoutInquiresInput = {
    body?: string | null
    is_done: boolean
    deleted?: boolean
    users?: usersCreateNestedOneWithoutInquires_commentsInput
  }

  export type inquires_commentsUncheckedCreateWithoutInquiresInput = {
    id?: number
    body?: string | null
    is_done: boolean
    user_id?: number | null
    deleted?: boolean
  }

  export type inquires_commentsCreateOrConnectWithoutInquiresInput = {
    where: inquires_commentsWhereUniqueInput
    create: XOR<inquires_commentsCreateWithoutInquiresInput, inquires_commentsUncheckedCreateWithoutInquiresInput>
  }

  export type inquires_commentsCreateManyInquiresInputEnvelope = {
    data: Enumerable<inquires_commentsCreateManyInquiresInput>
    skipDuplicates?: boolean
  }

  export type ShippingUpsertWithoutInquiresInput = {
    update: XOR<ShippingUpdateWithoutInquiresInput, ShippingUncheckedUpdateWithoutInquiresInput>
    create: XOR<ShippingCreateWithoutInquiresInput, ShippingUncheckedCreateWithoutInquiresInput>
  }

  export type ShippingUpdateWithoutInquiresInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutShippingsInput
    vessel?: VesselUpdateOneWithoutShippingsInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUpdateManyWithoutShippingsInput
    subsets?: subsetsUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateWithoutInquiresInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutShippingsInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput
  }

  export type usersUpsertWithoutInquiresInput = {
    update: XOR<usersUpdateWithoutInquiresInput, usersUncheckedUpdateWithoutInquiresInput>
    create: XOR<usersCreateWithoutInquiresInput, usersUncheckedCreateWithoutInquiresInput>
  }

  export type usersUpdateWithoutInquiresInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    port_files?: port_filesUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutInquiresInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type inquires_commentsUpsertWithWhereUniqueWithoutInquiresInput = {
    where: inquires_commentsWhereUniqueInput
    update: XOR<inquires_commentsUpdateWithoutInquiresInput, inquires_commentsUncheckedUpdateWithoutInquiresInput>
    create: XOR<inquires_commentsCreateWithoutInquiresInput, inquires_commentsUncheckedCreateWithoutInquiresInput>
  }

  export type inquires_commentsUpdateWithWhereUniqueWithoutInquiresInput = {
    where: inquires_commentsWhereUniqueInput
    data: XOR<inquires_commentsUpdateWithoutInquiresInput, inquires_commentsUncheckedUpdateWithoutInquiresInput>
  }

  export type inquires_commentsUpdateManyWithWhereWithoutInquiresInput = {
    where: inquires_commentsScalarWhereInput
    data: XOR<inquires_commentsUpdateManyMutationInput, inquires_commentsUncheckedUpdateManyWithoutInquires_commentsInput>
  }

  export type inquiresCreateWithoutInquires_commentsInput = {
    title?: string | null
    type?: string | null
    deleted?: boolean
    shippings?: ShippingCreateNestedOneWithoutInquiresInput
    users?: usersCreateNestedOneWithoutInquiresInput
  }

  export type inquiresUncheckedCreateWithoutInquires_commentsInput = {
    id?: number
    title?: string | null
    type?: string | null
    shipping_id?: number | null
    updated_by_user_id?: number | null
    deleted?: boolean
  }

  export type inquiresCreateOrConnectWithoutInquires_commentsInput = {
    where: inquiresWhereUniqueInput
    create: XOR<inquiresCreateWithoutInquires_commentsInput, inquiresUncheckedCreateWithoutInquires_commentsInput>
  }

  export type usersCreateWithoutInquires_commentsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutInquires_commentsInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutInquires_commentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutInquires_commentsInput, usersUncheckedCreateWithoutInquires_commentsInput>
  }

  export type inquiresUpsertWithoutInquires_commentsInput = {
    update: XOR<inquiresUpdateWithoutInquires_commentsInput, inquiresUncheckedUpdateWithoutInquires_commentsInput>
    create: XOR<inquiresCreateWithoutInquires_commentsInput, inquiresUncheckedCreateWithoutInquires_commentsInput>
  }

  export type inquiresUpdateWithoutInquires_commentsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    shippings?: ShippingUpdateOneWithoutInquiresInput
    users?: usersUpdateOneWithoutInquiresInput
  }

  export type inquiresUncheckedUpdateWithoutInquires_commentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type usersUpsertWithoutInquires_commentsInput = {
    update: XOR<usersUpdateWithoutInquires_commentsInput, usersUncheckedUpdateWithoutInquires_commentsInput>
    create: XOR<usersCreateWithoutInquires_commentsInput, usersUncheckedCreateWithoutInquires_commentsInput>
  }

  export type usersUpdateWithoutInquires_commentsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    group_emails?: group_emailsUpdateManyWithoutUsersInput
    port_files?: port_filesUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutInquires_commentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type VesselCreateWithoutGroup_emailsInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    country?: CountryCreateNestedOneWithoutVesselsInput
    shippings?: ShippingCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesCreateNestedManyWithoutVesselsInput
  }

  export type VesselUncheckedCreateWithoutGroup_emailsInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingUncheckedCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutVesselsInput
  }

  export type VesselCreateOrConnectWithoutGroup_emailsInput = {
    where: VesselWhereUniqueInput
    create: XOR<VesselCreateWithoutGroup_emailsInput, VesselUncheckedCreateWithoutGroup_emailsInput>
  }

  export type usersCreateWithoutGroup_emailsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutGroup_emailsInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutGroup_emailsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutGroup_emailsInput, usersUncheckedCreateWithoutGroup_emailsInput>
  }

  export type VesselUpsertWithoutGroup_emailsInput = {
    update: XOR<VesselUpdateWithoutGroup_emailsInput, VesselUncheckedUpdateWithoutGroup_emailsInput>
    create: XOR<VesselCreateWithoutGroup_emailsInput, VesselUncheckedCreateWithoutGroup_emailsInput>
  }

  export type VesselUpdateWithoutGroup_emailsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    country?: CountryUpdateOneWithoutVesselsInput
    shippings?: ShippingUpdateManyWithoutVesselInput
    vessel_files?: vessel_filesUpdateManyWithoutVesselsInput
  }

  export type VesselUncheckedUpdateWithoutGroup_emailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUncheckedUpdateManyWithoutVesselInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutVesselsInput
  }

  export type usersUpsertWithoutGroup_emailsInput = {
    update: XOR<usersUpdateWithoutGroup_emailsInput, usersUncheckedUpdateWithoutGroup_emailsInput>
    create: XOR<usersCreateWithoutGroup_emailsInput, usersUncheckedCreateWithoutGroup_emailsInput>
  }

  export type usersUpdateWithoutGroup_emailsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersInput
    shippings?: ShippingUpdateManyWithoutUsersInput
    user_files?: user_filesUpdateManyWithoutUsersInput
    inquires?: inquiresUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserInput
    port_files?: port_filesUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutGroup_emailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersInput
  }

  export type proformasCreateManyBerth_productsInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
  }

  export type proformasUpdateWithoutBerth_productsInput = {
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    proforma_files?: proforma_filesUpdateManyWithoutProformasInput
  }

  export type proformasUncheckedUpdateWithoutBerth_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    proforma_files?: proforma_filesUncheckedUpdateManyWithoutProformasInput
  }

  export type proformasUncheckedUpdateManyWithoutProformasInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type berth_productsCreateManyBerthsInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_portsCreateManyBerthsInput = {
    id?: number
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    shippingId?: number | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type berth_productsUpdateWithoutBerthsInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: productsUpdateOneRequiredWithoutBerth_productsInput
    proformas?: proformasUpdateManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedUpdateWithoutBerthsInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proformas?: proformasUncheckedUpdateManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedUpdateManyWithoutBerth_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_portsUpdateWithoutBerthsInput = {
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUpdateOneWithoutShipping_portsInput
    shippings?: ShippingUpdateOneWithoutShipping_portsInput
  }

  export type shipping_portsUncheckedUpdateWithoutBerthsInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_portsUncheckedUpdateManyWithoutShipping_portsInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemCreateManyChecklistTemplateInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemUpdateWithoutChecklistTemplateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemUncheckedUpdateWithoutChecklistTemplateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemUncheckedUpdateManyWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type portsCreateManyCountryInput = {
    id?: number
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
  }

  export type VesselCreateManyCountryInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
  }

  export type portsUpdateWithoutCountryInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUpdateManyWithoutPortsInput
    port_files?: port_filesUpdateManyWithoutPortsInput
    shipping_ports?: shipping_portsUpdateManyWithoutPortsInput
  }

  export type portsUncheckedUpdateWithoutCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUncheckedUpdateManyWithoutPortsInput
    port_files?: port_filesUncheckedUpdateManyWithoutPortsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutPortsInput
  }

  export type portsUncheckedUpdateManyWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VesselUpdateWithoutCountryInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUpdateManyWithoutVesselInput
    vessel_files?: vessel_filesUpdateManyWithoutVesselsInput
    group_emails?: group_emailsUpdateManyWithoutVesselInput
  }

  export type VesselUncheckedUpdateWithoutCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUncheckedUpdateManyWithoutVesselInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutVesselsInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutVesselInput
  }

  export type VesselUncheckedUpdateManyWithoutVesselsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type berthsCreateManyPortsInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
  }

  export type port_filesCreateManyPortsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type shipping_portsCreateManyPortsInput = {
    id?: number
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    shippingId?: number | null
    berthId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type berthsUpdateWithoutPortsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    berth_products?: berth_productsUpdateManyWithoutBerthsInput
    shipping_ports?: shipping_portsUpdateManyWithoutBerthsInput
  }

  export type berthsUncheckedUpdateWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutBerthsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutBerthsInput
  }

  export type berthsUncheckedUpdateManyWithoutBerthsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type port_filesUpdateWithoutPortsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutPort_filesInput
  }

  export type port_filesUncheckedUpdateWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type port_filesUncheckedUpdateManyWithoutPort_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type shipping_portsUpdateWithoutPortsInput = {
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneWithoutShipping_portsInput
    shippings?: ShippingUpdateOneWithoutShipping_portsInput
  }

  export type shipping_portsUncheckedUpdateWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    berthId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type berth_productsCreateManyProductsInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_productsCreateManyProductsInput = {
    id?: number
    weight?: number | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type berth_productsUpdateWithoutProductsInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneRequiredWithoutBerth_productsInput
    proformas?: proformasUpdateManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    berthId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proformas?: proformasUncheckedUpdateManyWithoutBerth_productsInput
  }

  export type shipping_productsUpdateWithoutProductsInput = {
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippings?: ShippingUpdateOneWithoutShipping_productsInput
  }

  export type shipping_productsUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_productsUncheckedUpdateManyWithoutShipping_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesCreateManyProformasInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesUpdateWithoutProformasInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesUncheckedUpdateWithoutProformasInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesUncheckedUpdateManyWithoutProforma_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_documentsCreateManyShipping_documentsInput = {
    id?: number
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    shippingId?: number | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    productGrossWeight?: number | null
  }

  export type shipping_documentsUpdateWithoutShipping_documentsInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    shippings?: ShippingUpdateOneWithoutShipping_documentsInput
    users?: usersUpdateOneWithoutShipping_documentsInput
    other_shipping_documents?: shipping_documentsUpdateManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedUpdateWithoutShipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    other_shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedUpdateManyWithoutOther_shipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type shipping_documentsCreateManyShippingsInput = {
    id?: number
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subsetId?: number | null
    productGrossWeight?: number | null
  }

  export type shipping_filesCreateManyShippingsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type shipping_portsCreateManyShippingsInput = {
    id?: number
    estimatedTimeOfArrival?: Date | string | null
    estimatedTimeOfBerthing?: Date | string | null
    estimatedTimeOfSailing?: Date | string | null
    timeOfArrival?: Date | string | null
    timeOfBerthing?: Date | string | null
    timeOfSailing?: Date | string | null
    portId?: number | null
    berthId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_productsCreateManyShippingsInput = {
    id?: number
    weight?: number | null
    productId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type subsetsCreateManyShippingsInput = {
    id?: number
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type inquiresCreateManyShippingsInput = {
    id?: number
    title?: string | null
    type?: string | null
    updated_by_user_id?: number | null
    deleted?: boolean
  }

  export type ShippingChecklistItemCreateManyShippingInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: string | null
    commentary?: string | null
    is_done: boolean
    updated_by_user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_documentsUpdateWithoutShippingsInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUpdateOneWithoutOther_shipping_documentsInput
    users?: usersUpdateOneWithoutShipping_documentsInput
    other_shipping_documents?: shipping_documentsUpdateManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subsetId?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    other_shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput
  }

  export type shipping_filesUpdateWithoutShippingsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutShipping_filesInput
  }

  export type shipping_filesUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type shipping_filesUncheckedUpdateManyWithoutShipping_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type shipping_portsUpdateWithoutShippingsInput = {
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneWithoutShipping_portsInput
    ports?: portsUpdateOneWithoutShipping_portsInput
  }

  export type shipping_portsUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimatedTimeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedTimeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfArrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfBerthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeOfSailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    berthId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_productsUpdateWithoutShippingsInput = {
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: productsUpdateOneWithoutShipping_productsInput
  }

  export type shipping_productsUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    productId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subsetsUpdateWithoutShippingsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subsetsUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subsetsUncheckedUpdateManyWithoutSubsetsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUpdateWithoutShippingsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    users?: usersUpdateOneWithoutInquiresInput
    inquires_comments?: inquires_commentsUpdateManyWithoutInquiresInput
  }

  export type inquiresUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutInquiresInput
  }

  export type inquiresUncheckedUpdateManyWithoutInquiresInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingChecklistItemUpdateWithoutShippingInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: usersUpdateOneWithoutShippingChecklistItemInput
  }

  export type ShippingChecklistItemUncheckedUpdateWithoutShippingInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemUncheckedUpdateManyWithoutShippingChecklistItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_documentsCreateManyUsersInput = {
    id?: number
    type?: string | null
    documentNumber?: string | null
    consignee?: string | null
    vesselName?: string | null
    portOfLoading?: string | null
    portOfDischarge?: string | null
    notify?: string | null
    productName?: string | null
    productNameExtraInfo?: string | null
    productWeightExtraInfo?: string | null
    freightType?: string | null
    charterPartyDate?: string | null
    shipBoardedDate?: string | null
    issuePlaceDate?: string | null
    numberOfOriginalBillOfLanding?: number | null
    shipper?: string | null
    masterName?: string | null
    signature?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subsetId?: number | null
    productGrossWeight?: number | null
  }

  export type shipping_filesCreateManyUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ShippingCreateManyUsersInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
  }

  export type user_filesCreateManyUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type inquiresCreateManyUsersInput = {
    id?: number
    title?: string | null
    type?: string | null
    shipping_id?: number | null
    deleted?: boolean
  }

  export type inquires_commentsCreateManyUsersInput = {
    id?: number
    body?: string | null
    is_done: boolean
    inquire_id?: number | null
    deleted?: boolean
  }

  export type ShippingChecklistItemCreateManyUserInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: string | null
    commentary?: string | null
    is_done: boolean
    shipping_id: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type group_emailsCreateManyUsersInput = {
    id?: number
    name?: string | null
    emails?: string | null
    vessel_id?: number | null
  }

  export type port_filesCreateManyUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type vessel_filesCreateManyUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    vesselId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_documentsUpdateWithoutUsersInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    shippings?: ShippingUpdateOneWithoutShipping_documentsInput
    shipping_documents?: shipping_documentsUpdateOneWithoutOther_shipping_documentsInput
    other_shipping_documents?: shipping_documentsUpdateManyWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    portOfLoading?: NullableStringFieldUpdateOperationsInput | string | null
    portOfDischarge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    productName?: NullableStringFieldUpdateOperationsInput | string | null
    productNameExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    productWeightExtraInfo?: NullableStringFieldUpdateOperationsInput | string | null
    freightType?: NullableStringFieldUpdateOperationsInput | string | null
    charterPartyDate?: NullableStringFieldUpdateOperationsInput | string | null
    shipBoardedDate?: NullableStringFieldUpdateOperationsInput | string | null
    issuePlaceDate?: NullableStringFieldUpdateOperationsInput | string | null
    numberOfOriginalBillOfLanding?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    masterName?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subsetId?: NullableIntFieldUpdateOperationsInput | number | null
    productGrossWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    other_shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput
  }

  export type shipping_filesUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippings?: ShippingUpdateOneWithoutShipping_filesInput
  }

  export type shipping_filesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingUpdateWithoutUsersInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    vessel?: VesselUpdateOneWithoutShippingsInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUpdateManyWithoutShippingsInput
    subsets?: subsetsUpdateManyWithoutShippingsInput
    inquires?: inquiresUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutShippingsInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateManyWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type user_filesUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesUncheckedUpdateManyWithoutUser_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    shippings?: ShippingUpdateOneWithoutInquiresInput
    inquires_comments?: inquires_commentsUpdateManyWithoutInquiresInput
  }

  export type inquiresUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutInquiresInput
  }

  export type inquires_commentsUpdateWithoutUsersInput = {
    body?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    inquires?: inquiresUpdateOneWithoutInquires_commentsInput
  }

  export type inquires_commentsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    inquire_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type inquires_commentsUncheckedUpdateManyWithoutInquires_commentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    inquire_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingChecklistItemUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping?: ShippingUpdateOneWithoutShippingChecklistItemInput
  }

  export type ShippingChecklistItemUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    shipping_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_emailsUpdateWithoutUsersInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel?: VesselUpdateOneWithoutGroup_emailsInput
  }

  export type group_emailsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type group_emailsUncheckedUpdateManyWithoutGroup_emailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type port_filesUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUpdateOneWithoutPort_filesInput
  }

  export type port_filesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vessel_filesUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessels?: VesselUpdateOneWithoutVessel_filesInput
  }

  export type vessel_filesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    vesselId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vessel_filesUncheckedUpdateManyWithoutVessel_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    vesselId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingCreateManyVesselInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
  }

  export type vessel_filesCreateManyVesselsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type group_emailsCreateManyVesselInput = {
    id?: number
    name?: string | null
    emails?: string | null
    updated_by_user_id?: number | null
  }

  export type ShippingUpdateWithoutVesselInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutShippingsInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUpdateManyWithoutShippingsInput
    subsets?: subsetsUpdateManyWithoutShippingsInput
    inquires?: inquiresUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingInput
  }

  export type ShippingUncheckedUpdateWithoutVesselInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableIntFieldUpdateOperationsInput | number | null
    depart_draft?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableIntFieldUpdateOperationsInput | number | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsInput
    shipping_ports?: shipping_portsUncheckedUpdateManyWithoutShippingsInput
    shipping_products?: shipping_productsUncheckedUpdateManyWithoutShippingsInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingInput
  }

  export type vessel_filesUpdateWithoutVesselsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutVessel_filesInput
  }

  export type vessel_filesUncheckedUpdateWithoutVesselsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type group_emailsUpdateWithoutVesselInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutGroup_emailsInput
  }

  export type group_emailsUncheckedUpdateWithoutVesselInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type inquires_commentsCreateManyInquiresInput = {
    id?: number
    body?: string | null
    is_done: boolean
    user_id?: number | null
    deleted?: boolean
  }

  export type inquires_commentsUpdateWithoutInquiresInput = {
    body?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    users?: usersUpdateOneWithoutInquires_commentsInput
  }

  export type inquires_commentsUncheckedUpdateWithoutInquiresInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.DMMF.Document;
}