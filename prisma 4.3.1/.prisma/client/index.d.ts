
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/index';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model Agency
 * 
 */
export type Agency = {
  id: number
  name: string
  country_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model berth_products
 * 
 */
export type berth_products = {
  id: number
  loadingCapacity: number | null
  unloadingCapacity: number | null
  berthId: number
  productId: number
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model berths
 * 
 */
export type berths = {
  id: number
  name: string | null
  description: string | null
  portId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  maxDraft: number | null
  airDraft: number | null
  maxLengthOverall: number | null
  maxDeadWeightTonnage: number | null
  maxBeam: number | null
  waterDensity: number | null
}

/**
 * Model ChecklistTemplate
 * 
 */
export type ChecklistTemplate = {
  id: number
  name: string
  operation_type: string | null
  agency_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model ChecklistTemplateItem
 * 
 */
export type ChecklistTemplateItem = {
  id: number
  name: string
  description: string | null
  type: string
  working_days: number | null
  checklist_template_id: number
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model ShippingChecklistItem
 * 
 */
export type ShippingChecklistItem = {
  id: number
  name: string
  description: string | null
  type: string
  deadline_date: Date | null
  commentary: string | null
  is_done: boolean
  shipping_id: number
  updated_by_user_id: number | null
  created_at: Date
  updated_ut: Date
  deleted_at: Date | null
}

/**
 * Model Country
 * 
 */
export type Country = {
  id: number
  name: string | null
  flag: string | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model migrations
 * 
 */
export type migrations = {
  id: number
  timestamp: number
  name: string
}

/**
 * Model port_files
 * 
 */
export type port_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  portId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  userId: number | null
}

/**
 * Model ports
 * 
 */
export type ports = {
  id: number
  name: string | null
  time_zone: string | null
  countryId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  slug: string | null
}

/**
 * Model products
 * 
 */
export type products = {
  id: number
  name: string | null
  description: string | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model proforma_files
 * 
 */
export type proforma_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  proformaId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model proformas
 * 
 */
export type proformas = {
  id: number
  taxes: string | null
  totalValue: number | null
  berthedHours: number | null
  berthProductId: number
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  idHash: string | null
  applicantName: string | null
  applicantEmail: string | null
  vesselName: string | null
  imo: string | null
  deadWeightTonnage: number | null
  lengthOverall: number | null
  grossTonnage: number | null
  package: string | null
  builtYear: number | null
  agencyType: string | null
  operationType: string | null
  productTonnage: number | null
  usd: number | null
  isCargillInternational: boolean | null
  beam: number | null
  etb: Date | null
  draft: number | null
  requestingCustomer: string | null
  vesselType: string | null
}

/**
 * Model shipping_documents
 * 
 */
export type shipping_documents = {
  id: number
  type: string | null
  document_number: string | null
  consignee: string | null
  vessel_name: string | null
  port_of_loading: string | null
  port_of_discharge: string | null
  notify: string | null
  product_name_extra_info: string | null
  product_weight_extra_info: string | null
  freight_type: string | null
  charter_party_date: string | null
  ship_boarded_date: string | null
  issue_place_date: string | null
  number_of_original_bill_of_landing: number | null
  shipper_id: number | null
  product_id: number | null
  master_name: string | null
  signature: string | null
  shipping_id: number | null
  user_id: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  order: number | null
  subset_id: number | null
  product_gross_weight: number | null
  product_net_weight: number | null
  product_quantity: number | null
  product_packing: string | null
}

/**
 * Model document_shipper
 * 
 */
export type document_shipper = {
  id: number
  name: string | null
  cnpj: string | null
  complement: string | null
}

/**
 * Model document_product
 * 
 */
export type document_product = {
  id: number
  name: string | null
  abbreviation: string | null
  description: string | null
  packing_type: string | null
}

/**
 * Model shipping_files
 * 
 */
export type shipping_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  shippingId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  userId: number | null
}

/**
 * Model ShippingPort
 * 
 */
export type ShippingPort = {
  id: number
  estimated_time_of_arrival: Date | null
  estimated_time_of_berthing: Date | null
  estimated_time_of_sailing: Date | null
  time_of_arrival: Date | null
  time_of_berthing: Date | null
  time_of_sailing: Date | null
  shipping_id: number | null
  port_id: number | null
  berth_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model ShippingProduct
 * 
 */
export type ShippingProduct = {
  id: number
  weight: number | null
  shipping_id: number | null
  product_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model Shipping
 * 
 */
export type Shipping = {
  id: number
  status: string | null
  owner_head_name: string | null
  owner_head_address: string | null
  disponent_owner: string | null
  charter_name: string | null
  master_name: string | null
  master_email: string | null
  estimated_draft_arrival: string | null
  estimated_draft_departure: string | null
  arrival_draft: number | null
  depart_draft: number | null
  vessel_operator: string | null
  vessel_operator_email: string | null
  operation_type: string | null
  agency_type: string | null
  voyage_number: string | null
  external_code: string | null
  comments: string | null
  last_port: string | null
  next_port: string | null
  broker: string | null
  boat: string | null
  tugs: string | null
  garbage: string | null
  last_cargoes: string | null
  sscec_port: string | null
  sscec_exp: string | null
  in_marsat_c_number: string | null
  master_phone_01: string | null
  master_phone_02: string | null
  vessel_expert: string | null
  vessel_expert_phone01: string | null
  vessel_expert_phone02: string | null
  vessel_expert_alternate: string | null
  vessel_expert_alternate_phone01: string | null
  vessel_expert_alternate_phone02: string | null
  vessel_operator_phone01: string | null
  vessel_operator_phone02: string | null
  vessel_operator_city_country: string | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
  vessel_id: number | null
  user_id: number | null
  total_load_expected: number | null
  total_load_actual: number | null
  port_operator: string | null
}

/**
 * Model subsets
 * 
 */
export type subsets = {
  id: number
  name: string | null
  shippingId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model user_files
 * 
 */
export type user_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  userId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model users
 * 
 */
export type users = {
  id: number
  name: string | null
  email: string | null
  password: string | null
  agencyId: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
}

/**
 * Model users_preference
 * 
 */
export type users_preference = {
  id: number
  team: string | null
  ports: string | null
  initial_page: string | null
  user_id: number | null
}

/**
 * Model vessel_files
 * 
 */
export type vessel_files = {
  id: number
  title: string | null
  filename: string | null
  originalName: string | null
  vessel_id: number | null
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  userId: number | null
}

/**
 * Model Vessel
 * 
 */
export type Vessel = {
  id: number
  name: string | null
  imo: string | null
  call_sign: string | null
  satellite_telephone: string | null
  classification_society: string | null
  type: string | null
  length_overall: number | null
  dead_weight_tonnage: number | null
  beam: number | null
  cubic_meters: number | null
  gross_tonnage: number | null
  net_tonnage: number | null
  panama_gross_tonnage: number | null
  panama_net_tonnage: number | null
  suez_gross_tonnage: number | null
  suez_net_tonnage: number | null
  reduced_gross_tonnage: number | null
  length_between_perpendiculars: number | null
  molded_depth: number | null
  number_of_holds: number | null
  number_of_tanks: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
  country_id: number | null
  draft_sw: string | null
  built_year: number | null
}

/**
 * Model inquires
 * 
 */
export type inquires = {
  id: number
  title: string | null
  group: string | null
  shipping_id: number | null
  updated_by_user_id: number | null
  deleted: boolean
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model inquires_comments
 * 
 */
export type inquires_comments = {
  id: number
  body: string | null
  type: string | null
  is_done: boolean
  deadline_date: Date | null
  inquire_id: number | null
  user_id: number | null
  deleted: boolean
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model group_emails
 * 
 */
export type group_emails = {
  id: number
  name: string | null
  emails: string | null
  vessel_id: number | null
  updated_by_user_id: number | null
}

/**
 * Model sof
 * 
 */
export type sof = {
  id: number
  hidden_attributes: string | null
  shipping_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model sof_holidays
 * 
 */
export type sof_holidays = {
  id: number
  name: string | null
  date: Date | null
  sof_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model sof_remarks
 * 
 */
export type sof_remarks = {
  id: number
  title: string | null
  sof_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model sof_remarks_items
 * 
 */
export type sof_remarks_items = {
  id: number
  title: string | null
  value: string | null
  is_single: boolean
  sof_remark_id: number
  deleted: boolean
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model sof_draft
 * 
 */
export type sof_draft = {
  id: number
  title: string | null
  fwd: number | null
  mid: number | null
  aft: number | null
  sof_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model sof_bunker_figures
 * 
 */
export type sof_bunker_figures = {
  id: number
  title: string | null
  ifo: number | null
  mdo: number | null
  fw: number | null
  sof_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model SofPortLogEventCategories
 * 
 */
export type SofPortLogEventCategories = {
  id: number
  name: string | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model SofPortLogEvents
 * 
 */
export type SofPortLogEvents = {
  id: number
  name: string | null
  description: string | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
  category_id: number | null
}

/**
 * Model ShippingSofPortLogEvents
 * 
 */
export type ShippingSofPortLogEvents = {
  id: number
  name: string | null
  commentary: string | null
  is_important: boolean | null
  is_highlighted: boolean | null
  start_date: Date | null
  end_date: Date | null
  sof_port_log_event_id: number
  shipping_sof_id: number
  created_by_user_id: number
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model sof_shipper_cargo
 * 
 */
export type sof_shipper_cargo = {
  id: number
  berth: string | null
  cargo: string | null
  sof_id: number | null
  created_at: Date
  updated_at: Date
  deleted_at: Date | null
}

/**
 * Model sof_shipper
 * 
 */
export type sof_shipper = {
  id: number
  name: string | null
  quantity: number | null
  sof_shipper_cargo_id: number | null
}

/**
 * Model sof_shipper_value
 * 
 */
export type sof_shipper_value = {
  id: number
  value: number | null
  sof_shipper_cargo_id: number | null
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Agencies
 * const agencies = await prisma.agency.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Agencies
   * const agencies = await prisma.agency.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P]): Promise<UnwrapTuple<P>>;

      /**
   * `prisma.agency`: Exposes CRUD operations for the **Agency** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Agencies
    * const agencies = await prisma.agency.findMany()
    * ```
    */
  get agency(): Prisma.AgencyDelegate<GlobalReject>;

  /**
   * `prisma.berth_products`: Exposes CRUD operations for the **berth_products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Berth_products
    * const berth_products = await prisma.berth_products.findMany()
    * ```
    */
  get berth_products(): Prisma.berth_productsDelegate<GlobalReject>;

  /**
   * `prisma.berths`: Exposes CRUD operations for the **berths** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Berths
    * const berths = await prisma.berths.findMany()
    * ```
    */
  get berths(): Prisma.berthsDelegate<GlobalReject>;

  /**
   * `prisma.checklistTemplate`: Exposes CRUD operations for the **ChecklistTemplate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistTemplates
    * const checklistTemplates = await prisma.checklistTemplate.findMany()
    * ```
    */
  get checklistTemplate(): Prisma.ChecklistTemplateDelegate<GlobalReject>;

  /**
   * `prisma.checklistTemplateItem`: Exposes CRUD operations for the **ChecklistTemplateItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistTemplateItems
    * const checklistTemplateItems = await prisma.checklistTemplateItem.findMany()
    * ```
    */
  get checklistTemplateItem(): Prisma.ChecklistTemplateItemDelegate<GlobalReject>;

  /**
   * `prisma.shippingChecklistItem`: Exposes CRUD operations for the **ShippingChecklistItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShippingChecklistItems
    * const shippingChecklistItems = await prisma.shippingChecklistItem.findMany()
    * ```
    */
  get shippingChecklistItem(): Prisma.ShippingChecklistItemDelegate<GlobalReject>;

  /**
   * `prisma.country`: Exposes CRUD operations for the **Country** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Countries
    * const countries = await prisma.country.findMany()
    * ```
    */
  get country(): Prisma.CountryDelegate<GlobalReject>;

  /**
   * `prisma.migrations`: Exposes CRUD operations for the **migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Migrations
    * const migrations = await prisma.migrations.findMany()
    * ```
    */
  get migrations(): Prisma.migrationsDelegate<GlobalReject>;

  /**
   * `prisma.port_files`: Exposes CRUD operations for the **port_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Port_files
    * const port_files = await prisma.port_files.findMany()
    * ```
    */
  get port_files(): Prisma.port_filesDelegate<GlobalReject>;

  /**
   * `prisma.ports`: Exposes CRUD operations for the **ports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ports
    * const ports = await prisma.ports.findMany()
    * ```
    */
  get ports(): Prisma.portsDelegate<GlobalReject>;

  /**
   * `prisma.products`: Exposes CRUD operations for the **products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.products.findMany()
    * ```
    */
  get products(): Prisma.productsDelegate<GlobalReject>;

  /**
   * `prisma.proforma_files`: Exposes CRUD operations for the **proforma_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proforma_files
    * const proforma_files = await prisma.proforma_files.findMany()
    * ```
    */
  get proforma_files(): Prisma.proforma_filesDelegate<GlobalReject>;

  /**
   * `prisma.proformas`: Exposes CRUD operations for the **proformas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proformas
    * const proformas = await prisma.proformas.findMany()
    * ```
    */
  get proformas(): Prisma.proformasDelegate<GlobalReject>;

  /**
   * `prisma.shipping_documents`: Exposes CRUD operations for the **shipping_documents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shipping_documents
    * const shipping_documents = await prisma.shipping_documents.findMany()
    * ```
    */
  get shipping_documents(): Prisma.shipping_documentsDelegate<GlobalReject>;

  /**
   * `prisma.document_shipper`: Exposes CRUD operations for the **document_shipper** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Document_shippers
    * const document_shippers = await prisma.document_shipper.findMany()
    * ```
    */
  get document_shipper(): Prisma.document_shipperDelegate<GlobalReject>;

  /**
   * `prisma.document_product`: Exposes CRUD operations for the **document_product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Document_products
    * const document_products = await prisma.document_product.findMany()
    * ```
    */
  get document_product(): Prisma.document_productDelegate<GlobalReject>;

  /**
   * `prisma.shipping_files`: Exposes CRUD operations for the **shipping_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shipping_files
    * const shipping_files = await prisma.shipping_files.findMany()
    * ```
    */
  get shipping_files(): Prisma.shipping_filesDelegate<GlobalReject>;

  /**
   * `prisma.shippingPort`: Exposes CRUD operations for the **ShippingPort** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShippingPorts
    * const shippingPorts = await prisma.shippingPort.findMany()
    * ```
    */
  get shippingPort(): Prisma.ShippingPortDelegate<GlobalReject>;

  /**
   * `prisma.shippingProduct`: Exposes CRUD operations for the **ShippingProduct** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShippingProducts
    * const shippingProducts = await prisma.shippingProduct.findMany()
    * ```
    */
  get shippingProduct(): Prisma.ShippingProductDelegate<GlobalReject>;

  /**
   * `prisma.shipping`: Exposes CRUD operations for the **Shipping** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shippings
    * const shippings = await prisma.shipping.findMany()
    * ```
    */
  get shipping(): Prisma.ShippingDelegate<GlobalReject>;

  /**
   * `prisma.subsets`: Exposes CRUD operations for the **subsets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subsets
    * const subsets = await prisma.subsets.findMany()
    * ```
    */
  get subsets(): Prisma.subsetsDelegate<GlobalReject>;

  /**
   * `prisma.user_files`: Exposes CRUD operations for the **user_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_files
    * const user_files = await prisma.user_files.findMany()
    * ```
    */
  get user_files(): Prisma.user_filesDelegate<GlobalReject>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<GlobalReject>;

  /**
   * `prisma.users_preference`: Exposes CRUD operations for the **users_preference** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users_preferences
    * const users_preferences = await prisma.users_preference.findMany()
    * ```
    */
  get users_preference(): Prisma.users_preferenceDelegate<GlobalReject>;

  /**
   * `prisma.vessel_files`: Exposes CRUD operations for the **vessel_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vessel_files
    * const vessel_files = await prisma.vessel_files.findMany()
    * ```
    */
  get vessel_files(): Prisma.vessel_filesDelegate<GlobalReject>;

  /**
   * `prisma.vessel`: Exposes CRUD operations for the **Vessel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vessels
    * const vessels = await prisma.vessel.findMany()
    * ```
    */
  get vessel(): Prisma.VesselDelegate<GlobalReject>;

  /**
   * `prisma.inquires`: Exposes CRUD operations for the **inquires** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inquires
    * const inquires = await prisma.inquires.findMany()
    * ```
    */
  get inquires(): Prisma.inquiresDelegate<GlobalReject>;

  /**
   * `prisma.inquires_comments`: Exposes CRUD operations for the **inquires_comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inquires_comments
    * const inquires_comments = await prisma.inquires_comments.findMany()
    * ```
    */
  get inquires_comments(): Prisma.inquires_commentsDelegate<GlobalReject>;

  /**
   * `prisma.group_emails`: Exposes CRUD operations for the **group_emails** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Group_emails
    * const group_emails = await prisma.group_emails.findMany()
    * ```
    */
  get group_emails(): Prisma.group_emailsDelegate<GlobalReject>;

  /**
   * `prisma.sof`: Exposes CRUD operations for the **sof** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sofs
    * const sofs = await prisma.sof.findMany()
    * ```
    */
  get sof(): Prisma.sofDelegate<GlobalReject>;

  /**
   * `prisma.sof_holidays`: Exposes CRUD operations for the **sof_holidays** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sof_holidays
    * const sof_holidays = await prisma.sof_holidays.findMany()
    * ```
    */
  get sof_holidays(): Prisma.sof_holidaysDelegate<GlobalReject>;

  /**
   * `prisma.sof_remarks`: Exposes CRUD operations for the **sof_remarks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sof_remarks
    * const sof_remarks = await prisma.sof_remarks.findMany()
    * ```
    */
  get sof_remarks(): Prisma.sof_remarksDelegate<GlobalReject>;

  /**
   * `prisma.sof_remarks_items`: Exposes CRUD operations for the **sof_remarks_items** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sof_remarks_items
    * const sof_remarks_items = await prisma.sof_remarks_items.findMany()
    * ```
    */
  get sof_remarks_items(): Prisma.sof_remarks_itemsDelegate<GlobalReject>;

  /**
   * `prisma.sof_draft`: Exposes CRUD operations for the **sof_draft** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sof_drafts
    * const sof_drafts = await prisma.sof_draft.findMany()
    * ```
    */
  get sof_draft(): Prisma.sof_draftDelegate<GlobalReject>;

  /**
   * `prisma.sof_bunker_figures`: Exposes CRUD operations for the **sof_bunker_figures** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sof_bunker_figures
    * const sof_bunker_figures = await prisma.sof_bunker_figures.findMany()
    * ```
    */
  get sof_bunker_figures(): Prisma.sof_bunker_figuresDelegate<GlobalReject>;

  /**
   * `prisma.sofPortLogEventCategories`: Exposes CRUD operations for the **SofPortLogEventCategories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SofPortLogEventCategories
    * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.findMany()
    * ```
    */
  get sofPortLogEventCategories(): Prisma.SofPortLogEventCategoriesDelegate<GlobalReject>;

  /**
   * `prisma.sofPortLogEvents`: Exposes CRUD operations for the **SofPortLogEvents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SofPortLogEvents
    * const sofPortLogEvents = await prisma.sofPortLogEvents.findMany()
    * ```
    */
  get sofPortLogEvents(): Prisma.SofPortLogEventsDelegate<GlobalReject>;

  /**
   * `prisma.shippingSofPortLogEvents`: Exposes CRUD operations for the **ShippingSofPortLogEvents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShippingSofPortLogEvents
    * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.findMany()
    * ```
    */
  get shippingSofPortLogEvents(): Prisma.ShippingSofPortLogEventsDelegate<GlobalReject>;

  /**
   * `prisma.sof_shipper_cargo`: Exposes CRUD operations for the **sof_shipper_cargo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sof_shipper_cargos
    * const sof_shipper_cargos = await prisma.sof_shipper_cargo.findMany()
    * ```
    */
  get sof_shipper_cargo(): Prisma.sof_shipper_cargoDelegate<GlobalReject>;

  /**
   * `prisma.sof_shipper`: Exposes CRUD operations for the **sof_shipper** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sof_shippers
    * const sof_shippers = await prisma.sof_shipper.findMany()
    * ```
    */
  get sof_shipper(): Prisma.sof_shipperDelegate<GlobalReject>;

  /**
   * `prisma.sof_shipper_value`: Exposes CRUD operations for the **sof_shipper_value** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sof_shipper_values
    * const sof_shipper_values = await prisma.sof_shipper_value.findMany()
    * ```
    */
  get sof_shipper_value(): Prisma.sof_shipper_valueDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export import Metrics = runtime.Metrics
  export import Metric = runtime.Metric
  export import MetricHistogram = runtime.MetricHistogram
  export import MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
   * Prisma Client JS version: 4.3.1
   * Query Engine version: c875e43600dfe042452e0b868f7a48b817b9640b
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export import FieldRef = runtime.FieldRef

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    Agency: 'Agency',
    berth_products: 'berth_products',
    berths: 'berths',
    ChecklistTemplate: 'ChecklistTemplate',
    ChecklistTemplateItem: 'ChecklistTemplateItem',
    ShippingChecklistItem: 'ShippingChecklistItem',
    Country: 'Country',
    migrations: 'migrations',
    port_files: 'port_files',
    ports: 'ports',
    products: 'products',
    proforma_files: 'proforma_files',
    proformas: 'proformas',
    shipping_documents: 'shipping_documents',
    document_shipper: 'document_shipper',
    document_product: 'document_product',
    shipping_files: 'shipping_files',
    ShippingPort: 'ShippingPort',
    ShippingProduct: 'ShippingProduct',
    Shipping: 'Shipping',
    subsets: 'subsets',
    user_files: 'user_files',
    users: 'users',
    users_preference: 'users_preference',
    vessel_files: 'vessel_files',
    Vessel: 'Vessel',
    inquires: 'inquires',
    inquires_comments: 'inquires_comments',
    group_emails: 'group_emails',
    sof: 'sof',
    sof_holidays: 'sof_holidays',
    sof_remarks: 'sof_remarks',
    sof_remarks_items: 'sof_remarks_items',
    sof_draft: 'sof_draft',
    sof_bunker_figures: 'sof_bunker_figures',
    SofPortLogEventCategories: 'SofPortLogEventCategories',
    SofPortLogEvents: 'SofPortLogEvents',
    ShippingSofPortLogEvents: 'ShippingSofPortLogEvents',
    sof_shipper_cargo: 'sof_shipper_cargo',
    sof_shipper: 'sof_shipper',
    sof_shipper_value: 'sof_shipper_value'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     * @deprecated since 4.0.0. Use `findUniqueOrThrow`/`findFirstOrThrow` methods instead.
     * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed in to the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AgencyCountOutputType
   */


  export type AgencyCountOutputType = {
    users: number
    ChecklistTemplate: number
  }

  export type AgencyCountOutputTypeSelect = {
    users?: boolean
    ChecklistTemplate?: boolean
  }

  export type AgencyCountOutputTypeGetPayload<
    S extends boolean | null | undefined | AgencyCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? AgencyCountOutputType
    : S extends undefined
    ? never
    : S extends AgencyCountOutputTypeArgs
    ?'include' extends U
    ? AgencyCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof AgencyCountOutputType ? AgencyCountOutputType[P] : never
  } 
    : AgencyCountOutputType
  : AgencyCountOutputType




  // Custom InputTypes

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the AgencyCountOutputType
     * 
    **/
    select?: AgencyCountOutputTypeSelect | null
  }



  /**
   * Count Type Berth_productsCountOutputType
   */


  export type Berth_productsCountOutputType = {
    proformas: number
  }

  export type Berth_productsCountOutputTypeSelect = {
    proformas?: boolean
  }

  export type Berth_productsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Berth_productsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Berth_productsCountOutputType
    : S extends undefined
    ? never
    : S extends Berth_productsCountOutputTypeArgs
    ?'include' extends U
    ? Berth_productsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof Berth_productsCountOutputType ? Berth_productsCountOutputType[P] : never
  } 
    : Berth_productsCountOutputType
  : Berth_productsCountOutputType




  // Custom InputTypes

  /**
   * Berth_productsCountOutputType without action
   */
  export type Berth_productsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Berth_productsCountOutputType
     * 
    **/
    select?: Berth_productsCountOutputTypeSelect | null
  }



  /**
   * Count Type BerthsCountOutputType
   */


  export type BerthsCountOutputType = {
    berth_products: number
    shipping_ports: number
  }

  export type BerthsCountOutputTypeSelect = {
    berth_products?: boolean
    shipping_ports?: boolean
  }

  export type BerthsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | BerthsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? BerthsCountOutputType
    : S extends undefined
    ? never
    : S extends BerthsCountOutputTypeArgs
    ?'include' extends U
    ? BerthsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof BerthsCountOutputType ? BerthsCountOutputType[P] : never
  } 
    : BerthsCountOutputType
  : BerthsCountOutputType




  // Custom InputTypes

  /**
   * BerthsCountOutputType without action
   */
  export type BerthsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the BerthsCountOutputType
     * 
    **/
    select?: BerthsCountOutputTypeSelect | null
  }



  /**
   * Count Type ChecklistTemplateCountOutputType
   */


  export type ChecklistTemplateCountOutputType = {
    items: number
  }

  export type ChecklistTemplateCountOutputTypeSelect = {
    items?: boolean
  }

  export type ChecklistTemplateCountOutputTypeGetPayload<
    S extends boolean | null | undefined | ChecklistTemplateCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? ChecklistTemplateCountOutputType
    : S extends undefined
    ? never
    : S extends ChecklistTemplateCountOutputTypeArgs
    ?'include' extends U
    ? ChecklistTemplateCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof ChecklistTemplateCountOutputType ? ChecklistTemplateCountOutputType[P] : never
  } 
    : ChecklistTemplateCountOutputType
  : ChecklistTemplateCountOutputType




  // Custom InputTypes

  /**
   * ChecklistTemplateCountOutputType without action
   */
  export type ChecklistTemplateCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateCountOutputType
     * 
    **/
    select?: ChecklistTemplateCountOutputTypeSelect | null
  }



  /**
   * Count Type CountryCountOutputType
   */


  export type CountryCountOutputType = {
    ports: number
    vessels: number
    agency: number
  }

  export type CountryCountOutputTypeSelect = {
    ports?: boolean
    vessels?: boolean
    agency?: boolean
  }

  export type CountryCountOutputTypeGetPayload<
    S extends boolean | null | undefined | CountryCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? CountryCountOutputType
    : S extends undefined
    ? never
    : S extends CountryCountOutputTypeArgs
    ?'include' extends U
    ? CountryCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof CountryCountOutputType ? CountryCountOutputType[P] : never
  } 
    : CountryCountOutputType
  : CountryCountOutputType




  // Custom InputTypes

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the CountryCountOutputType
     * 
    **/
    select?: CountryCountOutputTypeSelect | null
  }



  /**
   * Count Type PortsCountOutputType
   */


  export type PortsCountOutputType = {
    berths: number
    port_files: number
    shipping_ports: number
  }

  export type PortsCountOutputTypeSelect = {
    berths?: boolean
    port_files?: boolean
    shipping_ports?: boolean
  }

  export type PortsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | PortsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? PortsCountOutputType
    : S extends undefined
    ? never
    : S extends PortsCountOutputTypeArgs
    ?'include' extends U
    ? PortsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof PortsCountOutputType ? PortsCountOutputType[P] : never
  } 
    : PortsCountOutputType
  : PortsCountOutputType




  // Custom InputTypes

  /**
   * PortsCountOutputType without action
   */
  export type PortsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the PortsCountOutputType
     * 
    **/
    select?: PortsCountOutputTypeSelect | null
  }



  /**
   * Count Type ProductsCountOutputType
   */


  export type ProductsCountOutputType = {
    berth_products: number
    shipping_products: number
  }

  export type ProductsCountOutputTypeSelect = {
    berth_products?: boolean
    shipping_products?: boolean
  }

  export type ProductsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | ProductsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? ProductsCountOutputType
    : S extends undefined
    ? never
    : S extends ProductsCountOutputTypeArgs
    ?'include' extends U
    ? ProductsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof ProductsCountOutputType ? ProductsCountOutputType[P] : never
  } 
    : ProductsCountOutputType
  : ProductsCountOutputType




  // Custom InputTypes

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ProductsCountOutputType
     * 
    **/
    select?: ProductsCountOutputTypeSelect | null
  }



  /**
   * Count Type ProformasCountOutputType
   */


  export type ProformasCountOutputType = {
    proforma_files: number
  }

  export type ProformasCountOutputTypeSelect = {
    proforma_files?: boolean
  }

  export type ProformasCountOutputTypeGetPayload<
    S extends boolean | null | undefined | ProformasCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? ProformasCountOutputType
    : S extends undefined
    ? never
    : S extends ProformasCountOutputTypeArgs
    ?'include' extends U
    ? ProformasCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof ProformasCountOutputType ? ProformasCountOutputType[P] : never
  } 
    : ProformasCountOutputType
  : ProformasCountOutputType




  // Custom InputTypes

  /**
   * ProformasCountOutputType without action
   */
  export type ProformasCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ProformasCountOutputType
     * 
    **/
    select?: ProformasCountOutputTypeSelect | null
  }



  /**
   * Count Type Document_shipperCountOutputType
   */


  export type Document_shipperCountOutputType = {
    shipping_documents: number
  }

  export type Document_shipperCountOutputTypeSelect = {
    shipping_documents?: boolean
  }

  export type Document_shipperCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Document_shipperCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Document_shipperCountOutputType
    : S extends undefined
    ? never
    : S extends Document_shipperCountOutputTypeArgs
    ?'include' extends U
    ? Document_shipperCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof Document_shipperCountOutputType ? Document_shipperCountOutputType[P] : never
  } 
    : Document_shipperCountOutputType
  : Document_shipperCountOutputType




  // Custom InputTypes

  /**
   * Document_shipperCountOutputType without action
   */
  export type Document_shipperCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Document_shipperCountOutputType
     * 
    **/
    select?: Document_shipperCountOutputTypeSelect | null
  }



  /**
   * Count Type Document_productCountOutputType
   */


  export type Document_productCountOutputType = {
    shipping_documents: number
  }

  export type Document_productCountOutputTypeSelect = {
    shipping_documents?: boolean
  }

  export type Document_productCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Document_productCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Document_productCountOutputType
    : S extends undefined
    ? never
    : S extends Document_productCountOutputTypeArgs
    ?'include' extends U
    ? Document_productCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof Document_productCountOutputType ? Document_productCountOutputType[P] : never
  } 
    : Document_productCountOutputType
  : Document_productCountOutputType




  // Custom InputTypes

  /**
   * Document_productCountOutputType without action
   */
  export type Document_productCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Document_productCountOutputType
     * 
    **/
    select?: Document_productCountOutputTypeSelect | null
  }



  /**
   * Count Type ShippingCountOutputType
   */


  export type ShippingCountOutputType = {
    shipping_documents: number
    shipping_files: number
    shipping_ports: number
    shipping_products: number
    subsets: number
    inquires: number
    ShippingChecklistItem: number
  }

  export type ShippingCountOutputTypeSelect = {
    shipping_documents?: boolean
    shipping_files?: boolean
    shipping_ports?: boolean
    shipping_products?: boolean
    subsets?: boolean
    inquires?: boolean
    ShippingChecklistItem?: boolean
  }

  export type ShippingCountOutputTypeGetPayload<
    S extends boolean | null | undefined | ShippingCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? ShippingCountOutputType
    : S extends undefined
    ? never
    : S extends ShippingCountOutputTypeArgs
    ?'include' extends U
    ? ShippingCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof ShippingCountOutputType ? ShippingCountOutputType[P] : never
  } 
    : ShippingCountOutputType
  : ShippingCountOutputType




  // Custom InputTypes

  /**
   * ShippingCountOutputType without action
   */
  export type ShippingCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ShippingCountOutputType
     * 
    **/
    select?: ShippingCountOutputTypeSelect | null
  }



  /**
   * Count Type SubsetsCountOutputType
   */


  export type SubsetsCountOutputType = {
    shipping_documents: number
  }

  export type SubsetsCountOutputTypeSelect = {
    shipping_documents?: boolean
  }

  export type SubsetsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | SubsetsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? SubsetsCountOutputType
    : S extends undefined
    ? never
    : S extends SubsetsCountOutputTypeArgs
    ?'include' extends U
    ? SubsetsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof SubsetsCountOutputType ? SubsetsCountOutputType[P] : never
  } 
    : SubsetsCountOutputType
  : SubsetsCountOutputType




  // Custom InputTypes

  /**
   * SubsetsCountOutputType without action
   */
  export type SubsetsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SubsetsCountOutputType
     * 
    **/
    select?: SubsetsCountOutputTypeSelect | null
  }



  /**
   * Count Type UsersCountOutputType
   */


  export type UsersCountOutputType = {
    shipping_documents: number
    shipping_files: number
    shippings: number
    user_files: number
    inquires: number
    inquires_comments: number
    ShippingChecklistItem: number
    group_emails: number
    port_files: number
    vessel_files: number
    users_preference: number
    shipping_sof_port_log_events: number
  }

  export type UsersCountOutputTypeSelect = {
    shipping_documents?: boolean
    shipping_files?: boolean
    shippings?: boolean
    user_files?: boolean
    inquires?: boolean
    inquires_comments?: boolean
    ShippingChecklistItem?: boolean
    group_emails?: boolean
    port_files?: boolean
    vessel_files?: boolean
    users_preference?: boolean
    shipping_sof_port_log_events?: boolean
  }

  export type UsersCountOutputTypeGetPayload<
    S extends boolean | null | undefined | UsersCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? UsersCountOutputType
    : S extends undefined
    ? never
    : S extends UsersCountOutputTypeArgs
    ?'include' extends U
    ? UsersCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof UsersCountOutputType ? UsersCountOutputType[P] : never
  } 
    : UsersCountOutputType
  : UsersCountOutputType




  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     * 
    **/
    select?: UsersCountOutputTypeSelect | null
  }



  /**
   * Count Type VesselCountOutputType
   */


  export type VesselCountOutputType = {
    shippings: number
    vessel_files: number
    group_emails: number
  }

  export type VesselCountOutputTypeSelect = {
    shippings?: boolean
    vessel_files?: boolean
    group_emails?: boolean
  }

  export type VesselCountOutputTypeGetPayload<
    S extends boolean | null | undefined | VesselCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? VesselCountOutputType
    : S extends undefined
    ? never
    : S extends VesselCountOutputTypeArgs
    ?'include' extends U
    ? VesselCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof VesselCountOutputType ? VesselCountOutputType[P] : never
  } 
    : VesselCountOutputType
  : VesselCountOutputType




  // Custom InputTypes

  /**
   * VesselCountOutputType without action
   */
  export type VesselCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the VesselCountOutputType
     * 
    **/
    select?: VesselCountOutputTypeSelect | null
  }



  /**
   * Count Type InquiresCountOutputType
   */


  export type InquiresCountOutputType = {
    inquires_comments: number
  }

  export type InquiresCountOutputTypeSelect = {
    inquires_comments?: boolean
  }

  export type InquiresCountOutputTypeGetPayload<
    S extends boolean | null | undefined | InquiresCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? InquiresCountOutputType
    : S extends undefined
    ? never
    : S extends InquiresCountOutputTypeArgs
    ?'include' extends U
    ? InquiresCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof InquiresCountOutputType ? InquiresCountOutputType[P] : never
  } 
    : InquiresCountOutputType
  : InquiresCountOutputType




  // Custom InputTypes

  /**
   * InquiresCountOutputType without action
   */
  export type InquiresCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the InquiresCountOutputType
     * 
    **/
    select?: InquiresCountOutputTypeSelect | null
  }



  /**
   * Count Type SofCountOutputType
   */


  export type SofCountOutputType = {
    sof_holidays: number
    sof_remarks: number
    sof_draft: number
    sof_bunker_figures: number
    sof_port_log_events: number
    sof_shipper_cargo: number
  }

  export type SofCountOutputTypeSelect = {
    sof_holidays?: boolean
    sof_remarks?: boolean
    sof_draft?: boolean
    sof_bunker_figures?: boolean
    sof_port_log_events?: boolean
    sof_shipper_cargo?: boolean
  }

  export type SofCountOutputTypeGetPayload<
    S extends boolean | null | undefined | SofCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? SofCountOutputType
    : S extends undefined
    ? never
    : S extends SofCountOutputTypeArgs
    ?'include' extends U
    ? SofCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof SofCountOutputType ? SofCountOutputType[P] : never
  } 
    : SofCountOutputType
  : SofCountOutputType




  // Custom InputTypes

  /**
   * SofCountOutputType without action
   */
  export type SofCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SofCountOutputType
     * 
    **/
    select?: SofCountOutputTypeSelect | null
  }



  /**
   * Count Type Sof_remarksCountOutputType
   */


  export type Sof_remarksCountOutputType = {
    sof_remarks_itens: number
  }

  export type Sof_remarksCountOutputTypeSelect = {
    sof_remarks_itens?: boolean
  }

  export type Sof_remarksCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Sof_remarksCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Sof_remarksCountOutputType
    : S extends undefined
    ? never
    : S extends Sof_remarksCountOutputTypeArgs
    ?'include' extends U
    ? Sof_remarksCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof Sof_remarksCountOutputType ? Sof_remarksCountOutputType[P] : never
  } 
    : Sof_remarksCountOutputType
  : Sof_remarksCountOutputType




  // Custom InputTypes

  /**
   * Sof_remarksCountOutputType without action
   */
  export type Sof_remarksCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Sof_remarksCountOutputType
     * 
    **/
    select?: Sof_remarksCountOutputTypeSelect | null
  }



  /**
   * Count Type SofPortLogEventCategoriesCountOutputType
   */


  export type SofPortLogEventCategoriesCountOutputType = {
    events: number
  }

  export type SofPortLogEventCategoriesCountOutputTypeSelect = {
    events?: boolean
  }

  export type SofPortLogEventCategoriesCountOutputTypeGetPayload<
    S extends boolean | null | undefined | SofPortLogEventCategoriesCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? SofPortLogEventCategoriesCountOutputType
    : S extends undefined
    ? never
    : S extends SofPortLogEventCategoriesCountOutputTypeArgs
    ?'include' extends U
    ? SofPortLogEventCategoriesCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof SofPortLogEventCategoriesCountOutputType ? SofPortLogEventCategoriesCountOutputType[P] : never
  } 
    : SofPortLogEventCategoriesCountOutputType
  : SofPortLogEventCategoriesCountOutputType




  // Custom InputTypes

  /**
   * SofPortLogEventCategoriesCountOutputType without action
   */
  export type SofPortLogEventCategoriesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEventCategoriesCountOutputType
     * 
    **/
    select?: SofPortLogEventCategoriesCountOutputTypeSelect | null
  }



  /**
   * Count Type SofPortLogEventsCountOutputType
   */


  export type SofPortLogEventsCountOutputType = {
    ShippingSofPortLogEvents: number
  }

  export type SofPortLogEventsCountOutputTypeSelect = {
    ShippingSofPortLogEvents?: boolean
  }

  export type SofPortLogEventsCountOutputTypeGetPayload<
    S extends boolean | null | undefined | SofPortLogEventsCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? SofPortLogEventsCountOutputType
    : S extends undefined
    ? never
    : S extends SofPortLogEventsCountOutputTypeArgs
    ?'include' extends U
    ? SofPortLogEventsCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof SofPortLogEventsCountOutputType ? SofPortLogEventsCountOutputType[P] : never
  } 
    : SofPortLogEventsCountOutputType
  : SofPortLogEventsCountOutputType




  // Custom InputTypes

  /**
   * SofPortLogEventsCountOutputType without action
   */
  export type SofPortLogEventsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEventsCountOutputType
     * 
    **/
    select?: SofPortLogEventsCountOutputTypeSelect | null
  }



  /**
   * Count Type Sof_shipper_cargoCountOutputType
   */


  export type Sof_shipper_cargoCountOutputType = {
    sof_shipper: number
    sof_shipper_value: number
  }

  export type Sof_shipper_cargoCountOutputTypeSelect = {
    sof_shipper?: boolean
    sof_shipper_value?: boolean
  }

  export type Sof_shipper_cargoCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Sof_shipper_cargoCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Sof_shipper_cargoCountOutputType
    : S extends undefined
    ? never
    : S extends Sof_shipper_cargoCountOutputTypeArgs
    ?'include' extends U
    ? Sof_shipper_cargoCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof Sof_shipper_cargoCountOutputType ? Sof_shipper_cargoCountOutputType[P] : never
  } 
    : Sof_shipper_cargoCountOutputType
  : Sof_shipper_cargoCountOutputType




  // Custom InputTypes

  /**
   * Sof_shipper_cargoCountOutputType without action
   */
  export type Sof_shipper_cargoCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Sof_shipper_cargoCountOutputType
     * 
    **/
    select?: Sof_shipper_cargoCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model Agency
   */


  export type AggregateAgency = {
    _count: AgencyCountAggregateOutputType | null
    _avg: AgencyAvgAggregateOutputType | null
    _sum: AgencySumAggregateOutputType | null
    _min: AgencyMinAggregateOutputType | null
    _max: AgencyMaxAggregateOutputType | null
  }

  export type AgencyAvgAggregateOutputType = {
    id: number | null
    country_id: number | null
  }

  export type AgencySumAggregateOutputType = {
    id: number | null
    country_id: number | null
  }

  export type AgencyMinAggregateOutputType = {
    id: number | null
    name: string | null
    country_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type AgencyMaxAggregateOutputType = {
    id: number | null
    name: string | null
    country_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type AgencyCountAggregateOutputType = {
    id: number
    name: number
    country_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type AgencyAvgAggregateInputType = {
    id?: true
    country_id?: true
  }

  export type AgencySumAggregateInputType = {
    id?: true
    country_id?: true
  }

  export type AgencyMinAggregateInputType = {
    id?: true
    name?: true
    country_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type AgencyMaxAggregateInputType = {
    id?: true
    name?: true
    country_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type AgencyCountAggregateInputType = {
    id?: true
    name?: true
    country_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type AgencyAggregateArgs = {
    /**
     * Filter which Agency to aggregate.
     * 
    **/
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     * 
    **/
    orderBy?: Enumerable<AgencyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Agencies
    **/
    _count?: true | AgencyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgencyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgencySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyMaxAggregateInputType
  }

  export type GetAgencyAggregateType<T extends AgencyAggregateArgs> = {
        [P in keyof T & keyof AggregateAgency]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgency[P]>
      : GetScalarType<T[P], AggregateAgency[P]>
  }




  export type AgencyGroupByArgs = {
    where?: AgencyWhereInput
    orderBy?: Enumerable<AgencyOrderByWithAggregationInput>
    by: Array<AgencyScalarFieldEnum>
    having?: AgencyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyCountAggregateInputType | true
    _avg?: AgencyAvgAggregateInputType
    _sum?: AgencySumAggregateInputType
    _min?: AgencyMinAggregateInputType
    _max?: AgencyMaxAggregateInputType
  }


  export type AgencyGroupByOutputType = {
    id: number
    name: string
    country_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: AgencyCountAggregateOutputType | null
    _avg: AgencyAvgAggregateOutputType | null
    _sum: AgencySumAggregateOutputType | null
    _min: AgencyMinAggregateOutputType | null
    _max: AgencyMaxAggregateOutputType | null
  }

  type GetAgencyGroupByPayload<T extends AgencyGroupByArgs> = PrismaPromise<
    Array<
      PickArray<AgencyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyGroupByOutputType[P]>
        }
      >
    >


  export type AgencySelect = {
    id?: boolean
    name?: boolean
    country_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    country?: boolean | CountryArgs
    users?: boolean | usersFindManyArgs
    ChecklistTemplate?: boolean | ChecklistTemplateFindManyArgs
    _count?: boolean | AgencyCountOutputTypeArgs
  }

  export type AgencyInclude = {
    country?: boolean | CountryArgs
    users?: boolean | usersFindManyArgs
    ChecklistTemplate?: boolean | ChecklistTemplateFindManyArgs
    _count?: boolean | AgencyCountOutputTypeArgs
  }

  export type AgencyGetPayload<
    S extends boolean | null | undefined | AgencyArgs,
    U = keyof S
      > = S extends true
        ? Agency
    : S extends undefined
    ? never
    : S extends AgencyArgs | AgencyFindManyArgs
    ?'include' extends U
    ? Agency  & {
    [P in TrueKeys<S['include']>]:
        P extends 'country' ? CountryGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'users' ? Array < usersGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'ChecklistTemplate' ? Array < ChecklistTemplateGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? AgencyCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'country' ? CountryGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'users' ? Array < usersGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'ChecklistTemplate' ? Array < ChecklistTemplateGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? AgencyCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof Agency ? Agency[P] : never
  } 
    : Agency
  : Agency


  type AgencyCountArgs = Merge<
    Omit<AgencyFindManyArgs, 'select' | 'include'> & {
      select?: AgencyCountAggregateInputType | true
    }
  >

  export interface AgencyDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Agency that matches the filter.
     * @param {AgencyFindUniqueArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AgencyFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, AgencyFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Agency'> extends True ? CheckSelect<T, Prisma__AgencyClient<Agency>, Prisma__AgencyClient<AgencyGetPayload<T>>> : CheckSelect<T, Prisma__AgencyClient<Agency | null >, Prisma__AgencyClient<AgencyGetPayload<T> | null >>

    /**
     * Find the first Agency that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindFirstArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AgencyFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, AgencyFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Agency'> extends True ? CheckSelect<T, Prisma__AgencyClient<Agency>, Prisma__AgencyClient<AgencyGetPayload<T>>> : CheckSelect<T, Prisma__AgencyClient<Agency | null >, Prisma__AgencyClient<AgencyGetPayload<T> | null >>

    /**
     * Find zero or more Agencies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Agencies
     * const agencies = await prisma.agency.findMany()
     * 
     * // Get first 10 Agencies
     * const agencies = await prisma.agency.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyWithIdOnly = await prisma.agency.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AgencyFindManyArgs>(
      args?: SelectSubset<T, AgencyFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Agency>>, PrismaPromise<Array<AgencyGetPayload<T>>>>

    /**
     * Create a Agency.
     * @param {AgencyCreateArgs} args - Arguments to create a Agency.
     * @example
     * // Create one Agency
     * const Agency = await prisma.agency.create({
     *   data: {
     *     // ... data to create a Agency
     *   }
     * })
     * 
    **/
    create<T extends AgencyCreateArgs>(
      args: SelectSubset<T, AgencyCreateArgs>
    ): CheckSelect<T, Prisma__AgencyClient<Agency>, Prisma__AgencyClient<AgencyGetPayload<T>>>

    /**
     * Create many Agencies.
     *     @param {AgencyCreateManyArgs} args - Arguments to create many Agencies.
     *     @example
     *     // Create many Agencies
     *     const agency = await prisma.agency.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends AgencyCreateManyArgs>(
      args?: SelectSubset<T, AgencyCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Agency.
     * @param {AgencyDeleteArgs} args - Arguments to delete one Agency.
     * @example
     * // Delete one Agency
     * const Agency = await prisma.agency.delete({
     *   where: {
     *     // ... filter to delete one Agency
     *   }
     * })
     * 
    **/
    delete<T extends AgencyDeleteArgs>(
      args: SelectSubset<T, AgencyDeleteArgs>
    ): CheckSelect<T, Prisma__AgencyClient<Agency>, Prisma__AgencyClient<AgencyGetPayload<T>>>

    /**
     * Update one Agency.
     * @param {AgencyUpdateArgs} args - Arguments to update one Agency.
     * @example
     * // Update one Agency
     * const agency = await prisma.agency.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AgencyUpdateArgs>(
      args: SelectSubset<T, AgencyUpdateArgs>
    ): CheckSelect<T, Prisma__AgencyClient<Agency>, Prisma__AgencyClient<AgencyGetPayload<T>>>

    /**
     * Delete zero or more Agencies.
     * @param {AgencyDeleteManyArgs} args - Arguments to filter Agencies to delete.
     * @example
     * // Delete a few Agencies
     * const { count } = await prisma.agency.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AgencyDeleteManyArgs>(
      args?: SelectSubset<T, AgencyDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Agencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Agencies
     * const agency = await prisma.agency.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AgencyUpdateManyArgs>(
      args: SelectSubset<T, AgencyUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Agency.
     * @param {AgencyUpsertArgs} args - Arguments to update or create a Agency.
     * @example
     * // Update or create a Agency
     * const agency = await prisma.agency.upsert({
     *   create: {
     *     // ... data to create a Agency
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Agency we want to update
     *   }
     * })
    **/
    upsert<T extends AgencyUpsertArgs>(
      args: SelectSubset<T, AgencyUpsertArgs>
    ): CheckSelect<T, Prisma__AgencyClient<Agency>, Prisma__AgencyClient<AgencyGetPayload<T>>>

    /**
     * Find one Agency that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {AgencyFindUniqueOrThrowArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AgencyFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, AgencyFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__AgencyClient<Agency>, Prisma__AgencyClient<AgencyGetPayload<T>>>

    /**
     * Find the first Agency that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindFirstOrThrowArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AgencyFindFirstOrThrowArgs>(
      args?: SelectSubset<T, AgencyFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__AgencyClient<Agency>, Prisma__AgencyClient<AgencyGetPayload<T>>>

    /**
     * Count the number of Agencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyCountArgs} args - Arguments to filter Agencies to count.
     * @example
     * // Count the number of Agencies
     * const count = await prisma.agency.count({
     *   where: {
     *     // ... the filter for the Agencies we want to count
     *   }
     * })
    **/
    count<T extends AgencyCountArgs>(
      args?: Subset<T, AgencyCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Agency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyAggregateArgs>(args: Subset<T, AgencyAggregateArgs>): PrismaPromise<GetAgencyAggregateType<T>>

    /**
     * Group by Agency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyGroupByArgs['orderBy'] }
        : { orderBy?: AgencyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Agency.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__AgencyClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    country<T extends CountryArgs = {}>(args?: Subset<T, CountryArgs>): CheckSelect<T, Prisma__CountryClient<Country | null >, Prisma__CountryClient<CountryGetPayload<T> | null >>;

    users<T extends usersFindManyArgs = {}>(args?: Subset<T, usersFindManyArgs>): CheckSelect<T, PrismaPromise<Array<users>>, PrismaPromise<Array<usersGetPayload<T>>>>;

    ChecklistTemplate<T extends ChecklistTemplateFindManyArgs = {}>(args?: Subset<T, ChecklistTemplateFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ChecklistTemplate>>, PrismaPromise<Array<ChecklistTemplateGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Agency base type for findUnique actions
   */
  export type AgencyFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Agency
     * 
    **/
    select?: AgencySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AgencyInclude | null
    /**
     * Filter, which Agency to fetch.
     * 
    **/
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency: findUnique
   */
  export interface AgencyFindUniqueArgs extends AgencyFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Agency base type for findFirst actions
   */
  export type AgencyFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Agency
     * 
    **/
    select?: AgencySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AgencyInclude | null
    /**
     * Filter, which Agency to fetch.
     * 
    **/
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     * 
    **/
    orderBy?: Enumerable<AgencyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agencies.
     * 
    **/
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agencies.
     * 
    **/
    distinct?: Enumerable<AgencyScalarFieldEnum>
  }

  /**
   * Agency: findFirst
   */
  export interface AgencyFindFirstArgs extends AgencyFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Agency findMany
   */
  export type AgencyFindManyArgs = {
    /**
     * Select specific fields to fetch from the Agency
     * 
    **/
    select?: AgencySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AgencyInclude | null
    /**
     * Filter, which Agencies to fetch.
     * 
    **/
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     * 
    **/
    orderBy?: Enumerable<AgencyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Agencies.
     * 
    **/
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     * 
    **/
    skip?: number
    distinct?: Enumerable<AgencyScalarFieldEnum>
  }


  /**
   * Agency create
   */
  export type AgencyCreateArgs = {
    /**
     * Select specific fields to fetch from the Agency
     * 
    **/
    select?: AgencySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AgencyInclude | null
    /**
     * The data needed to create a Agency.
     * 
    **/
    data: XOR<AgencyCreateInput, AgencyUncheckedCreateInput>
  }


  /**
   * Agency createMany
   */
  export type AgencyCreateManyArgs = {
    /**
     * The data used to create many Agencies.
     * 
    **/
    data: Enumerable<AgencyCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Agency update
   */
  export type AgencyUpdateArgs = {
    /**
     * Select specific fields to fetch from the Agency
     * 
    **/
    select?: AgencySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AgencyInclude | null
    /**
     * The data needed to update a Agency.
     * 
    **/
    data: XOR<AgencyUpdateInput, AgencyUncheckedUpdateInput>
    /**
     * Choose, which Agency to update.
     * 
    **/
    where: AgencyWhereUniqueInput
  }


  /**
   * Agency updateMany
   */
  export type AgencyUpdateManyArgs = {
    /**
     * The data used to update Agencies.
     * 
    **/
    data: XOR<AgencyUpdateManyMutationInput, AgencyUncheckedUpdateManyInput>
    /**
     * Filter which Agencies to update
     * 
    **/
    where?: AgencyWhereInput
  }


  /**
   * Agency upsert
   */
  export type AgencyUpsertArgs = {
    /**
     * Select specific fields to fetch from the Agency
     * 
    **/
    select?: AgencySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AgencyInclude | null
    /**
     * The filter to search for the Agency to update in case it exists.
     * 
    **/
    where: AgencyWhereUniqueInput
    /**
     * In case the Agency found by the `where` argument doesn't exist, create a new Agency with this data.
     * 
    **/
    create: XOR<AgencyCreateInput, AgencyUncheckedCreateInput>
    /**
     * In case the Agency was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<AgencyUpdateInput, AgencyUncheckedUpdateInput>
  }


  /**
   * Agency delete
   */
  export type AgencyDeleteArgs = {
    /**
     * Select specific fields to fetch from the Agency
     * 
    **/
    select?: AgencySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AgencyInclude | null
    /**
     * Filter which Agency to delete.
     * 
    **/
    where: AgencyWhereUniqueInput
  }


  /**
   * Agency deleteMany
   */
  export type AgencyDeleteManyArgs = {
    /**
     * Filter which Agencies to delete
     * 
    **/
    where?: AgencyWhereInput
  }


  /**
   * Agency: findUniqueOrThrow
   */
  export type AgencyFindUniqueOrThrowArgs = AgencyFindUniqueArgsBase
      

  /**
   * Agency: findFirstOrThrow
   */
  export type AgencyFindFirstOrThrowArgs = AgencyFindFirstArgsBase
      

  /**
   * Agency without action
   */
  export type AgencyArgs = {
    /**
     * Select specific fields to fetch from the Agency
     * 
    **/
    select?: AgencySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AgencyInclude | null
  }



  /**
   * Model berth_products
   */


  export type AggregateBerth_products = {
    _count: Berth_productsCountAggregateOutputType | null
    _avg: Berth_productsAvgAggregateOutputType | null
    _sum: Berth_productsSumAggregateOutputType | null
    _min: Berth_productsMinAggregateOutputType | null
    _max: Berth_productsMaxAggregateOutputType | null
  }

  export type Berth_productsAvgAggregateOutputType = {
    id: number | null
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number | null
    productId: number | null
  }

  export type Berth_productsSumAggregateOutputType = {
    id: number | null
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number | null
    productId: number | null
  }

  export type Berth_productsMinAggregateOutputType = {
    id: number | null
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number | null
    productId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Berth_productsMaxAggregateOutputType = {
    id: number | null
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number | null
    productId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Berth_productsCountAggregateOutputType = {
    id: number
    loadingCapacity: number
    unloadingCapacity: number
    berthId: number
    productId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type Berth_productsAvgAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
  }

  export type Berth_productsSumAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
  }

  export type Berth_productsMinAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Berth_productsMaxAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Berth_productsCountAggregateInputType = {
    id?: true
    loadingCapacity?: true
    unloadingCapacity?: true
    berthId?: true
    productId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type Berth_productsAggregateArgs = {
    /**
     * Filter which berth_products to aggregate.
     * 
    **/
    where?: berth_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berth_products to fetch.
     * 
    **/
    orderBy?: Enumerable<berth_productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: berth_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berth_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berth_products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned berth_products
    **/
    _count?: true | Berth_productsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Berth_productsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Berth_productsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Berth_productsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Berth_productsMaxAggregateInputType
  }

  export type GetBerth_productsAggregateType<T extends Berth_productsAggregateArgs> = {
        [P in keyof T & keyof AggregateBerth_products]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBerth_products[P]>
      : GetScalarType<T[P], AggregateBerth_products[P]>
  }




  export type Berth_productsGroupByArgs = {
    where?: berth_productsWhereInput
    orderBy?: Enumerable<berth_productsOrderByWithAggregationInput>
    by: Array<Berth_productsScalarFieldEnum>
    having?: berth_productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Berth_productsCountAggregateInputType | true
    _avg?: Berth_productsAvgAggregateInputType
    _sum?: Berth_productsSumAggregateInputType
    _min?: Berth_productsMinAggregateInputType
    _max?: Berth_productsMaxAggregateInputType
  }


  export type Berth_productsGroupByOutputType = {
    id: number
    loadingCapacity: number | null
    unloadingCapacity: number | null
    berthId: number
    productId: number
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: Berth_productsCountAggregateOutputType | null
    _avg: Berth_productsAvgAggregateOutputType | null
    _sum: Berth_productsSumAggregateOutputType | null
    _min: Berth_productsMinAggregateOutputType | null
    _max: Berth_productsMaxAggregateOutputType | null
  }

  type GetBerth_productsGroupByPayload<T extends Berth_productsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Berth_productsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Berth_productsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Berth_productsGroupByOutputType[P]>
            : GetScalarType<T[P], Berth_productsGroupByOutputType[P]>
        }
      >
    >


  export type berth_productsSelect = {
    id?: boolean
    loadingCapacity?: boolean
    unloadingCapacity?: boolean
    berthId?: boolean
    productId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    berths?: boolean | berthsArgs
    products?: boolean | productsArgs
    proformas?: boolean | proformasFindManyArgs
    _count?: boolean | Berth_productsCountOutputTypeArgs
  }

  export type berth_productsInclude = {
    berths?: boolean | berthsArgs
    products?: boolean | productsArgs
    proformas?: boolean | proformasFindManyArgs
    _count?: boolean | Berth_productsCountOutputTypeArgs
  }

  export type berth_productsGetPayload<
    S extends boolean | null | undefined | berth_productsArgs,
    U = keyof S
      > = S extends true
        ? berth_products
    : S extends undefined
    ? never
    : S extends berth_productsArgs | berth_productsFindManyArgs
    ?'include' extends U
    ? berth_products  & {
    [P in TrueKeys<S['include']>]:
        P extends 'berths' ? berthsGetPayload<Exclude<S['include'], undefined | null>[P]> :
        P extends 'products' ? productsGetPayload<Exclude<S['include'], undefined | null>[P]> :
        P extends 'proformas' ? Array < proformasGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? Berth_productsCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'berths' ? berthsGetPayload<Exclude<S['select'], undefined | null>[P]> :
        P extends 'products' ? productsGetPayload<Exclude<S['select'], undefined | null>[P]> :
        P extends 'proformas' ? Array < proformasGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? Berth_productsCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof berth_products ? berth_products[P] : never
  } 
    : berth_products
  : berth_products


  type berth_productsCountArgs = Merge<
    Omit<berth_productsFindManyArgs, 'select' | 'include'> & {
      select?: Berth_productsCountAggregateInputType | true
    }
  >

  export interface berth_productsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Berth_products that matches the filter.
     * @param {berth_productsFindUniqueArgs} args - Arguments to find a Berth_products
     * @example
     * // Get one Berth_products
     * const berth_products = await prisma.berth_products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends berth_productsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, berth_productsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'berth_products'> extends True ? CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>> : CheckSelect<T, Prisma__berth_productsClient<berth_products | null >, Prisma__berth_productsClient<berth_productsGetPayload<T> | null >>

    /**
     * Find the first Berth_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berth_productsFindFirstArgs} args - Arguments to find a Berth_products
     * @example
     * // Get one Berth_products
     * const berth_products = await prisma.berth_products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends berth_productsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, berth_productsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'berth_products'> extends True ? CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>> : CheckSelect<T, Prisma__berth_productsClient<berth_products | null >, Prisma__berth_productsClient<berth_productsGetPayload<T> | null >>

    /**
     * Find zero or more Berth_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berth_productsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Berth_products
     * const berth_products = await prisma.berth_products.findMany()
     * 
     * // Get first 10 Berth_products
     * const berth_products = await prisma.berth_products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const berth_productsWithIdOnly = await prisma.berth_products.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends berth_productsFindManyArgs>(
      args?: SelectSubset<T, berth_productsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<berth_products>>, PrismaPromise<Array<berth_productsGetPayload<T>>>>

    /**
     * Create a Berth_products.
     * @param {berth_productsCreateArgs} args - Arguments to create a Berth_products.
     * @example
     * // Create one Berth_products
     * const Berth_products = await prisma.berth_products.create({
     *   data: {
     *     // ... data to create a Berth_products
     *   }
     * })
     * 
    **/
    create<T extends berth_productsCreateArgs>(
      args: SelectSubset<T, berth_productsCreateArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Create many Berth_products.
     *     @param {berth_productsCreateManyArgs} args - Arguments to create many Berth_products.
     *     @example
     *     // Create many Berth_products
     *     const berth_products = await prisma.berth_products.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends berth_productsCreateManyArgs>(
      args?: SelectSubset<T, berth_productsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Berth_products.
     * @param {berth_productsDeleteArgs} args - Arguments to delete one Berth_products.
     * @example
     * // Delete one Berth_products
     * const Berth_products = await prisma.berth_products.delete({
     *   where: {
     *     // ... filter to delete one Berth_products
     *   }
     * })
     * 
    **/
    delete<T extends berth_productsDeleteArgs>(
      args: SelectSubset<T, berth_productsDeleteArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Update one Berth_products.
     * @param {berth_productsUpdateArgs} args - Arguments to update one Berth_products.
     * @example
     * // Update one Berth_products
     * const berth_products = await prisma.berth_products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends berth_productsUpdateArgs>(
      args: SelectSubset<T, berth_productsUpdateArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Delete zero or more Berth_products.
     * @param {berth_productsDeleteManyArgs} args - Arguments to filter Berth_products to delete.
     * @example
     * // Delete a few Berth_products
     * const { count } = await prisma.berth_products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends berth_productsDeleteManyArgs>(
      args?: SelectSubset<T, berth_productsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Berth_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berth_productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Berth_products
     * const berth_products = await prisma.berth_products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends berth_productsUpdateManyArgs>(
      args: SelectSubset<T, berth_productsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Berth_products.
     * @param {berth_productsUpsertArgs} args - Arguments to update or create a Berth_products.
     * @example
     * // Update or create a Berth_products
     * const berth_products = await prisma.berth_products.upsert({
     *   create: {
     *     // ... data to create a Berth_products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Berth_products we want to update
     *   }
     * })
    **/
    upsert<T extends berth_productsUpsertArgs>(
      args: SelectSubset<T, berth_productsUpsertArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Find one Berth_products that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {berth_productsFindUniqueOrThrowArgs} args - Arguments to find a Berth_products
     * @example
     * // Get one Berth_products
     * const berth_products = await prisma.berth_products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends berth_productsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, berth_productsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Find the first Berth_products that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berth_productsFindFirstOrThrowArgs} args - Arguments to find a Berth_products
     * @example
     * // Get one Berth_products
     * const berth_products = await prisma.berth_products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends berth_productsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, berth_productsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__berth_productsClient<berth_products>, Prisma__berth_productsClient<berth_productsGetPayload<T>>>

    /**
     * Count the number of Berth_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berth_productsCountArgs} args - Arguments to filter Berth_products to count.
     * @example
     * // Count the number of Berth_products
     * const count = await prisma.berth_products.count({
     *   where: {
     *     // ... the filter for the Berth_products we want to count
     *   }
     * })
    **/
    count<T extends berth_productsCountArgs>(
      args?: Subset<T, berth_productsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Berth_productsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Berth_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Berth_productsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Berth_productsAggregateArgs>(args: Subset<T, Berth_productsAggregateArgs>): PrismaPromise<GetBerth_productsAggregateType<T>>

    /**
     * Group by Berth_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Berth_productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Berth_productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Berth_productsGroupByArgs['orderBy'] }
        : { orderBy?: Berth_productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Berth_productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBerth_productsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for berth_products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__berth_productsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    berths<T extends berthsArgs = {}>(args?: Subset<T, berthsArgs>): CheckSelect<T, Prisma__berthsClient<berths | null >, Prisma__berthsClient<berthsGetPayload<T> | null >>;

    products<T extends productsArgs = {}>(args?: Subset<T, productsArgs>): CheckSelect<T, Prisma__productsClient<products | null >, Prisma__productsClient<productsGetPayload<T> | null >>;

    proformas<T extends proformasFindManyArgs = {}>(args?: Subset<T, proformasFindManyArgs>): CheckSelect<T, PrismaPromise<Array<proformas>>, PrismaPromise<Array<proformasGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * berth_products base type for findUnique actions
   */
  export type berth_productsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * Filter, which berth_products to fetch.
     * 
    **/
    where: berth_productsWhereUniqueInput
  }

  /**
   * berth_products: findUnique
   */
  export interface berth_productsFindUniqueArgs extends berth_productsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * berth_products base type for findFirst actions
   */
  export type berth_productsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * Filter, which berth_products to fetch.
     * 
    **/
    where?: berth_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berth_products to fetch.
     * 
    **/
    orderBy?: Enumerable<berth_productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for berth_products.
     * 
    **/
    cursor?: berth_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berth_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berth_products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of berth_products.
     * 
    **/
    distinct?: Enumerable<Berth_productsScalarFieldEnum>
  }

  /**
   * berth_products: findFirst
   */
  export interface berth_productsFindFirstArgs extends berth_productsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * berth_products findMany
   */
  export type berth_productsFindManyArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * Filter, which berth_products to fetch.
     * 
    **/
    where?: berth_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berth_products to fetch.
     * 
    **/
    orderBy?: Enumerable<berth_productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing berth_products.
     * 
    **/
    cursor?: berth_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berth_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berth_products.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Berth_productsScalarFieldEnum>
  }


  /**
   * berth_products create
   */
  export type berth_productsCreateArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * The data needed to create a berth_products.
     * 
    **/
    data: XOR<berth_productsCreateInput, berth_productsUncheckedCreateInput>
  }


  /**
   * berth_products createMany
   */
  export type berth_productsCreateManyArgs = {
    /**
     * The data used to create many berth_products.
     * 
    **/
    data: Enumerable<berth_productsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * berth_products update
   */
  export type berth_productsUpdateArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * The data needed to update a berth_products.
     * 
    **/
    data: XOR<berth_productsUpdateInput, berth_productsUncheckedUpdateInput>
    /**
     * Choose, which berth_products to update.
     * 
    **/
    where: berth_productsWhereUniqueInput
  }


  /**
   * berth_products updateMany
   */
  export type berth_productsUpdateManyArgs = {
    /**
     * The data used to update berth_products.
     * 
    **/
    data: XOR<berth_productsUpdateManyMutationInput, berth_productsUncheckedUpdateManyInput>
    /**
     * Filter which berth_products to update
     * 
    **/
    where?: berth_productsWhereInput
  }


  /**
   * berth_products upsert
   */
  export type berth_productsUpsertArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * The filter to search for the berth_products to update in case it exists.
     * 
    **/
    where: berth_productsWhereUniqueInput
    /**
     * In case the berth_products found by the `where` argument doesn't exist, create a new berth_products with this data.
     * 
    **/
    create: XOR<berth_productsCreateInput, berth_productsUncheckedCreateInput>
    /**
     * In case the berth_products was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<berth_productsUpdateInput, berth_productsUncheckedUpdateInput>
  }


  /**
   * berth_products delete
   */
  export type berth_productsDeleteArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
    /**
     * Filter which berth_products to delete.
     * 
    **/
    where: berth_productsWhereUniqueInput
  }


  /**
   * berth_products deleteMany
   */
  export type berth_productsDeleteManyArgs = {
    /**
     * Filter which berth_products to delete
     * 
    **/
    where?: berth_productsWhereInput
  }


  /**
   * berth_products: findUniqueOrThrow
   */
  export type berth_productsFindUniqueOrThrowArgs = berth_productsFindUniqueArgsBase
      

  /**
   * berth_products: findFirstOrThrow
   */
  export type berth_productsFindFirstOrThrowArgs = berth_productsFindFirstArgsBase
      

  /**
   * berth_products without action
   */
  export type berth_productsArgs = {
    /**
     * Select specific fields to fetch from the berth_products
     * 
    **/
    select?: berth_productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berth_productsInclude | null
  }



  /**
   * Model berths
   */


  export type AggregateBerths = {
    _count: BerthsCountAggregateOutputType | null
    _avg: BerthsAvgAggregateOutputType | null
    _sum: BerthsSumAggregateOutputType | null
    _min: BerthsMinAggregateOutputType | null
    _max: BerthsMaxAggregateOutputType | null
  }

  export type BerthsAvgAggregateOutputType = {
    id: number | null
    portId: number | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
  }

  export type BerthsSumAggregateOutputType = {
    id: number | null
    portId: number | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
  }

  export type BerthsMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    portId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
  }

  export type BerthsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    portId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
  }

  export type BerthsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    portId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    maxDraft: number
    airDraft: number
    maxLengthOverall: number
    maxDeadWeightTonnage: number
    maxBeam: number
    waterDensity: number
    _all: number
  }


  export type BerthsAvgAggregateInputType = {
    id?: true
    portId?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
  }

  export type BerthsSumAggregateInputType = {
    id?: true
    portId?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
  }

  export type BerthsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
  }

  export type BerthsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
  }

  export type BerthsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    maxDraft?: true
    airDraft?: true
    maxLengthOverall?: true
    maxDeadWeightTonnage?: true
    maxBeam?: true
    waterDensity?: true
    _all?: true
  }

  export type BerthsAggregateArgs = {
    /**
     * Filter which berths to aggregate.
     * 
    **/
    where?: berthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berths to fetch.
     * 
    **/
    orderBy?: Enumerable<berthsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: berthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berths from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berths.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned berths
    **/
    _count?: true | BerthsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BerthsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BerthsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BerthsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BerthsMaxAggregateInputType
  }

  export type GetBerthsAggregateType<T extends BerthsAggregateArgs> = {
        [P in keyof T & keyof AggregateBerths]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBerths[P]>
      : GetScalarType<T[P], AggregateBerths[P]>
  }




  export type BerthsGroupByArgs = {
    where?: berthsWhereInput
    orderBy?: Enumerable<berthsOrderByWithAggregationInput>
    by: Array<BerthsScalarFieldEnum>
    having?: berthsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BerthsCountAggregateInputType | true
    _avg?: BerthsAvgAggregateInputType
    _sum?: BerthsSumAggregateInputType
    _min?: BerthsMinAggregateInputType
    _max?: BerthsMaxAggregateInputType
  }


  export type BerthsGroupByOutputType = {
    id: number
    name: string | null
    description: string | null
    portId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    maxDraft: number | null
    airDraft: number | null
    maxLengthOverall: number | null
    maxDeadWeightTonnage: number | null
    maxBeam: number | null
    waterDensity: number | null
    _count: BerthsCountAggregateOutputType | null
    _avg: BerthsAvgAggregateOutputType | null
    _sum: BerthsSumAggregateOutputType | null
    _min: BerthsMinAggregateOutputType | null
    _max: BerthsMaxAggregateOutputType | null
  }

  type GetBerthsGroupByPayload<T extends BerthsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<BerthsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BerthsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BerthsGroupByOutputType[P]>
            : GetScalarType<T[P], BerthsGroupByOutputType[P]>
        }
      >
    >


  export type berthsSelect = {
    id?: boolean
    name?: boolean
    description?: boolean
    portId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    maxDraft?: boolean
    airDraft?: boolean
    maxLengthOverall?: boolean
    maxDeadWeightTonnage?: boolean
    maxBeam?: boolean
    waterDensity?: boolean
    ports?: boolean | portsArgs
    berth_products?: boolean | berth_productsFindManyArgs
    shipping_ports?: boolean | ShippingPortFindManyArgs
    _count?: boolean | BerthsCountOutputTypeArgs
  }

  export type berthsInclude = {
    ports?: boolean | portsArgs
    berth_products?: boolean | berth_productsFindManyArgs
    shipping_ports?: boolean | ShippingPortFindManyArgs
    _count?: boolean | BerthsCountOutputTypeArgs
  }

  export type berthsGetPayload<
    S extends boolean | null | undefined | berthsArgs,
    U = keyof S
      > = S extends true
        ? berths
    : S extends undefined
    ? never
    : S extends berthsArgs | berthsFindManyArgs
    ?'include' extends U
    ? berths  & {
    [P in TrueKeys<S['include']>]:
        P extends 'ports' ? portsGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'berth_products' ? Array < berth_productsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shipping_ports' ? Array < ShippingPortGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? BerthsCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'ports' ? portsGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'berth_products' ? Array < berth_productsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shipping_ports' ? Array < ShippingPortGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? BerthsCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof berths ? berths[P] : never
  } 
    : berths
  : berths


  type berthsCountArgs = Merge<
    Omit<berthsFindManyArgs, 'select' | 'include'> & {
      select?: BerthsCountAggregateInputType | true
    }
  >

  export interface berthsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Berths that matches the filter.
     * @param {berthsFindUniqueArgs} args - Arguments to find a Berths
     * @example
     * // Get one Berths
     * const berths = await prisma.berths.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends berthsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, berthsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'berths'> extends True ? CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>> : CheckSelect<T, Prisma__berthsClient<berths | null >, Prisma__berthsClient<berthsGetPayload<T> | null >>

    /**
     * Find the first Berths that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berthsFindFirstArgs} args - Arguments to find a Berths
     * @example
     * // Get one Berths
     * const berths = await prisma.berths.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends berthsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, berthsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'berths'> extends True ? CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>> : CheckSelect<T, Prisma__berthsClient<berths | null >, Prisma__berthsClient<berthsGetPayload<T> | null >>

    /**
     * Find zero or more Berths that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berthsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Berths
     * const berths = await prisma.berths.findMany()
     * 
     * // Get first 10 Berths
     * const berths = await prisma.berths.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const berthsWithIdOnly = await prisma.berths.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends berthsFindManyArgs>(
      args?: SelectSubset<T, berthsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<berths>>, PrismaPromise<Array<berthsGetPayload<T>>>>

    /**
     * Create a Berths.
     * @param {berthsCreateArgs} args - Arguments to create a Berths.
     * @example
     * // Create one Berths
     * const Berths = await prisma.berths.create({
     *   data: {
     *     // ... data to create a Berths
     *   }
     * })
     * 
    **/
    create<T extends berthsCreateArgs>(
      args: SelectSubset<T, berthsCreateArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Create many Berths.
     *     @param {berthsCreateManyArgs} args - Arguments to create many Berths.
     *     @example
     *     // Create many Berths
     *     const berths = await prisma.berths.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends berthsCreateManyArgs>(
      args?: SelectSubset<T, berthsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Berths.
     * @param {berthsDeleteArgs} args - Arguments to delete one Berths.
     * @example
     * // Delete one Berths
     * const Berths = await prisma.berths.delete({
     *   where: {
     *     // ... filter to delete one Berths
     *   }
     * })
     * 
    **/
    delete<T extends berthsDeleteArgs>(
      args: SelectSubset<T, berthsDeleteArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Update one Berths.
     * @param {berthsUpdateArgs} args - Arguments to update one Berths.
     * @example
     * // Update one Berths
     * const berths = await prisma.berths.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends berthsUpdateArgs>(
      args: SelectSubset<T, berthsUpdateArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Delete zero or more Berths.
     * @param {berthsDeleteManyArgs} args - Arguments to filter Berths to delete.
     * @example
     * // Delete a few Berths
     * const { count } = await prisma.berths.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends berthsDeleteManyArgs>(
      args?: SelectSubset<T, berthsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Berths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berthsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Berths
     * const berths = await prisma.berths.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends berthsUpdateManyArgs>(
      args: SelectSubset<T, berthsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Berths.
     * @param {berthsUpsertArgs} args - Arguments to update or create a Berths.
     * @example
     * // Update or create a Berths
     * const berths = await prisma.berths.upsert({
     *   create: {
     *     // ... data to create a Berths
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Berths we want to update
     *   }
     * })
    **/
    upsert<T extends berthsUpsertArgs>(
      args: SelectSubset<T, berthsUpsertArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Find one Berths that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {berthsFindUniqueOrThrowArgs} args - Arguments to find a Berths
     * @example
     * // Get one Berths
     * const berths = await prisma.berths.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends berthsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, berthsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Find the first Berths that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berthsFindFirstOrThrowArgs} args - Arguments to find a Berths
     * @example
     * // Get one Berths
     * const berths = await prisma.berths.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends berthsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, berthsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__berthsClient<berths>, Prisma__berthsClient<berthsGetPayload<T>>>

    /**
     * Count the number of Berths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {berthsCountArgs} args - Arguments to filter Berths to count.
     * @example
     * // Count the number of Berths
     * const count = await prisma.berths.count({
     *   where: {
     *     // ... the filter for the Berths we want to count
     *   }
     * })
    **/
    count<T extends berthsCountArgs>(
      args?: Subset<T, berthsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BerthsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Berths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BerthsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BerthsAggregateArgs>(args: Subset<T, BerthsAggregateArgs>): PrismaPromise<GetBerthsAggregateType<T>>

    /**
     * Group by Berths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BerthsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BerthsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BerthsGroupByArgs['orderBy'] }
        : { orderBy?: BerthsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BerthsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBerthsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for berths.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__berthsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    ports<T extends portsArgs = {}>(args?: Subset<T, portsArgs>): CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>;

    berth_products<T extends berth_productsFindManyArgs = {}>(args?: Subset<T, berth_productsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<berth_products>>, PrismaPromise<Array<berth_productsGetPayload<T>>>>;

    shipping_ports<T extends ShippingPortFindManyArgs = {}>(args?: Subset<T, ShippingPortFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingPort>>, PrismaPromise<Array<ShippingPortGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * berths base type for findUnique actions
   */
  export type berthsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * Filter, which berths to fetch.
     * 
    **/
    where: berthsWhereUniqueInput
  }

  /**
   * berths: findUnique
   */
  export interface berthsFindUniqueArgs extends berthsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * berths base type for findFirst actions
   */
  export type berthsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * Filter, which berths to fetch.
     * 
    **/
    where?: berthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berths to fetch.
     * 
    **/
    orderBy?: Enumerable<berthsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for berths.
     * 
    **/
    cursor?: berthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berths from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berths.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of berths.
     * 
    **/
    distinct?: Enumerable<BerthsScalarFieldEnum>
  }

  /**
   * berths: findFirst
   */
  export interface berthsFindFirstArgs extends berthsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * berths findMany
   */
  export type berthsFindManyArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * Filter, which berths to fetch.
     * 
    **/
    where?: berthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of berths to fetch.
     * 
    **/
    orderBy?: Enumerable<berthsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing berths.
     * 
    **/
    cursor?: berthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` berths from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` berths.
     * 
    **/
    skip?: number
    distinct?: Enumerable<BerthsScalarFieldEnum>
  }


  /**
   * berths create
   */
  export type berthsCreateArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * The data needed to create a berths.
     * 
    **/
    data: XOR<berthsCreateInput, berthsUncheckedCreateInput>
  }


  /**
   * berths createMany
   */
  export type berthsCreateManyArgs = {
    /**
     * The data used to create many berths.
     * 
    **/
    data: Enumerable<berthsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * berths update
   */
  export type berthsUpdateArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * The data needed to update a berths.
     * 
    **/
    data: XOR<berthsUpdateInput, berthsUncheckedUpdateInput>
    /**
     * Choose, which berths to update.
     * 
    **/
    where: berthsWhereUniqueInput
  }


  /**
   * berths updateMany
   */
  export type berthsUpdateManyArgs = {
    /**
     * The data used to update berths.
     * 
    **/
    data: XOR<berthsUpdateManyMutationInput, berthsUncheckedUpdateManyInput>
    /**
     * Filter which berths to update
     * 
    **/
    where?: berthsWhereInput
  }


  /**
   * berths upsert
   */
  export type berthsUpsertArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * The filter to search for the berths to update in case it exists.
     * 
    **/
    where: berthsWhereUniqueInput
    /**
     * In case the berths found by the `where` argument doesn't exist, create a new berths with this data.
     * 
    **/
    create: XOR<berthsCreateInput, berthsUncheckedCreateInput>
    /**
     * In case the berths was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<berthsUpdateInput, berthsUncheckedUpdateInput>
  }


  /**
   * berths delete
   */
  export type berthsDeleteArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
    /**
     * Filter which berths to delete.
     * 
    **/
    where: berthsWhereUniqueInput
  }


  /**
   * berths deleteMany
   */
  export type berthsDeleteManyArgs = {
    /**
     * Filter which berths to delete
     * 
    **/
    where?: berthsWhereInput
  }


  /**
   * berths: findUniqueOrThrow
   */
  export type berthsFindUniqueOrThrowArgs = berthsFindUniqueArgsBase
      

  /**
   * berths: findFirstOrThrow
   */
  export type berthsFindFirstOrThrowArgs = berthsFindFirstArgsBase
      

  /**
   * berths without action
   */
  export type berthsArgs = {
    /**
     * Select specific fields to fetch from the berths
     * 
    **/
    select?: berthsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: berthsInclude | null
  }



  /**
   * Model ChecklistTemplate
   */


  export type AggregateChecklistTemplate = {
    _count: ChecklistTemplateCountAggregateOutputType | null
    _avg: ChecklistTemplateAvgAggregateOutputType | null
    _sum: ChecklistTemplateSumAggregateOutputType | null
    _min: ChecklistTemplateMinAggregateOutputType | null
    _max: ChecklistTemplateMaxAggregateOutputType | null
  }

  export type ChecklistTemplateAvgAggregateOutputType = {
    id: number | null
    agency_id: number | null
  }

  export type ChecklistTemplateSumAggregateOutputType = {
    id: number | null
    agency_id: number | null
  }

  export type ChecklistTemplateMinAggregateOutputType = {
    id: number | null
    name: string | null
    operation_type: string | null
    agency_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ChecklistTemplateMaxAggregateOutputType = {
    id: number | null
    name: string | null
    operation_type: string | null
    agency_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ChecklistTemplateCountAggregateOutputType = {
    id: number
    name: number
    operation_type: number
    agency_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type ChecklistTemplateAvgAggregateInputType = {
    id?: true
    agency_id?: true
  }

  export type ChecklistTemplateSumAggregateInputType = {
    id?: true
    agency_id?: true
  }

  export type ChecklistTemplateMinAggregateInputType = {
    id?: true
    name?: true
    operation_type?: true
    agency_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ChecklistTemplateMaxAggregateInputType = {
    id?: true
    name?: true
    operation_type?: true
    agency_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ChecklistTemplateCountAggregateInputType = {
    id?: true
    name?: true
    operation_type?: true
    agency_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type ChecklistTemplateAggregateArgs = {
    /**
     * Filter which ChecklistTemplate to aggregate.
     * 
    **/
    where?: ChecklistTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplates to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ChecklistTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplates from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplates.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistTemplates
    **/
    _count?: true | ChecklistTemplateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistTemplateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistTemplateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistTemplateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistTemplateMaxAggregateInputType
  }

  export type GetChecklistTemplateAggregateType<T extends ChecklistTemplateAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistTemplate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistTemplate[P]>
      : GetScalarType<T[P], AggregateChecklistTemplate[P]>
  }




  export type ChecklistTemplateGroupByArgs = {
    where?: ChecklistTemplateWhereInput
    orderBy?: Enumerable<ChecklistTemplateOrderByWithAggregationInput>
    by: Array<ChecklistTemplateScalarFieldEnum>
    having?: ChecklistTemplateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistTemplateCountAggregateInputType | true
    _avg?: ChecklistTemplateAvgAggregateInputType
    _sum?: ChecklistTemplateSumAggregateInputType
    _min?: ChecklistTemplateMinAggregateInputType
    _max?: ChecklistTemplateMaxAggregateInputType
  }


  export type ChecklistTemplateGroupByOutputType = {
    id: number
    name: string
    operation_type: string | null
    agency_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: ChecklistTemplateCountAggregateOutputType | null
    _avg: ChecklistTemplateAvgAggregateOutputType | null
    _sum: ChecklistTemplateSumAggregateOutputType | null
    _min: ChecklistTemplateMinAggregateOutputType | null
    _max: ChecklistTemplateMaxAggregateOutputType | null
  }

  type GetChecklistTemplateGroupByPayload<T extends ChecklistTemplateGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ChecklistTemplateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistTemplateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistTemplateGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistTemplateGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistTemplateSelect = {
    id?: boolean
    name?: boolean
    operation_type?: boolean
    agency_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    items?: boolean | ChecklistTemplateItemFindManyArgs
    agency?: boolean | AgencyArgs
    _count?: boolean | ChecklistTemplateCountOutputTypeArgs
  }

  export type ChecklistTemplateInclude = {
    items?: boolean | ChecklistTemplateItemFindManyArgs
    agency?: boolean | AgencyArgs
    _count?: boolean | ChecklistTemplateCountOutputTypeArgs
  }

  export type ChecklistTemplateGetPayload<
    S extends boolean | null | undefined | ChecklistTemplateArgs,
    U = keyof S
      > = S extends true
        ? ChecklistTemplate
    : S extends undefined
    ? never
    : S extends ChecklistTemplateArgs | ChecklistTemplateFindManyArgs
    ?'include' extends U
    ? ChecklistTemplate  & {
    [P in TrueKeys<S['include']>]:
        P extends 'items' ? Array < ChecklistTemplateItemGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'agency' ? AgencyGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends '_count' ? ChecklistTemplateCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'items' ? Array < ChecklistTemplateItemGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'agency' ? AgencyGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends '_count' ? ChecklistTemplateCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof ChecklistTemplate ? ChecklistTemplate[P] : never
  } 
    : ChecklistTemplate
  : ChecklistTemplate


  type ChecklistTemplateCountArgs = Merge<
    Omit<ChecklistTemplateFindManyArgs, 'select' | 'include'> & {
      select?: ChecklistTemplateCountAggregateInputType | true
    }
  >

  export interface ChecklistTemplateDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ChecklistTemplate that matches the filter.
     * @param {ChecklistTemplateFindUniqueArgs} args - Arguments to find a ChecklistTemplate
     * @example
     * // Get one ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ChecklistTemplateFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ChecklistTemplateFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ChecklistTemplate'> extends True ? CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>> : CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate | null >, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T> | null >>

    /**
     * Find the first ChecklistTemplate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateFindFirstArgs} args - Arguments to find a ChecklistTemplate
     * @example
     * // Get one ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ChecklistTemplateFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ChecklistTemplateFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ChecklistTemplate'> extends True ? CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>> : CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate | null >, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T> | null >>

    /**
     * Find zero or more ChecklistTemplates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistTemplates
     * const checklistTemplates = await prisma.checklistTemplate.findMany()
     * 
     * // Get first 10 ChecklistTemplates
     * const checklistTemplates = await prisma.checklistTemplate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistTemplateWithIdOnly = await prisma.checklistTemplate.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ChecklistTemplateFindManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ChecklistTemplate>>, PrismaPromise<Array<ChecklistTemplateGetPayload<T>>>>

    /**
     * Create a ChecklistTemplate.
     * @param {ChecklistTemplateCreateArgs} args - Arguments to create a ChecklistTemplate.
     * @example
     * // Create one ChecklistTemplate
     * const ChecklistTemplate = await prisma.checklistTemplate.create({
     *   data: {
     *     // ... data to create a ChecklistTemplate
     *   }
     * })
     * 
    **/
    create<T extends ChecklistTemplateCreateArgs>(
      args: SelectSubset<T, ChecklistTemplateCreateArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Create many ChecklistTemplates.
     *     @param {ChecklistTemplateCreateManyArgs} args - Arguments to create many ChecklistTemplates.
     *     @example
     *     // Create many ChecklistTemplates
     *     const checklistTemplate = await prisma.checklistTemplate.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ChecklistTemplateCreateManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistTemplate.
     * @param {ChecklistTemplateDeleteArgs} args - Arguments to delete one ChecklistTemplate.
     * @example
     * // Delete one ChecklistTemplate
     * const ChecklistTemplate = await prisma.checklistTemplate.delete({
     *   where: {
     *     // ... filter to delete one ChecklistTemplate
     *   }
     * })
     * 
    **/
    delete<T extends ChecklistTemplateDeleteArgs>(
      args: SelectSubset<T, ChecklistTemplateDeleteArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Update one ChecklistTemplate.
     * @param {ChecklistTemplateUpdateArgs} args - Arguments to update one ChecklistTemplate.
     * @example
     * // Update one ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ChecklistTemplateUpdateArgs>(
      args: SelectSubset<T, ChecklistTemplateUpdateArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Delete zero or more ChecklistTemplates.
     * @param {ChecklistTemplateDeleteManyArgs} args - Arguments to filter ChecklistTemplates to delete.
     * @example
     * // Delete a few ChecklistTemplates
     * const { count } = await prisma.checklistTemplate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ChecklistTemplateDeleteManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistTemplates
     * const checklistTemplate = await prisma.checklistTemplate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ChecklistTemplateUpdateManyArgs>(
      args: SelectSubset<T, ChecklistTemplateUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistTemplate.
     * @param {ChecklistTemplateUpsertArgs} args - Arguments to update or create a ChecklistTemplate.
     * @example
     * // Update or create a ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.upsert({
     *   create: {
     *     // ... data to create a ChecklistTemplate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistTemplate we want to update
     *   }
     * })
    **/
    upsert<T extends ChecklistTemplateUpsertArgs>(
      args: SelectSubset<T, ChecklistTemplateUpsertArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Find one ChecklistTemplate that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ChecklistTemplateFindUniqueOrThrowArgs} args - Arguments to find a ChecklistTemplate
     * @example
     * // Get one ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ChecklistTemplateFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ChecklistTemplateFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Find the first ChecklistTemplate that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateFindFirstOrThrowArgs} args - Arguments to find a ChecklistTemplate
     * @example
     * // Get one ChecklistTemplate
     * const checklistTemplate = await prisma.checklistTemplate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ChecklistTemplateFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ChecklistTemplateFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate>, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T>>>

    /**
     * Count the number of ChecklistTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateCountArgs} args - Arguments to filter ChecklistTemplates to count.
     * @example
     * // Count the number of ChecklistTemplates
     * const count = await prisma.checklistTemplate.count({
     *   where: {
     *     // ... the filter for the ChecklistTemplates we want to count
     *   }
     * })
    **/
    count<T extends ChecklistTemplateCountArgs>(
      args?: Subset<T, ChecklistTemplateCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistTemplateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistTemplateAggregateArgs>(args: Subset<T, ChecklistTemplateAggregateArgs>): PrismaPromise<GetChecklistTemplateAggregateType<T>>

    /**
     * Group by ChecklistTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistTemplateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistTemplateGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistTemplateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistTemplateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistTemplateGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistTemplate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ChecklistTemplateClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    items<T extends ChecklistTemplateItemFindManyArgs = {}>(args?: Subset<T, ChecklistTemplateItemFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ChecklistTemplateItem>>, PrismaPromise<Array<ChecklistTemplateItemGetPayload<T>>>>;

    agency<T extends AgencyArgs = {}>(args?: Subset<T, AgencyArgs>): CheckSelect<T, Prisma__AgencyClient<Agency | null >, Prisma__AgencyClient<AgencyGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ChecklistTemplate base type for findUnique actions
   */
  export type ChecklistTemplateFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * Filter, which ChecklistTemplate to fetch.
     * 
    **/
    where: ChecklistTemplateWhereUniqueInput
  }

  /**
   * ChecklistTemplate: findUnique
   */
  export interface ChecklistTemplateFindUniqueArgs extends ChecklistTemplateFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ChecklistTemplate base type for findFirst actions
   */
  export type ChecklistTemplateFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * Filter, which ChecklistTemplate to fetch.
     * 
    **/
    where?: ChecklistTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplates to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistTemplates.
     * 
    **/
    cursor?: ChecklistTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplates from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplates.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistTemplates.
     * 
    **/
    distinct?: Enumerable<ChecklistTemplateScalarFieldEnum>
  }

  /**
   * ChecklistTemplate: findFirst
   */
  export interface ChecklistTemplateFindFirstArgs extends ChecklistTemplateFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ChecklistTemplate findMany
   */
  export type ChecklistTemplateFindManyArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * Filter, which ChecklistTemplates to fetch.
     * 
    **/
    where?: ChecklistTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplates to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistTemplates.
     * 
    **/
    cursor?: ChecklistTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplates from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplates.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ChecklistTemplateScalarFieldEnum>
  }


  /**
   * ChecklistTemplate create
   */
  export type ChecklistTemplateCreateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * The data needed to create a ChecklistTemplate.
     * 
    **/
    data: XOR<ChecklistTemplateCreateInput, ChecklistTemplateUncheckedCreateInput>
  }


  /**
   * ChecklistTemplate createMany
   */
  export type ChecklistTemplateCreateManyArgs = {
    /**
     * The data used to create many ChecklistTemplates.
     * 
    **/
    data: Enumerable<ChecklistTemplateCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ChecklistTemplate update
   */
  export type ChecklistTemplateUpdateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * The data needed to update a ChecklistTemplate.
     * 
    **/
    data: XOR<ChecklistTemplateUpdateInput, ChecklistTemplateUncheckedUpdateInput>
    /**
     * Choose, which ChecklistTemplate to update.
     * 
    **/
    where: ChecklistTemplateWhereUniqueInput
  }


  /**
   * ChecklistTemplate updateMany
   */
  export type ChecklistTemplateUpdateManyArgs = {
    /**
     * The data used to update ChecklistTemplates.
     * 
    **/
    data: XOR<ChecklistTemplateUpdateManyMutationInput, ChecklistTemplateUncheckedUpdateManyInput>
    /**
     * Filter which ChecklistTemplates to update
     * 
    **/
    where?: ChecklistTemplateWhereInput
  }


  /**
   * ChecklistTemplate upsert
   */
  export type ChecklistTemplateUpsertArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * The filter to search for the ChecklistTemplate to update in case it exists.
     * 
    **/
    where: ChecklistTemplateWhereUniqueInput
    /**
     * In case the ChecklistTemplate found by the `where` argument doesn't exist, create a new ChecklistTemplate with this data.
     * 
    **/
    create: XOR<ChecklistTemplateCreateInput, ChecklistTemplateUncheckedCreateInput>
    /**
     * In case the ChecklistTemplate was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ChecklistTemplateUpdateInput, ChecklistTemplateUncheckedUpdateInput>
  }


  /**
   * ChecklistTemplate delete
   */
  export type ChecklistTemplateDeleteArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
    /**
     * Filter which ChecklistTemplate to delete.
     * 
    **/
    where: ChecklistTemplateWhereUniqueInput
  }


  /**
   * ChecklistTemplate deleteMany
   */
  export type ChecklistTemplateDeleteManyArgs = {
    /**
     * Filter which ChecklistTemplates to delete
     * 
    **/
    where?: ChecklistTemplateWhereInput
  }


  /**
   * ChecklistTemplate: findUniqueOrThrow
   */
  export type ChecklistTemplateFindUniqueOrThrowArgs = ChecklistTemplateFindUniqueArgsBase
      

  /**
   * ChecklistTemplate: findFirstOrThrow
   */
  export type ChecklistTemplateFindFirstOrThrowArgs = ChecklistTemplateFindFirstArgsBase
      

  /**
   * ChecklistTemplate without action
   */
  export type ChecklistTemplateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplate
     * 
    **/
    select?: ChecklistTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateInclude | null
  }



  /**
   * Model ChecklistTemplateItem
   */


  export type AggregateChecklistTemplateItem = {
    _count: ChecklistTemplateItemCountAggregateOutputType | null
    _avg: ChecklistTemplateItemAvgAggregateOutputType | null
    _sum: ChecklistTemplateItemSumAggregateOutputType | null
    _min: ChecklistTemplateItemMinAggregateOutputType | null
    _max: ChecklistTemplateItemMaxAggregateOutputType | null
  }

  export type ChecklistTemplateItemAvgAggregateOutputType = {
    id: number | null
    working_days: number | null
    checklist_template_id: number | null
  }

  export type ChecklistTemplateItemSumAggregateOutputType = {
    id: number | null
    working_days: number | null
    checklist_template_id: number | null
  }

  export type ChecklistTemplateItemMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: string | null
    working_days: number | null
    checklist_template_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ChecklistTemplateItemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: string | null
    working_days: number | null
    checklist_template_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ChecklistTemplateItemCountAggregateOutputType = {
    id: number
    name: number
    description: number
    type: number
    working_days: number
    checklist_template_id: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ChecklistTemplateItemAvgAggregateInputType = {
    id?: true
    working_days?: true
    checklist_template_id?: true
  }

  export type ChecklistTemplateItemSumAggregateInputType = {
    id?: true
    working_days?: true
    checklist_template_id?: true
  }

  export type ChecklistTemplateItemMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    working_days?: true
    checklist_template_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ChecklistTemplateItemMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    working_days?: true
    checklist_template_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ChecklistTemplateItemCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    working_days?: true
    checklist_template_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ChecklistTemplateItemAggregateArgs = {
    /**
     * Filter which ChecklistTemplateItem to aggregate.
     * 
    **/
    where?: ChecklistTemplateItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplateItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ChecklistTemplateItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplateItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplateItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistTemplateItems
    **/
    _count?: true | ChecklistTemplateItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistTemplateItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistTemplateItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistTemplateItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistTemplateItemMaxAggregateInputType
  }

  export type GetChecklistTemplateItemAggregateType<T extends ChecklistTemplateItemAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistTemplateItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistTemplateItem[P]>
      : GetScalarType<T[P], AggregateChecklistTemplateItem[P]>
  }




  export type ChecklistTemplateItemGroupByArgs = {
    where?: ChecklistTemplateItemWhereInput
    orderBy?: Enumerable<ChecklistTemplateItemOrderByWithAggregationInput>
    by: Array<ChecklistTemplateItemScalarFieldEnum>
    having?: ChecklistTemplateItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistTemplateItemCountAggregateInputType | true
    _avg?: ChecklistTemplateItemAvgAggregateInputType
    _sum?: ChecklistTemplateItemSumAggregateInputType
    _min?: ChecklistTemplateItemMinAggregateInputType
    _max?: ChecklistTemplateItemMaxAggregateInputType
  }


  export type ChecklistTemplateItemGroupByOutputType = {
    id: number
    name: string
    description: string | null
    type: string
    working_days: number | null
    checklist_template_id: number
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ChecklistTemplateItemCountAggregateOutputType | null
    _avg: ChecklistTemplateItemAvgAggregateOutputType | null
    _sum: ChecklistTemplateItemSumAggregateOutputType | null
    _min: ChecklistTemplateItemMinAggregateOutputType | null
    _max: ChecklistTemplateItemMaxAggregateOutputType | null
  }

  type GetChecklistTemplateItemGroupByPayload<T extends ChecklistTemplateItemGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ChecklistTemplateItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistTemplateItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistTemplateItemGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistTemplateItemGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistTemplateItemSelect = {
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    working_days?: boolean
    checklist_template_id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    checklistTemplate?: boolean | ChecklistTemplateArgs
  }

  export type ChecklistTemplateItemInclude = {
    checklistTemplate?: boolean | ChecklistTemplateArgs
  }

  export type ChecklistTemplateItemGetPayload<
    S extends boolean | null | undefined | ChecklistTemplateItemArgs,
    U = keyof S
      > = S extends true
        ? ChecklistTemplateItem
    : S extends undefined
    ? never
    : S extends ChecklistTemplateItemArgs | ChecklistTemplateItemFindManyArgs
    ?'include' extends U
    ? ChecklistTemplateItem  & {
    [P in TrueKeys<S['include']>]:
        P extends 'checklistTemplate' ? ChecklistTemplateGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'checklistTemplate' ? ChecklistTemplateGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof ChecklistTemplateItem ? ChecklistTemplateItem[P] : never
  } 
    : ChecklistTemplateItem
  : ChecklistTemplateItem


  type ChecklistTemplateItemCountArgs = Merge<
    Omit<ChecklistTemplateItemFindManyArgs, 'select' | 'include'> & {
      select?: ChecklistTemplateItemCountAggregateInputType | true
    }
  >

  export interface ChecklistTemplateItemDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ChecklistTemplateItem that matches the filter.
     * @param {ChecklistTemplateItemFindUniqueArgs} args - Arguments to find a ChecklistTemplateItem
     * @example
     * // Get one ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ChecklistTemplateItemFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ChecklistTemplateItemFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ChecklistTemplateItem'> extends True ? CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>> : CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem | null >, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T> | null >>

    /**
     * Find the first ChecklistTemplateItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemFindFirstArgs} args - Arguments to find a ChecklistTemplateItem
     * @example
     * // Get one ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ChecklistTemplateItemFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ChecklistTemplateItemFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ChecklistTemplateItem'> extends True ? CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>> : CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem | null >, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T> | null >>

    /**
     * Find zero or more ChecklistTemplateItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistTemplateItems
     * const checklistTemplateItems = await prisma.checklistTemplateItem.findMany()
     * 
     * // Get first 10 ChecklistTemplateItems
     * const checklistTemplateItems = await prisma.checklistTemplateItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistTemplateItemWithIdOnly = await prisma.checklistTemplateItem.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ChecklistTemplateItemFindManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateItemFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ChecklistTemplateItem>>, PrismaPromise<Array<ChecklistTemplateItemGetPayload<T>>>>

    /**
     * Create a ChecklistTemplateItem.
     * @param {ChecklistTemplateItemCreateArgs} args - Arguments to create a ChecklistTemplateItem.
     * @example
     * // Create one ChecklistTemplateItem
     * const ChecklistTemplateItem = await prisma.checklistTemplateItem.create({
     *   data: {
     *     // ... data to create a ChecklistTemplateItem
     *   }
     * })
     * 
    **/
    create<T extends ChecklistTemplateItemCreateArgs>(
      args: SelectSubset<T, ChecklistTemplateItemCreateArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Create many ChecklistTemplateItems.
     *     @param {ChecklistTemplateItemCreateManyArgs} args - Arguments to create many ChecklistTemplateItems.
     *     @example
     *     // Create many ChecklistTemplateItems
     *     const checklistTemplateItem = await prisma.checklistTemplateItem.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ChecklistTemplateItemCreateManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateItemCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistTemplateItem.
     * @param {ChecklistTemplateItemDeleteArgs} args - Arguments to delete one ChecklistTemplateItem.
     * @example
     * // Delete one ChecklistTemplateItem
     * const ChecklistTemplateItem = await prisma.checklistTemplateItem.delete({
     *   where: {
     *     // ... filter to delete one ChecklistTemplateItem
     *   }
     * })
     * 
    **/
    delete<T extends ChecklistTemplateItemDeleteArgs>(
      args: SelectSubset<T, ChecklistTemplateItemDeleteArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Update one ChecklistTemplateItem.
     * @param {ChecklistTemplateItemUpdateArgs} args - Arguments to update one ChecklistTemplateItem.
     * @example
     * // Update one ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ChecklistTemplateItemUpdateArgs>(
      args: SelectSubset<T, ChecklistTemplateItemUpdateArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Delete zero or more ChecklistTemplateItems.
     * @param {ChecklistTemplateItemDeleteManyArgs} args - Arguments to filter ChecklistTemplateItems to delete.
     * @example
     * // Delete a few ChecklistTemplateItems
     * const { count } = await prisma.checklistTemplateItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ChecklistTemplateItemDeleteManyArgs>(
      args?: SelectSubset<T, ChecklistTemplateItemDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistTemplateItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistTemplateItems
     * const checklistTemplateItem = await prisma.checklistTemplateItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ChecklistTemplateItemUpdateManyArgs>(
      args: SelectSubset<T, ChecklistTemplateItemUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistTemplateItem.
     * @param {ChecklistTemplateItemUpsertArgs} args - Arguments to update or create a ChecklistTemplateItem.
     * @example
     * // Update or create a ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.upsert({
     *   create: {
     *     // ... data to create a ChecklistTemplateItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistTemplateItem we want to update
     *   }
     * })
    **/
    upsert<T extends ChecklistTemplateItemUpsertArgs>(
      args: SelectSubset<T, ChecklistTemplateItemUpsertArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Find one ChecklistTemplateItem that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ChecklistTemplateItemFindUniqueOrThrowArgs} args - Arguments to find a ChecklistTemplateItem
     * @example
     * // Get one ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ChecklistTemplateItemFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ChecklistTemplateItemFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Find the first ChecklistTemplateItem that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemFindFirstOrThrowArgs} args - Arguments to find a ChecklistTemplateItem
     * @example
     * // Get one ChecklistTemplateItem
     * const checklistTemplateItem = await prisma.checklistTemplateItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ChecklistTemplateItemFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ChecklistTemplateItemFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItem>, Prisma__ChecklistTemplateItemClient<ChecklistTemplateItemGetPayload<T>>>

    /**
     * Count the number of ChecklistTemplateItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemCountArgs} args - Arguments to filter ChecklistTemplateItems to count.
     * @example
     * // Count the number of ChecklistTemplateItems
     * const count = await prisma.checklistTemplateItem.count({
     *   where: {
     *     // ... the filter for the ChecklistTemplateItems we want to count
     *   }
     * })
    **/
    count<T extends ChecklistTemplateItemCountArgs>(
      args?: Subset<T, ChecklistTemplateItemCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistTemplateItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistTemplateItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistTemplateItemAggregateArgs>(args: Subset<T, ChecklistTemplateItemAggregateArgs>): PrismaPromise<GetChecklistTemplateItemAggregateType<T>>

    /**
     * Group by ChecklistTemplateItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTemplateItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistTemplateItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistTemplateItemGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistTemplateItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistTemplateItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistTemplateItemGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistTemplateItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ChecklistTemplateItemClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    checklistTemplate<T extends ChecklistTemplateArgs = {}>(args?: Subset<T, ChecklistTemplateArgs>): CheckSelect<T, Prisma__ChecklistTemplateClient<ChecklistTemplate | null >, Prisma__ChecklistTemplateClient<ChecklistTemplateGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ChecklistTemplateItem base type for findUnique actions
   */
  export type ChecklistTemplateItemFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * Filter, which ChecklistTemplateItem to fetch.
     * 
    **/
    where: ChecklistTemplateItemWhereUniqueInput
  }

  /**
   * ChecklistTemplateItem: findUnique
   */
  export interface ChecklistTemplateItemFindUniqueArgs extends ChecklistTemplateItemFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ChecklistTemplateItem base type for findFirst actions
   */
  export type ChecklistTemplateItemFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * Filter, which ChecklistTemplateItem to fetch.
     * 
    **/
    where?: ChecklistTemplateItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplateItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistTemplateItems.
     * 
    **/
    cursor?: ChecklistTemplateItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplateItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplateItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistTemplateItems.
     * 
    **/
    distinct?: Enumerable<ChecklistTemplateItemScalarFieldEnum>
  }

  /**
   * ChecklistTemplateItem: findFirst
   */
  export interface ChecklistTemplateItemFindFirstArgs extends ChecklistTemplateItemFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ChecklistTemplateItem findMany
   */
  export type ChecklistTemplateItemFindManyArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * Filter, which ChecklistTemplateItems to fetch.
     * 
    **/
    where?: ChecklistTemplateItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTemplateItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ChecklistTemplateItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistTemplateItems.
     * 
    **/
    cursor?: ChecklistTemplateItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTemplateItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTemplateItems.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ChecklistTemplateItemScalarFieldEnum>
  }


  /**
   * ChecklistTemplateItem create
   */
  export type ChecklistTemplateItemCreateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * The data needed to create a ChecklistTemplateItem.
     * 
    **/
    data: XOR<ChecklistTemplateItemCreateInput, ChecklistTemplateItemUncheckedCreateInput>
  }


  /**
   * ChecklistTemplateItem createMany
   */
  export type ChecklistTemplateItemCreateManyArgs = {
    /**
     * The data used to create many ChecklistTemplateItems.
     * 
    **/
    data: Enumerable<ChecklistTemplateItemCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ChecklistTemplateItem update
   */
  export type ChecklistTemplateItemUpdateArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * The data needed to update a ChecklistTemplateItem.
     * 
    **/
    data: XOR<ChecklistTemplateItemUpdateInput, ChecklistTemplateItemUncheckedUpdateInput>
    /**
     * Choose, which ChecklistTemplateItem to update.
     * 
    **/
    where: ChecklistTemplateItemWhereUniqueInput
  }


  /**
   * ChecklistTemplateItem updateMany
   */
  export type ChecklistTemplateItemUpdateManyArgs = {
    /**
     * The data used to update ChecklistTemplateItems.
     * 
    **/
    data: XOR<ChecklistTemplateItemUpdateManyMutationInput, ChecklistTemplateItemUncheckedUpdateManyInput>
    /**
     * Filter which ChecklistTemplateItems to update
     * 
    **/
    where?: ChecklistTemplateItemWhereInput
  }


  /**
   * ChecklistTemplateItem upsert
   */
  export type ChecklistTemplateItemUpsertArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * The filter to search for the ChecklistTemplateItem to update in case it exists.
     * 
    **/
    where: ChecklistTemplateItemWhereUniqueInput
    /**
     * In case the ChecklistTemplateItem found by the `where` argument doesn't exist, create a new ChecklistTemplateItem with this data.
     * 
    **/
    create: XOR<ChecklistTemplateItemCreateInput, ChecklistTemplateItemUncheckedCreateInput>
    /**
     * In case the ChecklistTemplateItem was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ChecklistTemplateItemUpdateInput, ChecklistTemplateItemUncheckedUpdateInput>
  }


  /**
   * ChecklistTemplateItem delete
   */
  export type ChecklistTemplateItemDeleteArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
    /**
     * Filter which ChecklistTemplateItem to delete.
     * 
    **/
    where: ChecklistTemplateItemWhereUniqueInput
  }


  /**
   * ChecklistTemplateItem deleteMany
   */
  export type ChecklistTemplateItemDeleteManyArgs = {
    /**
     * Filter which ChecklistTemplateItems to delete
     * 
    **/
    where?: ChecklistTemplateItemWhereInput
  }


  /**
   * ChecklistTemplateItem: findUniqueOrThrow
   */
  export type ChecklistTemplateItemFindUniqueOrThrowArgs = ChecklistTemplateItemFindUniqueArgsBase
      

  /**
   * ChecklistTemplateItem: findFirstOrThrow
   */
  export type ChecklistTemplateItemFindFirstOrThrowArgs = ChecklistTemplateItemFindFirstArgsBase
      

  /**
   * ChecklistTemplateItem without action
   */
  export type ChecklistTemplateItemArgs = {
    /**
     * Select specific fields to fetch from the ChecklistTemplateItem
     * 
    **/
    select?: ChecklistTemplateItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ChecklistTemplateItemInclude | null
  }



  /**
   * Model ShippingChecklistItem
   */


  export type AggregateShippingChecklistItem = {
    _count: ShippingChecklistItemCountAggregateOutputType | null
    _avg: ShippingChecklistItemAvgAggregateOutputType | null
    _sum: ShippingChecklistItemSumAggregateOutputType | null
    _min: ShippingChecklistItemMinAggregateOutputType | null
    _max: ShippingChecklistItemMaxAggregateOutputType | null
  }

  export type ShippingChecklistItemAvgAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    updated_by_user_id: number | null
  }

  export type ShippingChecklistItemSumAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    updated_by_user_id: number | null
  }

  export type ShippingChecklistItemMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: string | null
    deadline_date: Date | null
    commentary: string | null
    is_done: boolean | null
    shipping_id: number | null
    updated_by_user_id: number | null
    created_at: Date | null
    updated_ut: Date | null
    deleted_at: Date | null
  }

  export type ShippingChecklistItemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: string | null
    deadline_date: Date | null
    commentary: string | null
    is_done: boolean | null
    shipping_id: number | null
    updated_by_user_id: number | null
    created_at: Date | null
    updated_ut: Date | null
    deleted_at: Date | null
  }

  export type ShippingChecklistItemCountAggregateOutputType = {
    id: number
    name: number
    description: number
    type: number
    deadline_date: number
    commentary: number
    is_done: number
    shipping_id: number
    updated_by_user_id: number
    created_at: number
    updated_ut: number
    deleted_at: number
    _all: number
  }


  export type ShippingChecklistItemAvgAggregateInputType = {
    id?: true
    shipping_id?: true
    updated_by_user_id?: true
  }

  export type ShippingChecklistItemSumAggregateInputType = {
    id?: true
    shipping_id?: true
    updated_by_user_id?: true
  }

  export type ShippingChecklistItemMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    deadline_date?: true
    commentary?: true
    is_done?: true
    shipping_id?: true
    updated_by_user_id?: true
    created_at?: true
    updated_ut?: true
    deleted_at?: true
  }

  export type ShippingChecklistItemMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    deadline_date?: true
    commentary?: true
    is_done?: true
    shipping_id?: true
    updated_by_user_id?: true
    created_at?: true
    updated_ut?: true
    deleted_at?: true
  }

  export type ShippingChecklistItemCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    deadline_date?: true
    commentary?: true
    is_done?: true
    shipping_id?: true
    updated_by_user_id?: true
    created_at?: true
    updated_ut?: true
    deleted_at?: true
    _all?: true
  }

  export type ShippingChecklistItemAggregateArgs = {
    /**
     * Filter which ShippingChecklistItem to aggregate.
     * 
    **/
    where?: ShippingChecklistItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingChecklistItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingChecklistItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ShippingChecklistItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingChecklistItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingChecklistItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShippingChecklistItems
    **/
    _count?: true | ShippingChecklistItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingChecklistItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingChecklistItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingChecklistItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingChecklistItemMaxAggregateInputType
  }

  export type GetShippingChecklistItemAggregateType<T extends ShippingChecklistItemAggregateArgs> = {
        [P in keyof T & keyof AggregateShippingChecklistItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShippingChecklistItem[P]>
      : GetScalarType<T[P], AggregateShippingChecklistItem[P]>
  }




  export type ShippingChecklistItemGroupByArgs = {
    where?: ShippingChecklistItemWhereInput
    orderBy?: Enumerable<ShippingChecklistItemOrderByWithAggregationInput>
    by: Array<ShippingChecklistItemScalarFieldEnum>
    having?: ShippingChecklistItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingChecklistItemCountAggregateInputType | true
    _avg?: ShippingChecklistItemAvgAggregateInputType
    _sum?: ShippingChecklistItemSumAggregateInputType
    _min?: ShippingChecklistItemMinAggregateInputType
    _max?: ShippingChecklistItemMaxAggregateInputType
  }


  export type ShippingChecklistItemGroupByOutputType = {
    id: number
    name: string
    description: string | null
    type: string
    deadline_date: Date | null
    commentary: string | null
    is_done: boolean
    shipping_id: number
    updated_by_user_id: number | null
    created_at: Date
    updated_ut: Date
    deleted_at: Date | null
    _count: ShippingChecklistItemCountAggregateOutputType | null
    _avg: ShippingChecklistItemAvgAggregateOutputType | null
    _sum: ShippingChecklistItemSumAggregateOutputType | null
    _min: ShippingChecklistItemMinAggregateOutputType | null
    _max: ShippingChecklistItemMaxAggregateOutputType | null
  }

  type GetShippingChecklistItemGroupByPayload<T extends ShippingChecklistItemGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ShippingChecklistItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingChecklistItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingChecklistItemGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingChecklistItemGroupByOutputType[P]>
        }
      >
    >


  export type ShippingChecklistItemSelect = {
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    deadline_date?: boolean
    commentary?: boolean
    is_done?: boolean
    shipping_id?: boolean
    updated_by_user_id?: boolean
    created_at?: boolean
    updated_ut?: boolean
    deleted_at?: boolean
    shipping?: boolean | ShippingArgs
    user?: boolean | usersArgs
  }

  export type ShippingChecklistItemInclude = {
    shipping?: boolean | ShippingArgs
    user?: boolean | usersArgs
  }

  export type ShippingChecklistItemGetPayload<
    S extends boolean | null | undefined | ShippingChecklistItemArgs,
    U = keyof S
      > = S extends true
        ? ShippingChecklistItem
    : S extends undefined
    ? never
    : S extends ShippingChecklistItemArgs | ShippingChecklistItemFindManyArgs
    ?'include' extends U
    ? ShippingChecklistItem  & {
    [P in TrueKeys<S['include']>]:
        P extends 'shipping' ? ShippingGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'user' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'shipping' ? ShippingGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'user' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof ShippingChecklistItem ? ShippingChecklistItem[P] : never
  } 
    : ShippingChecklistItem
  : ShippingChecklistItem


  type ShippingChecklistItemCountArgs = Merge<
    Omit<ShippingChecklistItemFindManyArgs, 'select' | 'include'> & {
      select?: ShippingChecklistItemCountAggregateInputType | true
    }
  >

  export interface ShippingChecklistItemDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ShippingChecklistItem that matches the filter.
     * @param {ShippingChecklistItemFindUniqueArgs} args - Arguments to find a ShippingChecklistItem
     * @example
     * // Get one ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShippingChecklistItemFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ShippingChecklistItemFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ShippingChecklistItem'> extends True ? CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>> : CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem | null >, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T> | null >>

    /**
     * Find the first ShippingChecklistItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemFindFirstArgs} args - Arguments to find a ShippingChecklistItem
     * @example
     * // Get one ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShippingChecklistItemFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ShippingChecklistItemFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ShippingChecklistItem'> extends True ? CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>> : CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem | null >, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T> | null >>

    /**
     * Find zero or more ShippingChecklistItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShippingChecklistItems
     * const shippingChecklistItems = await prisma.shippingChecklistItem.findMany()
     * 
     * // Get first 10 ShippingChecklistItems
     * const shippingChecklistItems = await prisma.shippingChecklistItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingChecklistItemWithIdOnly = await prisma.shippingChecklistItem.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShippingChecklistItemFindManyArgs>(
      args?: SelectSubset<T, ShippingChecklistItemFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ShippingChecklistItem>>, PrismaPromise<Array<ShippingChecklistItemGetPayload<T>>>>

    /**
     * Create a ShippingChecklistItem.
     * @param {ShippingChecklistItemCreateArgs} args - Arguments to create a ShippingChecklistItem.
     * @example
     * // Create one ShippingChecklistItem
     * const ShippingChecklistItem = await prisma.shippingChecklistItem.create({
     *   data: {
     *     // ... data to create a ShippingChecklistItem
     *   }
     * })
     * 
    **/
    create<T extends ShippingChecklistItemCreateArgs>(
      args: SelectSubset<T, ShippingChecklistItemCreateArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Create many ShippingChecklistItems.
     *     @param {ShippingChecklistItemCreateManyArgs} args - Arguments to create many ShippingChecklistItems.
     *     @example
     *     // Create many ShippingChecklistItems
     *     const shippingChecklistItem = await prisma.shippingChecklistItem.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ShippingChecklistItemCreateManyArgs>(
      args?: SelectSubset<T, ShippingChecklistItemCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ShippingChecklistItem.
     * @param {ShippingChecklistItemDeleteArgs} args - Arguments to delete one ShippingChecklistItem.
     * @example
     * // Delete one ShippingChecklistItem
     * const ShippingChecklistItem = await prisma.shippingChecklistItem.delete({
     *   where: {
     *     // ... filter to delete one ShippingChecklistItem
     *   }
     * })
     * 
    **/
    delete<T extends ShippingChecklistItemDeleteArgs>(
      args: SelectSubset<T, ShippingChecklistItemDeleteArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Update one ShippingChecklistItem.
     * @param {ShippingChecklistItemUpdateArgs} args - Arguments to update one ShippingChecklistItem.
     * @example
     * // Update one ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShippingChecklistItemUpdateArgs>(
      args: SelectSubset<T, ShippingChecklistItemUpdateArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Delete zero or more ShippingChecklistItems.
     * @param {ShippingChecklistItemDeleteManyArgs} args - Arguments to filter ShippingChecklistItems to delete.
     * @example
     * // Delete a few ShippingChecklistItems
     * const { count } = await prisma.shippingChecklistItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShippingChecklistItemDeleteManyArgs>(
      args?: SelectSubset<T, ShippingChecklistItemDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingChecklistItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShippingChecklistItems
     * const shippingChecklistItem = await prisma.shippingChecklistItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShippingChecklistItemUpdateManyArgs>(
      args: SelectSubset<T, ShippingChecklistItemUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ShippingChecklistItem.
     * @param {ShippingChecklistItemUpsertArgs} args - Arguments to update or create a ShippingChecklistItem.
     * @example
     * // Update or create a ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.upsert({
     *   create: {
     *     // ... data to create a ShippingChecklistItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShippingChecklistItem we want to update
     *   }
     * })
    **/
    upsert<T extends ShippingChecklistItemUpsertArgs>(
      args: SelectSubset<T, ShippingChecklistItemUpsertArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Find one ShippingChecklistItem that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ShippingChecklistItemFindUniqueOrThrowArgs} args - Arguments to find a ShippingChecklistItem
     * @example
     * // Get one ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ShippingChecklistItemFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ShippingChecklistItemFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Find the first ShippingChecklistItem that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemFindFirstOrThrowArgs} args - Arguments to find a ShippingChecklistItem
     * @example
     * // Get one ShippingChecklistItem
     * const shippingChecklistItem = await prisma.shippingChecklistItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ShippingChecklistItemFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ShippingChecklistItemFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingChecklistItemClient<ShippingChecklistItem>, Prisma__ShippingChecklistItemClient<ShippingChecklistItemGetPayload<T>>>

    /**
     * Count the number of ShippingChecklistItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemCountArgs} args - Arguments to filter ShippingChecklistItems to count.
     * @example
     * // Count the number of ShippingChecklistItems
     * const count = await prisma.shippingChecklistItem.count({
     *   where: {
     *     // ... the filter for the ShippingChecklistItems we want to count
     *   }
     * })
    **/
    count<T extends ShippingChecklistItemCountArgs>(
      args?: Subset<T, ShippingChecklistItemCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingChecklistItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShippingChecklistItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingChecklistItemAggregateArgs>(args: Subset<T, ShippingChecklistItemAggregateArgs>): PrismaPromise<GetShippingChecklistItemAggregateType<T>>

    /**
     * Group by ShippingChecklistItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChecklistItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingChecklistItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingChecklistItemGroupByArgs['orderBy'] }
        : { orderBy?: ShippingChecklistItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingChecklistItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingChecklistItemGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ShippingChecklistItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ShippingChecklistItemClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shipping<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    user<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ShippingChecklistItem base type for findUnique actions
   */
  export type ShippingChecklistItemFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * Filter, which ShippingChecklistItem to fetch.
     * 
    **/
    where: ShippingChecklistItemWhereUniqueInput
  }

  /**
   * ShippingChecklistItem: findUnique
   */
  export interface ShippingChecklistItemFindUniqueArgs extends ShippingChecklistItemFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShippingChecklistItem base type for findFirst actions
   */
  export type ShippingChecklistItemFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * Filter, which ShippingChecklistItem to fetch.
     * 
    **/
    where?: ShippingChecklistItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingChecklistItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingChecklistItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingChecklistItems.
     * 
    **/
    cursor?: ShippingChecklistItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingChecklistItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingChecklistItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingChecklistItems.
     * 
    **/
    distinct?: Enumerable<ShippingChecklistItemScalarFieldEnum>
  }

  /**
   * ShippingChecklistItem: findFirst
   */
  export interface ShippingChecklistItemFindFirstArgs extends ShippingChecklistItemFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShippingChecklistItem findMany
   */
  export type ShippingChecklistItemFindManyArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * Filter, which ShippingChecklistItems to fetch.
     * 
    **/
    where?: ShippingChecklistItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingChecklistItems to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingChecklistItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShippingChecklistItems.
     * 
    **/
    cursor?: ShippingChecklistItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingChecklistItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingChecklistItems.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ShippingChecklistItemScalarFieldEnum>
  }


  /**
   * ShippingChecklistItem create
   */
  export type ShippingChecklistItemCreateArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * The data needed to create a ShippingChecklistItem.
     * 
    **/
    data: XOR<ShippingChecklistItemCreateInput, ShippingChecklistItemUncheckedCreateInput>
  }


  /**
   * ShippingChecklistItem createMany
   */
  export type ShippingChecklistItemCreateManyArgs = {
    /**
     * The data used to create many ShippingChecklistItems.
     * 
    **/
    data: Enumerable<ShippingChecklistItemCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ShippingChecklistItem update
   */
  export type ShippingChecklistItemUpdateArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * The data needed to update a ShippingChecklistItem.
     * 
    **/
    data: XOR<ShippingChecklistItemUpdateInput, ShippingChecklistItemUncheckedUpdateInput>
    /**
     * Choose, which ShippingChecklistItem to update.
     * 
    **/
    where: ShippingChecklistItemWhereUniqueInput
  }


  /**
   * ShippingChecklistItem updateMany
   */
  export type ShippingChecklistItemUpdateManyArgs = {
    /**
     * The data used to update ShippingChecklistItems.
     * 
    **/
    data: XOR<ShippingChecklistItemUpdateManyMutationInput, ShippingChecklistItemUncheckedUpdateManyInput>
    /**
     * Filter which ShippingChecklistItems to update
     * 
    **/
    where?: ShippingChecklistItemWhereInput
  }


  /**
   * ShippingChecklistItem upsert
   */
  export type ShippingChecklistItemUpsertArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * The filter to search for the ShippingChecklistItem to update in case it exists.
     * 
    **/
    where: ShippingChecklistItemWhereUniqueInput
    /**
     * In case the ShippingChecklistItem found by the `where` argument doesn't exist, create a new ShippingChecklistItem with this data.
     * 
    **/
    create: XOR<ShippingChecklistItemCreateInput, ShippingChecklistItemUncheckedCreateInput>
    /**
     * In case the ShippingChecklistItem was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ShippingChecklistItemUpdateInput, ShippingChecklistItemUncheckedUpdateInput>
  }


  /**
   * ShippingChecklistItem delete
   */
  export type ShippingChecklistItemDeleteArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
    /**
     * Filter which ShippingChecklistItem to delete.
     * 
    **/
    where: ShippingChecklistItemWhereUniqueInput
  }


  /**
   * ShippingChecklistItem deleteMany
   */
  export type ShippingChecklistItemDeleteManyArgs = {
    /**
     * Filter which ShippingChecklistItems to delete
     * 
    **/
    where?: ShippingChecklistItemWhereInput
  }


  /**
   * ShippingChecklistItem: findUniqueOrThrow
   */
  export type ShippingChecklistItemFindUniqueOrThrowArgs = ShippingChecklistItemFindUniqueArgsBase
      

  /**
   * ShippingChecklistItem: findFirstOrThrow
   */
  export type ShippingChecklistItemFindFirstOrThrowArgs = ShippingChecklistItemFindFirstArgsBase
      

  /**
   * ShippingChecklistItem without action
   */
  export type ShippingChecklistItemArgs = {
    /**
     * Select specific fields to fetch from the ShippingChecklistItem
     * 
    **/
    select?: ShippingChecklistItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingChecklistItemInclude | null
  }



  /**
   * Model Country
   */


  export type AggregateCountry = {
    _count: CountryCountAggregateOutputType | null
    _avg: CountryAvgAggregateOutputType | null
    _sum: CountrySumAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  export type CountryAvgAggregateOutputType = {
    id: number | null
  }

  export type CountrySumAggregateOutputType = {
    id: number | null
  }

  export type CountryMinAggregateOutputType = {
    id: number | null
    name: string | null
    flag: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type CountryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    flag: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type CountryCountAggregateOutputType = {
    id: number
    name: number
    flag: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type CountryAvgAggregateInputType = {
    id?: true
  }

  export type CountrySumAggregateInputType = {
    id?: true
  }

  export type CountryMinAggregateInputType = {
    id?: true
    name?: true
    flag?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type CountryMaxAggregateInputType = {
    id?: true
    name?: true
    flag?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type CountryCountAggregateInputType = {
    id?: true
    name?: true
    flag?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type CountryAggregateArgs = {
    /**
     * Filter which Country to aggregate.
     * 
    **/
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     * 
    **/
    orderBy?: Enumerable<CountryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Countries
    **/
    _count?: true | CountryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CountryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CountrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CountryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CountryMaxAggregateInputType
  }

  export type GetCountryAggregateType<T extends CountryAggregateArgs> = {
        [P in keyof T & keyof AggregateCountry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCountry[P]>
      : GetScalarType<T[P], AggregateCountry[P]>
  }




  export type CountryGroupByArgs = {
    where?: CountryWhereInput
    orderBy?: Enumerable<CountryOrderByWithAggregationInput>
    by: Array<CountryScalarFieldEnum>
    having?: CountryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CountryCountAggregateInputType | true
    _avg?: CountryAvgAggregateInputType
    _sum?: CountrySumAggregateInputType
    _min?: CountryMinAggregateInputType
    _max?: CountryMaxAggregateInputType
  }


  export type CountryGroupByOutputType = {
    id: number
    name: string | null
    flag: string | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: CountryCountAggregateOutputType | null
    _avg: CountryAvgAggregateOutputType | null
    _sum: CountrySumAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  type GetCountryGroupByPayload<T extends CountryGroupByArgs> = PrismaPromise<
    Array<
      PickArray<CountryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CountryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CountryGroupByOutputType[P]>
            : GetScalarType<T[P], CountryGroupByOutputType[P]>
        }
      >
    >


  export type CountrySelect = {
    id?: boolean
    name?: boolean
    flag?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    ports?: boolean | portsFindManyArgs
    vessels?: boolean | VesselFindManyArgs
    agency?: boolean | AgencyFindManyArgs
    _count?: boolean | CountryCountOutputTypeArgs
  }

  export type CountryInclude = {
    ports?: boolean | portsFindManyArgs
    vessels?: boolean | VesselFindManyArgs
    agency?: boolean | AgencyFindManyArgs
    _count?: boolean | CountryCountOutputTypeArgs
  }

  export type CountryGetPayload<
    S extends boolean | null | undefined | CountryArgs,
    U = keyof S
      > = S extends true
        ? Country
    : S extends undefined
    ? never
    : S extends CountryArgs | CountryFindManyArgs
    ?'include' extends U
    ? Country  & {
    [P in TrueKeys<S['include']>]:
        P extends 'ports' ? Array < portsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'vessels' ? Array < VesselGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'agency' ? Array < AgencyGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? CountryCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'ports' ? Array < portsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'vessels' ? Array < VesselGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'agency' ? Array < AgencyGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? CountryCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof Country ? Country[P] : never
  } 
    : Country
  : Country


  type CountryCountArgs = Merge<
    Omit<CountryFindManyArgs, 'select' | 'include'> & {
      select?: CountryCountAggregateInputType | true
    }
  >

  export interface CountryDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Country that matches the filter.
     * @param {CountryFindUniqueArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CountryFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, CountryFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Country'> extends True ? CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>> : CheckSelect<T, Prisma__CountryClient<Country | null >, Prisma__CountryClient<CountryGetPayload<T> | null >>

    /**
     * Find the first Country that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindFirstArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CountryFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, CountryFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Country'> extends True ? CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>> : CheckSelect<T, Prisma__CountryClient<Country | null >, Prisma__CountryClient<CountryGetPayload<T> | null >>

    /**
     * Find zero or more Countries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Countries
     * const countries = await prisma.country.findMany()
     * 
     * // Get first 10 Countries
     * const countries = await prisma.country.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const countryWithIdOnly = await prisma.country.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CountryFindManyArgs>(
      args?: SelectSubset<T, CountryFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Country>>, PrismaPromise<Array<CountryGetPayload<T>>>>

    /**
     * Create a Country.
     * @param {CountryCreateArgs} args - Arguments to create a Country.
     * @example
     * // Create one Country
     * const Country = await prisma.country.create({
     *   data: {
     *     // ... data to create a Country
     *   }
     * })
     * 
    **/
    create<T extends CountryCreateArgs>(
      args: SelectSubset<T, CountryCreateArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Create many Countries.
     *     @param {CountryCreateManyArgs} args - Arguments to create many Countries.
     *     @example
     *     // Create many Countries
     *     const country = await prisma.country.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CountryCreateManyArgs>(
      args?: SelectSubset<T, CountryCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Country.
     * @param {CountryDeleteArgs} args - Arguments to delete one Country.
     * @example
     * // Delete one Country
     * const Country = await prisma.country.delete({
     *   where: {
     *     // ... filter to delete one Country
     *   }
     * })
     * 
    **/
    delete<T extends CountryDeleteArgs>(
      args: SelectSubset<T, CountryDeleteArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Update one Country.
     * @param {CountryUpdateArgs} args - Arguments to update one Country.
     * @example
     * // Update one Country
     * const country = await prisma.country.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CountryUpdateArgs>(
      args: SelectSubset<T, CountryUpdateArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Delete zero or more Countries.
     * @param {CountryDeleteManyArgs} args - Arguments to filter Countries to delete.
     * @example
     * // Delete a few Countries
     * const { count } = await prisma.country.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CountryDeleteManyArgs>(
      args?: SelectSubset<T, CountryDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CountryUpdateManyArgs>(
      args: SelectSubset<T, CountryUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Country.
     * @param {CountryUpsertArgs} args - Arguments to update or create a Country.
     * @example
     * // Update or create a Country
     * const country = await prisma.country.upsert({
     *   create: {
     *     // ... data to create a Country
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Country we want to update
     *   }
     * })
    **/
    upsert<T extends CountryUpsertArgs>(
      args: SelectSubset<T, CountryUpsertArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Find one Country that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {CountryFindUniqueOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CountryFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, CountryFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Find the first Country that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindFirstOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CountryFindFirstOrThrowArgs>(
      args?: SelectSubset<T, CountryFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__CountryClient<Country>, Prisma__CountryClient<CountryGetPayload<T>>>

    /**
     * Count the number of Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryCountArgs} args - Arguments to filter Countries to count.
     * @example
     * // Count the number of Countries
     * const count = await prisma.country.count({
     *   where: {
     *     // ... the filter for the Countries we want to count
     *   }
     * })
    **/
    count<T extends CountryCountArgs>(
      args?: Subset<T, CountryCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CountryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CountryAggregateArgs>(args: Subset<T, CountryAggregateArgs>): PrismaPromise<GetCountryAggregateType<T>>

    /**
     * Group by Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CountryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CountryGroupByArgs['orderBy'] }
        : { orderBy?: CountryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CountryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCountryGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Country.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CountryClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    ports<T extends portsFindManyArgs = {}>(args?: Subset<T, portsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ports>>, PrismaPromise<Array<portsGetPayload<T>>>>;

    vessels<T extends VesselFindManyArgs = {}>(args?: Subset<T, VesselFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Vessel>>, PrismaPromise<Array<VesselGetPayload<T>>>>;

    agency<T extends AgencyFindManyArgs = {}>(args?: Subset<T, AgencyFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Agency>>, PrismaPromise<Array<AgencyGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Country base type for findUnique actions
   */
  export type CountryFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * Filter, which Country to fetch.
     * 
    **/
    where: CountryWhereUniqueInput
  }

  /**
   * Country: findUnique
   */
  export interface CountryFindUniqueArgs extends CountryFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Country base type for findFirst actions
   */
  export type CountryFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * Filter, which Country to fetch.
     * 
    **/
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     * 
    **/
    orderBy?: Enumerable<CountryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Countries.
     * 
    **/
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Countries.
     * 
    **/
    distinct?: Enumerable<CountryScalarFieldEnum>
  }

  /**
   * Country: findFirst
   */
  export interface CountryFindFirstArgs extends CountryFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Country findMany
   */
  export type CountryFindManyArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * Filter, which Countries to fetch.
     * 
    **/
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     * 
    **/
    orderBy?: Enumerable<CountryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Countries.
     * 
    **/
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     * 
    **/
    skip?: number
    distinct?: Enumerable<CountryScalarFieldEnum>
  }


  /**
   * Country create
   */
  export type CountryCreateArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * The data needed to create a Country.
     * 
    **/
    data: XOR<CountryCreateInput, CountryUncheckedCreateInput>
  }


  /**
   * Country createMany
   */
  export type CountryCreateManyArgs = {
    /**
     * The data used to create many Countries.
     * 
    **/
    data: Enumerable<CountryCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Country update
   */
  export type CountryUpdateArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * The data needed to update a Country.
     * 
    **/
    data: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
    /**
     * Choose, which Country to update.
     * 
    **/
    where: CountryWhereUniqueInput
  }


  /**
   * Country updateMany
   */
  export type CountryUpdateManyArgs = {
    /**
     * The data used to update Countries.
     * 
    **/
    data: XOR<CountryUpdateManyMutationInput, CountryUncheckedUpdateManyInput>
    /**
     * Filter which Countries to update
     * 
    **/
    where?: CountryWhereInput
  }


  /**
   * Country upsert
   */
  export type CountryUpsertArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * The filter to search for the Country to update in case it exists.
     * 
    **/
    where: CountryWhereUniqueInput
    /**
     * In case the Country found by the `where` argument doesn't exist, create a new Country with this data.
     * 
    **/
    create: XOR<CountryCreateInput, CountryUncheckedCreateInput>
    /**
     * In case the Country was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
  }


  /**
   * Country delete
   */
  export type CountryDeleteArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
    /**
     * Filter which Country to delete.
     * 
    **/
    where: CountryWhereUniqueInput
  }


  /**
   * Country deleteMany
   */
  export type CountryDeleteManyArgs = {
    /**
     * Filter which Countries to delete
     * 
    **/
    where?: CountryWhereInput
  }


  /**
   * Country: findUniqueOrThrow
   */
  export type CountryFindUniqueOrThrowArgs = CountryFindUniqueArgsBase
      

  /**
   * Country: findFirstOrThrow
   */
  export type CountryFindFirstOrThrowArgs = CountryFindFirstArgsBase
      

  /**
   * Country without action
   */
  export type CountryArgs = {
    /**
     * Select specific fields to fetch from the Country
     * 
    **/
    select?: CountrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: CountryInclude | null
  }



  /**
   * Model migrations
   */


  export type AggregateMigrations = {
    _count: MigrationsCountAggregateOutputType | null
    _avg: MigrationsAvgAggregateOutputType | null
    _sum: MigrationsSumAggregateOutputType | null
    _min: MigrationsMinAggregateOutputType | null
    _max: MigrationsMaxAggregateOutputType | null
  }

  export type MigrationsAvgAggregateOutputType = {
    id: number | null
    timestamp: number | null
  }

  export type MigrationsSumAggregateOutputType = {
    id: number | null
    timestamp: number | null
  }

  export type MigrationsMinAggregateOutputType = {
    id: number | null
    timestamp: number | null
    name: string | null
  }

  export type MigrationsMaxAggregateOutputType = {
    id: number | null
    timestamp: number | null
    name: string | null
  }

  export type MigrationsCountAggregateOutputType = {
    id: number
    timestamp: number
    name: number
    _all: number
  }


  export type MigrationsAvgAggregateInputType = {
    id?: true
    timestamp?: true
  }

  export type MigrationsSumAggregateInputType = {
    id?: true
    timestamp?: true
  }

  export type MigrationsMinAggregateInputType = {
    id?: true
    timestamp?: true
    name?: true
  }

  export type MigrationsMaxAggregateInputType = {
    id?: true
    timestamp?: true
    name?: true
  }

  export type MigrationsCountAggregateInputType = {
    id?: true
    timestamp?: true
    name?: true
    _all?: true
  }

  export type MigrationsAggregateArgs = {
    /**
     * Filter which migrations to aggregate.
     * 
    **/
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     * 
    **/
    orderBy?: Enumerable<migrationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned migrations
    **/
    _count?: true | MigrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MigrationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MigrationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MigrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MigrationsMaxAggregateInputType
  }

  export type GetMigrationsAggregateType<T extends MigrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateMigrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMigrations[P]>
      : GetScalarType<T[P], AggregateMigrations[P]>
  }




  export type MigrationsGroupByArgs = {
    where?: migrationsWhereInput
    orderBy?: Enumerable<migrationsOrderByWithAggregationInput>
    by: Array<MigrationsScalarFieldEnum>
    having?: migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MigrationsCountAggregateInputType | true
    _avg?: MigrationsAvgAggregateInputType
    _sum?: MigrationsSumAggregateInputType
    _min?: MigrationsMinAggregateInputType
    _max?: MigrationsMaxAggregateInputType
  }


  export type MigrationsGroupByOutputType = {
    id: number
    timestamp: number
    name: string
    _count: MigrationsCountAggregateOutputType | null
    _avg: MigrationsAvgAggregateOutputType | null
    _sum: MigrationsSumAggregateOutputType | null
    _min: MigrationsMinAggregateOutputType | null
    _max: MigrationsMaxAggregateOutputType | null
  }

  type GetMigrationsGroupByPayload<T extends MigrationsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<MigrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MigrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MigrationsGroupByOutputType[P]>
            : GetScalarType<T[P], MigrationsGroupByOutputType[P]>
        }
      >
    >


  export type migrationsSelect = {
    id?: boolean
    timestamp?: boolean
    name?: boolean
  }

  export type migrationsGetPayload<
    S extends boolean | null | undefined | migrationsArgs,
    U = keyof S
      > = S extends true
        ? migrations
    : S extends undefined
    ? never
    : S extends migrationsArgs | migrationsFindManyArgs
    ?'include' extends U
    ? migrations 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof migrations ? migrations[P] : never
  } 
    : migrations
  : migrations


  type migrationsCountArgs = Merge<
    Omit<migrationsFindManyArgs, 'select' | 'include'> & {
      select?: MigrationsCountAggregateInputType | true
    }
  >

  export interface migrationsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Migrations that matches the filter.
     * @param {migrationsFindUniqueArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends migrationsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, migrationsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'migrations'> extends True ? CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>> : CheckSelect<T, Prisma__migrationsClient<migrations | null >, Prisma__migrationsClient<migrationsGetPayload<T> | null >>

    /**
     * Find the first Migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindFirstArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends migrationsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, migrationsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'migrations'> extends True ? CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>> : CheckSelect<T, Prisma__migrationsClient<migrations | null >, Prisma__migrationsClient<migrationsGetPayload<T> | null >>

    /**
     * Find zero or more Migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Migrations
     * const migrations = await prisma.migrations.findMany()
     * 
     * // Get first 10 Migrations
     * const migrations = await prisma.migrations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const migrationsWithIdOnly = await prisma.migrations.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends migrationsFindManyArgs>(
      args?: SelectSubset<T, migrationsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<migrations>>, PrismaPromise<Array<migrationsGetPayload<T>>>>

    /**
     * Create a Migrations.
     * @param {migrationsCreateArgs} args - Arguments to create a Migrations.
     * @example
     * // Create one Migrations
     * const Migrations = await prisma.migrations.create({
     *   data: {
     *     // ... data to create a Migrations
     *   }
     * })
     * 
    **/
    create<T extends migrationsCreateArgs>(
      args: SelectSubset<T, migrationsCreateArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Create many Migrations.
     *     @param {migrationsCreateManyArgs} args - Arguments to create many Migrations.
     *     @example
     *     // Create many Migrations
     *     const migrations = await prisma.migrations.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends migrationsCreateManyArgs>(
      args?: SelectSubset<T, migrationsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Migrations.
     * @param {migrationsDeleteArgs} args - Arguments to delete one Migrations.
     * @example
     * // Delete one Migrations
     * const Migrations = await prisma.migrations.delete({
     *   where: {
     *     // ... filter to delete one Migrations
     *   }
     * })
     * 
    **/
    delete<T extends migrationsDeleteArgs>(
      args: SelectSubset<T, migrationsDeleteArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Update one Migrations.
     * @param {migrationsUpdateArgs} args - Arguments to update one Migrations.
     * @example
     * // Update one Migrations
     * const migrations = await prisma.migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends migrationsUpdateArgs>(
      args: SelectSubset<T, migrationsUpdateArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Delete zero or more Migrations.
     * @param {migrationsDeleteManyArgs} args - Arguments to filter Migrations to delete.
     * @example
     * // Delete a few Migrations
     * const { count } = await prisma.migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends migrationsDeleteManyArgs>(
      args?: SelectSubset<T, migrationsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Migrations
     * const migrations = await prisma.migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends migrationsUpdateManyArgs>(
      args: SelectSubset<T, migrationsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Migrations.
     * @param {migrationsUpsertArgs} args - Arguments to update or create a Migrations.
     * @example
     * // Update or create a Migrations
     * const migrations = await prisma.migrations.upsert({
     *   create: {
     *     // ... data to create a Migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Migrations we want to update
     *   }
     * })
    **/
    upsert<T extends migrationsUpsertArgs>(
      args: SelectSubset<T, migrationsUpsertArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Find one Migrations that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {migrationsFindUniqueOrThrowArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends migrationsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, migrationsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Find the first Migrations that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindFirstOrThrowArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends migrationsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, migrationsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__migrationsClient<migrations>, Prisma__migrationsClient<migrationsGetPayload<T>>>

    /**
     * Count the number of Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsCountArgs} args - Arguments to filter Migrations to count.
     * @example
     * // Count the number of Migrations
     * const count = await prisma.migrations.count({
     *   where: {
     *     // ... the filter for the Migrations we want to count
     *   }
     * })
    **/
    count<T extends migrationsCountArgs>(
      args?: Subset<T, migrationsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MigrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MigrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MigrationsAggregateArgs>(args: Subset<T, MigrationsAggregateArgs>): PrismaPromise<GetMigrationsAggregateType<T>>

    /**
     * Group by Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MigrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MigrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MigrationsGroupByArgs['orderBy'] }
        : { orderBy?: MigrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MigrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMigrationsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__migrationsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * migrations base type for findUnique actions
   */
  export type migrationsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * Filter, which migrations to fetch.
     * 
    **/
    where: migrationsWhereUniqueInput
  }

  /**
   * migrations: findUnique
   */
  export interface migrationsFindUniqueArgs extends migrationsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * migrations base type for findFirst actions
   */
  export type migrationsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * Filter, which migrations to fetch.
     * 
    **/
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     * 
    **/
    orderBy?: Enumerable<migrationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for migrations.
     * 
    **/
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of migrations.
     * 
    **/
    distinct?: Enumerable<MigrationsScalarFieldEnum>
  }

  /**
   * migrations: findFirst
   */
  export interface migrationsFindFirstArgs extends migrationsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * migrations findMany
   */
  export type migrationsFindManyArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * Filter, which migrations to fetch.
     * 
    **/
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     * 
    **/
    orderBy?: Enumerable<migrationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing migrations.
     * 
    **/
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     * 
    **/
    skip?: number
    distinct?: Enumerable<MigrationsScalarFieldEnum>
  }


  /**
   * migrations create
   */
  export type migrationsCreateArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * The data needed to create a migrations.
     * 
    **/
    data: XOR<migrationsCreateInput, migrationsUncheckedCreateInput>
  }


  /**
   * migrations createMany
   */
  export type migrationsCreateManyArgs = {
    /**
     * The data used to create many migrations.
     * 
    **/
    data: Enumerable<migrationsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * migrations update
   */
  export type migrationsUpdateArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * The data needed to update a migrations.
     * 
    **/
    data: XOR<migrationsUpdateInput, migrationsUncheckedUpdateInput>
    /**
     * Choose, which migrations to update.
     * 
    **/
    where: migrationsWhereUniqueInput
  }


  /**
   * migrations updateMany
   */
  export type migrationsUpdateManyArgs = {
    /**
     * The data used to update migrations.
     * 
    **/
    data: XOR<migrationsUpdateManyMutationInput, migrationsUncheckedUpdateManyInput>
    /**
     * Filter which migrations to update
     * 
    **/
    where?: migrationsWhereInput
  }


  /**
   * migrations upsert
   */
  export type migrationsUpsertArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * The filter to search for the migrations to update in case it exists.
     * 
    **/
    where: migrationsWhereUniqueInput
    /**
     * In case the migrations found by the `where` argument doesn't exist, create a new migrations with this data.
     * 
    **/
    create: XOR<migrationsCreateInput, migrationsUncheckedCreateInput>
    /**
     * In case the migrations was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<migrationsUpdateInput, migrationsUncheckedUpdateInput>
  }


  /**
   * migrations delete
   */
  export type migrationsDeleteArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
    /**
     * Filter which migrations to delete.
     * 
    **/
    where: migrationsWhereUniqueInput
  }


  /**
   * migrations deleteMany
   */
  export type migrationsDeleteManyArgs = {
    /**
     * Filter which migrations to delete
     * 
    **/
    where?: migrationsWhereInput
  }


  /**
   * migrations: findUniqueOrThrow
   */
  export type migrationsFindUniqueOrThrowArgs = migrationsFindUniqueArgsBase
      

  /**
   * migrations: findFirstOrThrow
   */
  export type migrationsFindFirstOrThrowArgs = migrationsFindFirstArgsBase
      

  /**
   * migrations without action
   */
  export type migrationsArgs = {
    /**
     * Select specific fields to fetch from the migrations
     * 
    **/
    select?: migrationsSelect | null
  }



  /**
   * Model port_files
   */


  export type AggregatePort_files = {
    _count: Port_filesCountAggregateOutputType | null
    _avg: Port_filesAvgAggregateOutputType | null
    _sum: Port_filesSumAggregateOutputType | null
    _min: Port_filesMinAggregateOutputType | null
    _max: Port_filesMaxAggregateOutputType | null
  }

  export type Port_filesAvgAggregateOutputType = {
    id: number | null
    portId: number | null
    userId: number | null
  }

  export type Port_filesSumAggregateOutputType = {
    id: number | null
    portId: number | null
    userId: number | null
  }

  export type Port_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    portId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Port_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    portId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Port_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    portId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    userId: number
    _all: number
  }


  export type Port_filesAvgAggregateInputType = {
    id?: true
    portId?: true
    userId?: true
  }

  export type Port_filesSumAggregateInputType = {
    id?: true
    portId?: true
    userId?: true
  }

  export type Port_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Port_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Port_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    portId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
    _all?: true
  }

  export type Port_filesAggregateArgs = {
    /**
     * Filter which port_files to aggregate.
     * 
    **/
    where?: port_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of port_files to fetch.
     * 
    **/
    orderBy?: Enumerable<port_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: port_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` port_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` port_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned port_files
    **/
    _count?: true | Port_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Port_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Port_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Port_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Port_filesMaxAggregateInputType
  }

  export type GetPort_filesAggregateType<T extends Port_filesAggregateArgs> = {
        [P in keyof T & keyof AggregatePort_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePort_files[P]>
      : GetScalarType<T[P], AggregatePort_files[P]>
  }




  export type Port_filesGroupByArgs = {
    where?: port_filesWhereInput
    orderBy?: Enumerable<port_filesOrderByWithAggregationInput>
    by: Array<Port_filesScalarFieldEnum>
    having?: port_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Port_filesCountAggregateInputType | true
    _avg?: Port_filesAvgAggregateInputType
    _sum?: Port_filesSumAggregateInputType
    _min?: Port_filesMinAggregateInputType
    _max?: Port_filesMaxAggregateInputType
  }


  export type Port_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    portId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    userId: number | null
    _count: Port_filesCountAggregateOutputType | null
    _avg: Port_filesAvgAggregateOutputType | null
    _sum: Port_filesSumAggregateOutputType | null
    _min: Port_filesMinAggregateOutputType | null
    _max: Port_filesMaxAggregateOutputType | null
  }

  type GetPort_filesGroupByPayload<T extends Port_filesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Port_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Port_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Port_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Port_filesGroupByOutputType[P]>
        }
      >
    >


  export type port_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    portId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    userId?: boolean
    users?: boolean | usersArgs
    ports?: boolean | portsArgs
  }

  export type port_filesInclude = {
    users?: boolean | usersArgs
    ports?: boolean | portsArgs
  }

  export type port_filesGetPayload<
    S extends boolean | null | undefined | port_filesArgs,
    U = keyof S
      > = S extends true
        ? port_files
    : S extends undefined
    ? never
    : S extends port_filesArgs | port_filesFindManyArgs
    ?'include' extends U
    ? port_files  & {
    [P in TrueKeys<S['include']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'ports' ? portsGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'ports' ? portsGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof port_files ? port_files[P] : never
  } 
    : port_files
  : port_files


  type port_filesCountArgs = Merge<
    Omit<port_filesFindManyArgs, 'select' | 'include'> & {
      select?: Port_filesCountAggregateInputType | true
    }
  >

  export interface port_filesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Port_files that matches the filter.
     * @param {port_filesFindUniqueArgs} args - Arguments to find a Port_files
     * @example
     * // Get one Port_files
     * const port_files = await prisma.port_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends port_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, port_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'port_files'> extends True ? CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>> : CheckSelect<T, Prisma__port_filesClient<port_files | null >, Prisma__port_filesClient<port_filesGetPayload<T> | null >>

    /**
     * Find the first Port_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {port_filesFindFirstArgs} args - Arguments to find a Port_files
     * @example
     * // Get one Port_files
     * const port_files = await prisma.port_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends port_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, port_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'port_files'> extends True ? CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>> : CheckSelect<T, Prisma__port_filesClient<port_files | null >, Prisma__port_filesClient<port_filesGetPayload<T> | null >>

    /**
     * Find zero or more Port_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {port_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Port_files
     * const port_files = await prisma.port_files.findMany()
     * 
     * // Get first 10 Port_files
     * const port_files = await prisma.port_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const port_filesWithIdOnly = await prisma.port_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends port_filesFindManyArgs>(
      args?: SelectSubset<T, port_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<port_files>>, PrismaPromise<Array<port_filesGetPayload<T>>>>

    /**
     * Create a Port_files.
     * @param {port_filesCreateArgs} args - Arguments to create a Port_files.
     * @example
     * // Create one Port_files
     * const Port_files = await prisma.port_files.create({
     *   data: {
     *     // ... data to create a Port_files
     *   }
     * })
     * 
    **/
    create<T extends port_filesCreateArgs>(
      args: SelectSubset<T, port_filesCreateArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Create many Port_files.
     *     @param {port_filesCreateManyArgs} args - Arguments to create many Port_files.
     *     @example
     *     // Create many Port_files
     *     const port_files = await prisma.port_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends port_filesCreateManyArgs>(
      args?: SelectSubset<T, port_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Port_files.
     * @param {port_filesDeleteArgs} args - Arguments to delete one Port_files.
     * @example
     * // Delete one Port_files
     * const Port_files = await prisma.port_files.delete({
     *   where: {
     *     // ... filter to delete one Port_files
     *   }
     * })
     * 
    **/
    delete<T extends port_filesDeleteArgs>(
      args: SelectSubset<T, port_filesDeleteArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Update one Port_files.
     * @param {port_filesUpdateArgs} args - Arguments to update one Port_files.
     * @example
     * // Update one Port_files
     * const port_files = await prisma.port_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends port_filesUpdateArgs>(
      args: SelectSubset<T, port_filesUpdateArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Delete zero or more Port_files.
     * @param {port_filesDeleteManyArgs} args - Arguments to filter Port_files to delete.
     * @example
     * // Delete a few Port_files
     * const { count } = await prisma.port_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends port_filesDeleteManyArgs>(
      args?: SelectSubset<T, port_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Port_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {port_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Port_files
     * const port_files = await prisma.port_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends port_filesUpdateManyArgs>(
      args: SelectSubset<T, port_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Port_files.
     * @param {port_filesUpsertArgs} args - Arguments to update or create a Port_files.
     * @example
     * // Update or create a Port_files
     * const port_files = await prisma.port_files.upsert({
     *   create: {
     *     // ... data to create a Port_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Port_files we want to update
     *   }
     * })
    **/
    upsert<T extends port_filesUpsertArgs>(
      args: SelectSubset<T, port_filesUpsertArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Find one Port_files that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {port_filesFindUniqueOrThrowArgs} args - Arguments to find a Port_files
     * @example
     * // Get one Port_files
     * const port_files = await prisma.port_files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends port_filesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, port_filesFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Find the first Port_files that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {port_filesFindFirstOrThrowArgs} args - Arguments to find a Port_files
     * @example
     * // Get one Port_files
     * const port_files = await prisma.port_files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends port_filesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, port_filesFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__port_filesClient<port_files>, Prisma__port_filesClient<port_filesGetPayload<T>>>

    /**
     * Count the number of Port_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {port_filesCountArgs} args - Arguments to filter Port_files to count.
     * @example
     * // Count the number of Port_files
     * const count = await prisma.port_files.count({
     *   where: {
     *     // ... the filter for the Port_files we want to count
     *   }
     * })
    **/
    count<T extends port_filesCountArgs>(
      args?: Subset<T, port_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Port_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Port_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Port_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Port_filesAggregateArgs>(args: Subset<T, Port_filesAggregateArgs>): PrismaPromise<GetPort_filesAggregateType<T>>

    /**
     * Group by Port_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Port_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Port_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Port_filesGroupByArgs['orderBy'] }
        : { orderBy?: Port_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Port_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPort_filesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for port_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__port_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    ports<T extends portsArgs = {}>(args?: Subset<T, portsArgs>): CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * port_files base type for findUnique actions
   */
  export type port_filesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * Filter, which port_files to fetch.
     * 
    **/
    where: port_filesWhereUniqueInput
  }

  /**
   * port_files: findUnique
   */
  export interface port_filesFindUniqueArgs extends port_filesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * port_files base type for findFirst actions
   */
  export type port_filesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * Filter, which port_files to fetch.
     * 
    **/
    where?: port_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of port_files to fetch.
     * 
    **/
    orderBy?: Enumerable<port_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for port_files.
     * 
    **/
    cursor?: port_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` port_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` port_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of port_files.
     * 
    **/
    distinct?: Enumerable<Port_filesScalarFieldEnum>
  }

  /**
   * port_files: findFirst
   */
  export interface port_filesFindFirstArgs extends port_filesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * port_files findMany
   */
  export type port_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * Filter, which port_files to fetch.
     * 
    **/
    where?: port_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of port_files to fetch.
     * 
    **/
    orderBy?: Enumerable<port_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing port_files.
     * 
    **/
    cursor?: port_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` port_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` port_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Port_filesScalarFieldEnum>
  }


  /**
   * port_files create
   */
  export type port_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * The data needed to create a port_files.
     * 
    **/
    data: XOR<port_filesCreateInput, port_filesUncheckedCreateInput>
  }


  /**
   * port_files createMany
   */
  export type port_filesCreateManyArgs = {
    /**
     * The data used to create many port_files.
     * 
    **/
    data: Enumerable<port_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * port_files update
   */
  export type port_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * The data needed to update a port_files.
     * 
    **/
    data: XOR<port_filesUpdateInput, port_filesUncheckedUpdateInput>
    /**
     * Choose, which port_files to update.
     * 
    **/
    where: port_filesWhereUniqueInput
  }


  /**
   * port_files updateMany
   */
  export type port_filesUpdateManyArgs = {
    /**
     * The data used to update port_files.
     * 
    **/
    data: XOR<port_filesUpdateManyMutationInput, port_filesUncheckedUpdateManyInput>
    /**
     * Filter which port_files to update
     * 
    **/
    where?: port_filesWhereInput
  }


  /**
   * port_files upsert
   */
  export type port_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * The filter to search for the port_files to update in case it exists.
     * 
    **/
    where: port_filesWhereUniqueInput
    /**
     * In case the port_files found by the `where` argument doesn't exist, create a new port_files with this data.
     * 
    **/
    create: XOR<port_filesCreateInput, port_filesUncheckedCreateInput>
    /**
     * In case the port_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<port_filesUpdateInput, port_filesUncheckedUpdateInput>
  }


  /**
   * port_files delete
   */
  export type port_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
    /**
     * Filter which port_files to delete.
     * 
    **/
    where: port_filesWhereUniqueInput
  }


  /**
   * port_files deleteMany
   */
  export type port_filesDeleteManyArgs = {
    /**
     * Filter which port_files to delete
     * 
    **/
    where?: port_filesWhereInput
  }


  /**
   * port_files: findUniqueOrThrow
   */
  export type port_filesFindUniqueOrThrowArgs = port_filesFindUniqueArgsBase
      

  /**
   * port_files: findFirstOrThrow
   */
  export type port_filesFindFirstOrThrowArgs = port_filesFindFirstArgsBase
      

  /**
   * port_files without action
   */
  export type port_filesArgs = {
    /**
     * Select specific fields to fetch from the port_files
     * 
    **/
    select?: port_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: port_filesInclude | null
  }



  /**
   * Model ports
   */


  export type AggregatePorts = {
    _count: PortsCountAggregateOutputType | null
    _avg: PortsAvgAggregateOutputType | null
    _sum: PortsSumAggregateOutputType | null
    _min: PortsMinAggregateOutputType | null
    _max: PortsMaxAggregateOutputType | null
  }

  export type PortsAvgAggregateOutputType = {
    id: number | null
    countryId: number | null
  }

  export type PortsSumAggregateOutputType = {
    id: number | null
    countryId: number | null
  }

  export type PortsMinAggregateOutputType = {
    id: number | null
    name: string | null
    time_zone: string | null
    countryId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    slug: string | null
  }

  export type PortsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    time_zone: string | null
    countryId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    slug: string | null
  }

  export type PortsCountAggregateOutputType = {
    id: number
    name: number
    time_zone: number
    countryId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    slug: number
    _all: number
  }


  export type PortsAvgAggregateInputType = {
    id?: true
    countryId?: true
  }

  export type PortsSumAggregateInputType = {
    id?: true
    countryId?: true
  }

  export type PortsMinAggregateInputType = {
    id?: true
    name?: true
    time_zone?: true
    countryId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    slug?: true
  }

  export type PortsMaxAggregateInputType = {
    id?: true
    name?: true
    time_zone?: true
    countryId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    slug?: true
  }

  export type PortsCountAggregateInputType = {
    id?: true
    name?: true
    time_zone?: true
    countryId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    slug?: true
    _all?: true
  }

  export type PortsAggregateArgs = {
    /**
     * Filter which ports to aggregate.
     * 
    **/
    where?: portsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ports to fetch.
     * 
    **/
    orderBy?: Enumerable<portsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: portsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ports.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ports
    **/
    _count?: true | PortsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PortsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PortsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PortsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PortsMaxAggregateInputType
  }

  export type GetPortsAggregateType<T extends PortsAggregateArgs> = {
        [P in keyof T & keyof AggregatePorts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePorts[P]>
      : GetScalarType<T[P], AggregatePorts[P]>
  }




  export type PortsGroupByArgs = {
    where?: portsWhereInput
    orderBy?: Enumerable<portsOrderByWithAggregationInput>
    by: Array<PortsScalarFieldEnum>
    having?: portsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PortsCountAggregateInputType | true
    _avg?: PortsAvgAggregateInputType
    _sum?: PortsSumAggregateInputType
    _min?: PortsMinAggregateInputType
    _max?: PortsMaxAggregateInputType
  }


  export type PortsGroupByOutputType = {
    id: number
    name: string | null
    time_zone: string | null
    countryId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    slug: string | null
    _count: PortsCountAggregateOutputType | null
    _avg: PortsAvgAggregateOutputType | null
    _sum: PortsSumAggregateOutputType | null
    _min: PortsMinAggregateOutputType | null
    _max: PortsMaxAggregateOutputType | null
  }

  type GetPortsGroupByPayload<T extends PortsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<PortsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PortsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PortsGroupByOutputType[P]>
            : GetScalarType<T[P], PortsGroupByOutputType[P]>
        }
      >
    >


  export type portsSelect = {
    id?: boolean
    name?: boolean
    time_zone?: boolean
    countryId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    slug?: boolean
    country?: boolean | CountryArgs
    berths?: boolean | berthsFindManyArgs
    port_files?: boolean | port_filesFindManyArgs
    shipping_ports?: boolean | ShippingPortFindManyArgs
    _count?: boolean | PortsCountOutputTypeArgs
  }

  export type portsInclude = {
    country?: boolean | CountryArgs
    berths?: boolean | berthsFindManyArgs
    port_files?: boolean | port_filesFindManyArgs
    shipping_ports?: boolean | ShippingPortFindManyArgs
    _count?: boolean | PortsCountOutputTypeArgs
  }

  export type portsGetPayload<
    S extends boolean | null | undefined | portsArgs,
    U = keyof S
      > = S extends true
        ? ports
    : S extends undefined
    ? never
    : S extends portsArgs | portsFindManyArgs
    ?'include' extends U
    ? ports  & {
    [P in TrueKeys<S['include']>]:
        P extends 'country' ? CountryGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'berths' ? Array < berthsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'port_files' ? Array < port_filesGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shipping_ports' ? Array < ShippingPortGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? PortsCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'country' ? CountryGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'berths' ? Array < berthsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'port_files' ? Array < port_filesGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shipping_ports' ? Array < ShippingPortGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? PortsCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof ports ? ports[P] : never
  } 
    : ports
  : ports


  type portsCountArgs = Merge<
    Omit<portsFindManyArgs, 'select' | 'include'> & {
      select?: PortsCountAggregateInputType | true
    }
  >

  export interface portsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Ports that matches the filter.
     * @param {portsFindUniqueArgs} args - Arguments to find a Ports
     * @example
     * // Get one Ports
     * const ports = await prisma.ports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends portsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, portsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ports'> extends True ? CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>> : CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>

    /**
     * Find the first Ports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portsFindFirstArgs} args - Arguments to find a Ports
     * @example
     * // Get one Ports
     * const ports = await prisma.ports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends portsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, portsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ports'> extends True ? CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>> : CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>

    /**
     * Find zero or more Ports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ports
     * const ports = await prisma.ports.findMany()
     * 
     * // Get first 10 Ports
     * const ports = await prisma.ports.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const portsWithIdOnly = await prisma.ports.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends portsFindManyArgs>(
      args?: SelectSubset<T, portsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ports>>, PrismaPromise<Array<portsGetPayload<T>>>>

    /**
     * Create a Ports.
     * @param {portsCreateArgs} args - Arguments to create a Ports.
     * @example
     * // Create one Ports
     * const Ports = await prisma.ports.create({
     *   data: {
     *     // ... data to create a Ports
     *   }
     * })
     * 
    **/
    create<T extends portsCreateArgs>(
      args: SelectSubset<T, portsCreateArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Create many Ports.
     *     @param {portsCreateManyArgs} args - Arguments to create many Ports.
     *     @example
     *     // Create many Ports
     *     const ports = await prisma.ports.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends portsCreateManyArgs>(
      args?: SelectSubset<T, portsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Ports.
     * @param {portsDeleteArgs} args - Arguments to delete one Ports.
     * @example
     * // Delete one Ports
     * const Ports = await prisma.ports.delete({
     *   where: {
     *     // ... filter to delete one Ports
     *   }
     * })
     * 
    **/
    delete<T extends portsDeleteArgs>(
      args: SelectSubset<T, portsDeleteArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Update one Ports.
     * @param {portsUpdateArgs} args - Arguments to update one Ports.
     * @example
     * // Update one Ports
     * const ports = await prisma.ports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends portsUpdateArgs>(
      args: SelectSubset<T, portsUpdateArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Delete zero or more Ports.
     * @param {portsDeleteManyArgs} args - Arguments to filter Ports to delete.
     * @example
     * // Delete a few Ports
     * const { count } = await prisma.ports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends portsDeleteManyArgs>(
      args?: SelectSubset<T, portsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ports
     * const ports = await prisma.ports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends portsUpdateManyArgs>(
      args: SelectSubset<T, portsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Ports.
     * @param {portsUpsertArgs} args - Arguments to update or create a Ports.
     * @example
     * // Update or create a Ports
     * const ports = await prisma.ports.upsert({
     *   create: {
     *     // ... data to create a Ports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ports we want to update
     *   }
     * })
    **/
    upsert<T extends portsUpsertArgs>(
      args: SelectSubset<T, portsUpsertArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Find one Ports that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {portsFindUniqueOrThrowArgs} args - Arguments to find a Ports
     * @example
     * // Get one Ports
     * const ports = await prisma.ports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends portsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, portsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Find the first Ports that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portsFindFirstOrThrowArgs} args - Arguments to find a Ports
     * @example
     * // Get one Ports
     * const ports = await prisma.ports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends portsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, portsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__portsClient<ports>, Prisma__portsClient<portsGetPayload<T>>>

    /**
     * Count the number of Ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {portsCountArgs} args - Arguments to filter Ports to count.
     * @example
     * // Count the number of Ports
     * const count = await prisma.ports.count({
     *   where: {
     *     // ... the filter for the Ports we want to count
     *   }
     * })
    **/
    count<T extends portsCountArgs>(
      args?: Subset<T, portsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PortsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PortsAggregateArgs>(args: Subset<T, PortsAggregateArgs>): PrismaPromise<GetPortsAggregateType<T>>

    /**
     * Group by Ports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PortsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PortsGroupByArgs['orderBy'] }
        : { orderBy?: PortsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PortsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPortsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__portsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    country<T extends CountryArgs = {}>(args?: Subset<T, CountryArgs>): CheckSelect<T, Prisma__CountryClient<Country | null >, Prisma__CountryClient<CountryGetPayload<T> | null >>;

    berths<T extends berthsFindManyArgs = {}>(args?: Subset<T, berthsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<berths>>, PrismaPromise<Array<berthsGetPayload<T>>>>;

    port_files<T extends port_filesFindManyArgs = {}>(args?: Subset<T, port_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<port_files>>, PrismaPromise<Array<port_filesGetPayload<T>>>>;

    shipping_ports<T extends ShippingPortFindManyArgs = {}>(args?: Subset<T, ShippingPortFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingPort>>, PrismaPromise<Array<ShippingPortGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ports base type for findUnique actions
   */
  export type portsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * Filter, which ports to fetch.
     * 
    **/
    where: portsWhereUniqueInput
  }

  /**
   * ports: findUnique
   */
  export interface portsFindUniqueArgs extends portsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ports base type for findFirst actions
   */
  export type portsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * Filter, which ports to fetch.
     * 
    **/
    where?: portsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ports to fetch.
     * 
    **/
    orderBy?: Enumerable<portsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ports.
     * 
    **/
    cursor?: portsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ports.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ports.
     * 
    **/
    distinct?: Enumerable<PortsScalarFieldEnum>
  }

  /**
   * ports: findFirst
   */
  export interface portsFindFirstArgs extends portsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ports findMany
   */
  export type portsFindManyArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * Filter, which ports to fetch.
     * 
    **/
    where?: portsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ports to fetch.
     * 
    **/
    orderBy?: Enumerable<portsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ports.
     * 
    **/
    cursor?: portsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ports.
     * 
    **/
    skip?: number
    distinct?: Enumerable<PortsScalarFieldEnum>
  }


  /**
   * ports create
   */
  export type portsCreateArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * The data needed to create a ports.
     * 
    **/
    data: XOR<portsCreateInput, portsUncheckedCreateInput>
  }


  /**
   * ports createMany
   */
  export type portsCreateManyArgs = {
    /**
     * The data used to create many ports.
     * 
    **/
    data: Enumerable<portsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ports update
   */
  export type portsUpdateArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * The data needed to update a ports.
     * 
    **/
    data: XOR<portsUpdateInput, portsUncheckedUpdateInput>
    /**
     * Choose, which ports to update.
     * 
    **/
    where: portsWhereUniqueInput
  }


  /**
   * ports updateMany
   */
  export type portsUpdateManyArgs = {
    /**
     * The data used to update ports.
     * 
    **/
    data: XOR<portsUpdateManyMutationInput, portsUncheckedUpdateManyInput>
    /**
     * Filter which ports to update
     * 
    **/
    where?: portsWhereInput
  }


  /**
   * ports upsert
   */
  export type portsUpsertArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * The filter to search for the ports to update in case it exists.
     * 
    **/
    where: portsWhereUniqueInput
    /**
     * In case the ports found by the `where` argument doesn't exist, create a new ports with this data.
     * 
    **/
    create: XOR<portsCreateInput, portsUncheckedCreateInput>
    /**
     * In case the ports was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<portsUpdateInput, portsUncheckedUpdateInput>
  }


  /**
   * ports delete
   */
  export type portsDeleteArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
    /**
     * Filter which ports to delete.
     * 
    **/
    where: portsWhereUniqueInput
  }


  /**
   * ports deleteMany
   */
  export type portsDeleteManyArgs = {
    /**
     * Filter which ports to delete
     * 
    **/
    where?: portsWhereInput
  }


  /**
   * ports: findUniqueOrThrow
   */
  export type portsFindUniqueOrThrowArgs = portsFindUniqueArgsBase
      

  /**
   * ports: findFirstOrThrow
   */
  export type portsFindFirstOrThrowArgs = portsFindFirstArgsBase
      

  /**
   * ports without action
   */
  export type portsArgs = {
    /**
     * Select specific fields to fetch from the ports
     * 
    **/
    select?: portsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: portsInclude | null
  }



  /**
   * Model products
   */


  export type AggregateProducts = {
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  export type ProductsAvgAggregateOutputType = {
    id: number | null
  }

  export type ProductsSumAggregateOutputType = {
    id: number | null
  }

  export type ProductsMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ProductsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ProductsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ProductsAvgAggregateInputType = {
    id?: true
  }

  export type ProductsSumAggregateInputType = {
    id?: true
  }

  export type ProductsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ProductsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ProductsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ProductsAggregateArgs = {
    /**
     * Filter which products to aggregate.
     * 
    **/
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     * 
    **/
    orderBy?: Enumerable<productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned products
    **/
    _count?: true | ProductsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductsMaxAggregateInputType
  }

  export type GetProductsAggregateType<T extends ProductsAggregateArgs> = {
        [P in keyof T & keyof AggregateProducts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducts[P]>
      : GetScalarType<T[P], AggregateProducts[P]>
  }




  export type ProductsGroupByArgs = {
    where?: productsWhereInput
    orderBy?: Enumerable<productsOrderByWithAggregationInput>
    by: Array<ProductsScalarFieldEnum>
    having?: productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductsCountAggregateInputType | true
    _avg?: ProductsAvgAggregateInputType
    _sum?: ProductsSumAggregateInputType
    _min?: ProductsMinAggregateInputType
    _max?: ProductsMaxAggregateInputType
  }


  export type ProductsGroupByOutputType = {
    id: number
    name: string | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  type GetProductsGroupByPayload<T extends ProductsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ProductsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductsGroupByOutputType[P]>
            : GetScalarType<T[P], ProductsGroupByOutputType[P]>
        }
      >
    >


  export type productsSelect = {
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    berth_products?: boolean | berth_productsFindManyArgs
    shipping_products?: boolean | ShippingProductFindManyArgs
    _count?: boolean | ProductsCountOutputTypeArgs
  }

  export type productsInclude = {
    berth_products?: boolean | berth_productsFindManyArgs
    shipping_products?: boolean | ShippingProductFindManyArgs
    _count?: boolean | ProductsCountOutputTypeArgs
  }

  export type productsGetPayload<
    S extends boolean | null | undefined | productsArgs,
    U = keyof S
      > = S extends true
        ? products
    : S extends undefined
    ? never
    : S extends productsArgs | productsFindManyArgs
    ?'include' extends U
    ? products  & {
    [P in TrueKeys<S['include']>]:
        P extends 'berth_products' ? Array < berth_productsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shipping_products' ? Array < ShippingProductGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? ProductsCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'berth_products' ? Array < berth_productsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shipping_products' ? Array < ShippingProductGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? ProductsCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof products ? products[P] : never
  } 
    : products
  : products


  type productsCountArgs = Merge<
    Omit<productsFindManyArgs, 'select' | 'include'> & {
      select?: ProductsCountAggregateInputType | true
    }
  >

  export interface productsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Products that matches the filter.
     * @param {productsFindUniqueArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends productsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, productsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'products'> extends True ? CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>> : CheckSelect<T, Prisma__productsClient<products | null >, Prisma__productsClient<productsGetPayload<T> | null >>

    /**
     * Find the first Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends productsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, productsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'products'> extends True ? CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>> : CheckSelect<T, Prisma__productsClient<products | null >, Prisma__productsClient<productsGetPayload<T> | null >>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.products.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productsWithIdOnly = await prisma.products.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends productsFindManyArgs>(
      args?: SelectSubset<T, productsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<products>>, PrismaPromise<Array<productsGetPayload<T>>>>

    /**
     * Create a Products.
     * @param {productsCreateArgs} args - Arguments to create a Products.
     * @example
     * // Create one Products
     * const Products = await prisma.products.create({
     *   data: {
     *     // ... data to create a Products
     *   }
     * })
     * 
    **/
    create<T extends productsCreateArgs>(
      args: SelectSubset<T, productsCreateArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Create many Products.
     *     @param {productsCreateManyArgs} args - Arguments to create many Products.
     *     @example
     *     // Create many Products
     *     const products = await prisma.products.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends productsCreateManyArgs>(
      args?: SelectSubset<T, productsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Products.
     * @param {productsDeleteArgs} args - Arguments to delete one Products.
     * @example
     * // Delete one Products
     * const Products = await prisma.products.delete({
     *   where: {
     *     // ... filter to delete one Products
     *   }
     * })
     * 
    **/
    delete<T extends productsDeleteArgs>(
      args: SelectSubset<T, productsDeleteArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Update one Products.
     * @param {productsUpdateArgs} args - Arguments to update one Products.
     * @example
     * // Update one Products
     * const products = await prisma.products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends productsUpdateArgs>(
      args: SelectSubset<T, productsUpdateArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Delete zero or more Products.
     * @param {productsDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends productsDeleteManyArgs>(
      args?: SelectSubset<T, productsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends productsUpdateManyArgs>(
      args: SelectSubset<T, productsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Products.
     * @param {productsUpsertArgs} args - Arguments to update or create a Products.
     * @example
     * // Update or create a Products
     * const products = await prisma.products.upsert({
     *   create: {
     *     // ... data to create a Products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Products we want to update
     *   }
     * })
    **/
    upsert<T extends productsUpsertArgs>(
      args: SelectSubset<T, productsUpsertArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Find one Products that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {productsFindUniqueOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends productsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, productsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Find the first Products that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends productsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, productsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__productsClient<products>, Prisma__productsClient<productsGetPayload<T>>>

    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.products.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends productsCountArgs>(
      args?: Subset<T, productsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductsAggregateArgs>(args: Subset<T, ProductsAggregateArgs>): PrismaPromise<GetProductsAggregateType<T>>

    /**
     * Group by Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductsGroupByArgs['orderBy'] }
        : { orderBy?: ProductsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__productsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    berth_products<T extends berth_productsFindManyArgs = {}>(args?: Subset<T, berth_productsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<berth_products>>, PrismaPromise<Array<berth_productsGetPayload<T>>>>;

    shipping_products<T extends ShippingProductFindManyArgs = {}>(args?: Subset<T, ShippingProductFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingProduct>>, PrismaPromise<Array<ShippingProductGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * products base type for findUnique actions
   */
  export type productsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * Filter, which products to fetch.
     * 
    **/
    where: productsWhereUniqueInput
  }

  /**
   * products: findUnique
   */
  export interface productsFindUniqueArgs extends productsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * products base type for findFirst actions
   */
  export type productsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * Filter, which products to fetch.
     * 
    **/
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     * 
    **/
    orderBy?: Enumerable<productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     * 
    **/
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     * 
    **/
    distinct?: Enumerable<ProductsScalarFieldEnum>
  }

  /**
   * products: findFirst
   */
  export interface productsFindFirstArgs extends productsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * products findMany
   */
  export type productsFindManyArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * Filter, which products to fetch.
     * 
    **/
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     * 
    **/
    orderBy?: Enumerable<productsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing products.
     * 
    **/
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProductsScalarFieldEnum>
  }


  /**
   * products create
   */
  export type productsCreateArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * The data needed to create a products.
     * 
    **/
    data: XOR<productsCreateInput, productsUncheckedCreateInput>
  }


  /**
   * products createMany
   */
  export type productsCreateManyArgs = {
    /**
     * The data used to create many products.
     * 
    **/
    data: Enumerable<productsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * products update
   */
  export type productsUpdateArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * The data needed to update a products.
     * 
    **/
    data: XOR<productsUpdateInput, productsUncheckedUpdateInput>
    /**
     * Choose, which products to update.
     * 
    **/
    where: productsWhereUniqueInput
  }


  /**
   * products updateMany
   */
  export type productsUpdateManyArgs = {
    /**
     * The data used to update products.
     * 
    **/
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     * 
    **/
    where?: productsWhereInput
  }


  /**
   * products upsert
   */
  export type productsUpsertArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * The filter to search for the products to update in case it exists.
     * 
    **/
    where: productsWhereUniqueInput
    /**
     * In case the products found by the `where` argument doesn't exist, create a new products with this data.
     * 
    **/
    create: XOR<productsCreateInput, productsUncheckedCreateInput>
    /**
     * In case the products was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<productsUpdateInput, productsUncheckedUpdateInput>
  }


  /**
   * products delete
   */
  export type productsDeleteArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
    /**
     * Filter which products to delete.
     * 
    **/
    where: productsWhereUniqueInput
  }


  /**
   * products deleteMany
   */
  export type productsDeleteManyArgs = {
    /**
     * Filter which products to delete
     * 
    **/
    where?: productsWhereInput
  }


  /**
   * products: findUniqueOrThrow
   */
  export type productsFindUniqueOrThrowArgs = productsFindUniqueArgsBase
      

  /**
   * products: findFirstOrThrow
   */
  export type productsFindFirstOrThrowArgs = productsFindFirstArgsBase
      

  /**
   * products without action
   */
  export type productsArgs = {
    /**
     * Select specific fields to fetch from the products
     * 
    **/
    select?: productsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: productsInclude | null
  }



  /**
   * Model proforma_files
   */


  export type AggregateProforma_files = {
    _count: Proforma_filesCountAggregateOutputType | null
    _avg: Proforma_filesAvgAggregateOutputType | null
    _sum: Proforma_filesSumAggregateOutputType | null
    _min: Proforma_filesMinAggregateOutputType | null
    _max: Proforma_filesMaxAggregateOutputType | null
  }

  export type Proforma_filesAvgAggregateOutputType = {
    id: number | null
    proformaId: number | null
  }

  export type Proforma_filesSumAggregateOutputType = {
    id: number | null
    proformaId: number | null
  }

  export type Proforma_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    proformaId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Proforma_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    proformaId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type Proforma_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    proformaId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type Proforma_filesAvgAggregateInputType = {
    id?: true
    proformaId?: true
  }

  export type Proforma_filesSumAggregateInputType = {
    id?: true
    proformaId?: true
  }

  export type Proforma_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    proformaId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Proforma_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    proformaId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type Proforma_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    proformaId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type Proforma_filesAggregateArgs = {
    /**
     * Filter which proforma_files to aggregate.
     * 
    **/
    where?: proforma_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proforma_files to fetch.
     * 
    **/
    orderBy?: Enumerable<proforma_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: proforma_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proforma_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proforma_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proforma_files
    **/
    _count?: true | Proforma_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Proforma_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Proforma_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Proforma_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Proforma_filesMaxAggregateInputType
  }

  export type GetProforma_filesAggregateType<T extends Proforma_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateProforma_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProforma_files[P]>
      : GetScalarType<T[P], AggregateProforma_files[P]>
  }




  export type Proforma_filesGroupByArgs = {
    where?: proforma_filesWhereInput
    orderBy?: Enumerable<proforma_filesOrderByWithAggregationInput>
    by: Array<Proforma_filesScalarFieldEnum>
    having?: proforma_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Proforma_filesCountAggregateInputType | true
    _avg?: Proforma_filesAvgAggregateInputType
    _sum?: Proforma_filesSumAggregateInputType
    _min?: Proforma_filesMinAggregateInputType
    _max?: Proforma_filesMaxAggregateInputType
  }


  export type Proforma_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    proformaId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: Proforma_filesCountAggregateOutputType | null
    _avg: Proforma_filesAvgAggregateOutputType | null
    _sum: Proforma_filesSumAggregateOutputType | null
    _min: Proforma_filesMinAggregateOutputType | null
    _max: Proforma_filesMaxAggregateOutputType | null
  }

  type GetProforma_filesGroupByPayload<T extends Proforma_filesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Proforma_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Proforma_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Proforma_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Proforma_filesGroupByOutputType[P]>
        }
      >
    >


  export type proforma_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    proformaId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    proformas?: boolean | proformasArgs
  }

  export type proforma_filesInclude = {
    proformas?: boolean | proformasArgs
  }

  export type proforma_filesGetPayload<
    S extends boolean | null | undefined | proforma_filesArgs,
    U = keyof S
      > = S extends true
        ? proforma_files
    : S extends undefined
    ? never
    : S extends proforma_filesArgs | proforma_filesFindManyArgs
    ?'include' extends U
    ? proforma_files  & {
    [P in TrueKeys<S['include']>]:
        P extends 'proformas' ? proformasGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'proformas' ? proformasGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof proforma_files ? proforma_files[P] : never
  } 
    : proforma_files
  : proforma_files


  type proforma_filesCountArgs = Merge<
    Omit<proforma_filesFindManyArgs, 'select' | 'include'> & {
      select?: Proforma_filesCountAggregateInputType | true
    }
  >

  export interface proforma_filesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Proforma_files that matches the filter.
     * @param {proforma_filesFindUniqueArgs} args - Arguments to find a Proforma_files
     * @example
     * // Get one Proforma_files
     * const proforma_files = await prisma.proforma_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends proforma_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, proforma_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'proforma_files'> extends True ? CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>> : CheckSelect<T, Prisma__proforma_filesClient<proforma_files | null >, Prisma__proforma_filesClient<proforma_filesGetPayload<T> | null >>

    /**
     * Find the first Proforma_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proforma_filesFindFirstArgs} args - Arguments to find a Proforma_files
     * @example
     * // Get one Proforma_files
     * const proforma_files = await prisma.proforma_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends proforma_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, proforma_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'proforma_files'> extends True ? CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>> : CheckSelect<T, Prisma__proforma_filesClient<proforma_files | null >, Prisma__proforma_filesClient<proforma_filesGetPayload<T> | null >>

    /**
     * Find zero or more Proforma_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proforma_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proforma_files
     * const proforma_files = await prisma.proforma_files.findMany()
     * 
     * // Get first 10 Proforma_files
     * const proforma_files = await prisma.proforma_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proforma_filesWithIdOnly = await prisma.proforma_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends proforma_filesFindManyArgs>(
      args?: SelectSubset<T, proforma_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<proforma_files>>, PrismaPromise<Array<proforma_filesGetPayload<T>>>>

    /**
     * Create a Proforma_files.
     * @param {proforma_filesCreateArgs} args - Arguments to create a Proforma_files.
     * @example
     * // Create one Proforma_files
     * const Proforma_files = await prisma.proforma_files.create({
     *   data: {
     *     // ... data to create a Proforma_files
     *   }
     * })
     * 
    **/
    create<T extends proforma_filesCreateArgs>(
      args: SelectSubset<T, proforma_filesCreateArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Create many Proforma_files.
     *     @param {proforma_filesCreateManyArgs} args - Arguments to create many Proforma_files.
     *     @example
     *     // Create many Proforma_files
     *     const proforma_files = await prisma.proforma_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends proforma_filesCreateManyArgs>(
      args?: SelectSubset<T, proforma_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Proforma_files.
     * @param {proforma_filesDeleteArgs} args - Arguments to delete one Proforma_files.
     * @example
     * // Delete one Proforma_files
     * const Proforma_files = await prisma.proforma_files.delete({
     *   where: {
     *     // ... filter to delete one Proforma_files
     *   }
     * })
     * 
    **/
    delete<T extends proforma_filesDeleteArgs>(
      args: SelectSubset<T, proforma_filesDeleteArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Update one Proforma_files.
     * @param {proforma_filesUpdateArgs} args - Arguments to update one Proforma_files.
     * @example
     * // Update one Proforma_files
     * const proforma_files = await prisma.proforma_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends proforma_filesUpdateArgs>(
      args: SelectSubset<T, proforma_filesUpdateArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Delete zero or more Proforma_files.
     * @param {proforma_filesDeleteManyArgs} args - Arguments to filter Proforma_files to delete.
     * @example
     * // Delete a few Proforma_files
     * const { count } = await prisma.proforma_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends proforma_filesDeleteManyArgs>(
      args?: SelectSubset<T, proforma_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proforma_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proforma_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proforma_files
     * const proforma_files = await prisma.proforma_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends proforma_filesUpdateManyArgs>(
      args: SelectSubset<T, proforma_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Proforma_files.
     * @param {proforma_filesUpsertArgs} args - Arguments to update or create a Proforma_files.
     * @example
     * // Update or create a Proforma_files
     * const proforma_files = await prisma.proforma_files.upsert({
     *   create: {
     *     // ... data to create a Proforma_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proforma_files we want to update
     *   }
     * })
    **/
    upsert<T extends proforma_filesUpsertArgs>(
      args: SelectSubset<T, proforma_filesUpsertArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Find one Proforma_files that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {proforma_filesFindUniqueOrThrowArgs} args - Arguments to find a Proforma_files
     * @example
     * // Get one Proforma_files
     * const proforma_files = await prisma.proforma_files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends proforma_filesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, proforma_filesFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Find the first Proforma_files that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proforma_filesFindFirstOrThrowArgs} args - Arguments to find a Proforma_files
     * @example
     * // Get one Proforma_files
     * const proforma_files = await prisma.proforma_files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends proforma_filesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, proforma_filesFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__proforma_filesClient<proforma_files>, Prisma__proforma_filesClient<proforma_filesGetPayload<T>>>

    /**
     * Count the number of Proforma_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proforma_filesCountArgs} args - Arguments to filter Proforma_files to count.
     * @example
     * // Count the number of Proforma_files
     * const count = await prisma.proforma_files.count({
     *   where: {
     *     // ... the filter for the Proforma_files we want to count
     *   }
     * })
    **/
    count<T extends proforma_filesCountArgs>(
      args?: Subset<T, proforma_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Proforma_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proforma_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Proforma_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Proforma_filesAggregateArgs>(args: Subset<T, Proforma_filesAggregateArgs>): PrismaPromise<GetProforma_filesAggregateType<T>>

    /**
     * Group by Proforma_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Proforma_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Proforma_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Proforma_filesGroupByArgs['orderBy'] }
        : { orderBy?: Proforma_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Proforma_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProforma_filesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for proforma_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__proforma_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    proformas<T extends proformasArgs = {}>(args?: Subset<T, proformasArgs>): CheckSelect<T, Prisma__proformasClient<proformas | null >, Prisma__proformasClient<proformasGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * proforma_files base type for findUnique actions
   */
  export type proforma_filesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * Filter, which proforma_files to fetch.
     * 
    **/
    where: proforma_filesWhereUniqueInput
  }

  /**
   * proforma_files: findUnique
   */
  export interface proforma_filesFindUniqueArgs extends proforma_filesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * proforma_files base type for findFirst actions
   */
  export type proforma_filesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * Filter, which proforma_files to fetch.
     * 
    **/
    where?: proforma_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proforma_files to fetch.
     * 
    **/
    orderBy?: Enumerable<proforma_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proforma_files.
     * 
    **/
    cursor?: proforma_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proforma_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proforma_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proforma_files.
     * 
    **/
    distinct?: Enumerable<Proforma_filesScalarFieldEnum>
  }

  /**
   * proforma_files: findFirst
   */
  export interface proforma_filesFindFirstArgs extends proforma_filesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * proforma_files findMany
   */
  export type proforma_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * Filter, which proforma_files to fetch.
     * 
    **/
    where?: proforma_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proforma_files to fetch.
     * 
    **/
    orderBy?: Enumerable<proforma_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proforma_files.
     * 
    **/
    cursor?: proforma_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proforma_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proforma_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Proforma_filesScalarFieldEnum>
  }


  /**
   * proforma_files create
   */
  export type proforma_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * The data needed to create a proforma_files.
     * 
    **/
    data: XOR<proforma_filesCreateInput, proforma_filesUncheckedCreateInput>
  }


  /**
   * proforma_files createMany
   */
  export type proforma_filesCreateManyArgs = {
    /**
     * The data used to create many proforma_files.
     * 
    **/
    data: Enumerable<proforma_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * proforma_files update
   */
  export type proforma_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * The data needed to update a proforma_files.
     * 
    **/
    data: XOR<proforma_filesUpdateInput, proforma_filesUncheckedUpdateInput>
    /**
     * Choose, which proforma_files to update.
     * 
    **/
    where: proforma_filesWhereUniqueInput
  }


  /**
   * proforma_files updateMany
   */
  export type proforma_filesUpdateManyArgs = {
    /**
     * The data used to update proforma_files.
     * 
    **/
    data: XOR<proforma_filesUpdateManyMutationInput, proforma_filesUncheckedUpdateManyInput>
    /**
     * Filter which proforma_files to update
     * 
    **/
    where?: proforma_filesWhereInput
  }


  /**
   * proforma_files upsert
   */
  export type proforma_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * The filter to search for the proforma_files to update in case it exists.
     * 
    **/
    where: proforma_filesWhereUniqueInput
    /**
     * In case the proforma_files found by the `where` argument doesn't exist, create a new proforma_files with this data.
     * 
    **/
    create: XOR<proforma_filesCreateInput, proforma_filesUncheckedCreateInput>
    /**
     * In case the proforma_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<proforma_filesUpdateInput, proforma_filesUncheckedUpdateInput>
  }


  /**
   * proforma_files delete
   */
  export type proforma_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
    /**
     * Filter which proforma_files to delete.
     * 
    **/
    where: proforma_filesWhereUniqueInput
  }


  /**
   * proforma_files deleteMany
   */
  export type proforma_filesDeleteManyArgs = {
    /**
     * Filter which proforma_files to delete
     * 
    **/
    where?: proforma_filesWhereInput
  }


  /**
   * proforma_files: findUniqueOrThrow
   */
  export type proforma_filesFindUniqueOrThrowArgs = proforma_filesFindUniqueArgsBase
      

  /**
   * proforma_files: findFirstOrThrow
   */
  export type proforma_filesFindFirstOrThrowArgs = proforma_filesFindFirstArgsBase
      

  /**
   * proforma_files without action
   */
  export type proforma_filesArgs = {
    /**
     * Select specific fields to fetch from the proforma_files
     * 
    **/
    select?: proforma_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proforma_filesInclude | null
  }



  /**
   * Model proformas
   */


  export type AggregateProformas = {
    _count: ProformasCountAggregateOutputType | null
    _avg: ProformasAvgAggregateOutputType | null
    _sum: ProformasSumAggregateOutputType | null
    _min: ProformasMinAggregateOutputType | null
    _max: ProformasMaxAggregateOutputType | null
  }

  export type ProformasAvgAggregateOutputType = {
    id: number | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    builtYear: number | null
    productTonnage: number | null
    usd: number | null
    beam: number | null
    draft: number | null
  }

  export type ProformasSumAggregateOutputType = {
    id: number | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    builtYear: number | null
    productTonnage: number | null
    usd: number | null
    beam: number | null
    draft: number | null
  }

  export type ProformasMinAggregateOutputType = {
    id: number | null
    taxes: string | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    idHash: string | null
    applicantName: string | null
    applicantEmail: string | null
    vesselName: string | null
    imo: string | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    package: string | null
    builtYear: number | null
    agencyType: string | null
    operationType: string | null
    productTonnage: number | null
    usd: number | null
    isCargillInternational: boolean | null
    beam: number | null
    etb: Date | null
    draft: number | null
    requestingCustomer: string | null
    vesselType: string | null
  }

  export type ProformasMaxAggregateOutputType = {
    id: number | null
    taxes: string | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    idHash: string | null
    applicantName: string | null
    applicantEmail: string | null
    vesselName: string | null
    imo: string | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    package: string | null
    builtYear: number | null
    agencyType: string | null
    operationType: string | null
    productTonnage: number | null
    usd: number | null
    isCargillInternational: boolean | null
    beam: number | null
    etb: Date | null
    draft: number | null
    requestingCustomer: string | null
    vesselType: string | null
  }

  export type ProformasCountAggregateOutputType = {
    id: number
    taxes: number
    totalValue: number
    berthedHours: number
    berthProductId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    idHash: number
    applicantName: number
    applicantEmail: number
    vesselName: number
    imo: number
    deadWeightTonnage: number
    lengthOverall: number
    grossTonnage: number
    package: number
    builtYear: number
    agencyType: number
    operationType: number
    productTonnage: number
    usd: number
    isCargillInternational: number
    beam: number
    etb: number
    draft: number
    requestingCustomer: number
    vesselType: number
    _all: number
  }


  export type ProformasAvgAggregateInputType = {
    id?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    builtYear?: true
    productTonnage?: true
    usd?: true
    beam?: true
    draft?: true
  }

  export type ProformasSumAggregateInputType = {
    id?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    builtYear?: true
    productTonnage?: true
    usd?: true
    beam?: true
    draft?: true
  }

  export type ProformasMinAggregateInputType = {
    id?: true
    taxes?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    idHash?: true
    applicantName?: true
    applicantEmail?: true
    vesselName?: true
    imo?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    package?: true
    builtYear?: true
    agencyType?: true
    operationType?: true
    productTonnage?: true
    usd?: true
    isCargillInternational?: true
    beam?: true
    etb?: true
    draft?: true
    requestingCustomer?: true
    vesselType?: true
  }

  export type ProformasMaxAggregateInputType = {
    id?: true
    taxes?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    idHash?: true
    applicantName?: true
    applicantEmail?: true
    vesselName?: true
    imo?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    package?: true
    builtYear?: true
    agencyType?: true
    operationType?: true
    productTonnage?: true
    usd?: true
    isCargillInternational?: true
    beam?: true
    etb?: true
    draft?: true
    requestingCustomer?: true
    vesselType?: true
  }

  export type ProformasCountAggregateInputType = {
    id?: true
    taxes?: true
    totalValue?: true
    berthedHours?: true
    berthProductId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    idHash?: true
    applicantName?: true
    applicantEmail?: true
    vesselName?: true
    imo?: true
    deadWeightTonnage?: true
    lengthOverall?: true
    grossTonnage?: true
    package?: true
    builtYear?: true
    agencyType?: true
    operationType?: true
    productTonnage?: true
    usd?: true
    isCargillInternational?: true
    beam?: true
    etb?: true
    draft?: true
    requestingCustomer?: true
    vesselType?: true
    _all?: true
  }

  export type ProformasAggregateArgs = {
    /**
     * Filter which proformas to aggregate.
     * 
    **/
    where?: proformasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proformas to fetch.
     * 
    **/
    orderBy?: Enumerable<proformasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: proformasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proformas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proformas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proformas
    **/
    _count?: true | ProformasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProformasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProformasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProformasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProformasMaxAggregateInputType
  }

  export type GetProformasAggregateType<T extends ProformasAggregateArgs> = {
        [P in keyof T & keyof AggregateProformas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProformas[P]>
      : GetScalarType<T[P], AggregateProformas[P]>
  }




  export type ProformasGroupByArgs = {
    where?: proformasWhereInput
    orderBy?: Enumerable<proformasOrderByWithAggregationInput>
    by: Array<ProformasScalarFieldEnum>
    having?: proformasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProformasCountAggregateInputType | true
    _avg?: ProformasAvgAggregateInputType
    _sum?: ProformasSumAggregateInputType
    _min?: ProformasMinAggregateInputType
    _max?: ProformasMaxAggregateInputType
  }


  export type ProformasGroupByOutputType = {
    id: number
    taxes: string | null
    totalValue: number | null
    berthedHours: number | null
    berthProductId: number
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    idHash: string | null
    applicantName: string | null
    applicantEmail: string | null
    vesselName: string | null
    imo: string | null
    deadWeightTonnage: number | null
    lengthOverall: number | null
    grossTonnage: number | null
    package: string | null
    builtYear: number | null
    agencyType: string | null
    operationType: string | null
    productTonnage: number | null
    usd: number | null
    isCargillInternational: boolean | null
    beam: number | null
    etb: Date | null
    draft: number | null
    requestingCustomer: string | null
    vesselType: string | null
    _count: ProformasCountAggregateOutputType | null
    _avg: ProformasAvgAggregateOutputType | null
    _sum: ProformasSumAggregateOutputType | null
    _min: ProformasMinAggregateOutputType | null
    _max: ProformasMaxAggregateOutputType | null
  }

  type GetProformasGroupByPayload<T extends ProformasGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ProformasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProformasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProformasGroupByOutputType[P]>
            : GetScalarType<T[P], ProformasGroupByOutputType[P]>
        }
      >
    >


  export type proformasSelect = {
    id?: boolean
    taxes?: boolean
    totalValue?: boolean
    berthedHours?: boolean
    berthProductId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    idHash?: boolean
    applicantName?: boolean
    applicantEmail?: boolean
    vesselName?: boolean
    imo?: boolean
    deadWeightTonnage?: boolean
    lengthOverall?: boolean
    grossTonnage?: boolean
    package?: boolean
    builtYear?: boolean
    agencyType?: boolean
    operationType?: boolean
    productTonnage?: boolean
    usd?: boolean
    isCargillInternational?: boolean
    beam?: boolean
    etb?: boolean
    draft?: boolean
    requestingCustomer?: boolean
    vesselType?: boolean
    berth_products?: boolean | berth_productsArgs
    proforma_files?: boolean | proforma_filesFindManyArgs
    _count?: boolean | ProformasCountOutputTypeArgs
  }

  export type proformasInclude = {
    berth_products?: boolean | berth_productsArgs
    proforma_files?: boolean | proforma_filesFindManyArgs
    _count?: boolean | ProformasCountOutputTypeArgs
  }

  export type proformasGetPayload<
    S extends boolean | null | undefined | proformasArgs,
    U = keyof S
      > = S extends true
        ? proformas
    : S extends undefined
    ? never
    : S extends proformasArgs | proformasFindManyArgs
    ?'include' extends U
    ? proformas  & {
    [P in TrueKeys<S['include']>]:
        P extends 'berth_products' ? berth_productsGetPayload<Exclude<S['include'], undefined | null>[P]> :
        P extends 'proforma_files' ? Array < proforma_filesGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? ProformasCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'berth_products' ? berth_productsGetPayload<Exclude<S['select'], undefined | null>[P]> :
        P extends 'proforma_files' ? Array < proforma_filesGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? ProformasCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof proformas ? proformas[P] : never
  } 
    : proformas
  : proformas


  type proformasCountArgs = Merge<
    Omit<proformasFindManyArgs, 'select' | 'include'> & {
      select?: ProformasCountAggregateInputType | true
    }
  >

  export interface proformasDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Proformas that matches the filter.
     * @param {proformasFindUniqueArgs} args - Arguments to find a Proformas
     * @example
     * // Get one Proformas
     * const proformas = await prisma.proformas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends proformasFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, proformasFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'proformas'> extends True ? CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>> : CheckSelect<T, Prisma__proformasClient<proformas | null >, Prisma__proformasClient<proformasGetPayload<T> | null >>

    /**
     * Find the first Proformas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proformasFindFirstArgs} args - Arguments to find a Proformas
     * @example
     * // Get one Proformas
     * const proformas = await prisma.proformas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends proformasFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, proformasFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'proformas'> extends True ? CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>> : CheckSelect<T, Prisma__proformasClient<proformas | null >, Prisma__proformasClient<proformasGetPayload<T> | null >>

    /**
     * Find zero or more Proformas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proformasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proformas
     * const proformas = await prisma.proformas.findMany()
     * 
     * // Get first 10 Proformas
     * const proformas = await prisma.proformas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proformasWithIdOnly = await prisma.proformas.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends proformasFindManyArgs>(
      args?: SelectSubset<T, proformasFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<proformas>>, PrismaPromise<Array<proformasGetPayload<T>>>>

    /**
     * Create a Proformas.
     * @param {proformasCreateArgs} args - Arguments to create a Proformas.
     * @example
     * // Create one Proformas
     * const Proformas = await prisma.proformas.create({
     *   data: {
     *     // ... data to create a Proformas
     *   }
     * })
     * 
    **/
    create<T extends proformasCreateArgs>(
      args: SelectSubset<T, proformasCreateArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Create many Proformas.
     *     @param {proformasCreateManyArgs} args - Arguments to create many Proformas.
     *     @example
     *     // Create many Proformas
     *     const proformas = await prisma.proformas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends proformasCreateManyArgs>(
      args?: SelectSubset<T, proformasCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Proformas.
     * @param {proformasDeleteArgs} args - Arguments to delete one Proformas.
     * @example
     * // Delete one Proformas
     * const Proformas = await prisma.proformas.delete({
     *   where: {
     *     // ... filter to delete one Proformas
     *   }
     * })
     * 
    **/
    delete<T extends proformasDeleteArgs>(
      args: SelectSubset<T, proformasDeleteArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Update one Proformas.
     * @param {proformasUpdateArgs} args - Arguments to update one Proformas.
     * @example
     * // Update one Proformas
     * const proformas = await prisma.proformas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends proformasUpdateArgs>(
      args: SelectSubset<T, proformasUpdateArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Delete zero or more Proformas.
     * @param {proformasDeleteManyArgs} args - Arguments to filter Proformas to delete.
     * @example
     * // Delete a few Proformas
     * const { count } = await prisma.proformas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends proformasDeleteManyArgs>(
      args?: SelectSubset<T, proformasDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proformasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proformas
     * const proformas = await prisma.proformas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends proformasUpdateManyArgs>(
      args: SelectSubset<T, proformasUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Proformas.
     * @param {proformasUpsertArgs} args - Arguments to update or create a Proformas.
     * @example
     * // Update or create a Proformas
     * const proformas = await prisma.proformas.upsert({
     *   create: {
     *     // ... data to create a Proformas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proformas we want to update
     *   }
     * })
    **/
    upsert<T extends proformasUpsertArgs>(
      args: SelectSubset<T, proformasUpsertArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Find one Proformas that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {proformasFindUniqueOrThrowArgs} args - Arguments to find a Proformas
     * @example
     * // Get one Proformas
     * const proformas = await prisma.proformas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends proformasFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, proformasFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Find the first Proformas that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proformasFindFirstOrThrowArgs} args - Arguments to find a Proformas
     * @example
     * // Get one Proformas
     * const proformas = await prisma.proformas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends proformasFindFirstOrThrowArgs>(
      args?: SelectSubset<T, proformasFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__proformasClient<proformas>, Prisma__proformasClient<proformasGetPayload<T>>>

    /**
     * Count the number of Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proformasCountArgs} args - Arguments to filter Proformas to count.
     * @example
     * // Count the number of Proformas
     * const count = await prisma.proformas.count({
     *   where: {
     *     // ... the filter for the Proformas we want to count
     *   }
     * })
    **/
    count<T extends proformasCountArgs>(
      args?: Subset<T, proformasCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProformasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProformasAggregateArgs>(args: Subset<T, ProformasAggregateArgs>): PrismaPromise<GetProformasAggregateType<T>>

    /**
     * Group by Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProformasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProformasGroupByArgs['orderBy'] }
        : { orderBy?: ProformasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProformasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProformasGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for proformas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__proformasClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    berth_products<T extends berth_productsArgs = {}>(args?: Subset<T, berth_productsArgs>): CheckSelect<T, Prisma__berth_productsClient<berth_products | null >, Prisma__berth_productsClient<berth_productsGetPayload<T> | null >>;

    proforma_files<T extends proforma_filesFindManyArgs = {}>(args?: Subset<T, proforma_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<proforma_files>>, PrismaPromise<Array<proforma_filesGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * proformas base type for findUnique actions
   */
  export type proformasFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * Filter, which proformas to fetch.
     * 
    **/
    where: proformasWhereUniqueInput
  }

  /**
   * proformas: findUnique
   */
  export interface proformasFindUniqueArgs extends proformasFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * proformas base type for findFirst actions
   */
  export type proformasFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * Filter, which proformas to fetch.
     * 
    **/
    where?: proformasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proformas to fetch.
     * 
    **/
    orderBy?: Enumerable<proformasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proformas.
     * 
    **/
    cursor?: proformasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proformas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proformas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proformas.
     * 
    **/
    distinct?: Enumerable<ProformasScalarFieldEnum>
  }

  /**
   * proformas: findFirst
   */
  export interface proformasFindFirstArgs extends proformasFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * proformas findMany
   */
  export type proformasFindManyArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * Filter, which proformas to fetch.
     * 
    **/
    where?: proformasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proformas to fetch.
     * 
    **/
    orderBy?: Enumerable<proformasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proformas.
     * 
    **/
    cursor?: proformasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proformas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proformas.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProformasScalarFieldEnum>
  }


  /**
   * proformas create
   */
  export type proformasCreateArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * The data needed to create a proformas.
     * 
    **/
    data: XOR<proformasCreateInput, proformasUncheckedCreateInput>
  }


  /**
   * proformas createMany
   */
  export type proformasCreateManyArgs = {
    /**
     * The data used to create many proformas.
     * 
    **/
    data: Enumerable<proformasCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * proformas update
   */
  export type proformasUpdateArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * The data needed to update a proformas.
     * 
    **/
    data: XOR<proformasUpdateInput, proformasUncheckedUpdateInput>
    /**
     * Choose, which proformas to update.
     * 
    **/
    where: proformasWhereUniqueInput
  }


  /**
   * proformas updateMany
   */
  export type proformasUpdateManyArgs = {
    /**
     * The data used to update proformas.
     * 
    **/
    data: XOR<proformasUpdateManyMutationInput, proformasUncheckedUpdateManyInput>
    /**
     * Filter which proformas to update
     * 
    **/
    where?: proformasWhereInput
  }


  /**
   * proformas upsert
   */
  export type proformasUpsertArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * The filter to search for the proformas to update in case it exists.
     * 
    **/
    where: proformasWhereUniqueInput
    /**
     * In case the proformas found by the `where` argument doesn't exist, create a new proformas with this data.
     * 
    **/
    create: XOR<proformasCreateInput, proformasUncheckedCreateInput>
    /**
     * In case the proformas was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<proformasUpdateInput, proformasUncheckedUpdateInput>
  }


  /**
   * proformas delete
   */
  export type proformasDeleteArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
    /**
     * Filter which proformas to delete.
     * 
    **/
    where: proformasWhereUniqueInput
  }


  /**
   * proformas deleteMany
   */
  export type proformasDeleteManyArgs = {
    /**
     * Filter which proformas to delete
     * 
    **/
    where?: proformasWhereInput
  }


  /**
   * proformas: findUniqueOrThrow
   */
  export type proformasFindUniqueOrThrowArgs = proformasFindUniqueArgsBase
      

  /**
   * proformas: findFirstOrThrow
   */
  export type proformasFindFirstOrThrowArgs = proformasFindFirstArgsBase
      

  /**
   * proformas without action
   */
  export type proformasArgs = {
    /**
     * Select specific fields to fetch from the proformas
     * 
    **/
    select?: proformasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: proformasInclude | null
  }



  /**
   * Model shipping_documents
   */


  export type AggregateShipping_documents = {
    _count: Shipping_documentsCountAggregateOutputType | null
    _avg: Shipping_documentsAvgAggregateOutputType | null
    _sum: Shipping_documentsSumAggregateOutputType | null
    _min: Shipping_documentsMinAggregateOutputType | null
    _max: Shipping_documentsMaxAggregateOutputType | null
  }

  export type Shipping_documentsAvgAggregateOutputType = {
    id: number | null
    number_of_original_bill_of_landing: number | null
    shipper_id: number | null
    product_id: number | null
    shipping_id: number | null
    user_id: number | null
    order: number | null
    subset_id: number | null
    product_gross_weight: number | null
    product_net_weight: number | null
    product_quantity: number | null
  }

  export type Shipping_documentsSumAggregateOutputType = {
    id: number | null
    number_of_original_bill_of_landing: number | null
    shipper_id: number | null
    product_id: number | null
    shipping_id: number | null
    user_id: number | null
    order: number | null
    subset_id: number | null
    product_gross_weight: number | null
    product_net_weight: number | null
    product_quantity: number | null
  }

  export type Shipping_documentsMinAggregateOutputType = {
    id: number | null
    type: string | null
    document_number: string | null
    consignee: string | null
    vessel_name: string | null
    port_of_loading: string | null
    port_of_discharge: string | null
    notify: string | null
    product_name_extra_info: string | null
    product_weight_extra_info: string | null
    freight_type: string | null
    charter_party_date: string | null
    ship_boarded_date: string | null
    issue_place_date: string | null
    number_of_original_bill_of_landing: number | null
    shipper_id: number | null
    product_id: number | null
    master_name: string | null
    signature: string | null
    shipping_id: number | null
    user_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    order: number | null
    subset_id: number | null
    product_gross_weight: number | null
    product_net_weight: number | null
    product_quantity: number | null
    product_packing: string | null
  }

  export type Shipping_documentsMaxAggregateOutputType = {
    id: number | null
    type: string | null
    document_number: string | null
    consignee: string | null
    vessel_name: string | null
    port_of_loading: string | null
    port_of_discharge: string | null
    notify: string | null
    product_name_extra_info: string | null
    product_weight_extra_info: string | null
    freight_type: string | null
    charter_party_date: string | null
    ship_boarded_date: string | null
    issue_place_date: string | null
    number_of_original_bill_of_landing: number | null
    shipper_id: number | null
    product_id: number | null
    master_name: string | null
    signature: string | null
    shipping_id: number | null
    user_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    order: number | null
    subset_id: number | null
    product_gross_weight: number | null
    product_net_weight: number | null
    product_quantity: number | null
    product_packing: string | null
  }

  export type Shipping_documentsCountAggregateOutputType = {
    id: number
    type: number
    document_number: number
    consignee: number
    vessel_name: number
    port_of_loading: number
    port_of_discharge: number
    notify: number
    product_name_extra_info: number
    product_weight_extra_info: number
    freight_type: number
    charter_party_date: number
    ship_boarded_date: number
    issue_place_date: number
    number_of_original_bill_of_landing: number
    shipper_id: number
    product_id: number
    master_name: number
    signature: number
    shipping_id: number
    user_id: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    order: number
    subset_id: number
    product_gross_weight: number
    product_net_weight: number
    product_quantity: number
    product_packing: number
    _all: number
  }


  export type Shipping_documentsAvgAggregateInputType = {
    id?: true
    number_of_original_bill_of_landing?: true
    shipper_id?: true
    product_id?: true
    shipping_id?: true
    user_id?: true
    order?: true
    subset_id?: true
    product_gross_weight?: true
    product_net_weight?: true
    product_quantity?: true
  }

  export type Shipping_documentsSumAggregateInputType = {
    id?: true
    number_of_original_bill_of_landing?: true
    shipper_id?: true
    product_id?: true
    shipping_id?: true
    user_id?: true
    order?: true
    subset_id?: true
    product_gross_weight?: true
    product_net_weight?: true
    product_quantity?: true
  }

  export type Shipping_documentsMinAggregateInputType = {
    id?: true
    type?: true
    document_number?: true
    consignee?: true
    vessel_name?: true
    port_of_loading?: true
    port_of_discharge?: true
    notify?: true
    product_name_extra_info?: true
    product_weight_extra_info?: true
    freight_type?: true
    charter_party_date?: true
    ship_boarded_date?: true
    issue_place_date?: true
    number_of_original_bill_of_landing?: true
    shipper_id?: true
    product_id?: true
    master_name?: true
    signature?: true
    shipping_id?: true
    user_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    order?: true
    subset_id?: true
    product_gross_weight?: true
    product_net_weight?: true
    product_quantity?: true
    product_packing?: true
  }

  export type Shipping_documentsMaxAggregateInputType = {
    id?: true
    type?: true
    document_number?: true
    consignee?: true
    vessel_name?: true
    port_of_loading?: true
    port_of_discharge?: true
    notify?: true
    product_name_extra_info?: true
    product_weight_extra_info?: true
    freight_type?: true
    charter_party_date?: true
    ship_boarded_date?: true
    issue_place_date?: true
    number_of_original_bill_of_landing?: true
    shipper_id?: true
    product_id?: true
    master_name?: true
    signature?: true
    shipping_id?: true
    user_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    order?: true
    subset_id?: true
    product_gross_weight?: true
    product_net_weight?: true
    product_quantity?: true
    product_packing?: true
  }

  export type Shipping_documentsCountAggregateInputType = {
    id?: true
    type?: true
    document_number?: true
    consignee?: true
    vessel_name?: true
    port_of_loading?: true
    port_of_discharge?: true
    notify?: true
    product_name_extra_info?: true
    product_weight_extra_info?: true
    freight_type?: true
    charter_party_date?: true
    ship_boarded_date?: true
    issue_place_date?: true
    number_of_original_bill_of_landing?: true
    shipper_id?: true
    product_id?: true
    master_name?: true
    signature?: true
    shipping_id?: true
    user_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    order?: true
    subset_id?: true
    product_gross_weight?: true
    product_net_weight?: true
    product_quantity?: true
    product_packing?: true
    _all?: true
  }

  export type Shipping_documentsAggregateArgs = {
    /**
     * Filter which shipping_documents to aggregate.
     * 
    **/
    where?: shipping_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_documents to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_documentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: shipping_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_documents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_documents.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned shipping_documents
    **/
    _count?: true | Shipping_documentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Shipping_documentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Shipping_documentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Shipping_documentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Shipping_documentsMaxAggregateInputType
  }

  export type GetShipping_documentsAggregateType<T extends Shipping_documentsAggregateArgs> = {
        [P in keyof T & keyof AggregateShipping_documents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipping_documents[P]>
      : GetScalarType<T[P], AggregateShipping_documents[P]>
  }




  export type Shipping_documentsGroupByArgs = {
    where?: shipping_documentsWhereInput
    orderBy?: Enumerable<shipping_documentsOrderByWithAggregationInput>
    by: Array<Shipping_documentsScalarFieldEnum>
    having?: shipping_documentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Shipping_documentsCountAggregateInputType | true
    _avg?: Shipping_documentsAvgAggregateInputType
    _sum?: Shipping_documentsSumAggregateInputType
    _min?: Shipping_documentsMinAggregateInputType
    _max?: Shipping_documentsMaxAggregateInputType
  }


  export type Shipping_documentsGroupByOutputType = {
    id: number
    type: string | null
    document_number: string | null
    consignee: string | null
    vessel_name: string | null
    port_of_loading: string | null
    port_of_discharge: string | null
    notify: string | null
    product_name_extra_info: string | null
    product_weight_extra_info: string | null
    freight_type: string | null
    charter_party_date: string | null
    ship_boarded_date: string | null
    issue_place_date: string | null
    number_of_original_bill_of_landing: number | null
    shipper_id: number | null
    product_id: number | null
    master_name: string | null
    signature: string | null
    shipping_id: number | null
    user_id: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    order: number | null
    subset_id: number | null
    product_gross_weight: number | null
    product_net_weight: number | null
    product_quantity: number | null
    product_packing: string | null
    _count: Shipping_documentsCountAggregateOutputType | null
    _avg: Shipping_documentsAvgAggregateOutputType | null
    _sum: Shipping_documentsSumAggregateOutputType | null
    _min: Shipping_documentsMinAggregateOutputType | null
    _max: Shipping_documentsMaxAggregateOutputType | null
  }

  type GetShipping_documentsGroupByPayload<T extends Shipping_documentsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Shipping_documentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Shipping_documentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Shipping_documentsGroupByOutputType[P]>
            : GetScalarType<T[P], Shipping_documentsGroupByOutputType[P]>
        }
      >
    >


  export type shipping_documentsSelect = {
    id?: boolean
    type?: boolean
    document_number?: boolean
    consignee?: boolean
    vessel_name?: boolean
    port_of_loading?: boolean
    port_of_discharge?: boolean
    notify?: boolean
    product_name_extra_info?: boolean
    product_weight_extra_info?: boolean
    freight_type?: boolean
    charter_party_date?: boolean
    ship_boarded_date?: boolean
    issue_place_date?: boolean
    number_of_original_bill_of_landing?: boolean
    shipper_id?: boolean
    product_id?: boolean
    master_name?: boolean
    signature?: boolean
    shipping_id?: boolean
    user_id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    order?: boolean
    subset_id?: boolean
    product_gross_weight?: boolean
    product_net_weight?: boolean
    product_quantity?: boolean
    product_packing?: boolean
    shippings?: boolean | ShippingArgs
    subsets?: boolean | subsetsArgs
    users?: boolean | usersArgs
    document_shipper?: boolean | document_shipperArgs
    document_product?: boolean | document_productArgs
  }

  export type shipping_documentsInclude = {
    shippings?: boolean | ShippingArgs
    subsets?: boolean | subsetsArgs
    users?: boolean | usersArgs
    document_shipper?: boolean | document_shipperArgs
    document_product?: boolean | document_productArgs
  }

  export type shipping_documentsGetPayload<
    S extends boolean | null | undefined | shipping_documentsArgs,
    U = keyof S
      > = S extends true
        ? shipping_documents
    : S extends undefined
    ? never
    : S extends shipping_documentsArgs | shipping_documentsFindManyArgs
    ?'include' extends U
    ? shipping_documents  & {
    [P in TrueKeys<S['include']>]:
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'subsets' ? subsetsGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'document_shipper' ? document_shipperGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'document_product' ? document_productGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'subsets' ? subsetsGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'document_shipper' ? document_shipperGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'document_product' ? document_productGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof shipping_documents ? shipping_documents[P] : never
  } 
    : shipping_documents
  : shipping_documents


  type shipping_documentsCountArgs = Merge<
    Omit<shipping_documentsFindManyArgs, 'select' | 'include'> & {
      select?: Shipping_documentsCountAggregateInputType | true
    }
  >

  export interface shipping_documentsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Shipping_documents that matches the filter.
     * @param {shipping_documentsFindUniqueArgs} args - Arguments to find a Shipping_documents
     * @example
     * // Get one Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends shipping_documentsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, shipping_documentsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'shipping_documents'> extends True ? CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>> : CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents | null >, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T> | null >>

    /**
     * Find the first Shipping_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_documentsFindFirstArgs} args - Arguments to find a Shipping_documents
     * @example
     * // Get one Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends shipping_documentsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, shipping_documentsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'shipping_documents'> extends True ? CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>> : CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents | null >, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T> | null >>

    /**
     * Find zero or more Shipping_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_documentsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findMany()
     * 
     * // Get first 10 Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipping_documentsWithIdOnly = await prisma.shipping_documents.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends shipping_documentsFindManyArgs>(
      args?: SelectSubset<T, shipping_documentsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>

    /**
     * Create a Shipping_documents.
     * @param {shipping_documentsCreateArgs} args - Arguments to create a Shipping_documents.
     * @example
     * // Create one Shipping_documents
     * const Shipping_documents = await prisma.shipping_documents.create({
     *   data: {
     *     // ... data to create a Shipping_documents
     *   }
     * })
     * 
    **/
    create<T extends shipping_documentsCreateArgs>(
      args: SelectSubset<T, shipping_documentsCreateArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Create many Shipping_documents.
     *     @param {shipping_documentsCreateManyArgs} args - Arguments to create many Shipping_documents.
     *     @example
     *     // Create many Shipping_documents
     *     const shipping_documents = await prisma.shipping_documents.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends shipping_documentsCreateManyArgs>(
      args?: SelectSubset<T, shipping_documentsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Shipping_documents.
     * @param {shipping_documentsDeleteArgs} args - Arguments to delete one Shipping_documents.
     * @example
     * // Delete one Shipping_documents
     * const Shipping_documents = await prisma.shipping_documents.delete({
     *   where: {
     *     // ... filter to delete one Shipping_documents
     *   }
     * })
     * 
    **/
    delete<T extends shipping_documentsDeleteArgs>(
      args: SelectSubset<T, shipping_documentsDeleteArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Update one Shipping_documents.
     * @param {shipping_documentsUpdateArgs} args - Arguments to update one Shipping_documents.
     * @example
     * // Update one Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends shipping_documentsUpdateArgs>(
      args: SelectSubset<T, shipping_documentsUpdateArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Delete zero or more Shipping_documents.
     * @param {shipping_documentsDeleteManyArgs} args - Arguments to filter Shipping_documents to delete.
     * @example
     * // Delete a few Shipping_documents
     * const { count } = await prisma.shipping_documents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends shipping_documentsDeleteManyArgs>(
      args?: SelectSubset<T, shipping_documentsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shipping_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_documentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends shipping_documentsUpdateManyArgs>(
      args: SelectSubset<T, shipping_documentsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Shipping_documents.
     * @param {shipping_documentsUpsertArgs} args - Arguments to update or create a Shipping_documents.
     * @example
     * // Update or create a Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.upsert({
     *   create: {
     *     // ... data to create a Shipping_documents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipping_documents we want to update
     *   }
     * })
    **/
    upsert<T extends shipping_documentsUpsertArgs>(
      args: SelectSubset<T, shipping_documentsUpsertArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Find one Shipping_documents that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {shipping_documentsFindUniqueOrThrowArgs} args - Arguments to find a Shipping_documents
     * @example
     * // Get one Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends shipping_documentsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, shipping_documentsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Find the first Shipping_documents that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_documentsFindFirstOrThrowArgs} args - Arguments to find a Shipping_documents
     * @example
     * // Get one Shipping_documents
     * const shipping_documents = await prisma.shipping_documents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends shipping_documentsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, shipping_documentsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__shipping_documentsClient<shipping_documents>, Prisma__shipping_documentsClient<shipping_documentsGetPayload<T>>>

    /**
     * Count the number of Shipping_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_documentsCountArgs} args - Arguments to filter Shipping_documents to count.
     * @example
     * // Count the number of Shipping_documents
     * const count = await prisma.shipping_documents.count({
     *   where: {
     *     // ... the filter for the Shipping_documents we want to count
     *   }
     * })
    **/
    count<T extends shipping_documentsCountArgs>(
      args?: Subset<T, shipping_documentsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Shipping_documentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipping_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_documentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Shipping_documentsAggregateArgs>(args: Subset<T, Shipping_documentsAggregateArgs>): PrismaPromise<GetShipping_documentsAggregateType<T>>

    /**
     * Group by Shipping_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_documentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Shipping_documentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Shipping_documentsGroupByArgs['orderBy'] }
        : { orderBy?: Shipping_documentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Shipping_documentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipping_documentsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for shipping_documents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__shipping_documentsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    subsets<T extends subsetsArgs = {}>(args?: Subset<T, subsetsArgs>): CheckSelect<T, Prisma__subsetsClient<subsets | null >, Prisma__subsetsClient<subsetsGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    document_shipper<T extends document_shipperArgs = {}>(args?: Subset<T, document_shipperArgs>): CheckSelect<T, Prisma__document_shipperClient<document_shipper | null >, Prisma__document_shipperClient<document_shipperGetPayload<T> | null >>;

    document_product<T extends document_productArgs = {}>(args?: Subset<T, document_productArgs>): CheckSelect<T, Prisma__document_productClient<document_product | null >, Prisma__document_productClient<document_productGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * shipping_documents base type for findUnique actions
   */
  export type shipping_documentsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * Filter, which shipping_documents to fetch.
     * 
    **/
    where: shipping_documentsWhereUniqueInput
  }

  /**
   * shipping_documents: findUnique
   */
  export interface shipping_documentsFindUniqueArgs extends shipping_documentsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * shipping_documents base type for findFirst actions
   */
  export type shipping_documentsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * Filter, which shipping_documents to fetch.
     * 
    **/
    where?: shipping_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_documents to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_documentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shipping_documents.
     * 
    **/
    cursor?: shipping_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_documents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_documents.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shipping_documents.
     * 
    **/
    distinct?: Enumerable<Shipping_documentsScalarFieldEnum>
  }

  /**
   * shipping_documents: findFirst
   */
  export interface shipping_documentsFindFirstArgs extends shipping_documentsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * shipping_documents findMany
   */
  export type shipping_documentsFindManyArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * Filter, which shipping_documents to fetch.
     * 
    **/
    where?: shipping_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_documents to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_documentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing shipping_documents.
     * 
    **/
    cursor?: shipping_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_documents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_documents.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Shipping_documentsScalarFieldEnum>
  }


  /**
   * shipping_documents create
   */
  export type shipping_documentsCreateArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * The data needed to create a shipping_documents.
     * 
    **/
    data: XOR<shipping_documentsCreateInput, shipping_documentsUncheckedCreateInput>
  }


  /**
   * shipping_documents createMany
   */
  export type shipping_documentsCreateManyArgs = {
    /**
     * The data used to create many shipping_documents.
     * 
    **/
    data: Enumerable<shipping_documentsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * shipping_documents update
   */
  export type shipping_documentsUpdateArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * The data needed to update a shipping_documents.
     * 
    **/
    data: XOR<shipping_documentsUpdateInput, shipping_documentsUncheckedUpdateInput>
    /**
     * Choose, which shipping_documents to update.
     * 
    **/
    where: shipping_documentsWhereUniqueInput
  }


  /**
   * shipping_documents updateMany
   */
  export type shipping_documentsUpdateManyArgs = {
    /**
     * The data used to update shipping_documents.
     * 
    **/
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyInput>
    /**
     * Filter which shipping_documents to update
     * 
    **/
    where?: shipping_documentsWhereInput
  }


  /**
   * shipping_documents upsert
   */
  export type shipping_documentsUpsertArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * The filter to search for the shipping_documents to update in case it exists.
     * 
    **/
    where: shipping_documentsWhereUniqueInput
    /**
     * In case the shipping_documents found by the `where` argument doesn't exist, create a new shipping_documents with this data.
     * 
    **/
    create: XOR<shipping_documentsCreateInput, shipping_documentsUncheckedCreateInput>
    /**
     * In case the shipping_documents was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<shipping_documentsUpdateInput, shipping_documentsUncheckedUpdateInput>
  }


  /**
   * shipping_documents delete
   */
  export type shipping_documentsDeleteArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
    /**
     * Filter which shipping_documents to delete.
     * 
    **/
    where: shipping_documentsWhereUniqueInput
  }


  /**
   * shipping_documents deleteMany
   */
  export type shipping_documentsDeleteManyArgs = {
    /**
     * Filter which shipping_documents to delete
     * 
    **/
    where?: shipping_documentsWhereInput
  }


  /**
   * shipping_documents: findUniqueOrThrow
   */
  export type shipping_documentsFindUniqueOrThrowArgs = shipping_documentsFindUniqueArgsBase
      

  /**
   * shipping_documents: findFirstOrThrow
   */
  export type shipping_documentsFindFirstOrThrowArgs = shipping_documentsFindFirstArgsBase
      

  /**
   * shipping_documents without action
   */
  export type shipping_documentsArgs = {
    /**
     * Select specific fields to fetch from the shipping_documents
     * 
    **/
    select?: shipping_documentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_documentsInclude | null
  }



  /**
   * Model document_shipper
   */


  export type AggregateDocument_shipper = {
    _count: Document_shipperCountAggregateOutputType | null
    _avg: Document_shipperAvgAggregateOutputType | null
    _sum: Document_shipperSumAggregateOutputType | null
    _min: Document_shipperMinAggregateOutputType | null
    _max: Document_shipperMaxAggregateOutputType | null
  }

  export type Document_shipperAvgAggregateOutputType = {
    id: number | null
  }

  export type Document_shipperSumAggregateOutputType = {
    id: number | null
  }

  export type Document_shipperMinAggregateOutputType = {
    id: number | null
    name: string | null
    cnpj: string | null
    complement: string | null
  }

  export type Document_shipperMaxAggregateOutputType = {
    id: number | null
    name: string | null
    cnpj: string | null
    complement: string | null
  }

  export type Document_shipperCountAggregateOutputType = {
    id: number
    name: number
    cnpj: number
    complement: number
    _all: number
  }


  export type Document_shipperAvgAggregateInputType = {
    id?: true
  }

  export type Document_shipperSumAggregateInputType = {
    id?: true
  }

  export type Document_shipperMinAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    complement?: true
  }

  export type Document_shipperMaxAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    complement?: true
  }

  export type Document_shipperCountAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    complement?: true
    _all?: true
  }

  export type Document_shipperAggregateArgs = {
    /**
     * Filter which document_shipper to aggregate.
     * 
    **/
    where?: document_shipperWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_shippers to fetch.
     * 
    **/
    orderBy?: Enumerable<document_shipperOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: document_shipperWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_shippers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_shippers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned document_shippers
    **/
    _count?: true | Document_shipperCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Document_shipperAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Document_shipperSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Document_shipperMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Document_shipperMaxAggregateInputType
  }

  export type GetDocument_shipperAggregateType<T extends Document_shipperAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument_shipper]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument_shipper[P]>
      : GetScalarType<T[P], AggregateDocument_shipper[P]>
  }




  export type Document_shipperGroupByArgs = {
    where?: document_shipperWhereInput
    orderBy?: Enumerable<document_shipperOrderByWithAggregationInput>
    by: Array<Document_shipperScalarFieldEnum>
    having?: document_shipperScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Document_shipperCountAggregateInputType | true
    _avg?: Document_shipperAvgAggregateInputType
    _sum?: Document_shipperSumAggregateInputType
    _min?: Document_shipperMinAggregateInputType
    _max?: Document_shipperMaxAggregateInputType
  }


  export type Document_shipperGroupByOutputType = {
    id: number
    name: string | null
    cnpj: string | null
    complement: string | null
    _count: Document_shipperCountAggregateOutputType | null
    _avg: Document_shipperAvgAggregateOutputType | null
    _sum: Document_shipperSumAggregateOutputType | null
    _min: Document_shipperMinAggregateOutputType | null
    _max: Document_shipperMaxAggregateOutputType | null
  }

  type GetDocument_shipperGroupByPayload<T extends Document_shipperGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Document_shipperGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Document_shipperGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Document_shipperGroupByOutputType[P]>
            : GetScalarType<T[P], Document_shipperGroupByOutputType[P]>
        }
      >
    >


  export type document_shipperSelect = {
    id?: boolean
    name?: boolean
    cnpj?: boolean
    complement?: boolean
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    _count?: boolean | Document_shipperCountOutputTypeArgs
  }

  export type document_shipperInclude = {
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    _count?: boolean | Document_shipperCountOutputTypeArgs
  }

  export type document_shipperGetPayload<
    S extends boolean | null | undefined | document_shipperArgs,
    U = keyof S
      > = S extends true
        ? document_shipper
    : S extends undefined
    ? never
    : S extends document_shipperArgs | document_shipperFindManyArgs
    ?'include' extends U
    ? document_shipper  & {
    [P in TrueKeys<S['include']>]:
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? Document_shipperCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? Document_shipperCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof document_shipper ? document_shipper[P] : never
  } 
    : document_shipper
  : document_shipper


  type document_shipperCountArgs = Merge<
    Omit<document_shipperFindManyArgs, 'select' | 'include'> & {
      select?: Document_shipperCountAggregateInputType | true
    }
  >

  export interface document_shipperDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Document_shipper that matches the filter.
     * @param {document_shipperFindUniqueArgs} args - Arguments to find a Document_shipper
     * @example
     * // Get one Document_shipper
     * const document_shipper = await prisma.document_shipper.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends document_shipperFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, document_shipperFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'document_shipper'> extends True ? CheckSelect<T, Prisma__document_shipperClient<document_shipper>, Prisma__document_shipperClient<document_shipperGetPayload<T>>> : CheckSelect<T, Prisma__document_shipperClient<document_shipper | null >, Prisma__document_shipperClient<document_shipperGetPayload<T> | null >>

    /**
     * Find the first Document_shipper that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_shipperFindFirstArgs} args - Arguments to find a Document_shipper
     * @example
     * // Get one Document_shipper
     * const document_shipper = await prisma.document_shipper.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends document_shipperFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, document_shipperFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'document_shipper'> extends True ? CheckSelect<T, Prisma__document_shipperClient<document_shipper>, Prisma__document_shipperClient<document_shipperGetPayload<T>>> : CheckSelect<T, Prisma__document_shipperClient<document_shipper | null >, Prisma__document_shipperClient<document_shipperGetPayload<T> | null >>

    /**
     * Find zero or more Document_shippers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_shipperFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Document_shippers
     * const document_shippers = await prisma.document_shipper.findMany()
     * 
     * // Get first 10 Document_shippers
     * const document_shippers = await prisma.document_shipper.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const document_shipperWithIdOnly = await prisma.document_shipper.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends document_shipperFindManyArgs>(
      args?: SelectSubset<T, document_shipperFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<document_shipper>>, PrismaPromise<Array<document_shipperGetPayload<T>>>>

    /**
     * Create a Document_shipper.
     * @param {document_shipperCreateArgs} args - Arguments to create a Document_shipper.
     * @example
     * // Create one Document_shipper
     * const Document_shipper = await prisma.document_shipper.create({
     *   data: {
     *     // ... data to create a Document_shipper
     *   }
     * })
     * 
    **/
    create<T extends document_shipperCreateArgs>(
      args: SelectSubset<T, document_shipperCreateArgs>
    ): CheckSelect<T, Prisma__document_shipperClient<document_shipper>, Prisma__document_shipperClient<document_shipperGetPayload<T>>>

    /**
     * Create many Document_shippers.
     *     @param {document_shipperCreateManyArgs} args - Arguments to create many Document_shippers.
     *     @example
     *     // Create many Document_shippers
     *     const document_shipper = await prisma.document_shipper.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends document_shipperCreateManyArgs>(
      args?: SelectSubset<T, document_shipperCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Document_shipper.
     * @param {document_shipperDeleteArgs} args - Arguments to delete one Document_shipper.
     * @example
     * // Delete one Document_shipper
     * const Document_shipper = await prisma.document_shipper.delete({
     *   where: {
     *     // ... filter to delete one Document_shipper
     *   }
     * })
     * 
    **/
    delete<T extends document_shipperDeleteArgs>(
      args: SelectSubset<T, document_shipperDeleteArgs>
    ): CheckSelect<T, Prisma__document_shipperClient<document_shipper>, Prisma__document_shipperClient<document_shipperGetPayload<T>>>

    /**
     * Update one Document_shipper.
     * @param {document_shipperUpdateArgs} args - Arguments to update one Document_shipper.
     * @example
     * // Update one Document_shipper
     * const document_shipper = await prisma.document_shipper.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends document_shipperUpdateArgs>(
      args: SelectSubset<T, document_shipperUpdateArgs>
    ): CheckSelect<T, Prisma__document_shipperClient<document_shipper>, Prisma__document_shipperClient<document_shipperGetPayload<T>>>

    /**
     * Delete zero or more Document_shippers.
     * @param {document_shipperDeleteManyArgs} args - Arguments to filter Document_shippers to delete.
     * @example
     * // Delete a few Document_shippers
     * const { count } = await prisma.document_shipper.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends document_shipperDeleteManyArgs>(
      args?: SelectSubset<T, document_shipperDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Document_shippers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_shipperUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Document_shippers
     * const document_shipper = await prisma.document_shipper.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends document_shipperUpdateManyArgs>(
      args: SelectSubset<T, document_shipperUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Document_shipper.
     * @param {document_shipperUpsertArgs} args - Arguments to update or create a Document_shipper.
     * @example
     * // Update or create a Document_shipper
     * const document_shipper = await prisma.document_shipper.upsert({
     *   create: {
     *     // ... data to create a Document_shipper
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document_shipper we want to update
     *   }
     * })
    **/
    upsert<T extends document_shipperUpsertArgs>(
      args: SelectSubset<T, document_shipperUpsertArgs>
    ): CheckSelect<T, Prisma__document_shipperClient<document_shipper>, Prisma__document_shipperClient<document_shipperGetPayload<T>>>

    /**
     * Find one Document_shipper that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {document_shipperFindUniqueOrThrowArgs} args - Arguments to find a Document_shipper
     * @example
     * // Get one Document_shipper
     * const document_shipper = await prisma.document_shipper.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends document_shipperFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, document_shipperFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__document_shipperClient<document_shipper>, Prisma__document_shipperClient<document_shipperGetPayload<T>>>

    /**
     * Find the first Document_shipper that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_shipperFindFirstOrThrowArgs} args - Arguments to find a Document_shipper
     * @example
     * // Get one Document_shipper
     * const document_shipper = await prisma.document_shipper.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends document_shipperFindFirstOrThrowArgs>(
      args?: SelectSubset<T, document_shipperFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__document_shipperClient<document_shipper>, Prisma__document_shipperClient<document_shipperGetPayload<T>>>

    /**
     * Count the number of Document_shippers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_shipperCountArgs} args - Arguments to filter Document_shippers to count.
     * @example
     * // Count the number of Document_shippers
     * const count = await prisma.document_shipper.count({
     *   where: {
     *     // ... the filter for the Document_shippers we want to count
     *   }
     * })
    **/
    count<T extends document_shipperCountArgs>(
      args?: Subset<T, document_shipperCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Document_shipperCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document_shipper.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Document_shipperAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Document_shipperAggregateArgs>(args: Subset<T, Document_shipperAggregateArgs>): PrismaPromise<GetDocument_shipperAggregateType<T>>

    /**
     * Group by Document_shipper.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Document_shipperGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Document_shipperGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Document_shipperGroupByArgs['orderBy'] }
        : { orderBy?: Document_shipperGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Document_shipperGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocument_shipperGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for document_shipper.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__document_shipperClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shipping_documents<T extends shipping_documentsFindManyArgs = {}>(args?: Subset<T, shipping_documentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * document_shipper base type for findUnique actions
   */
  export type document_shipperFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the document_shipper
     * 
    **/
    select?: document_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_shipperInclude | null
    /**
     * Filter, which document_shipper to fetch.
     * 
    **/
    where: document_shipperWhereUniqueInput
  }

  /**
   * document_shipper: findUnique
   */
  export interface document_shipperFindUniqueArgs extends document_shipperFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * document_shipper base type for findFirst actions
   */
  export type document_shipperFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the document_shipper
     * 
    **/
    select?: document_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_shipperInclude | null
    /**
     * Filter, which document_shipper to fetch.
     * 
    **/
    where?: document_shipperWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_shippers to fetch.
     * 
    **/
    orderBy?: Enumerable<document_shipperOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_shippers.
     * 
    **/
    cursor?: document_shipperWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_shippers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_shippers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_shippers.
     * 
    **/
    distinct?: Enumerable<Document_shipperScalarFieldEnum>
  }

  /**
   * document_shipper: findFirst
   */
  export interface document_shipperFindFirstArgs extends document_shipperFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * document_shipper findMany
   */
  export type document_shipperFindManyArgs = {
    /**
     * Select specific fields to fetch from the document_shipper
     * 
    **/
    select?: document_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_shipperInclude | null
    /**
     * Filter, which document_shippers to fetch.
     * 
    **/
    where?: document_shipperWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_shippers to fetch.
     * 
    **/
    orderBy?: Enumerable<document_shipperOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing document_shippers.
     * 
    **/
    cursor?: document_shipperWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_shippers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_shippers.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Document_shipperScalarFieldEnum>
  }


  /**
   * document_shipper create
   */
  export type document_shipperCreateArgs = {
    /**
     * Select specific fields to fetch from the document_shipper
     * 
    **/
    select?: document_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_shipperInclude | null
    /**
     * The data needed to create a document_shipper.
     * 
    **/
    data: XOR<document_shipperCreateInput, document_shipperUncheckedCreateInput>
  }


  /**
   * document_shipper createMany
   */
  export type document_shipperCreateManyArgs = {
    /**
     * The data used to create many document_shippers.
     * 
    **/
    data: Enumerable<document_shipperCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * document_shipper update
   */
  export type document_shipperUpdateArgs = {
    /**
     * Select specific fields to fetch from the document_shipper
     * 
    **/
    select?: document_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_shipperInclude | null
    /**
     * The data needed to update a document_shipper.
     * 
    **/
    data: XOR<document_shipperUpdateInput, document_shipperUncheckedUpdateInput>
    /**
     * Choose, which document_shipper to update.
     * 
    **/
    where: document_shipperWhereUniqueInput
  }


  /**
   * document_shipper updateMany
   */
  export type document_shipperUpdateManyArgs = {
    /**
     * The data used to update document_shippers.
     * 
    **/
    data: XOR<document_shipperUpdateManyMutationInput, document_shipperUncheckedUpdateManyInput>
    /**
     * Filter which document_shippers to update
     * 
    **/
    where?: document_shipperWhereInput
  }


  /**
   * document_shipper upsert
   */
  export type document_shipperUpsertArgs = {
    /**
     * Select specific fields to fetch from the document_shipper
     * 
    **/
    select?: document_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_shipperInclude | null
    /**
     * The filter to search for the document_shipper to update in case it exists.
     * 
    **/
    where: document_shipperWhereUniqueInput
    /**
     * In case the document_shipper found by the `where` argument doesn't exist, create a new document_shipper with this data.
     * 
    **/
    create: XOR<document_shipperCreateInput, document_shipperUncheckedCreateInput>
    /**
     * In case the document_shipper was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<document_shipperUpdateInput, document_shipperUncheckedUpdateInput>
  }


  /**
   * document_shipper delete
   */
  export type document_shipperDeleteArgs = {
    /**
     * Select specific fields to fetch from the document_shipper
     * 
    **/
    select?: document_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_shipperInclude | null
    /**
     * Filter which document_shipper to delete.
     * 
    **/
    where: document_shipperWhereUniqueInput
  }


  /**
   * document_shipper deleteMany
   */
  export type document_shipperDeleteManyArgs = {
    /**
     * Filter which document_shippers to delete
     * 
    **/
    where?: document_shipperWhereInput
  }


  /**
   * document_shipper: findUniqueOrThrow
   */
  export type document_shipperFindUniqueOrThrowArgs = document_shipperFindUniqueArgsBase
      

  /**
   * document_shipper: findFirstOrThrow
   */
  export type document_shipperFindFirstOrThrowArgs = document_shipperFindFirstArgsBase
      

  /**
   * document_shipper without action
   */
  export type document_shipperArgs = {
    /**
     * Select specific fields to fetch from the document_shipper
     * 
    **/
    select?: document_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_shipperInclude | null
  }



  /**
   * Model document_product
   */


  export type AggregateDocument_product = {
    _count: Document_productCountAggregateOutputType | null
    _avg: Document_productAvgAggregateOutputType | null
    _sum: Document_productSumAggregateOutputType | null
    _min: Document_productMinAggregateOutputType | null
    _max: Document_productMaxAggregateOutputType | null
  }

  export type Document_productAvgAggregateOutputType = {
    id: number | null
  }

  export type Document_productSumAggregateOutputType = {
    id: number | null
  }

  export type Document_productMinAggregateOutputType = {
    id: number | null
    name: string | null
    abbreviation: string | null
    description: string | null
    packing_type: string | null
  }

  export type Document_productMaxAggregateOutputType = {
    id: number | null
    name: string | null
    abbreviation: string | null
    description: string | null
    packing_type: string | null
  }

  export type Document_productCountAggregateOutputType = {
    id: number
    name: number
    abbreviation: number
    description: number
    packing_type: number
    _all: number
  }


  export type Document_productAvgAggregateInputType = {
    id?: true
  }

  export type Document_productSumAggregateInputType = {
    id?: true
  }

  export type Document_productMinAggregateInputType = {
    id?: true
    name?: true
    abbreviation?: true
    description?: true
    packing_type?: true
  }

  export type Document_productMaxAggregateInputType = {
    id?: true
    name?: true
    abbreviation?: true
    description?: true
    packing_type?: true
  }

  export type Document_productCountAggregateInputType = {
    id?: true
    name?: true
    abbreviation?: true
    description?: true
    packing_type?: true
    _all?: true
  }

  export type Document_productAggregateArgs = {
    /**
     * Filter which document_product to aggregate.
     * 
    **/
    where?: document_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_products to fetch.
     * 
    **/
    orderBy?: Enumerable<document_productOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: document_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned document_products
    **/
    _count?: true | Document_productCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Document_productAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Document_productSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Document_productMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Document_productMaxAggregateInputType
  }

  export type GetDocument_productAggregateType<T extends Document_productAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument_product]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument_product[P]>
      : GetScalarType<T[P], AggregateDocument_product[P]>
  }




  export type Document_productGroupByArgs = {
    where?: document_productWhereInput
    orderBy?: Enumerable<document_productOrderByWithAggregationInput>
    by: Array<Document_productScalarFieldEnum>
    having?: document_productScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Document_productCountAggregateInputType | true
    _avg?: Document_productAvgAggregateInputType
    _sum?: Document_productSumAggregateInputType
    _min?: Document_productMinAggregateInputType
    _max?: Document_productMaxAggregateInputType
  }


  export type Document_productGroupByOutputType = {
    id: number
    name: string | null
    abbreviation: string | null
    description: string | null
    packing_type: string | null
    _count: Document_productCountAggregateOutputType | null
    _avg: Document_productAvgAggregateOutputType | null
    _sum: Document_productSumAggregateOutputType | null
    _min: Document_productMinAggregateOutputType | null
    _max: Document_productMaxAggregateOutputType | null
  }

  type GetDocument_productGroupByPayload<T extends Document_productGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Document_productGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Document_productGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Document_productGroupByOutputType[P]>
            : GetScalarType<T[P], Document_productGroupByOutputType[P]>
        }
      >
    >


  export type document_productSelect = {
    id?: boolean
    name?: boolean
    abbreviation?: boolean
    description?: boolean
    packing_type?: boolean
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    _count?: boolean | Document_productCountOutputTypeArgs
  }

  export type document_productInclude = {
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    _count?: boolean | Document_productCountOutputTypeArgs
  }

  export type document_productGetPayload<
    S extends boolean | null | undefined | document_productArgs,
    U = keyof S
      > = S extends true
        ? document_product
    : S extends undefined
    ? never
    : S extends document_productArgs | document_productFindManyArgs
    ?'include' extends U
    ? document_product  & {
    [P in TrueKeys<S['include']>]:
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? Document_productCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? Document_productCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof document_product ? document_product[P] : never
  } 
    : document_product
  : document_product


  type document_productCountArgs = Merge<
    Omit<document_productFindManyArgs, 'select' | 'include'> & {
      select?: Document_productCountAggregateInputType | true
    }
  >

  export interface document_productDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Document_product that matches the filter.
     * @param {document_productFindUniqueArgs} args - Arguments to find a Document_product
     * @example
     * // Get one Document_product
     * const document_product = await prisma.document_product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends document_productFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, document_productFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'document_product'> extends True ? CheckSelect<T, Prisma__document_productClient<document_product>, Prisma__document_productClient<document_productGetPayload<T>>> : CheckSelect<T, Prisma__document_productClient<document_product | null >, Prisma__document_productClient<document_productGetPayload<T> | null >>

    /**
     * Find the first Document_product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_productFindFirstArgs} args - Arguments to find a Document_product
     * @example
     * // Get one Document_product
     * const document_product = await prisma.document_product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends document_productFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, document_productFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'document_product'> extends True ? CheckSelect<T, Prisma__document_productClient<document_product>, Prisma__document_productClient<document_productGetPayload<T>>> : CheckSelect<T, Prisma__document_productClient<document_product | null >, Prisma__document_productClient<document_productGetPayload<T> | null >>

    /**
     * Find zero or more Document_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_productFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Document_products
     * const document_products = await prisma.document_product.findMany()
     * 
     * // Get first 10 Document_products
     * const document_products = await prisma.document_product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const document_productWithIdOnly = await prisma.document_product.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends document_productFindManyArgs>(
      args?: SelectSubset<T, document_productFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<document_product>>, PrismaPromise<Array<document_productGetPayload<T>>>>

    /**
     * Create a Document_product.
     * @param {document_productCreateArgs} args - Arguments to create a Document_product.
     * @example
     * // Create one Document_product
     * const Document_product = await prisma.document_product.create({
     *   data: {
     *     // ... data to create a Document_product
     *   }
     * })
     * 
    **/
    create<T extends document_productCreateArgs>(
      args: SelectSubset<T, document_productCreateArgs>
    ): CheckSelect<T, Prisma__document_productClient<document_product>, Prisma__document_productClient<document_productGetPayload<T>>>

    /**
     * Create many Document_products.
     *     @param {document_productCreateManyArgs} args - Arguments to create many Document_products.
     *     @example
     *     // Create many Document_products
     *     const document_product = await prisma.document_product.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends document_productCreateManyArgs>(
      args?: SelectSubset<T, document_productCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Document_product.
     * @param {document_productDeleteArgs} args - Arguments to delete one Document_product.
     * @example
     * // Delete one Document_product
     * const Document_product = await prisma.document_product.delete({
     *   where: {
     *     // ... filter to delete one Document_product
     *   }
     * })
     * 
    **/
    delete<T extends document_productDeleteArgs>(
      args: SelectSubset<T, document_productDeleteArgs>
    ): CheckSelect<T, Prisma__document_productClient<document_product>, Prisma__document_productClient<document_productGetPayload<T>>>

    /**
     * Update one Document_product.
     * @param {document_productUpdateArgs} args - Arguments to update one Document_product.
     * @example
     * // Update one Document_product
     * const document_product = await prisma.document_product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends document_productUpdateArgs>(
      args: SelectSubset<T, document_productUpdateArgs>
    ): CheckSelect<T, Prisma__document_productClient<document_product>, Prisma__document_productClient<document_productGetPayload<T>>>

    /**
     * Delete zero or more Document_products.
     * @param {document_productDeleteManyArgs} args - Arguments to filter Document_products to delete.
     * @example
     * // Delete a few Document_products
     * const { count } = await prisma.document_product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends document_productDeleteManyArgs>(
      args?: SelectSubset<T, document_productDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Document_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_productUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Document_products
     * const document_product = await prisma.document_product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends document_productUpdateManyArgs>(
      args: SelectSubset<T, document_productUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Document_product.
     * @param {document_productUpsertArgs} args - Arguments to update or create a Document_product.
     * @example
     * // Update or create a Document_product
     * const document_product = await prisma.document_product.upsert({
     *   create: {
     *     // ... data to create a Document_product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document_product we want to update
     *   }
     * })
    **/
    upsert<T extends document_productUpsertArgs>(
      args: SelectSubset<T, document_productUpsertArgs>
    ): CheckSelect<T, Prisma__document_productClient<document_product>, Prisma__document_productClient<document_productGetPayload<T>>>

    /**
     * Find one Document_product that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {document_productFindUniqueOrThrowArgs} args - Arguments to find a Document_product
     * @example
     * // Get one Document_product
     * const document_product = await prisma.document_product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends document_productFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, document_productFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__document_productClient<document_product>, Prisma__document_productClient<document_productGetPayload<T>>>

    /**
     * Find the first Document_product that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_productFindFirstOrThrowArgs} args - Arguments to find a Document_product
     * @example
     * // Get one Document_product
     * const document_product = await prisma.document_product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends document_productFindFirstOrThrowArgs>(
      args?: SelectSubset<T, document_productFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__document_productClient<document_product>, Prisma__document_productClient<document_productGetPayload<T>>>

    /**
     * Count the number of Document_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_productCountArgs} args - Arguments to filter Document_products to count.
     * @example
     * // Count the number of Document_products
     * const count = await prisma.document_product.count({
     *   where: {
     *     // ... the filter for the Document_products we want to count
     *   }
     * })
    **/
    count<T extends document_productCountArgs>(
      args?: Subset<T, document_productCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Document_productCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document_product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Document_productAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Document_productAggregateArgs>(args: Subset<T, Document_productAggregateArgs>): PrismaPromise<GetDocument_productAggregateType<T>>

    /**
     * Group by Document_product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Document_productGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Document_productGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Document_productGroupByArgs['orderBy'] }
        : { orderBy?: Document_productGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Document_productGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocument_productGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for document_product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__document_productClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shipping_documents<T extends shipping_documentsFindManyArgs = {}>(args?: Subset<T, shipping_documentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * document_product base type for findUnique actions
   */
  export type document_productFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the document_product
     * 
    **/
    select?: document_productSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_productInclude | null
    /**
     * Filter, which document_product to fetch.
     * 
    **/
    where: document_productWhereUniqueInput
  }

  /**
   * document_product: findUnique
   */
  export interface document_productFindUniqueArgs extends document_productFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * document_product base type for findFirst actions
   */
  export type document_productFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the document_product
     * 
    **/
    select?: document_productSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_productInclude | null
    /**
     * Filter, which document_product to fetch.
     * 
    **/
    where?: document_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_products to fetch.
     * 
    **/
    orderBy?: Enumerable<document_productOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_products.
     * 
    **/
    cursor?: document_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_products.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_products.
     * 
    **/
    distinct?: Enumerable<Document_productScalarFieldEnum>
  }

  /**
   * document_product: findFirst
   */
  export interface document_productFindFirstArgs extends document_productFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * document_product findMany
   */
  export type document_productFindManyArgs = {
    /**
     * Select specific fields to fetch from the document_product
     * 
    **/
    select?: document_productSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_productInclude | null
    /**
     * Filter, which document_products to fetch.
     * 
    **/
    where?: document_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_products to fetch.
     * 
    **/
    orderBy?: Enumerable<document_productOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing document_products.
     * 
    **/
    cursor?: document_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_products from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_products.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Document_productScalarFieldEnum>
  }


  /**
   * document_product create
   */
  export type document_productCreateArgs = {
    /**
     * Select specific fields to fetch from the document_product
     * 
    **/
    select?: document_productSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_productInclude | null
    /**
     * The data needed to create a document_product.
     * 
    **/
    data: XOR<document_productCreateInput, document_productUncheckedCreateInput>
  }


  /**
   * document_product createMany
   */
  export type document_productCreateManyArgs = {
    /**
     * The data used to create many document_products.
     * 
    **/
    data: Enumerable<document_productCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * document_product update
   */
  export type document_productUpdateArgs = {
    /**
     * Select specific fields to fetch from the document_product
     * 
    **/
    select?: document_productSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_productInclude | null
    /**
     * The data needed to update a document_product.
     * 
    **/
    data: XOR<document_productUpdateInput, document_productUncheckedUpdateInput>
    /**
     * Choose, which document_product to update.
     * 
    **/
    where: document_productWhereUniqueInput
  }


  /**
   * document_product updateMany
   */
  export type document_productUpdateManyArgs = {
    /**
     * The data used to update document_products.
     * 
    **/
    data: XOR<document_productUpdateManyMutationInput, document_productUncheckedUpdateManyInput>
    /**
     * Filter which document_products to update
     * 
    **/
    where?: document_productWhereInput
  }


  /**
   * document_product upsert
   */
  export type document_productUpsertArgs = {
    /**
     * Select specific fields to fetch from the document_product
     * 
    **/
    select?: document_productSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_productInclude | null
    /**
     * The filter to search for the document_product to update in case it exists.
     * 
    **/
    where: document_productWhereUniqueInput
    /**
     * In case the document_product found by the `where` argument doesn't exist, create a new document_product with this data.
     * 
    **/
    create: XOR<document_productCreateInput, document_productUncheckedCreateInput>
    /**
     * In case the document_product was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<document_productUpdateInput, document_productUncheckedUpdateInput>
  }


  /**
   * document_product delete
   */
  export type document_productDeleteArgs = {
    /**
     * Select specific fields to fetch from the document_product
     * 
    **/
    select?: document_productSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_productInclude | null
    /**
     * Filter which document_product to delete.
     * 
    **/
    where: document_productWhereUniqueInput
  }


  /**
   * document_product deleteMany
   */
  export type document_productDeleteManyArgs = {
    /**
     * Filter which document_products to delete
     * 
    **/
    where?: document_productWhereInput
  }


  /**
   * document_product: findUniqueOrThrow
   */
  export type document_productFindUniqueOrThrowArgs = document_productFindUniqueArgsBase
      

  /**
   * document_product: findFirstOrThrow
   */
  export type document_productFindFirstOrThrowArgs = document_productFindFirstArgsBase
      

  /**
   * document_product without action
   */
  export type document_productArgs = {
    /**
     * Select specific fields to fetch from the document_product
     * 
    **/
    select?: document_productSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: document_productInclude | null
  }



  /**
   * Model shipping_files
   */


  export type AggregateShipping_files = {
    _count: Shipping_filesCountAggregateOutputType | null
    _avg: Shipping_filesAvgAggregateOutputType | null
    _sum: Shipping_filesSumAggregateOutputType | null
    _min: Shipping_filesMinAggregateOutputType | null
    _max: Shipping_filesMaxAggregateOutputType | null
  }

  export type Shipping_filesAvgAggregateOutputType = {
    id: number | null
    shippingId: number | null
    userId: number | null
  }

  export type Shipping_filesSumAggregateOutputType = {
    id: number | null
    shippingId: number | null
    userId: number | null
  }

  export type Shipping_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    shippingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Shipping_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    shippingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Shipping_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    shippingId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    userId: number
    _all: number
  }


  export type Shipping_filesAvgAggregateInputType = {
    id?: true
    shippingId?: true
    userId?: true
  }

  export type Shipping_filesSumAggregateInputType = {
    id?: true
    shippingId?: true
    userId?: true
  }

  export type Shipping_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Shipping_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Shipping_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
    _all?: true
  }

  export type Shipping_filesAggregateArgs = {
    /**
     * Filter which shipping_files to aggregate.
     * 
    **/
    where?: shipping_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_files to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: shipping_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned shipping_files
    **/
    _count?: true | Shipping_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Shipping_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Shipping_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Shipping_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Shipping_filesMaxAggregateInputType
  }

  export type GetShipping_filesAggregateType<T extends Shipping_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateShipping_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipping_files[P]>
      : GetScalarType<T[P], AggregateShipping_files[P]>
  }




  export type Shipping_filesGroupByArgs = {
    where?: shipping_filesWhereInput
    orderBy?: Enumerable<shipping_filesOrderByWithAggregationInput>
    by: Array<Shipping_filesScalarFieldEnum>
    having?: shipping_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Shipping_filesCountAggregateInputType | true
    _avg?: Shipping_filesAvgAggregateInputType
    _sum?: Shipping_filesSumAggregateInputType
    _min?: Shipping_filesMinAggregateInputType
    _max?: Shipping_filesMaxAggregateInputType
  }


  export type Shipping_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    shippingId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    userId: number | null
    _count: Shipping_filesCountAggregateOutputType | null
    _avg: Shipping_filesAvgAggregateOutputType | null
    _sum: Shipping_filesSumAggregateOutputType | null
    _min: Shipping_filesMinAggregateOutputType | null
    _max: Shipping_filesMaxAggregateOutputType | null
  }

  type GetShipping_filesGroupByPayload<T extends Shipping_filesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Shipping_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Shipping_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Shipping_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Shipping_filesGroupByOutputType[P]>
        }
      >
    >


  export type shipping_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    shippingId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    userId?: boolean
    shippings?: boolean | ShippingArgs
    users?: boolean | usersArgs
  }

  export type shipping_filesInclude = {
    shippings?: boolean | ShippingArgs
    users?: boolean | usersArgs
  }

  export type shipping_filesGetPayload<
    S extends boolean | null | undefined | shipping_filesArgs,
    U = keyof S
      > = S extends true
        ? shipping_files
    : S extends undefined
    ? never
    : S extends shipping_filesArgs | shipping_filesFindManyArgs
    ?'include' extends U
    ? shipping_files  & {
    [P in TrueKeys<S['include']>]:
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof shipping_files ? shipping_files[P] : never
  } 
    : shipping_files
  : shipping_files


  type shipping_filesCountArgs = Merge<
    Omit<shipping_filesFindManyArgs, 'select' | 'include'> & {
      select?: Shipping_filesCountAggregateInputType | true
    }
  >

  export interface shipping_filesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Shipping_files that matches the filter.
     * @param {shipping_filesFindUniqueArgs} args - Arguments to find a Shipping_files
     * @example
     * // Get one Shipping_files
     * const shipping_files = await prisma.shipping_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends shipping_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, shipping_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'shipping_files'> extends True ? CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>> : CheckSelect<T, Prisma__shipping_filesClient<shipping_files | null >, Prisma__shipping_filesClient<shipping_filesGetPayload<T> | null >>

    /**
     * Find the first Shipping_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_filesFindFirstArgs} args - Arguments to find a Shipping_files
     * @example
     * // Get one Shipping_files
     * const shipping_files = await prisma.shipping_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends shipping_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, shipping_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'shipping_files'> extends True ? CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>> : CheckSelect<T, Prisma__shipping_filesClient<shipping_files | null >, Prisma__shipping_filesClient<shipping_filesGetPayload<T> | null >>

    /**
     * Find zero or more Shipping_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shipping_files
     * const shipping_files = await prisma.shipping_files.findMany()
     * 
     * // Get first 10 Shipping_files
     * const shipping_files = await prisma.shipping_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipping_filesWithIdOnly = await prisma.shipping_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends shipping_filesFindManyArgs>(
      args?: SelectSubset<T, shipping_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<shipping_files>>, PrismaPromise<Array<shipping_filesGetPayload<T>>>>

    /**
     * Create a Shipping_files.
     * @param {shipping_filesCreateArgs} args - Arguments to create a Shipping_files.
     * @example
     * // Create one Shipping_files
     * const Shipping_files = await prisma.shipping_files.create({
     *   data: {
     *     // ... data to create a Shipping_files
     *   }
     * })
     * 
    **/
    create<T extends shipping_filesCreateArgs>(
      args: SelectSubset<T, shipping_filesCreateArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Create many Shipping_files.
     *     @param {shipping_filesCreateManyArgs} args - Arguments to create many Shipping_files.
     *     @example
     *     // Create many Shipping_files
     *     const shipping_files = await prisma.shipping_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends shipping_filesCreateManyArgs>(
      args?: SelectSubset<T, shipping_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Shipping_files.
     * @param {shipping_filesDeleteArgs} args - Arguments to delete one Shipping_files.
     * @example
     * // Delete one Shipping_files
     * const Shipping_files = await prisma.shipping_files.delete({
     *   where: {
     *     // ... filter to delete one Shipping_files
     *   }
     * })
     * 
    **/
    delete<T extends shipping_filesDeleteArgs>(
      args: SelectSubset<T, shipping_filesDeleteArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Update one Shipping_files.
     * @param {shipping_filesUpdateArgs} args - Arguments to update one Shipping_files.
     * @example
     * // Update one Shipping_files
     * const shipping_files = await prisma.shipping_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends shipping_filesUpdateArgs>(
      args: SelectSubset<T, shipping_filesUpdateArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Delete zero or more Shipping_files.
     * @param {shipping_filesDeleteManyArgs} args - Arguments to filter Shipping_files to delete.
     * @example
     * // Delete a few Shipping_files
     * const { count } = await prisma.shipping_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends shipping_filesDeleteManyArgs>(
      args?: SelectSubset<T, shipping_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shipping_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shipping_files
     * const shipping_files = await prisma.shipping_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends shipping_filesUpdateManyArgs>(
      args: SelectSubset<T, shipping_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Shipping_files.
     * @param {shipping_filesUpsertArgs} args - Arguments to update or create a Shipping_files.
     * @example
     * // Update or create a Shipping_files
     * const shipping_files = await prisma.shipping_files.upsert({
     *   create: {
     *     // ... data to create a Shipping_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipping_files we want to update
     *   }
     * })
    **/
    upsert<T extends shipping_filesUpsertArgs>(
      args: SelectSubset<T, shipping_filesUpsertArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Find one Shipping_files that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {shipping_filesFindUniqueOrThrowArgs} args - Arguments to find a Shipping_files
     * @example
     * // Get one Shipping_files
     * const shipping_files = await prisma.shipping_files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends shipping_filesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, shipping_filesFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Find the first Shipping_files that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_filesFindFirstOrThrowArgs} args - Arguments to find a Shipping_files
     * @example
     * // Get one Shipping_files
     * const shipping_files = await prisma.shipping_files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends shipping_filesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, shipping_filesFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__shipping_filesClient<shipping_files>, Prisma__shipping_filesClient<shipping_filesGetPayload<T>>>

    /**
     * Count the number of Shipping_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shipping_filesCountArgs} args - Arguments to filter Shipping_files to count.
     * @example
     * // Count the number of Shipping_files
     * const count = await prisma.shipping_files.count({
     *   where: {
     *     // ... the filter for the Shipping_files we want to count
     *   }
     * })
    **/
    count<T extends shipping_filesCountArgs>(
      args?: Subset<T, shipping_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Shipping_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipping_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Shipping_filesAggregateArgs>(args: Subset<T, Shipping_filesAggregateArgs>): PrismaPromise<GetShipping_filesAggregateType<T>>

    /**
     * Group by Shipping_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Shipping_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Shipping_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Shipping_filesGroupByArgs['orderBy'] }
        : { orderBy?: Shipping_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Shipping_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipping_filesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for shipping_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__shipping_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * shipping_files base type for findUnique actions
   */
  export type shipping_filesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * Filter, which shipping_files to fetch.
     * 
    **/
    where: shipping_filesWhereUniqueInput
  }

  /**
   * shipping_files: findUnique
   */
  export interface shipping_filesFindUniqueArgs extends shipping_filesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * shipping_files base type for findFirst actions
   */
  export type shipping_filesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * Filter, which shipping_files to fetch.
     * 
    **/
    where?: shipping_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_files to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shipping_files.
     * 
    **/
    cursor?: shipping_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shipping_files.
     * 
    **/
    distinct?: Enumerable<Shipping_filesScalarFieldEnum>
  }

  /**
   * shipping_files: findFirst
   */
  export interface shipping_filesFindFirstArgs extends shipping_filesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * shipping_files findMany
   */
  export type shipping_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * Filter, which shipping_files to fetch.
     * 
    **/
    where?: shipping_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shipping_files to fetch.
     * 
    **/
    orderBy?: Enumerable<shipping_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing shipping_files.
     * 
    **/
    cursor?: shipping_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shipping_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shipping_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Shipping_filesScalarFieldEnum>
  }


  /**
   * shipping_files create
   */
  export type shipping_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * The data needed to create a shipping_files.
     * 
    **/
    data: XOR<shipping_filesCreateInput, shipping_filesUncheckedCreateInput>
  }


  /**
   * shipping_files createMany
   */
  export type shipping_filesCreateManyArgs = {
    /**
     * The data used to create many shipping_files.
     * 
    **/
    data: Enumerable<shipping_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * shipping_files update
   */
  export type shipping_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * The data needed to update a shipping_files.
     * 
    **/
    data: XOR<shipping_filesUpdateInput, shipping_filesUncheckedUpdateInput>
    /**
     * Choose, which shipping_files to update.
     * 
    **/
    where: shipping_filesWhereUniqueInput
  }


  /**
   * shipping_files updateMany
   */
  export type shipping_filesUpdateManyArgs = {
    /**
     * The data used to update shipping_files.
     * 
    **/
    data: XOR<shipping_filesUpdateManyMutationInput, shipping_filesUncheckedUpdateManyInput>
    /**
     * Filter which shipping_files to update
     * 
    **/
    where?: shipping_filesWhereInput
  }


  /**
   * shipping_files upsert
   */
  export type shipping_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * The filter to search for the shipping_files to update in case it exists.
     * 
    **/
    where: shipping_filesWhereUniqueInput
    /**
     * In case the shipping_files found by the `where` argument doesn't exist, create a new shipping_files with this data.
     * 
    **/
    create: XOR<shipping_filesCreateInput, shipping_filesUncheckedCreateInput>
    /**
     * In case the shipping_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<shipping_filesUpdateInput, shipping_filesUncheckedUpdateInput>
  }


  /**
   * shipping_files delete
   */
  export type shipping_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
    /**
     * Filter which shipping_files to delete.
     * 
    **/
    where: shipping_filesWhereUniqueInput
  }


  /**
   * shipping_files deleteMany
   */
  export type shipping_filesDeleteManyArgs = {
    /**
     * Filter which shipping_files to delete
     * 
    **/
    where?: shipping_filesWhereInput
  }


  /**
   * shipping_files: findUniqueOrThrow
   */
  export type shipping_filesFindUniqueOrThrowArgs = shipping_filesFindUniqueArgsBase
      

  /**
   * shipping_files: findFirstOrThrow
   */
  export type shipping_filesFindFirstOrThrowArgs = shipping_filesFindFirstArgsBase
      

  /**
   * shipping_files without action
   */
  export type shipping_filesArgs = {
    /**
     * Select specific fields to fetch from the shipping_files
     * 
    **/
    select?: shipping_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: shipping_filesInclude | null
  }



  /**
   * Model ShippingPort
   */


  export type AggregateShippingPort = {
    _count: ShippingPortCountAggregateOutputType | null
    _avg: ShippingPortAvgAggregateOutputType | null
    _sum: ShippingPortSumAggregateOutputType | null
    _min: ShippingPortMinAggregateOutputType | null
    _max: ShippingPortMaxAggregateOutputType | null
  }

  export type ShippingPortAvgAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    port_id: number | null
    berth_id: number | null
  }

  export type ShippingPortSumAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    port_id: number | null
    berth_id: number | null
  }

  export type ShippingPortMinAggregateOutputType = {
    id: number | null
    estimated_time_of_arrival: Date | null
    estimated_time_of_berthing: Date | null
    estimated_time_of_sailing: Date | null
    time_of_arrival: Date | null
    time_of_berthing: Date | null
    time_of_sailing: Date | null
    shipping_id: number | null
    port_id: number | null
    berth_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ShippingPortMaxAggregateOutputType = {
    id: number | null
    estimated_time_of_arrival: Date | null
    estimated_time_of_berthing: Date | null
    estimated_time_of_sailing: Date | null
    time_of_arrival: Date | null
    time_of_berthing: Date | null
    time_of_sailing: Date | null
    shipping_id: number | null
    port_id: number | null
    berth_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ShippingPortCountAggregateOutputType = {
    id: number
    estimated_time_of_arrival: number
    estimated_time_of_berthing: number
    estimated_time_of_sailing: number
    time_of_arrival: number
    time_of_berthing: number
    time_of_sailing: number
    shipping_id: number
    port_id: number
    berth_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type ShippingPortAvgAggregateInputType = {
    id?: true
    shipping_id?: true
    port_id?: true
    berth_id?: true
  }

  export type ShippingPortSumAggregateInputType = {
    id?: true
    shipping_id?: true
    port_id?: true
    berth_id?: true
  }

  export type ShippingPortMinAggregateInputType = {
    id?: true
    estimated_time_of_arrival?: true
    estimated_time_of_berthing?: true
    estimated_time_of_sailing?: true
    time_of_arrival?: true
    time_of_berthing?: true
    time_of_sailing?: true
    shipping_id?: true
    port_id?: true
    berth_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ShippingPortMaxAggregateInputType = {
    id?: true
    estimated_time_of_arrival?: true
    estimated_time_of_berthing?: true
    estimated_time_of_sailing?: true
    time_of_arrival?: true
    time_of_berthing?: true
    time_of_sailing?: true
    shipping_id?: true
    port_id?: true
    berth_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ShippingPortCountAggregateInputType = {
    id?: true
    estimated_time_of_arrival?: true
    estimated_time_of_berthing?: true
    estimated_time_of_sailing?: true
    time_of_arrival?: true
    time_of_berthing?: true
    time_of_sailing?: true
    shipping_id?: true
    port_id?: true
    berth_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type ShippingPortAggregateArgs = {
    /**
     * Filter which ShippingPort to aggregate.
     * 
    **/
    where?: ShippingPortWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingPorts to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingPortOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ShippingPortWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingPorts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingPorts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShippingPorts
    **/
    _count?: true | ShippingPortCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingPortAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingPortSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingPortMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingPortMaxAggregateInputType
  }

  export type GetShippingPortAggregateType<T extends ShippingPortAggregateArgs> = {
        [P in keyof T & keyof AggregateShippingPort]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShippingPort[P]>
      : GetScalarType<T[P], AggregateShippingPort[P]>
  }




  export type ShippingPortGroupByArgs = {
    where?: ShippingPortWhereInput
    orderBy?: Enumerable<ShippingPortOrderByWithAggregationInput>
    by: Array<ShippingPortScalarFieldEnum>
    having?: ShippingPortScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingPortCountAggregateInputType | true
    _avg?: ShippingPortAvgAggregateInputType
    _sum?: ShippingPortSumAggregateInputType
    _min?: ShippingPortMinAggregateInputType
    _max?: ShippingPortMaxAggregateInputType
  }


  export type ShippingPortGroupByOutputType = {
    id: number
    estimated_time_of_arrival: Date | null
    estimated_time_of_berthing: Date | null
    estimated_time_of_sailing: Date | null
    time_of_arrival: Date | null
    time_of_berthing: Date | null
    time_of_sailing: Date | null
    shipping_id: number | null
    port_id: number | null
    berth_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: ShippingPortCountAggregateOutputType | null
    _avg: ShippingPortAvgAggregateOutputType | null
    _sum: ShippingPortSumAggregateOutputType | null
    _min: ShippingPortMinAggregateOutputType | null
    _max: ShippingPortMaxAggregateOutputType | null
  }

  type GetShippingPortGroupByPayload<T extends ShippingPortGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ShippingPortGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingPortGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingPortGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingPortGroupByOutputType[P]>
        }
      >
    >


  export type ShippingPortSelect = {
    id?: boolean
    estimated_time_of_arrival?: boolean
    estimated_time_of_berthing?: boolean
    estimated_time_of_sailing?: boolean
    time_of_arrival?: boolean
    time_of_berthing?: boolean
    time_of_sailing?: boolean
    shipping_id?: boolean
    port_id?: boolean
    berth_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    berths?: boolean | berthsArgs
    ports?: boolean | portsArgs
    shippings?: boolean | ShippingArgs
  }

  export type ShippingPortInclude = {
    berths?: boolean | berthsArgs
    ports?: boolean | portsArgs
    shippings?: boolean | ShippingArgs
  }

  export type ShippingPortGetPayload<
    S extends boolean | null | undefined | ShippingPortArgs,
    U = keyof S
      > = S extends true
        ? ShippingPort
    : S extends undefined
    ? never
    : S extends ShippingPortArgs | ShippingPortFindManyArgs
    ?'include' extends U
    ? ShippingPort  & {
    [P in TrueKeys<S['include']>]:
        P extends 'berths' ? berthsGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'ports' ? portsGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'berths' ? berthsGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'ports' ? portsGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof ShippingPort ? ShippingPort[P] : never
  } 
    : ShippingPort
  : ShippingPort


  type ShippingPortCountArgs = Merge<
    Omit<ShippingPortFindManyArgs, 'select' | 'include'> & {
      select?: ShippingPortCountAggregateInputType | true
    }
  >

  export interface ShippingPortDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ShippingPort that matches the filter.
     * @param {ShippingPortFindUniqueArgs} args - Arguments to find a ShippingPort
     * @example
     * // Get one ShippingPort
     * const shippingPort = await prisma.shippingPort.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShippingPortFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ShippingPortFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ShippingPort'> extends True ? CheckSelect<T, Prisma__ShippingPortClient<ShippingPort>, Prisma__ShippingPortClient<ShippingPortGetPayload<T>>> : CheckSelect<T, Prisma__ShippingPortClient<ShippingPort | null >, Prisma__ShippingPortClient<ShippingPortGetPayload<T> | null >>

    /**
     * Find the first ShippingPort that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingPortFindFirstArgs} args - Arguments to find a ShippingPort
     * @example
     * // Get one ShippingPort
     * const shippingPort = await prisma.shippingPort.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShippingPortFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ShippingPortFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ShippingPort'> extends True ? CheckSelect<T, Prisma__ShippingPortClient<ShippingPort>, Prisma__ShippingPortClient<ShippingPortGetPayload<T>>> : CheckSelect<T, Prisma__ShippingPortClient<ShippingPort | null >, Prisma__ShippingPortClient<ShippingPortGetPayload<T> | null >>

    /**
     * Find zero or more ShippingPorts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingPortFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShippingPorts
     * const shippingPorts = await prisma.shippingPort.findMany()
     * 
     * // Get first 10 ShippingPorts
     * const shippingPorts = await prisma.shippingPort.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingPortWithIdOnly = await prisma.shippingPort.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShippingPortFindManyArgs>(
      args?: SelectSubset<T, ShippingPortFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ShippingPort>>, PrismaPromise<Array<ShippingPortGetPayload<T>>>>

    /**
     * Create a ShippingPort.
     * @param {ShippingPortCreateArgs} args - Arguments to create a ShippingPort.
     * @example
     * // Create one ShippingPort
     * const ShippingPort = await prisma.shippingPort.create({
     *   data: {
     *     // ... data to create a ShippingPort
     *   }
     * })
     * 
    **/
    create<T extends ShippingPortCreateArgs>(
      args: SelectSubset<T, ShippingPortCreateArgs>
    ): CheckSelect<T, Prisma__ShippingPortClient<ShippingPort>, Prisma__ShippingPortClient<ShippingPortGetPayload<T>>>

    /**
     * Create many ShippingPorts.
     *     @param {ShippingPortCreateManyArgs} args - Arguments to create many ShippingPorts.
     *     @example
     *     // Create many ShippingPorts
     *     const shippingPort = await prisma.shippingPort.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ShippingPortCreateManyArgs>(
      args?: SelectSubset<T, ShippingPortCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ShippingPort.
     * @param {ShippingPortDeleteArgs} args - Arguments to delete one ShippingPort.
     * @example
     * // Delete one ShippingPort
     * const ShippingPort = await prisma.shippingPort.delete({
     *   where: {
     *     // ... filter to delete one ShippingPort
     *   }
     * })
     * 
    **/
    delete<T extends ShippingPortDeleteArgs>(
      args: SelectSubset<T, ShippingPortDeleteArgs>
    ): CheckSelect<T, Prisma__ShippingPortClient<ShippingPort>, Prisma__ShippingPortClient<ShippingPortGetPayload<T>>>

    /**
     * Update one ShippingPort.
     * @param {ShippingPortUpdateArgs} args - Arguments to update one ShippingPort.
     * @example
     * // Update one ShippingPort
     * const shippingPort = await prisma.shippingPort.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShippingPortUpdateArgs>(
      args: SelectSubset<T, ShippingPortUpdateArgs>
    ): CheckSelect<T, Prisma__ShippingPortClient<ShippingPort>, Prisma__ShippingPortClient<ShippingPortGetPayload<T>>>

    /**
     * Delete zero or more ShippingPorts.
     * @param {ShippingPortDeleteManyArgs} args - Arguments to filter ShippingPorts to delete.
     * @example
     * // Delete a few ShippingPorts
     * const { count } = await prisma.shippingPort.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShippingPortDeleteManyArgs>(
      args?: SelectSubset<T, ShippingPortDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingPorts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingPortUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShippingPorts
     * const shippingPort = await prisma.shippingPort.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShippingPortUpdateManyArgs>(
      args: SelectSubset<T, ShippingPortUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ShippingPort.
     * @param {ShippingPortUpsertArgs} args - Arguments to update or create a ShippingPort.
     * @example
     * // Update or create a ShippingPort
     * const shippingPort = await prisma.shippingPort.upsert({
     *   create: {
     *     // ... data to create a ShippingPort
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShippingPort we want to update
     *   }
     * })
    **/
    upsert<T extends ShippingPortUpsertArgs>(
      args: SelectSubset<T, ShippingPortUpsertArgs>
    ): CheckSelect<T, Prisma__ShippingPortClient<ShippingPort>, Prisma__ShippingPortClient<ShippingPortGetPayload<T>>>

    /**
     * Find one ShippingPort that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ShippingPortFindUniqueOrThrowArgs} args - Arguments to find a ShippingPort
     * @example
     * // Get one ShippingPort
     * const shippingPort = await prisma.shippingPort.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ShippingPortFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ShippingPortFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingPortClient<ShippingPort>, Prisma__ShippingPortClient<ShippingPortGetPayload<T>>>

    /**
     * Find the first ShippingPort that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingPortFindFirstOrThrowArgs} args - Arguments to find a ShippingPort
     * @example
     * // Get one ShippingPort
     * const shippingPort = await prisma.shippingPort.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ShippingPortFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ShippingPortFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingPortClient<ShippingPort>, Prisma__ShippingPortClient<ShippingPortGetPayload<T>>>

    /**
     * Count the number of ShippingPorts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingPortCountArgs} args - Arguments to filter ShippingPorts to count.
     * @example
     * // Count the number of ShippingPorts
     * const count = await prisma.shippingPort.count({
     *   where: {
     *     // ... the filter for the ShippingPorts we want to count
     *   }
     * })
    **/
    count<T extends ShippingPortCountArgs>(
      args?: Subset<T, ShippingPortCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingPortCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShippingPort.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingPortAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingPortAggregateArgs>(args: Subset<T, ShippingPortAggregateArgs>): PrismaPromise<GetShippingPortAggregateType<T>>

    /**
     * Group by ShippingPort.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingPortGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingPortGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingPortGroupByArgs['orderBy'] }
        : { orderBy?: ShippingPortGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingPortGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingPortGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ShippingPort.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ShippingPortClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    berths<T extends berthsArgs = {}>(args?: Subset<T, berthsArgs>): CheckSelect<T, Prisma__berthsClient<berths | null >, Prisma__berthsClient<berthsGetPayload<T> | null >>;

    ports<T extends portsArgs = {}>(args?: Subset<T, portsArgs>): CheckSelect<T, Prisma__portsClient<ports | null >, Prisma__portsClient<portsGetPayload<T> | null >>;

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ShippingPort base type for findUnique actions
   */
  export type ShippingPortFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ShippingPort
     * 
    **/
    select?: ShippingPortSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingPortInclude | null
    /**
     * Filter, which ShippingPort to fetch.
     * 
    **/
    where: ShippingPortWhereUniqueInput
  }

  /**
   * ShippingPort: findUnique
   */
  export interface ShippingPortFindUniqueArgs extends ShippingPortFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShippingPort base type for findFirst actions
   */
  export type ShippingPortFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ShippingPort
     * 
    **/
    select?: ShippingPortSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingPortInclude | null
    /**
     * Filter, which ShippingPort to fetch.
     * 
    **/
    where?: ShippingPortWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingPorts to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingPortOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingPorts.
     * 
    **/
    cursor?: ShippingPortWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingPorts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingPorts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingPorts.
     * 
    **/
    distinct?: Enumerable<ShippingPortScalarFieldEnum>
  }

  /**
   * ShippingPort: findFirst
   */
  export interface ShippingPortFindFirstArgs extends ShippingPortFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShippingPort findMany
   */
  export type ShippingPortFindManyArgs = {
    /**
     * Select specific fields to fetch from the ShippingPort
     * 
    **/
    select?: ShippingPortSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingPortInclude | null
    /**
     * Filter, which ShippingPorts to fetch.
     * 
    **/
    where?: ShippingPortWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingPorts to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingPortOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShippingPorts.
     * 
    **/
    cursor?: ShippingPortWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingPorts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingPorts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ShippingPortScalarFieldEnum>
  }


  /**
   * ShippingPort create
   */
  export type ShippingPortCreateArgs = {
    /**
     * Select specific fields to fetch from the ShippingPort
     * 
    **/
    select?: ShippingPortSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingPortInclude | null
    /**
     * The data needed to create a ShippingPort.
     * 
    **/
    data: XOR<ShippingPortCreateInput, ShippingPortUncheckedCreateInput>
  }


  /**
   * ShippingPort createMany
   */
  export type ShippingPortCreateManyArgs = {
    /**
     * The data used to create many ShippingPorts.
     * 
    **/
    data: Enumerable<ShippingPortCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ShippingPort update
   */
  export type ShippingPortUpdateArgs = {
    /**
     * Select specific fields to fetch from the ShippingPort
     * 
    **/
    select?: ShippingPortSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingPortInclude | null
    /**
     * The data needed to update a ShippingPort.
     * 
    **/
    data: XOR<ShippingPortUpdateInput, ShippingPortUncheckedUpdateInput>
    /**
     * Choose, which ShippingPort to update.
     * 
    **/
    where: ShippingPortWhereUniqueInput
  }


  /**
   * ShippingPort updateMany
   */
  export type ShippingPortUpdateManyArgs = {
    /**
     * The data used to update ShippingPorts.
     * 
    **/
    data: XOR<ShippingPortUpdateManyMutationInput, ShippingPortUncheckedUpdateManyInput>
    /**
     * Filter which ShippingPorts to update
     * 
    **/
    where?: ShippingPortWhereInput
  }


  /**
   * ShippingPort upsert
   */
  export type ShippingPortUpsertArgs = {
    /**
     * Select specific fields to fetch from the ShippingPort
     * 
    **/
    select?: ShippingPortSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingPortInclude | null
    /**
     * The filter to search for the ShippingPort to update in case it exists.
     * 
    **/
    where: ShippingPortWhereUniqueInput
    /**
     * In case the ShippingPort found by the `where` argument doesn't exist, create a new ShippingPort with this data.
     * 
    **/
    create: XOR<ShippingPortCreateInput, ShippingPortUncheckedCreateInput>
    /**
     * In case the ShippingPort was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ShippingPortUpdateInput, ShippingPortUncheckedUpdateInput>
  }


  /**
   * ShippingPort delete
   */
  export type ShippingPortDeleteArgs = {
    /**
     * Select specific fields to fetch from the ShippingPort
     * 
    **/
    select?: ShippingPortSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingPortInclude | null
    /**
     * Filter which ShippingPort to delete.
     * 
    **/
    where: ShippingPortWhereUniqueInput
  }


  /**
   * ShippingPort deleteMany
   */
  export type ShippingPortDeleteManyArgs = {
    /**
     * Filter which ShippingPorts to delete
     * 
    **/
    where?: ShippingPortWhereInput
  }


  /**
   * ShippingPort: findUniqueOrThrow
   */
  export type ShippingPortFindUniqueOrThrowArgs = ShippingPortFindUniqueArgsBase
      

  /**
   * ShippingPort: findFirstOrThrow
   */
  export type ShippingPortFindFirstOrThrowArgs = ShippingPortFindFirstArgsBase
      

  /**
   * ShippingPort without action
   */
  export type ShippingPortArgs = {
    /**
     * Select specific fields to fetch from the ShippingPort
     * 
    **/
    select?: ShippingPortSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingPortInclude | null
  }



  /**
   * Model ShippingProduct
   */


  export type AggregateShippingProduct = {
    _count: ShippingProductCountAggregateOutputType | null
    _avg: ShippingProductAvgAggregateOutputType | null
    _sum: ShippingProductSumAggregateOutputType | null
    _min: ShippingProductMinAggregateOutputType | null
    _max: ShippingProductMaxAggregateOutputType | null
  }

  export type ShippingProductAvgAggregateOutputType = {
    id: number | null
    weight: number | null
    shipping_id: number | null
    product_id: number | null
  }

  export type ShippingProductSumAggregateOutputType = {
    id: number | null
    weight: number | null
    shipping_id: number | null
    product_id: number | null
  }

  export type ShippingProductMinAggregateOutputType = {
    id: number | null
    weight: number | null
    shipping_id: number | null
    product_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ShippingProductMaxAggregateOutputType = {
    id: number | null
    weight: number | null
    shipping_id: number | null
    product_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ShippingProductCountAggregateOutputType = {
    id: number
    weight: number
    shipping_id: number
    product_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type ShippingProductAvgAggregateInputType = {
    id?: true
    weight?: true
    shipping_id?: true
    product_id?: true
  }

  export type ShippingProductSumAggregateInputType = {
    id?: true
    weight?: true
    shipping_id?: true
    product_id?: true
  }

  export type ShippingProductMinAggregateInputType = {
    id?: true
    weight?: true
    shipping_id?: true
    product_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ShippingProductMaxAggregateInputType = {
    id?: true
    weight?: true
    shipping_id?: true
    product_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ShippingProductCountAggregateInputType = {
    id?: true
    weight?: true
    shipping_id?: true
    product_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type ShippingProductAggregateArgs = {
    /**
     * Filter which ShippingProduct to aggregate.
     * 
    **/
    where?: ShippingProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingProducts to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingProductOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ShippingProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingProducts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingProducts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShippingProducts
    **/
    _count?: true | ShippingProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingProductMaxAggregateInputType
  }

  export type GetShippingProductAggregateType<T extends ShippingProductAggregateArgs> = {
        [P in keyof T & keyof AggregateShippingProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShippingProduct[P]>
      : GetScalarType<T[P], AggregateShippingProduct[P]>
  }




  export type ShippingProductGroupByArgs = {
    where?: ShippingProductWhereInput
    orderBy?: Enumerable<ShippingProductOrderByWithAggregationInput>
    by: Array<ShippingProductScalarFieldEnum>
    having?: ShippingProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingProductCountAggregateInputType | true
    _avg?: ShippingProductAvgAggregateInputType
    _sum?: ShippingProductSumAggregateInputType
    _min?: ShippingProductMinAggregateInputType
    _max?: ShippingProductMaxAggregateInputType
  }


  export type ShippingProductGroupByOutputType = {
    id: number
    weight: number | null
    shipping_id: number | null
    product_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: ShippingProductCountAggregateOutputType | null
    _avg: ShippingProductAvgAggregateOutputType | null
    _sum: ShippingProductSumAggregateOutputType | null
    _min: ShippingProductMinAggregateOutputType | null
    _max: ShippingProductMaxAggregateOutputType | null
  }

  type GetShippingProductGroupByPayload<T extends ShippingProductGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ShippingProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingProductGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingProductGroupByOutputType[P]>
        }
      >
    >


  export type ShippingProductSelect = {
    id?: boolean
    weight?: boolean
    shipping_id?: boolean
    product_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    product?: boolean | productsArgs
    shipping?: boolean | ShippingArgs
  }

  export type ShippingProductInclude = {
    product?: boolean | productsArgs
    shipping?: boolean | ShippingArgs
  }

  export type ShippingProductGetPayload<
    S extends boolean | null | undefined | ShippingProductArgs,
    U = keyof S
      > = S extends true
        ? ShippingProduct
    : S extends undefined
    ? never
    : S extends ShippingProductArgs | ShippingProductFindManyArgs
    ?'include' extends U
    ? ShippingProduct  & {
    [P in TrueKeys<S['include']>]:
        P extends 'product' ? productsGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'shipping' ? ShippingGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'product' ? productsGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'shipping' ? ShippingGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof ShippingProduct ? ShippingProduct[P] : never
  } 
    : ShippingProduct
  : ShippingProduct


  type ShippingProductCountArgs = Merge<
    Omit<ShippingProductFindManyArgs, 'select' | 'include'> & {
      select?: ShippingProductCountAggregateInputType | true
    }
  >

  export interface ShippingProductDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ShippingProduct that matches the filter.
     * @param {ShippingProductFindUniqueArgs} args - Arguments to find a ShippingProduct
     * @example
     * // Get one ShippingProduct
     * const shippingProduct = await prisma.shippingProduct.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShippingProductFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ShippingProductFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ShippingProduct'> extends True ? CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct>, Prisma__ShippingProductClient<ShippingProductGetPayload<T>>> : CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct | null >, Prisma__ShippingProductClient<ShippingProductGetPayload<T> | null >>

    /**
     * Find the first ShippingProduct that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingProductFindFirstArgs} args - Arguments to find a ShippingProduct
     * @example
     * // Get one ShippingProduct
     * const shippingProduct = await prisma.shippingProduct.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShippingProductFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ShippingProductFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ShippingProduct'> extends True ? CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct>, Prisma__ShippingProductClient<ShippingProductGetPayload<T>>> : CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct | null >, Prisma__ShippingProductClient<ShippingProductGetPayload<T> | null >>

    /**
     * Find zero or more ShippingProducts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingProductFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShippingProducts
     * const shippingProducts = await prisma.shippingProduct.findMany()
     * 
     * // Get first 10 ShippingProducts
     * const shippingProducts = await prisma.shippingProduct.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingProductWithIdOnly = await prisma.shippingProduct.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShippingProductFindManyArgs>(
      args?: SelectSubset<T, ShippingProductFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ShippingProduct>>, PrismaPromise<Array<ShippingProductGetPayload<T>>>>

    /**
     * Create a ShippingProduct.
     * @param {ShippingProductCreateArgs} args - Arguments to create a ShippingProduct.
     * @example
     * // Create one ShippingProduct
     * const ShippingProduct = await prisma.shippingProduct.create({
     *   data: {
     *     // ... data to create a ShippingProduct
     *   }
     * })
     * 
    **/
    create<T extends ShippingProductCreateArgs>(
      args: SelectSubset<T, ShippingProductCreateArgs>
    ): CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct>, Prisma__ShippingProductClient<ShippingProductGetPayload<T>>>

    /**
     * Create many ShippingProducts.
     *     @param {ShippingProductCreateManyArgs} args - Arguments to create many ShippingProducts.
     *     @example
     *     // Create many ShippingProducts
     *     const shippingProduct = await prisma.shippingProduct.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ShippingProductCreateManyArgs>(
      args?: SelectSubset<T, ShippingProductCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ShippingProduct.
     * @param {ShippingProductDeleteArgs} args - Arguments to delete one ShippingProduct.
     * @example
     * // Delete one ShippingProduct
     * const ShippingProduct = await prisma.shippingProduct.delete({
     *   where: {
     *     // ... filter to delete one ShippingProduct
     *   }
     * })
     * 
    **/
    delete<T extends ShippingProductDeleteArgs>(
      args: SelectSubset<T, ShippingProductDeleteArgs>
    ): CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct>, Prisma__ShippingProductClient<ShippingProductGetPayload<T>>>

    /**
     * Update one ShippingProduct.
     * @param {ShippingProductUpdateArgs} args - Arguments to update one ShippingProduct.
     * @example
     * // Update one ShippingProduct
     * const shippingProduct = await prisma.shippingProduct.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShippingProductUpdateArgs>(
      args: SelectSubset<T, ShippingProductUpdateArgs>
    ): CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct>, Prisma__ShippingProductClient<ShippingProductGetPayload<T>>>

    /**
     * Delete zero or more ShippingProducts.
     * @param {ShippingProductDeleteManyArgs} args - Arguments to filter ShippingProducts to delete.
     * @example
     * // Delete a few ShippingProducts
     * const { count } = await prisma.shippingProduct.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShippingProductDeleteManyArgs>(
      args?: SelectSubset<T, ShippingProductDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShippingProducts
     * const shippingProduct = await prisma.shippingProduct.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShippingProductUpdateManyArgs>(
      args: SelectSubset<T, ShippingProductUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ShippingProduct.
     * @param {ShippingProductUpsertArgs} args - Arguments to update or create a ShippingProduct.
     * @example
     * // Update or create a ShippingProduct
     * const shippingProduct = await prisma.shippingProduct.upsert({
     *   create: {
     *     // ... data to create a ShippingProduct
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShippingProduct we want to update
     *   }
     * })
    **/
    upsert<T extends ShippingProductUpsertArgs>(
      args: SelectSubset<T, ShippingProductUpsertArgs>
    ): CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct>, Prisma__ShippingProductClient<ShippingProductGetPayload<T>>>

    /**
     * Find one ShippingProduct that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ShippingProductFindUniqueOrThrowArgs} args - Arguments to find a ShippingProduct
     * @example
     * // Get one ShippingProduct
     * const shippingProduct = await prisma.shippingProduct.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ShippingProductFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ShippingProductFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct>, Prisma__ShippingProductClient<ShippingProductGetPayload<T>>>

    /**
     * Find the first ShippingProduct that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingProductFindFirstOrThrowArgs} args - Arguments to find a ShippingProduct
     * @example
     * // Get one ShippingProduct
     * const shippingProduct = await prisma.shippingProduct.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ShippingProductFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ShippingProductFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingProductClient<ShippingProduct>, Prisma__ShippingProductClient<ShippingProductGetPayload<T>>>

    /**
     * Count the number of ShippingProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingProductCountArgs} args - Arguments to filter ShippingProducts to count.
     * @example
     * // Count the number of ShippingProducts
     * const count = await prisma.shippingProduct.count({
     *   where: {
     *     // ... the filter for the ShippingProducts we want to count
     *   }
     * })
    **/
    count<T extends ShippingProductCountArgs>(
      args?: Subset<T, ShippingProductCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShippingProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingProductAggregateArgs>(args: Subset<T, ShippingProductAggregateArgs>): PrismaPromise<GetShippingProductAggregateType<T>>

    /**
     * Group by ShippingProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingProductGroupByArgs['orderBy'] }
        : { orderBy?: ShippingProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingProductGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ShippingProduct.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ShippingProductClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    product<T extends productsArgs = {}>(args?: Subset<T, productsArgs>): CheckSelect<T, Prisma__productsClient<products | null >, Prisma__productsClient<productsGetPayload<T> | null >>;

    shipping<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ShippingProduct base type for findUnique actions
   */
  export type ShippingProductFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ShippingProduct
     * 
    **/
    select?: ShippingProductSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingProductInclude | null
    /**
     * Filter, which ShippingProduct to fetch.
     * 
    **/
    where: ShippingProductWhereUniqueInput
  }

  /**
   * ShippingProduct: findUnique
   */
  export interface ShippingProductFindUniqueArgs extends ShippingProductFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShippingProduct base type for findFirst actions
   */
  export type ShippingProductFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ShippingProduct
     * 
    **/
    select?: ShippingProductSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingProductInclude | null
    /**
     * Filter, which ShippingProduct to fetch.
     * 
    **/
    where?: ShippingProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingProducts to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingProductOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingProducts.
     * 
    **/
    cursor?: ShippingProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingProducts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingProducts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingProducts.
     * 
    **/
    distinct?: Enumerable<ShippingProductScalarFieldEnum>
  }

  /**
   * ShippingProduct: findFirst
   */
  export interface ShippingProductFindFirstArgs extends ShippingProductFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShippingProduct findMany
   */
  export type ShippingProductFindManyArgs = {
    /**
     * Select specific fields to fetch from the ShippingProduct
     * 
    **/
    select?: ShippingProductSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingProductInclude | null
    /**
     * Filter, which ShippingProducts to fetch.
     * 
    **/
    where?: ShippingProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingProducts to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingProductOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShippingProducts.
     * 
    **/
    cursor?: ShippingProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingProducts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingProducts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ShippingProductScalarFieldEnum>
  }


  /**
   * ShippingProduct create
   */
  export type ShippingProductCreateArgs = {
    /**
     * Select specific fields to fetch from the ShippingProduct
     * 
    **/
    select?: ShippingProductSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingProductInclude | null
    /**
     * The data needed to create a ShippingProduct.
     * 
    **/
    data: XOR<ShippingProductCreateInput, ShippingProductUncheckedCreateInput>
  }


  /**
   * ShippingProduct createMany
   */
  export type ShippingProductCreateManyArgs = {
    /**
     * The data used to create many ShippingProducts.
     * 
    **/
    data: Enumerable<ShippingProductCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ShippingProduct update
   */
  export type ShippingProductUpdateArgs = {
    /**
     * Select specific fields to fetch from the ShippingProduct
     * 
    **/
    select?: ShippingProductSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingProductInclude | null
    /**
     * The data needed to update a ShippingProduct.
     * 
    **/
    data: XOR<ShippingProductUpdateInput, ShippingProductUncheckedUpdateInput>
    /**
     * Choose, which ShippingProduct to update.
     * 
    **/
    where: ShippingProductWhereUniqueInput
  }


  /**
   * ShippingProduct updateMany
   */
  export type ShippingProductUpdateManyArgs = {
    /**
     * The data used to update ShippingProducts.
     * 
    **/
    data: XOR<ShippingProductUpdateManyMutationInput, ShippingProductUncheckedUpdateManyInput>
    /**
     * Filter which ShippingProducts to update
     * 
    **/
    where?: ShippingProductWhereInput
  }


  /**
   * ShippingProduct upsert
   */
  export type ShippingProductUpsertArgs = {
    /**
     * Select specific fields to fetch from the ShippingProduct
     * 
    **/
    select?: ShippingProductSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingProductInclude | null
    /**
     * The filter to search for the ShippingProduct to update in case it exists.
     * 
    **/
    where: ShippingProductWhereUniqueInput
    /**
     * In case the ShippingProduct found by the `where` argument doesn't exist, create a new ShippingProduct with this data.
     * 
    **/
    create: XOR<ShippingProductCreateInput, ShippingProductUncheckedCreateInput>
    /**
     * In case the ShippingProduct was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ShippingProductUpdateInput, ShippingProductUncheckedUpdateInput>
  }


  /**
   * ShippingProduct delete
   */
  export type ShippingProductDeleteArgs = {
    /**
     * Select specific fields to fetch from the ShippingProduct
     * 
    **/
    select?: ShippingProductSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingProductInclude | null
    /**
     * Filter which ShippingProduct to delete.
     * 
    **/
    where: ShippingProductWhereUniqueInput
  }


  /**
   * ShippingProduct deleteMany
   */
  export type ShippingProductDeleteManyArgs = {
    /**
     * Filter which ShippingProducts to delete
     * 
    **/
    where?: ShippingProductWhereInput
  }


  /**
   * ShippingProduct: findUniqueOrThrow
   */
  export type ShippingProductFindUniqueOrThrowArgs = ShippingProductFindUniqueArgsBase
      

  /**
   * ShippingProduct: findFirstOrThrow
   */
  export type ShippingProductFindFirstOrThrowArgs = ShippingProductFindFirstArgsBase
      

  /**
   * ShippingProduct without action
   */
  export type ShippingProductArgs = {
    /**
     * Select specific fields to fetch from the ShippingProduct
     * 
    **/
    select?: ShippingProductSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingProductInclude | null
  }



  /**
   * Model Shipping
   */


  export type AggregateShipping = {
    _count: ShippingCountAggregateOutputType | null
    _avg: ShippingAvgAggregateOutputType | null
    _sum: ShippingSumAggregateOutputType | null
    _min: ShippingMinAggregateOutputType | null
    _max: ShippingMaxAggregateOutputType | null
  }

  export type ShippingAvgAggregateOutputType = {
    id: number | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
  }

  export type ShippingSumAggregateOutputType = {
    id: number | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
  }

  export type ShippingMinAggregateOutputType = {
    id: number | null
    status: string | null
    owner_head_name: string | null
    owner_head_address: string | null
    disponent_owner: string | null
    charter_name: string | null
    master_name: string | null
    master_email: string | null
    estimated_draft_arrival: string | null
    estimated_draft_departure: string | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_operator: string | null
    vessel_operator_email: string | null
    operation_type: string | null
    agency_type: string | null
    voyage_number: string | null
    external_code: string | null
    comments: string | null
    last_port: string | null
    next_port: string | null
    broker: string | null
    boat: string | null
    tugs: string | null
    garbage: string | null
    last_cargoes: string | null
    sscec_port: string | null
    sscec_exp: string | null
    in_marsat_c_number: string | null
    master_phone_01: string | null
    master_phone_02: string | null
    vessel_expert: string | null
    vessel_expert_phone01: string | null
    vessel_expert_phone02: string | null
    vessel_expert_alternate: string | null
    vessel_expert_alternate_phone01: string | null
    vessel_expert_alternate_phone02: string | null
    vessel_operator_phone01: string | null
    vessel_operator_phone02: string | null
    vessel_operator_city_country: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
    port_operator: string | null
  }

  export type ShippingMaxAggregateOutputType = {
    id: number | null
    status: string | null
    owner_head_name: string | null
    owner_head_address: string | null
    disponent_owner: string | null
    charter_name: string | null
    master_name: string | null
    master_email: string | null
    estimated_draft_arrival: string | null
    estimated_draft_departure: string | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_operator: string | null
    vessel_operator_email: string | null
    operation_type: string | null
    agency_type: string | null
    voyage_number: string | null
    external_code: string | null
    comments: string | null
    last_port: string | null
    next_port: string | null
    broker: string | null
    boat: string | null
    tugs: string | null
    garbage: string | null
    last_cargoes: string | null
    sscec_port: string | null
    sscec_exp: string | null
    in_marsat_c_number: string | null
    master_phone_01: string | null
    master_phone_02: string | null
    vessel_expert: string | null
    vessel_expert_phone01: string | null
    vessel_expert_phone02: string | null
    vessel_expert_alternate: string | null
    vessel_expert_alternate_phone01: string | null
    vessel_expert_alternate_phone02: string | null
    vessel_operator_phone01: string | null
    vessel_operator_phone02: string | null
    vessel_operator_city_country: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
    port_operator: string | null
  }

  export type ShippingCountAggregateOutputType = {
    id: number
    status: number
    owner_head_name: number
    owner_head_address: number
    disponent_owner: number
    charter_name: number
    master_name: number
    master_email: number
    estimated_draft_arrival: number
    estimated_draft_departure: number
    arrival_draft: number
    depart_draft: number
    vessel_operator: number
    vessel_operator_email: number
    operation_type: number
    agency_type: number
    voyage_number: number
    external_code: number
    comments: number
    last_port: number
    next_port: number
    broker: number
    boat: number
    tugs: number
    garbage: number
    last_cargoes: number
    sscec_port: number
    sscec_exp: number
    in_marsat_c_number: number
    master_phone_01: number
    master_phone_02: number
    vessel_expert: number
    vessel_expert_phone01: number
    vessel_expert_phone02: number
    vessel_expert_alternate: number
    vessel_expert_alternate_phone01: number
    vessel_expert_alternate_phone02: number
    vessel_operator_phone01: number
    vessel_operator_phone02: number
    vessel_operator_city_country: number
    created_at: number
    updated_at: number
    deleted_at: number
    vessel_id: number
    user_id: number
    total_load_expected: number
    total_load_actual: number
    port_operator: number
    _all: number
  }


  export type ShippingAvgAggregateInputType = {
    id?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
  }

  export type ShippingSumAggregateInputType = {
    id?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
  }

  export type ShippingMinAggregateInputType = {
    id?: true
    status?: true
    owner_head_name?: true
    owner_head_address?: true
    disponent_owner?: true
    charter_name?: true
    master_name?: true
    master_email?: true
    estimated_draft_arrival?: true
    estimated_draft_departure?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_operator?: true
    vessel_operator_email?: true
    operation_type?: true
    agency_type?: true
    voyage_number?: true
    external_code?: true
    comments?: true
    last_port?: true
    next_port?: true
    broker?: true
    boat?: true
    tugs?: true
    garbage?: true
    last_cargoes?: true
    sscec_port?: true
    sscec_exp?: true
    in_marsat_c_number?: true
    master_phone_01?: true
    master_phone_02?: true
    vessel_expert?: true
    vessel_expert_phone01?: true
    vessel_expert_phone02?: true
    vessel_expert_alternate?: true
    vessel_expert_alternate_phone01?: true
    vessel_expert_alternate_phone02?: true
    vessel_operator_phone01?: true
    vessel_operator_phone02?: true
    vessel_operator_city_country?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
    port_operator?: true
  }

  export type ShippingMaxAggregateInputType = {
    id?: true
    status?: true
    owner_head_name?: true
    owner_head_address?: true
    disponent_owner?: true
    charter_name?: true
    master_name?: true
    master_email?: true
    estimated_draft_arrival?: true
    estimated_draft_departure?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_operator?: true
    vessel_operator_email?: true
    operation_type?: true
    agency_type?: true
    voyage_number?: true
    external_code?: true
    comments?: true
    last_port?: true
    next_port?: true
    broker?: true
    boat?: true
    tugs?: true
    garbage?: true
    last_cargoes?: true
    sscec_port?: true
    sscec_exp?: true
    in_marsat_c_number?: true
    master_phone_01?: true
    master_phone_02?: true
    vessel_expert?: true
    vessel_expert_phone01?: true
    vessel_expert_phone02?: true
    vessel_expert_alternate?: true
    vessel_expert_alternate_phone01?: true
    vessel_expert_alternate_phone02?: true
    vessel_operator_phone01?: true
    vessel_operator_phone02?: true
    vessel_operator_city_country?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
    port_operator?: true
  }

  export type ShippingCountAggregateInputType = {
    id?: true
    status?: true
    owner_head_name?: true
    owner_head_address?: true
    disponent_owner?: true
    charter_name?: true
    master_name?: true
    master_email?: true
    estimated_draft_arrival?: true
    estimated_draft_departure?: true
    arrival_draft?: true
    depart_draft?: true
    vessel_operator?: true
    vessel_operator_email?: true
    operation_type?: true
    agency_type?: true
    voyage_number?: true
    external_code?: true
    comments?: true
    last_port?: true
    next_port?: true
    broker?: true
    boat?: true
    tugs?: true
    garbage?: true
    last_cargoes?: true
    sscec_port?: true
    sscec_exp?: true
    in_marsat_c_number?: true
    master_phone_01?: true
    master_phone_02?: true
    vessel_expert?: true
    vessel_expert_phone01?: true
    vessel_expert_phone02?: true
    vessel_expert_alternate?: true
    vessel_expert_alternate_phone01?: true
    vessel_expert_alternate_phone02?: true
    vessel_operator_phone01?: true
    vessel_operator_phone02?: true
    vessel_operator_city_country?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    vessel_id?: true
    user_id?: true
    total_load_expected?: true
    total_load_actual?: true
    port_operator?: true
    _all?: true
  }

  export type ShippingAggregateArgs = {
    /**
     * Filter which Shipping to aggregate.
     * 
    **/
    where?: ShippingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shippings to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ShippingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shippings from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shippings.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Shippings
    **/
    _count?: true | ShippingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingMaxAggregateInputType
  }

  export type GetShippingAggregateType<T extends ShippingAggregateArgs> = {
        [P in keyof T & keyof AggregateShipping]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipping[P]>
      : GetScalarType<T[P], AggregateShipping[P]>
  }




  export type ShippingGroupByArgs = {
    where?: ShippingWhereInput
    orderBy?: Enumerable<ShippingOrderByWithAggregationInput>
    by: Array<ShippingScalarFieldEnum>
    having?: ShippingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingCountAggregateInputType | true
    _avg?: ShippingAvgAggregateInputType
    _sum?: ShippingSumAggregateInputType
    _min?: ShippingMinAggregateInputType
    _max?: ShippingMaxAggregateInputType
  }


  export type ShippingGroupByOutputType = {
    id: number
    status: string | null
    owner_head_name: string | null
    owner_head_address: string | null
    disponent_owner: string | null
    charter_name: string | null
    master_name: string | null
    master_email: string | null
    estimated_draft_arrival: string | null
    estimated_draft_departure: string | null
    arrival_draft: number | null
    depart_draft: number | null
    vessel_operator: string | null
    vessel_operator_email: string | null
    operation_type: string | null
    agency_type: string | null
    voyage_number: string | null
    external_code: string | null
    comments: string | null
    last_port: string | null
    next_port: string | null
    broker: string | null
    boat: string | null
    tugs: string | null
    garbage: string | null
    last_cargoes: string | null
    sscec_port: string | null
    sscec_exp: string | null
    in_marsat_c_number: string | null
    master_phone_01: string | null
    master_phone_02: string | null
    vessel_expert: string | null
    vessel_expert_phone01: string | null
    vessel_expert_phone02: string | null
    vessel_expert_alternate: string | null
    vessel_expert_alternate_phone01: string | null
    vessel_expert_alternate_phone02: string | null
    vessel_operator_phone01: string | null
    vessel_operator_phone02: string | null
    vessel_operator_city_country: string | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    vessel_id: number | null
    user_id: number | null
    total_load_expected: number | null
    total_load_actual: number | null
    port_operator: string | null
    _count: ShippingCountAggregateOutputType | null
    _avg: ShippingAvgAggregateOutputType | null
    _sum: ShippingSumAggregateOutputType | null
    _min: ShippingMinAggregateOutputType | null
    _max: ShippingMaxAggregateOutputType | null
  }

  type GetShippingGroupByPayload<T extends ShippingGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ShippingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingGroupByOutputType[P]>
        }
      >
    >


  export type ShippingSelect = {
    id?: boolean
    status?: boolean
    owner_head_name?: boolean
    owner_head_address?: boolean
    disponent_owner?: boolean
    charter_name?: boolean
    master_name?: boolean
    master_email?: boolean
    estimated_draft_arrival?: boolean
    estimated_draft_departure?: boolean
    arrival_draft?: boolean
    depart_draft?: boolean
    vessel_operator?: boolean
    vessel_operator_email?: boolean
    operation_type?: boolean
    agency_type?: boolean
    voyage_number?: boolean
    external_code?: boolean
    comments?: boolean
    last_port?: boolean
    next_port?: boolean
    broker?: boolean
    boat?: boolean
    tugs?: boolean
    garbage?: boolean
    last_cargoes?: boolean
    sscec_port?: boolean
    sscec_exp?: boolean
    in_marsat_c_number?: boolean
    master_phone_01?: boolean
    master_phone_02?: boolean
    vessel_expert?: boolean
    vessel_expert_phone01?: boolean
    vessel_expert_phone02?: boolean
    vessel_expert_alternate?: boolean
    vessel_expert_alternate_phone01?: boolean
    vessel_expert_alternate_phone02?: boolean
    vessel_operator_phone01?: boolean
    vessel_operator_phone02?: boolean
    vessel_operator_city_country?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    vessel_id?: boolean
    user_id?: boolean
    total_load_expected?: boolean
    total_load_actual?: boolean
    port_operator?: boolean
    users?: boolean | usersArgs
    vessel?: boolean | VesselArgs
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    shipping_files?: boolean | shipping_filesFindManyArgs
    shipping_ports?: boolean | ShippingPortFindManyArgs
    shipping_products?: boolean | ShippingProductFindManyArgs
    subsets?: boolean | subsetsFindManyArgs
    inquires?: boolean | inquiresFindManyArgs
    ShippingChecklistItem?: boolean | ShippingChecklistItemFindManyArgs
    sof?: boolean | sofArgs
    _count?: boolean | ShippingCountOutputTypeArgs
  }

  export type ShippingInclude = {
    users?: boolean | usersArgs
    vessel?: boolean | VesselArgs
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    shipping_files?: boolean | shipping_filesFindManyArgs
    shipping_ports?: boolean | ShippingPortFindManyArgs
    shipping_products?: boolean | ShippingProductFindManyArgs
    subsets?: boolean | subsetsFindManyArgs
    inquires?: boolean | inquiresFindManyArgs
    ShippingChecklistItem?: boolean | ShippingChecklistItemFindManyArgs
    sof?: boolean | sofArgs
    _count?: boolean | ShippingCountOutputTypeArgs
  }

  export type ShippingGetPayload<
    S extends boolean | null | undefined | ShippingArgs,
    U = keyof S
      > = S extends true
        ? Shipping
    : S extends undefined
    ? never
    : S extends ShippingArgs | ShippingFindManyArgs
    ?'include' extends U
    ? Shipping  & {
    [P in TrueKeys<S['include']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'vessel' ? VesselGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shipping_files' ? Array < shipping_filesGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shipping_ports' ? Array < ShippingPortGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shipping_products' ? Array < ShippingProductGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'subsets' ? Array < subsetsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'inquires' ? Array < inquiresGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'ShippingChecklistItem' ? Array < ShippingChecklistItemGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'sof' ? sofGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends '_count' ? ShippingCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'vessel' ? VesselGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shipping_files' ? Array < shipping_filesGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shipping_ports' ? Array < ShippingPortGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shipping_products' ? Array < ShippingProductGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'subsets' ? Array < subsetsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'inquires' ? Array < inquiresGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'ShippingChecklistItem' ? Array < ShippingChecklistItemGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'sof' ? sofGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends '_count' ? ShippingCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof Shipping ? Shipping[P] : never
  } 
    : Shipping
  : Shipping


  type ShippingCountArgs = Merge<
    Omit<ShippingFindManyArgs, 'select' | 'include'> & {
      select?: ShippingCountAggregateInputType | true
    }
  >

  export interface ShippingDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Shipping that matches the filter.
     * @param {ShippingFindUniqueArgs} args - Arguments to find a Shipping
     * @example
     * // Get one Shipping
     * const shipping = await prisma.shipping.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShippingFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ShippingFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Shipping'> extends True ? CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>> : CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>

    /**
     * Find the first Shipping that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingFindFirstArgs} args - Arguments to find a Shipping
     * @example
     * // Get one Shipping
     * const shipping = await prisma.shipping.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShippingFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ShippingFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Shipping'> extends True ? CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>> : CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>

    /**
     * Find zero or more Shippings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shippings
     * const shippings = await prisma.shipping.findMany()
     * 
     * // Get first 10 Shippings
     * const shippings = await prisma.shipping.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingWithIdOnly = await prisma.shipping.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShippingFindManyArgs>(
      args?: SelectSubset<T, ShippingFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Shipping>>, PrismaPromise<Array<ShippingGetPayload<T>>>>

    /**
     * Create a Shipping.
     * @param {ShippingCreateArgs} args - Arguments to create a Shipping.
     * @example
     * // Create one Shipping
     * const Shipping = await prisma.shipping.create({
     *   data: {
     *     // ... data to create a Shipping
     *   }
     * })
     * 
    **/
    create<T extends ShippingCreateArgs>(
      args: SelectSubset<T, ShippingCreateArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Create many Shippings.
     *     @param {ShippingCreateManyArgs} args - Arguments to create many Shippings.
     *     @example
     *     // Create many Shippings
     *     const shipping = await prisma.shipping.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ShippingCreateManyArgs>(
      args?: SelectSubset<T, ShippingCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Shipping.
     * @param {ShippingDeleteArgs} args - Arguments to delete one Shipping.
     * @example
     * // Delete one Shipping
     * const Shipping = await prisma.shipping.delete({
     *   where: {
     *     // ... filter to delete one Shipping
     *   }
     * })
     * 
    **/
    delete<T extends ShippingDeleteArgs>(
      args: SelectSubset<T, ShippingDeleteArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Update one Shipping.
     * @param {ShippingUpdateArgs} args - Arguments to update one Shipping.
     * @example
     * // Update one Shipping
     * const shipping = await prisma.shipping.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShippingUpdateArgs>(
      args: SelectSubset<T, ShippingUpdateArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Delete zero or more Shippings.
     * @param {ShippingDeleteManyArgs} args - Arguments to filter Shippings to delete.
     * @example
     * // Delete a few Shippings
     * const { count } = await prisma.shipping.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShippingDeleteManyArgs>(
      args?: SelectSubset<T, ShippingDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shippings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shippings
     * const shipping = await prisma.shipping.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShippingUpdateManyArgs>(
      args: SelectSubset<T, ShippingUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Shipping.
     * @param {ShippingUpsertArgs} args - Arguments to update or create a Shipping.
     * @example
     * // Update or create a Shipping
     * const shipping = await prisma.shipping.upsert({
     *   create: {
     *     // ... data to create a Shipping
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipping we want to update
     *   }
     * })
    **/
    upsert<T extends ShippingUpsertArgs>(
      args: SelectSubset<T, ShippingUpsertArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Find one Shipping that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ShippingFindUniqueOrThrowArgs} args - Arguments to find a Shipping
     * @example
     * // Get one Shipping
     * const shipping = await prisma.shipping.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ShippingFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ShippingFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Find the first Shipping that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingFindFirstOrThrowArgs} args - Arguments to find a Shipping
     * @example
     * // Get one Shipping
     * const shipping = await prisma.shipping.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ShippingFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ShippingFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingClient<Shipping>, Prisma__ShippingClient<ShippingGetPayload<T>>>

    /**
     * Count the number of Shippings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingCountArgs} args - Arguments to filter Shippings to count.
     * @example
     * // Count the number of Shippings
     * const count = await prisma.shipping.count({
     *   where: {
     *     // ... the filter for the Shippings we want to count
     *   }
     * })
    **/
    count<T extends ShippingCountArgs>(
      args?: Subset<T, ShippingCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingAggregateArgs>(args: Subset<T, ShippingAggregateArgs>): PrismaPromise<GetShippingAggregateType<T>>

    /**
     * Group by Shipping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingGroupByArgs['orderBy'] }
        : { orderBy?: ShippingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Shipping.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ShippingClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    vessel<T extends VesselArgs = {}>(args?: Subset<T, VesselArgs>): CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>;

    shipping_documents<T extends shipping_documentsFindManyArgs = {}>(args?: Subset<T, shipping_documentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>;

    shipping_files<T extends shipping_filesFindManyArgs = {}>(args?: Subset<T, shipping_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_files>>, PrismaPromise<Array<shipping_filesGetPayload<T>>>>;

    shipping_ports<T extends ShippingPortFindManyArgs = {}>(args?: Subset<T, ShippingPortFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingPort>>, PrismaPromise<Array<ShippingPortGetPayload<T>>>>;

    shipping_products<T extends ShippingProductFindManyArgs = {}>(args?: Subset<T, ShippingProductFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingProduct>>, PrismaPromise<Array<ShippingProductGetPayload<T>>>>;

    subsets<T extends subsetsFindManyArgs = {}>(args?: Subset<T, subsetsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<subsets>>, PrismaPromise<Array<subsetsGetPayload<T>>>>;

    inquires<T extends inquiresFindManyArgs = {}>(args?: Subset<T, inquiresFindManyArgs>): CheckSelect<T, PrismaPromise<Array<inquires>>, PrismaPromise<Array<inquiresGetPayload<T>>>>;

    ShippingChecklistItem<T extends ShippingChecklistItemFindManyArgs = {}>(args?: Subset<T, ShippingChecklistItemFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingChecklistItem>>, PrismaPromise<Array<ShippingChecklistItemGetPayload<T>>>>;

    sof<T extends sofArgs = {}>(args?: Subset<T, sofArgs>): CheckSelect<T, Prisma__sofClient<sof | null >, Prisma__sofClient<sofGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Shipping base type for findUnique actions
   */
  export type ShippingFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * Filter, which Shipping to fetch.
     * 
    **/
    where: ShippingWhereUniqueInput
  }

  /**
   * Shipping: findUnique
   */
  export interface ShippingFindUniqueArgs extends ShippingFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Shipping base type for findFirst actions
   */
  export type ShippingFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * Filter, which Shipping to fetch.
     * 
    **/
    where?: ShippingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shippings to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Shippings.
     * 
    **/
    cursor?: ShippingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shippings from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shippings.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Shippings.
     * 
    **/
    distinct?: Enumerable<ShippingScalarFieldEnum>
  }

  /**
   * Shipping: findFirst
   */
  export interface ShippingFindFirstArgs extends ShippingFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Shipping findMany
   */
  export type ShippingFindManyArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * Filter, which Shippings to fetch.
     * 
    **/
    where?: ShippingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shippings to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Shippings.
     * 
    **/
    cursor?: ShippingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shippings from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shippings.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ShippingScalarFieldEnum>
  }


  /**
   * Shipping create
   */
  export type ShippingCreateArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * The data needed to create a Shipping.
     * 
    **/
    data: XOR<ShippingCreateInput, ShippingUncheckedCreateInput>
  }


  /**
   * Shipping createMany
   */
  export type ShippingCreateManyArgs = {
    /**
     * The data used to create many Shippings.
     * 
    **/
    data: Enumerable<ShippingCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Shipping update
   */
  export type ShippingUpdateArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * The data needed to update a Shipping.
     * 
    **/
    data: XOR<ShippingUpdateInput, ShippingUncheckedUpdateInput>
    /**
     * Choose, which Shipping to update.
     * 
    **/
    where: ShippingWhereUniqueInput
  }


  /**
   * Shipping updateMany
   */
  export type ShippingUpdateManyArgs = {
    /**
     * The data used to update Shippings.
     * 
    **/
    data: XOR<ShippingUpdateManyMutationInput, ShippingUncheckedUpdateManyInput>
    /**
     * Filter which Shippings to update
     * 
    **/
    where?: ShippingWhereInput
  }


  /**
   * Shipping upsert
   */
  export type ShippingUpsertArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * The filter to search for the Shipping to update in case it exists.
     * 
    **/
    where: ShippingWhereUniqueInput
    /**
     * In case the Shipping found by the `where` argument doesn't exist, create a new Shipping with this data.
     * 
    **/
    create: XOR<ShippingCreateInput, ShippingUncheckedCreateInput>
    /**
     * In case the Shipping was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ShippingUpdateInput, ShippingUncheckedUpdateInput>
  }


  /**
   * Shipping delete
   */
  export type ShippingDeleteArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
    /**
     * Filter which Shipping to delete.
     * 
    **/
    where: ShippingWhereUniqueInput
  }


  /**
   * Shipping deleteMany
   */
  export type ShippingDeleteManyArgs = {
    /**
     * Filter which Shippings to delete
     * 
    **/
    where?: ShippingWhereInput
  }


  /**
   * Shipping: findUniqueOrThrow
   */
  export type ShippingFindUniqueOrThrowArgs = ShippingFindUniqueArgsBase
      

  /**
   * Shipping: findFirstOrThrow
   */
  export type ShippingFindFirstOrThrowArgs = ShippingFindFirstArgsBase
      

  /**
   * Shipping without action
   */
  export type ShippingArgs = {
    /**
     * Select specific fields to fetch from the Shipping
     * 
    **/
    select?: ShippingSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingInclude | null
  }



  /**
   * Model subsets
   */


  export type AggregateSubsets = {
    _count: SubsetsCountAggregateOutputType | null
    _avg: SubsetsAvgAggregateOutputType | null
    _sum: SubsetsSumAggregateOutputType | null
    _min: SubsetsMinAggregateOutputType | null
    _max: SubsetsMaxAggregateOutputType | null
  }

  export type SubsetsAvgAggregateOutputType = {
    id: number | null
    shippingId: number | null
  }

  export type SubsetsSumAggregateOutputType = {
    id: number | null
    shippingId: number | null
  }

  export type SubsetsMinAggregateOutputType = {
    id: number | null
    name: string | null
    shippingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type SubsetsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    shippingId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type SubsetsCountAggregateOutputType = {
    id: number
    name: number
    shippingId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type SubsetsAvgAggregateInputType = {
    id?: true
    shippingId?: true
  }

  export type SubsetsSumAggregateInputType = {
    id?: true
    shippingId?: true
  }

  export type SubsetsMinAggregateInputType = {
    id?: true
    name?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type SubsetsMaxAggregateInputType = {
    id?: true
    name?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type SubsetsCountAggregateInputType = {
    id?: true
    name?: true
    shippingId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type SubsetsAggregateArgs = {
    /**
     * Filter which subsets to aggregate.
     * 
    **/
    where?: subsetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subsets to fetch.
     * 
    **/
    orderBy?: Enumerable<subsetsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: subsetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subsets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subsets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned subsets
    **/
    _count?: true | SubsetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubsetsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubsetsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubsetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubsetsMaxAggregateInputType
  }

  export type GetSubsetsAggregateType<T extends SubsetsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubsets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubsets[P]>
      : GetScalarType<T[P], AggregateSubsets[P]>
  }




  export type SubsetsGroupByArgs = {
    where?: subsetsWhereInput
    orderBy?: Enumerable<subsetsOrderByWithAggregationInput>
    by: Array<SubsetsScalarFieldEnum>
    having?: subsetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubsetsCountAggregateInputType | true
    _avg?: SubsetsAvgAggregateInputType
    _sum?: SubsetsSumAggregateInputType
    _min?: SubsetsMinAggregateInputType
    _max?: SubsetsMaxAggregateInputType
  }


  export type SubsetsGroupByOutputType = {
    id: number
    name: string | null
    shippingId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: SubsetsCountAggregateOutputType | null
    _avg: SubsetsAvgAggregateOutputType | null
    _sum: SubsetsSumAggregateOutputType | null
    _min: SubsetsMinAggregateOutputType | null
    _max: SubsetsMaxAggregateOutputType | null
  }

  type GetSubsetsGroupByPayload<T extends SubsetsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<SubsetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubsetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubsetsGroupByOutputType[P]>
            : GetScalarType<T[P], SubsetsGroupByOutputType[P]>
        }
      >
    >


  export type subsetsSelect = {
    id?: boolean
    name?: boolean
    shippingId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    shippings?: boolean | ShippingArgs
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    _count?: boolean | SubsetsCountOutputTypeArgs
  }

  export type subsetsInclude = {
    shippings?: boolean | ShippingArgs
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    _count?: boolean | SubsetsCountOutputTypeArgs
  }

  export type subsetsGetPayload<
    S extends boolean | null | undefined | subsetsArgs,
    U = keyof S
      > = S extends true
        ? subsets
    : S extends undefined
    ? never
    : S extends subsetsArgs | subsetsFindManyArgs
    ?'include' extends U
    ? subsets  & {
    [P in TrueKeys<S['include']>]:
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? SubsetsCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? SubsetsCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof subsets ? subsets[P] : never
  } 
    : subsets
  : subsets


  type subsetsCountArgs = Merge<
    Omit<subsetsFindManyArgs, 'select' | 'include'> & {
      select?: SubsetsCountAggregateInputType | true
    }
  >

  export interface subsetsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Subsets that matches the filter.
     * @param {subsetsFindUniqueArgs} args - Arguments to find a Subsets
     * @example
     * // Get one Subsets
     * const subsets = await prisma.subsets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends subsetsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, subsetsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'subsets'> extends True ? CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>> : CheckSelect<T, Prisma__subsetsClient<subsets | null >, Prisma__subsetsClient<subsetsGetPayload<T> | null >>

    /**
     * Find the first Subsets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subsetsFindFirstArgs} args - Arguments to find a Subsets
     * @example
     * // Get one Subsets
     * const subsets = await prisma.subsets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends subsetsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, subsetsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'subsets'> extends True ? CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>> : CheckSelect<T, Prisma__subsetsClient<subsets | null >, Prisma__subsetsClient<subsetsGetPayload<T> | null >>

    /**
     * Find zero or more Subsets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subsetsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subsets
     * const subsets = await prisma.subsets.findMany()
     * 
     * // Get first 10 Subsets
     * const subsets = await prisma.subsets.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subsetsWithIdOnly = await prisma.subsets.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends subsetsFindManyArgs>(
      args?: SelectSubset<T, subsetsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<subsets>>, PrismaPromise<Array<subsetsGetPayload<T>>>>

    /**
     * Create a Subsets.
     * @param {subsetsCreateArgs} args - Arguments to create a Subsets.
     * @example
     * // Create one Subsets
     * const Subsets = await prisma.subsets.create({
     *   data: {
     *     // ... data to create a Subsets
     *   }
     * })
     * 
    **/
    create<T extends subsetsCreateArgs>(
      args: SelectSubset<T, subsetsCreateArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Create many Subsets.
     *     @param {subsetsCreateManyArgs} args - Arguments to create many Subsets.
     *     @example
     *     // Create many Subsets
     *     const subsets = await prisma.subsets.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends subsetsCreateManyArgs>(
      args?: SelectSubset<T, subsetsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Subsets.
     * @param {subsetsDeleteArgs} args - Arguments to delete one Subsets.
     * @example
     * // Delete one Subsets
     * const Subsets = await prisma.subsets.delete({
     *   where: {
     *     // ... filter to delete one Subsets
     *   }
     * })
     * 
    **/
    delete<T extends subsetsDeleteArgs>(
      args: SelectSubset<T, subsetsDeleteArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Update one Subsets.
     * @param {subsetsUpdateArgs} args - Arguments to update one Subsets.
     * @example
     * // Update one Subsets
     * const subsets = await prisma.subsets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends subsetsUpdateArgs>(
      args: SelectSubset<T, subsetsUpdateArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Delete zero or more Subsets.
     * @param {subsetsDeleteManyArgs} args - Arguments to filter Subsets to delete.
     * @example
     * // Delete a few Subsets
     * const { count } = await prisma.subsets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends subsetsDeleteManyArgs>(
      args?: SelectSubset<T, subsetsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subsets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subsetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subsets
     * const subsets = await prisma.subsets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends subsetsUpdateManyArgs>(
      args: SelectSubset<T, subsetsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Subsets.
     * @param {subsetsUpsertArgs} args - Arguments to update or create a Subsets.
     * @example
     * // Update or create a Subsets
     * const subsets = await prisma.subsets.upsert({
     *   create: {
     *     // ... data to create a Subsets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subsets we want to update
     *   }
     * })
    **/
    upsert<T extends subsetsUpsertArgs>(
      args: SelectSubset<T, subsetsUpsertArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Find one Subsets that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {subsetsFindUniqueOrThrowArgs} args - Arguments to find a Subsets
     * @example
     * // Get one Subsets
     * const subsets = await prisma.subsets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends subsetsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, subsetsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Find the first Subsets that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subsetsFindFirstOrThrowArgs} args - Arguments to find a Subsets
     * @example
     * // Get one Subsets
     * const subsets = await prisma.subsets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends subsetsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, subsetsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__subsetsClient<subsets>, Prisma__subsetsClient<subsetsGetPayload<T>>>

    /**
     * Count the number of Subsets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subsetsCountArgs} args - Arguments to filter Subsets to count.
     * @example
     * // Count the number of Subsets
     * const count = await prisma.subsets.count({
     *   where: {
     *     // ... the filter for the Subsets we want to count
     *   }
     * })
    **/
    count<T extends subsetsCountArgs>(
      args?: Subset<T, subsetsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubsetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subsets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubsetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubsetsAggregateArgs>(args: Subset<T, SubsetsAggregateArgs>): PrismaPromise<GetSubsetsAggregateType<T>>

    /**
     * Group by Subsets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubsetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubsetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubsetsGroupByArgs['orderBy'] }
        : { orderBy?: SubsetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubsetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubsetsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for subsets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__subsetsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    shipping_documents<T extends shipping_documentsFindManyArgs = {}>(args?: Subset<T, shipping_documentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * subsets base type for findUnique actions
   */
  export type subsetsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * Filter, which subsets to fetch.
     * 
    **/
    where: subsetsWhereUniqueInput
  }

  /**
   * subsets: findUnique
   */
  export interface subsetsFindUniqueArgs extends subsetsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * subsets base type for findFirst actions
   */
  export type subsetsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * Filter, which subsets to fetch.
     * 
    **/
    where?: subsetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subsets to fetch.
     * 
    **/
    orderBy?: Enumerable<subsetsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subsets.
     * 
    **/
    cursor?: subsetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subsets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subsets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subsets.
     * 
    **/
    distinct?: Enumerable<SubsetsScalarFieldEnum>
  }

  /**
   * subsets: findFirst
   */
  export interface subsetsFindFirstArgs extends subsetsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * subsets findMany
   */
  export type subsetsFindManyArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * Filter, which subsets to fetch.
     * 
    **/
    where?: subsetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subsets to fetch.
     * 
    **/
    orderBy?: Enumerable<subsetsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing subsets.
     * 
    **/
    cursor?: subsetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subsets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subsets.
     * 
    **/
    skip?: number
    distinct?: Enumerable<SubsetsScalarFieldEnum>
  }


  /**
   * subsets create
   */
  export type subsetsCreateArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * The data needed to create a subsets.
     * 
    **/
    data: XOR<subsetsCreateInput, subsetsUncheckedCreateInput>
  }


  /**
   * subsets createMany
   */
  export type subsetsCreateManyArgs = {
    /**
     * The data used to create many subsets.
     * 
    **/
    data: Enumerable<subsetsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * subsets update
   */
  export type subsetsUpdateArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * The data needed to update a subsets.
     * 
    **/
    data: XOR<subsetsUpdateInput, subsetsUncheckedUpdateInput>
    /**
     * Choose, which subsets to update.
     * 
    **/
    where: subsetsWhereUniqueInput
  }


  /**
   * subsets updateMany
   */
  export type subsetsUpdateManyArgs = {
    /**
     * The data used to update subsets.
     * 
    **/
    data: XOR<subsetsUpdateManyMutationInput, subsetsUncheckedUpdateManyInput>
    /**
     * Filter which subsets to update
     * 
    **/
    where?: subsetsWhereInput
  }


  /**
   * subsets upsert
   */
  export type subsetsUpsertArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * The filter to search for the subsets to update in case it exists.
     * 
    **/
    where: subsetsWhereUniqueInput
    /**
     * In case the subsets found by the `where` argument doesn't exist, create a new subsets with this data.
     * 
    **/
    create: XOR<subsetsCreateInput, subsetsUncheckedCreateInput>
    /**
     * In case the subsets was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<subsetsUpdateInput, subsetsUncheckedUpdateInput>
  }


  /**
   * subsets delete
   */
  export type subsetsDeleteArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
    /**
     * Filter which subsets to delete.
     * 
    **/
    where: subsetsWhereUniqueInput
  }


  /**
   * subsets deleteMany
   */
  export type subsetsDeleteManyArgs = {
    /**
     * Filter which subsets to delete
     * 
    **/
    where?: subsetsWhereInput
  }


  /**
   * subsets: findUniqueOrThrow
   */
  export type subsetsFindUniqueOrThrowArgs = subsetsFindUniqueArgsBase
      

  /**
   * subsets: findFirstOrThrow
   */
  export type subsetsFindFirstOrThrowArgs = subsetsFindFirstArgsBase
      

  /**
   * subsets without action
   */
  export type subsetsArgs = {
    /**
     * Select specific fields to fetch from the subsets
     * 
    **/
    select?: subsetsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: subsetsInclude | null
  }



  /**
   * Model user_files
   */


  export type AggregateUser_files = {
    _count: User_filesCountAggregateOutputType | null
    _avg: User_filesAvgAggregateOutputType | null
    _sum: User_filesSumAggregateOutputType | null
    _min: User_filesMinAggregateOutputType | null
    _max: User_filesMaxAggregateOutputType | null
  }

  export type User_filesAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type User_filesSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type User_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type User_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type User_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    userId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type User_filesAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type User_filesSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type User_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type User_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type User_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type User_filesAggregateArgs = {
    /**
     * Filter which user_files to aggregate.
     * 
    **/
    where?: user_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_files to fetch.
     * 
    **/
    orderBy?: Enumerable<user_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: user_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_files
    **/
    _count?: true | User_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_filesMaxAggregateInputType
  }

  export type GetUser_filesAggregateType<T extends User_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_files[P]>
      : GetScalarType<T[P], AggregateUser_files[P]>
  }




  export type User_filesGroupByArgs = {
    where?: user_filesWhereInput
    orderBy?: Enumerable<user_filesOrderByWithAggregationInput>
    by: Array<User_filesScalarFieldEnum>
    having?: user_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_filesCountAggregateInputType | true
    _avg?: User_filesAvgAggregateInputType
    _sum?: User_filesSumAggregateInputType
    _min?: User_filesMinAggregateInputType
    _max?: User_filesMaxAggregateInputType
  }


  export type User_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    userId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: User_filesCountAggregateOutputType | null
    _avg: User_filesAvgAggregateOutputType | null
    _sum: User_filesSumAggregateOutputType | null
    _min: User_filesMinAggregateOutputType | null
    _max: User_filesMaxAggregateOutputType | null
  }

  type GetUser_filesGroupByPayload<T extends User_filesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<User_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_filesGroupByOutputType[P]>
            : GetScalarType<T[P], User_filesGroupByOutputType[P]>
        }
      >
    >


  export type user_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    users?: boolean | usersArgs
  }

  export type user_filesInclude = {
    users?: boolean | usersArgs
  }

  export type user_filesGetPayload<
    S extends boolean | null | undefined | user_filesArgs,
    U = keyof S
      > = S extends true
        ? user_files
    : S extends undefined
    ? never
    : S extends user_filesArgs | user_filesFindManyArgs
    ?'include' extends U
    ? user_files  & {
    [P in TrueKeys<S['include']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof user_files ? user_files[P] : never
  } 
    : user_files
  : user_files


  type user_filesCountArgs = Merge<
    Omit<user_filesFindManyArgs, 'select' | 'include'> & {
      select?: User_filesCountAggregateInputType | true
    }
  >

  export interface user_filesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one User_files that matches the filter.
     * @param {user_filesFindUniqueArgs} args - Arguments to find a User_files
     * @example
     * // Get one User_files
     * const user_files = await prisma.user_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends user_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, user_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'user_files'> extends True ? CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>> : CheckSelect<T, Prisma__user_filesClient<user_files | null >, Prisma__user_filesClient<user_filesGetPayload<T> | null >>

    /**
     * Find the first User_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_filesFindFirstArgs} args - Arguments to find a User_files
     * @example
     * // Get one User_files
     * const user_files = await prisma.user_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends user_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, user_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'user_files'> extends True ? CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>> : CheckSelect<T, Prisma__user_filesClient<user_files | null >, Prisma__user_filesClient<user_filesGetPayload<T> | null >>

    /**
     * Find zero or more User_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_files
     * const user_files = await prisma.user_files.findMany()
     * 
     * // Get first 10 User_files
     * const user_files = await prisma.user_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_filesWithIdOnly = await prisma.user_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends user_filesFindManyArgs>(
      args?: SelectSubset<T, user_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<user_files>>, PrismaPromise<Array<user_filesGetPayload<T>>>>

    /**
     * Create a User_files.
     * @param {user_filesCreateArgs} args - Arguments to create a User_files.
     * @example
     * // Create one User_files
     * const User_files = await prisma.user_files.create({
     *   data: {
     *     // ... data to create a User_files
     *   }
     * })
     * 
    **/
    create<T extends user_filesCreateArgs>(
      args: SelectSubset<T, user_filesCreateArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Create many User_files.
     *     @param {user_filesCreateManyArgs} args - Arguments to create many User_files.
     *     @example
     *     // Create many User_files
     *     const user_files = await prisma.user_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends user_filesCreateManyArgs>(
      args?: SelectSubset<T, user_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a User_files.
     * @param {user_filesDeleteArgs} args - Arguments to delete one User_files.
     * @example
     * // Delete one User_files
     * const User_files = await prisma.user_files.delete({
     *   where: {
     *     // ... filter to delete one User_files
     *   }
     * })
     * 
    **/
    delete<T extends user_filesDeleteArgs>(
      args: SelectSubset<T, user_filesDeleteArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Update one User_files.
     * @param {user_filesUpdateArgs} args - Arguments to update one User_files.
     * @example
     * // Update one User_files
     * const user_files = await prisma.user_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends user_filesUpdateArgs>(
      args: SelectSubset<T, user_filesUpdateArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Delete zero or more User_files.
     * @param {user_filesDeleteManyArgs} args - Arguments to filter User_files to delete.
     * @example
     * // Delete a few User_files
     * const { count } = await prisma.user_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends user_filesDeleteManyArgs>(
      args?: SelectSubset<T, user_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_files
     * const user_files = await prisma.user_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends user_filesUpdateManyArgs>(
      args: SelectSubset<T, user_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one User_files.
     * @param {user_filesUpsertArgs} args - Arguments to update or create a User_files.
     * @example
     * // Update or create a User_files
     * const user_files = await prisma.user_files.upsert({
     *   create: {
     *     // ... data to create a User_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_files we want to update
     *   }
     * })
    **/
    upsert<T extends user_filesUpsertArgs>(
      args: SelectSubset<T, user_filesUpsertArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Find one User_files that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {user_filesFindUniqueOrThrowArgs} args - Arguments to find a User_files
     * @example
     * // Get one User_files
     * const user_files = await prisma.user_files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends user_filesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, user_filesFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Find the first User_files that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_filesFindFirstOrThrowArgs} args - Arguments to find a User_files
     * @example
     * // Get one User_files
     * const user_files = await prisma.user_files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends user_filesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, user_filesFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__user_filesClient<user_files>, Prisma__user_filesClient<user_filesGetPayload<T>>>

    /**
     * Count the number of User_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_filesCountArgs} args - Arguments to filter User_files to count.
     * @example
     * // Count the number of User_files
     * const count = await prisma.user_files.count({
     *   where: {
     *     // ... the filter for the User_files we want to count
     *   }
     * })
    **/
    count<T extends user_filesCountArgs>(
      args?: Subset<T, user_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_filesAggregateArgs>(args: Subset<T, User_filesAggregateArgs>): PrismaPromise<GetUser_filesAggregateType<T>>

    /**
     * Group by User_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends User_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: User_filesGroupByArgs['orderBy'] }
        : { orderBy?: User_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, User_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_filesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for user_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__user_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * user_files base type for findUnique actions
   */
  export type user_filesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * Filter, which user_files to fetch.
     * 
    **/
    where: user_filesWhereUniqueInput
  }

  /**
   * user_files: findUnique
   */
  export interface user_filesFindUniqueArgs extends user_filesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * user_files base type for findFirst actions
   */
  export type user_filesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * Filter, which user_files to fetch.
     * 
    **/
    where?: user_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_files to fetch.
     * 
    **/
    orderBy?: Enumerable<user_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_files.
     * 
    **/
    cursor?: user_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_files.
     * 
    **/
    distinct?: Enumerable<User_filesScalarFieldEnum>
  }

  /**
   * user_files: findFirst
   */
  export interface user_filesFindFirstArgs extends user_filesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * user_files findMany
   */
  export type user_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * Filter, which user_files to fetch.
     * 
    **/
    where?: user_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_files to fetch.
     * 
    **/
    orderBy?: Enumerable<user_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_files.
     * 
    **/
    cursor?: user_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<User_filesScalarFieldEnum>
  }


  /**
   * user_files create
   */
  export type user_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * The data needed to create a user_files.
     * 
    **/
    data: XOR<user_filesCreateInput, user_filesUncheckedCreateInput>
  }


  /**
   * user_files createMany
   */
  export type user_filesCreateManyArgs = {
    /**
     * The data used to create many user_files.
     * 
    **/
    data: Enumerable<user_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * user_files update
   */
  export type user_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * The data needed to update a user_files.
     * 
    **/
    data: XOR<user_filesUpdateInput, user_filesUncheckedUpdateInput>
    /**
     * Choose, which user_files to update.
     * 
    **/
    where: user_filesWhereUniqueInput
  }


  /**
   * user_files updateMany
   */
  export type user_filesUpdateManyArgs = {
    /**
     * The data used to update user_files.
     * 
    **/
    data: XOR<user_filesUpdateManyMutationInput, user_filesUncheckedUpdateManyInput>
    /**
     * Filter which user_files to update
     * 
    **/
    where?: user_filesWhereInput
  }


  /**
   * user_files upsert
   */
  export type user_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * The filter to search for the user_files to update in case it exists.
     * 
    **/
    where: user_filesWhereUniqueInput
    /**
     * In case the user_files found by the `where` argument doesn't exist, create a new user_files with this data.
     * 
    **/
    create: XOR<user_filesCreateInput, user_filesUncheckedCreateInput>
    /**
     * In case the user_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<user_filesUpdateInput, user_filesUncheckedUpdateInput>
  }


  /**
   * user_files delete
   */
  export type user_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
    /**
     * Filter which user_files to delete.
     * 
    **/
    where: user_filesWhereUniqueInput
  }


  /**
   * user_files deleteMany
   */
  export type user_filesDeleteManyArgs = {
    /**
     * Filter which user_files to delete
     * 
    **/
    where?: user_filesWhereInput
  }


  /**
   * user_files: findUniqueOrThrow
   */
  export type user_filesFindUniqueOrThrowArgs = user_filesFindUniqueArgsBase
      

  /**
   * user_files: findFirstOrThrow
   */
  export type user_filesFindFirstOrThrowArgs = user_filesFindFirstArgsBase
      

  /**
   * user_files without action
   */
  export type user_filesArgs = {
    /**
     * Select specific fields to fetch from the user_files
     * 
    **/
    select?: user_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: user_filesInclude | null
  }



  /**
   * Model users
   */


  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    agencyId: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    agencyId: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    agencyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    agencyId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    agencyId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    agencyId?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    agencyId?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    agencyId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    agencyId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    agencyId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type UsersAggregateArgs = {
    /**
     * Filter which users to aggregate.
     * 
    **/
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     * 
    **/
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs = {
    where?: usersWhereInput
    orderBy?: Enumerable<usersOrderByWithAggregationInput>
    by: Array<UsersScalarFieldEnum>
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }


  export type UsersGroupByOutputType = {
    id: number
    name: string | null
    email: string | null
    password: string | null
    agencyId: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = PrismaPromise<
    Array<
      PickArray<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    agencyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    shipping_files?: boolean | shipping_filesFindManyArgs
    shippings?: boolean | ShippingFindManyArgs
    user_files?: boolean | user_filesFindManyArgs
    inquires?: boolean | inquiresFindManyArgs
    inquires_comments?: boolean | inquires_commentsFindManyArgs
    ShippingChecklistItem?: boolean | ShippingChecklistItemFindManyArgs
    group_emails?: boolean | group_emailsFindManyArgs
    port_files?: boolean | port_filesFindManyArgs
    vessel_files?: boolean | vessel_filesFindManyArgs
    agency?: boolean | AgencyArgs
    users_preference?: boolean | users_preferenceFindManyArgs
    shipping_sof_port_log_events?: boolean | ShippingSofPortLogEventsFindManyArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }

  export type usersInclude = {
    shipping_documents?: boolean | shipping_documentsFindManyArgs
    shipping_files?: boolean | shipping_filesFindManyArgs
    shippings?: boolean | ShippingFindManyArgs
    user_files?: boolean | user_filesFindManyArgs
    inquires?: boolean | inquiresFindManyArgs
    inquires_comments?: boolean | inquires_commentsFindManyArgs
    ShippingChecklistItem?: boolean | ShippingChecklistItemFindManyArgs
    group_emails?: boolean | group_emailsFindManyArgs
    port_files?: boolean | port_filesFindManyArgs
    vessel_files?: boolean | vessel_filesFindManyArgs
    agency?: boolean | AgencyArgs
    users_preference?: boolean | users_preferenceFindManyArgs
    shipping_sof_port_log_events?: boolean | ShippingSofPortLogEventsFindManyArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }

  export type usersGetPayload<
    S extends boolean | null | undefined | usersArgs,
    U = keyof S
      > = S extends true
        ? users
    : S extends undefined
    ? never
    : S extends usersArgs | usersFindManyArgs
    ?'include' extends U
    ? users  & {
    [P in TrueKeys<S['include']>]:
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shipping_files' ? Array < shipping_filesGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shippings' ? Array < ShippingGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'user_files' ? Array < user_filesGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'inquires' ? Array < inquiresGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'inquires_comments' ? Array < inquires_commentsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'ShippingChecklistItem' ? Array < ShippingChecklistItemGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'group_emails' ? Array < group_emailsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'port_files' ? Array < port_filesGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'vessel_files' ? Array < vessel_filesGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'agency' ? AgencyGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'users_preference' ? Array < users_preferenceGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shipping_sof_port_log_events' ? Array < ShippingSofPortLogEventsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? UsersCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'shipping_documents' ? Array < shipping_documentsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shipping_files' ? Array < shipping_filesGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shippings' ? Array < ShippingGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'user_files' ? Array < user_filesGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'inquires' ? Array < inquiresGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'inquires_comments' ? Array < inquires_commentsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'ShippingChecklistItem' ? Array < ShippingChecklistItemGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'group_emails' ? Array < group_emailsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'port_files' ? Array < port_filesGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'vessel_files' ? Array < vessel_filesGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'agency' ? AgencyGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'users_preference' ? Array < users_preferenceGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shipping_sof_port_log_events' ? Array < ShippingSofPortLogEventsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? UsersCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof users ? users[P] : never
  } 
    : users
  : users


  type usersCountArgs = Merge<
    Omit<usersFindManyArgs, 'select' | 'include'> & {
      select?: UsersCountAggregateInputType | true
    }
  >

  export interface usersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'users'> extends True ? CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>> : CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'users'> extends True ? CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>> : CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs>(
      args?: SelectSubset<T, usersFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<users>>, PrismaPromise<Array<usersGetPayload<T>>>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs>(
      args: SelectSubset<T, usersCreateArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs>(
      args?: SelectSubset<T, usersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs>(
      args: SelectSubset<T, usersDeleteArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs>(
      args: SelectSubset<T, usersUpdateArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs>(
      args?: SelectSubset<T, usersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs>(
      args: SelectSubset<T, usersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs>(
      args: SelectSubset<T, usersUpsertArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Find one Users that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, usersFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Find the first Users that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, usersFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__usersClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shipping_documents<T extends shipping_documentsFindManyArgs = {}>(args?: Subset<T, shipping_documentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_documents>>, PrismaPromise<Array<shipping_documentsGetPayload<T>>>>;

    shipping_files<T extends shipping_filesFindManyArgs = {}>(args?: Subset<T, shipping_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<shipping_files>>, PrismaPromise<Array<shipping_filesGetPayload<T>>>>;

    shippings<T extends ShippingFindManyArgs = {}>(args?: Subset<T, ShippingFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Shipping>>, PrismaPromise<Array<ShippingGetPayload<T>>>>;

    user_files<T extends user_filesFindManyArgs = {}>(args?: Subset<T, user_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<user_files>>, PrismaPromise<Array<user_filesGetPayload<T>>>>;

    inquires<T extends inquiresFindManyArgs = {}>(args?: Subset<T, inquiresFindManyArgs>): CheckSelect<T, PrismaPromise<Array<inquires>>, PrismaPromise<Array<inquiresGetPayload<T>>>>;

    inquires_comments<T extends inquires_commentsFindManyArgs = {}>(args?: Subset<T, inquires_commentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<inquires_comments>>, PrismaPromise<Array<inquires_commentsGetPayload<T>>>>;

    ShippingChecklistItem<T extends ShippingChecklistItemFindManyArgs = {}>(args?: Subset<T, ShippingChecklistItemFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingChecklistItem>>, PrismaPromise<Array<ShippingChecklistItemGetPayload<T>>>>;

    group_emails<T extends group_emailsFindManyArgs = {}>(args?: Subset<T, group_emailsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<group_emails>>, PrismaPromise<Array<group_emailsGetPayload<T>>>>;

    port_files<T extends port_filesFindManyArgs = {}>(args?: Subset<T, port_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<port_files>>, PrismaPromise<Array<port_filesGetPayload<T>>>>;

    vessel_files<T extends vessel_filesFindManyArgs = {}>(args?: Subset<T, vessel_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<vessel_files>>, PrismaPromise<Array<vessel_filesGetPayload<T>>>>;

    agency<T extends AgencyArgs = {}>(args?: Subset<T, AgencyArgs>): CheckSelect<T, Prisma__AgencyClient<Agency | null >, Prisma__AgencyClient<AgencyGetPayload<T> | null >>;

    users_preference<T extends users_preferenceFindManyArgs = {}>(args?: Subset<T, users_preferenceFindManyArgs>): CheckSelect<T, PrismaPromise<Array<users_preference>>, PrismaPromise<Array<users_preferenceGetPayload<T>>>>;

    shipping_sof_port_log_events<T extends ShippingSofPortLogEventsFindManyArgs = {}>(args?: Subset<T, ShippingSofPortLogEventsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingSofPortLogEvents>>, PrismaPromise<Array<ShippingSofPortLogEventsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * users base type for findUnique actions
   */
  export type usersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     * 
    **/
    where: usersWhereUniqueInput
  }

  /**
   * users: findUnique
   */
  export interface usersFindUniqueArgs extends usersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * users base type for findFirst actions
   */
  export type usersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     * 
    **/
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     * 
    **/
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     * 
    **/
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     * 
    **/
    distinct?: Enumerable<UsersScalarFieldEnum>
  }

  /**
   * users: findFirst
   */
  export interface usersFindFirstArgs extends usersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * users findMany
   */
  export type usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     * 
    **/
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     * 
    **/
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     * 
    **/
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * users create
   */
  export type usersCreateArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * The data needed to create a users.
     * 
    **/
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users createMany
   */
  export type usersCreateManyArgs = {
    /**
     * The data used to create many users.
     * 
    **/
    data: Enumerable<usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * users update
   */
  export type usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * The data needed to update a users.
     * 
    **/
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     * 
    **/
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs = {
    /**
     * The data used to update users.
     * 
    **/
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     * 
    **/
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * The filter to search for the users to update in case it exists.
     * 
    **/
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     * 
    **/
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Filter which users to delete.
     * 
    **/
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs = {
    /**
     * Filter which users to delete
     * 
    **/
    where?: usersWhereInput
  }


  /**
   * users: findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs = usersFindUniqueArgsBase
      

  /**
   * users: findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs = usersFindFirstArgsBase
      

  /**
   * users without action
   */
  export type usersArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
  }



  /**
   * Model users_preference
   */


  export type AggregateUsers_preference = {
    _count: Users_preferenceCountAggregateOutputType | null
    _avg: Users_preferenceAvgAggregateOutputType | null
    _sum: Users_preferenceSumAggregateOutputType | null
    _min: Users_preferenceMinAggregateOutputType | null
    _max: Users_preferenceMaxAggregateOutputType | null
  }

  export type Users_preferenceAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Users_preferenceSumAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Users_preferenceMinAggregateOutputType = {
    id: number | null
    team: string | null
    ports: string | null
    initial_page: string | null
    user_id: number | null
  }

  export type Users_preferenceMaxAggregateOutputType = {
    id: number | null
    team: string | null
    ports: string | null
    initial_page: string | null
    user_id: number | null
  }

  export type Users_preferenceCountAggregateOutputType = {
    id: number
    team: number
    ports: number
    initial_page: number
    user_id: number
    _all: number
  }


  export type Users_preferenceAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Users_preferenceSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Users_preferenceMinAggregateInputType = {
    id?: true
    team?: true
    ports?: true
    initial_page?: true
    user_id?: true
  }

  export type Users_preferenceMaxAggregateInputType = {
    id?: true
    team?: true
    ports?: true
    initial_page?: true
    user_id?: true
  }

  export type Users_preferenceCountAggregateInputType = {
    id?: true
    team?: true
    ports?: true
    initial_page?: true
    user_id?: true
    _all?: true
  }

  export type Users_preferenceAggregateArgs = {
    /**
     * Filter which users_preference to aggregate.
     * 
    **/
    where?: users_preferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_preferences to fetch.
     * 
    **/
    orderBy?: Enumerable<users_preferenceOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: users_preferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_preferences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_preferences.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users_preferences
    **/
    _count?: true | Users_preferenceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Users_preferenceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Users_preferenceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Users_preferenceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Users_preferenceMaxAggregateInputType
  }

  export type GetUsers_preferenceAggregateType<T extends Users_preferenceAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers_preference]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers_preference[P]>
      : GetScalarType<T[P], AggregateUsers_preference[P]>
  }




  export type Users_preferenceGroupByArgs = {
    where?: users_preferenceWhereInput
    orderBy?: Enumerable<users_preferenceOrderByWithAggregationInput>
    by: Array<Users_preferenceScalarFieldEnum>
    having?: users_preferenceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Users_preferenceCountAggregateInputType | true
    _avg?: Users_preferenceAvgAggregateInputType
    _sum?: Users_preferenceSumAggregateInputType
    _min?: Users_preferenceMinAggregateInputType
    _max?: Users_preferenceMaxAggregateInputType
  }


  export type Users_preferenceGroupByOutputType = {
    id: number
    team: string | null
    ports: string | null
    initial_page: string | null
    user_id: number | null
    _count: Users_preferenceCountAggregateOutputType | null
    _avg: Users_preferenceAvgAggregateOutputType | null
    _sum: Users_preferenceSumAggregateOutputType | null
    _min: Users_preferenceMinAggregateOutputType | null
    _max: Users_preferenceMaxAggregateOutputType | null
  }

  type GetUsers_preferenceGroupByPayload<T extends Users_preferenceGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Users_preferenceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Users_preferenceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Users_preferenceGroupByOutputType[P]>
            : GetScalarType<T[P], Users_preferenceGroupByOutputType[P]>
        }
      >
    >


  export type users_preferenceSelect = {
    id?: boolean
    team?: boolean
    ports?: boolean
    initial_page?: boolean
    user_id?: boolean
    users?: boolean | usersArgs
  }

  export type users_preferenceInclude = {
    users?: boolean | usersArgs
  }

  export type users_preferenceGetPayload<
    S extends boolean | null | undefined | users_preferenceArgs,
    U = keyof S
      > = S extends true
        ? users_preference
    : S extends undefined
    ? never
    : S extends users_preferenceArgs | users_preferenceFindManyArgs
    ?'include' extends U
    ? users_preference  & {
    [P in TrueKeys<S['include']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof users_preference ? users_preference[P] : never
  } 
    : users_preference
  : users_preference


  type users_preferenceCountArgs = Merge<
    Omit<users_preferenceFindManyArgs, 'select' | 'include'> & {
      select?: Users_preferenceCountAggregateInputType | true
    }
  >

  export interface users_preferenceDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Users_preference that matches the filter.
     * @param {users_preferenceFindUniqueArgs} args - Arguments to find a Users_preference
     * @example
     * // Get one Users_preference
     * const users_preference = await prisma.users_preference.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends users_preferenceFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, users_preferenceFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'users_preference'> extends True ? CheckSelect<T, Prisma__users_preferenceClient<users_preference>, Prisma__users_preferenceClient<users_preferenceGetPayload<T>>> : CheckSelect<T, Prisma__users_preferenceClient<users_preference | null >, Prisma__users_preferenceClient<users_preferenceGetPayload<T> | null >>

    /**
     * Find the first Users_preference that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_preferenceFindFirstArgs} args - Arguments to find a Users_preference
     * @example
     * // Get one Users_preference
     * const users_preference = await prisma.users_preference.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends users_preferenceFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, users_preferenceFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'users_preference'> extends True ? CheckSelect<T, Prisma__users_preferenceClient<users_preference>, Prisma__users_preferenceClient<users_preferenceGetPayload<T>>> : CheckSelect<T, Prisma__users_preferenceClient<users_preference | null >, Prisma__users_preferenceClient<users_preferenceGetPayload<T> | null >>

    /**
     * Find zero or more Users_preferences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_preferenceFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users_preferences
     * const users_preferences = await prisma.users_preference.findMany()
     * 
     * // Get first 10 Users_preferences
     * const users_preferences = await prisma.users_preference.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const users_preferenceWithIdOnly = await prisma.users_preference.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends users_preferenceFindManyArgs>(
      args?: SelectSubset<T, users_preferenceFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<users_preference>>, PrismaPromise<Array<users_preferenceGetPayload<T>>>>

    /**
     * Create a Users_preference.
     * @param {users_preferenceCreateArgs} args - Arguments to create a Users_preference.
     * @example
     * // Create one Users_preference
     * const Users_preference = await prisma.users_preference.create({
     *   data: {
     *     // ... data to create a Users_preference
     *   }
     * })
     * 
    **/
    create<T extends users_preferenceCreateArgs>(
      args: SelectSubset<T, users_preferenceCreateArgs>
    ): CheckSelect<T, Prisma__users_preferenceClient<users_preference>, Prisma__users_preferenceClient<users_preferenceGetPayload<T>>>

    /**
     * Create many Users_preferences.
     *     @param {users_preferenceCreateManyArgs} args - Arguments to create many Users_preferences.
     *     @example
     *     // Create many Users_preferences
     *     const users_preference = await prisma.users_preference.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends users_preferenceCreateManyArgs>(
      args?: SelectSubset<T, users_preferenceCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Users_preference.
     * @param {users_preferenceDeleteArgs} args - Arguments to delete one Users_preference.
     * @example
     * // Delete one Users_preference
     * const Users_preference = await prisma.users_preference.delete({
     *   where: {
     *     // ... filter to delete one Users_preference
     *   }
     * })
     * 
    **/
    delete<T extends users_preferenceDeleteArgs>(
      args: SelectSubset<T, users_preferenceDeleteArgs>
    ): CheckSelect<T, Prisma__users_preferenceClient<users_preference>, Prisma__users_preferenceClient<users_preferenceGetPayload<T>>>

    /**
     * Update one Users_preference.
     * @param {users_preferenceUpdateArgs} args - Arguments to update one Users_preference.
     * @example
     * // Update one Users_preference
     * const users_preference = await prisma.users_preference.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends users_preferenceUpdateArgs>(
      args: SelectSubset<T, users_preferenceUpdateArgs>
    ): CheckSelect<T, Prisma__users_preferenceClient<users_preference>, Prisma__users_preferenceClient<users_preferenceGetPayload<T>>>

    /**
     * Delete zero or more Users_preferences.
     * @param {users_preferenceDeleteManyArgs} args - Arguments to filter Users_preferences to delete.
     * @example
     * // Delete a few Users_preferences
     * const { count } = await prisma.users_preference.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends users_preferenceDeleteManyArgs>(
      args?: SelectSubset<T, users_preferenceDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users_preferences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_preferenceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users_preferences
     * const users_preference = await prisma.users_preference.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends users_preferenceUpdateManyArgs>(
      args: SelectSubset<T, users_preferenceUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Users_preference.
     * @param {users_preferenceUpsertArgs} args - Arguments to update or create a Users_preference.
     * @example
     * // Update or create a Users_preference
     * const users_preference = await prisma.users_preference.upsert({
     *   create: {
     *     // ... data to create a Users_preference
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users_preference we want to update
     *   }
     * })
    **/
    upsert<T extends users_preferenceUpsertArgs>(
      args: SelectSubset<T, users_preferenceUpsertArgs>
    ): CheckSelect<T, Prisma__users_preferenceClient<users_preference>, Prisma__users_preferenceClient<users_preferenceGetPayload<T>>>

    /**
     * Find one Users_preference that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {users_preferenceFindUniqueOrThrowArgs} args - Arguments to find a Users_preference
     * @example
     * // Get one Users_preference
     * const users_preference = await prisma.users_preference.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends users_preferenceFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, users_preferenceFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__users_preferenceClient<users_preference>, Prisma__users_preferenceClient<users_preferenceGetPayload<T>>>

    /**
     * Find the first Users_preference that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_preferenceFindFirstOrThrowArgs} args - Arguments to find a Users_preference
     * @example
     * // Get one Users_preference
     * const users_preference = await prisma.users_preference.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends users_preferenceFindFirstOrThrowArgs>(
      args?: SelectSubset<T, users_preferenceFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__users_preferenceClient<users_preference>, Prisma__users_preferenceClient<users_preferenceGetPayload<T>>>

    /**
     * Count the number of Users_preferences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {users_preferenceCountArgs} args - Arguments to filter Users_preferences to count.
     * @example
     * // Count the number of Users_preferences
     * const count = await prisma.users_preference.count({
     *   where: {
     *     // ... the filter for the Users_preferences we want to count
     *   }
     * })
    **/
    count<T extends users_preferenceCountArgs>(
      args?: Subset<T, users_preferenceCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Users_preferenceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users_preference.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_preferenceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Users_preferenceAggregateArgs>(args: Subset<T, Users_preferenceAggregateArgs>): PrismaPromise<GetUsers_preferenceAggregateType<T>>

    /**
     * Group by Users_preference.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_preferenceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Users_preferenceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Users_preferenceGroupByArgs['orderBy'] }
        : { orderBy?: Users_preferenceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Users_preferenceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsers_preferenceGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for users_preference.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__users_preferenceClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * users_preference base type for findUnique actions
   */
  export type users_preferenceFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the users_preference
     * 
    **/
    select?: users_preferenceSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: users_preferenceInclude | null
    /**
     * Filter, which users_preference to fetch.
     * 
    **/
    where: users_preferenceWhereUniqueInput
  }

  /**
   * users_preference: findUnique
   */
  export interface users_preferenceFindUniqueArgs extends users_preferenceFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * users_preference base type for findFirst actions
   */
  export type users_preferenceFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the users_preference
     * 
    **/
    select?: users_preferenceSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: users_preferenceInclude | null
    /**
     * Filter, which users_preference to fetch.
     * 
    **/
    where?: users_preferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_preferences to fetch.
     * 
    **/
    orderBy?: Enumerable<users_preferenceOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users_preferences.
     * 
    **/
    cursor?: users_preferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_preferences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_preferences.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users_preferences.
     * 
    **/
    distinct?: Enumerable<Users_preferenceScalarFieldEnum>
  }

  /**
   * users_preference: findFirst
   */
  export interface users_preferenceFindFirstArgs extends users_preferenceFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * users_preference findMany
   */
  export type users_preferenceFindManyArgs = {
    /**
     * Select specific fields to fetch from the users_preference
     * 
    **/
    select?: users_preferenceSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: users_preferenceInclude | null
    /**
     * Filter, which users_preferences to fetch.
     * 
    **/
    where?: users_preferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users_preferences to fetch.
     * 
    **/
    orderBy?: Enumerable<users_preferenceOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users_preferences.
     * 
    **/
    cursor?: users_preferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users_preferences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users_preferences.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Users_preferenceScalarFieldEnum>
  }


  /**
   * users_preference create
   */
  export type users_preferenceCreateArgs = {
    /**
     * Select specific fields to fetch from the users_preference
     * 
    **/
    select?: users_preferenceSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: users_preferenceInclude | null
    /**
     * The data needed to create a users_preference.
     * 
    **/
    data: XOR<users_preferenceCreateInput, users_preferenceUncheckedCreateInput>
  }


  /**
   * users_preference createMany
   */
  export type users_preferenceCreateManyArgs = {
    /**
     * The data used to create many users_preferences.
     * 
    **/
    data: Enumerable<users_preferenceCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * users_preference update
   */
  export type users_preferenceUpdateArgs = {
    /**
     * Select specific fields to fetch from the users_preference
     * 
    **/
    select?: users_preferenceSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: users_preferenceInclude | null
    /**
     * The data needed to update a users_preference.
     * 
    **/
    data: XOR<users_preferenceUpdateInput, users_preferenceUncheckedUpdateInput>
    /**
     * Choose, which users_preference to update.
     * 
    **/
    where: users_preferenceWhereUniqueInput
  }


  /**
   * users_preference updateMany
   */
  export type users_preferenceUpdateManyArgs = {
    /**
     * The data used to update users_preferences.
     * 
    **/
    data: XOR<users_preferenceUpdateManyMutationInput, users_preferenceUncheckedUpdateManyInput>
    /**
     * Filter which users_preferences to update
     * 
    **/
    where?: users_preferenceWhereInput
  }


  /**
   * users_preference upsert
   */
  export type users_preferenceUpsertArgs = {
    /**
     * Select specific fields to fetch from the users_preference
     * 
    **/
    select?: users_preferenceSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: users_preferenceInclude | null
    /**
     * The filter to search for the users_preference to update in case it exists.
     * 
    **/
    where: users_preferenceWhereUniqueInput
    /**
     * In case the users_preference found by the `where` argument doesn't exist, create a new users_preference with this data.
     * 
    **/
    create: XOR<users_preferenceCreateInput, users_preferenceUncheckedCreateInput>
    /**
     * In case the users_preference was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<users_preferenceUpdateInput, users_preferenceUncheckedUpdateInput>
  }


  /**
   * users_preference delete
   */
  export type users_preferenceDeleteArgs = {
    /**
     * Select specific fields to fetch from the users_preference
     * 
    **/
    select?: users_preferenceSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: users_preferenceInclude | null
    /**
     * Filter which users_preference to delete.
     * 
    **/
    where: users_preferenceWhereUniqueInput
  }


  /**
   * users_preference deleteMany
   */
  export type users_preferenceDeleteManyArgs = {
    /**
     * Filter which users_preferences to delete
     * 
    **/
    where?: users_preferenceWhereInput
  }


  /**
   * users_preference: findUniqueOrThrow
   */
  export type users_preferenceFindUniqueOrThrowArgs = users_preferenceFindUniqueArgsBase
      

  /**
   * users_preference: findFirstOrThrow
   */
  export type users_preferenceFindFirstOrThrowArgs = users_preferenceFindFirstArgsBase
      

  /**
   * users_preference without action
   */
  export type users_preferenceArgs = {
    /**
     * Select specific fields to fetch from the users_preference
     * 
    **/
    select?: users_preferenceSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: users_preferenceInclude | null
  }



  /**
   * Model vessel_files
   */


  export type AggregateVessel_files = {
    _count: Vessel_filesCountAggregateOutputType | null
    _avg: Vessel_filesAvgAggregateOutputType | null
    _sum: Vessel_filesSumAggregateOutputType | null
    _min: Vessel_filesMinAggregateOutputType | null
    _max: Vessel_filesMaxAggregateOutputType | null
  }

  export type Vessel_filesAvgAggregateOutputType = {
    id: number | null
    vessel_id: number | null
    userId: number | null
  }

  export type Vessel_filesSumAggregateOutputType = {
    id: number | null
    vessel_id: number | null
    userId: number | null
  }

  export type Vessel_filesMinAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    vessel_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Vessel_filesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    filename: string | null
    originalName: string | null
    vessel_id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    userId: number | null
  }

  export type Vessel_filesCountAggregateOutputType = {
    id: number
    title: number
    filename: number
    originalName: number
    vessel_id: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    userId: number
    _all: number
  }


  export type Vessel_filesAvgAggregateInputType = {
    id?: true
    vessel_id?: true
    userId?: true
  }

  export type Vessel_filesSumAggregateInputType = {
    id?: true
    vessel_id?: true
    userId?: true
  }

  export type Vessel_filesMinAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    vessel_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Vessel_filesMaxAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    vessel_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
  }

  export type Vessel_filesCountAggregateInputType = {
    id?: true
    title?: true
    filename?: true
    originalName?: true
    vessel_id?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    userId?: true
    _all?: true
  }

  export type Vessel_filesAggregateArgs = {
    /**
     * Filter which vessel_files to aggregate.
     * 
    **/
    where?: vessel_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vessel_files to fetch.
     * 
    **/
    orderBy?: Enumerable<vessel_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: vessel_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vessel_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vessel_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned vessel_files
    **/
    _count?: true | Vessel_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Vessel_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Vessel_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Vessel_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Vessel_filesMaxAggregateInputType
  }

  export type GetVessel_filesAggregateType<T extends Vessel_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateVessel_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVessel_files[P]>
      : GetScalarType<T[P], AggregateVessel_files[P]>
  }




  export type Vessel_filesGroupByArgs = {
    where?: vessel_filesWhereInput
    orderBy?: Enumerable<vessel_filesOrderByWithAggregationInput>
    by: Array<Vessel_filesScalarFieldEnum>
    having?: vessel_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Vessel_filesCountAggregateInputType | true
    _avg?: Vessel_filesAvgAggregateInputType
    _sum?: Vessel_filesSumAggregateInputType
    _min?: Vessel_filesMinAggregateInputType
    _max?: Vessel_filesMaxAggregateInputType
  }


  export type Vessel_filesGroupByOutputType = {
    id: number
    title: string | null
    filename: string | null
    originalName: string | null
    vessel_id: number | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    userId: number | null
    _count: Vessel_filesCountAggregateOutputType | null
    _avg: Vessel_filesAvgAggregateOutputType | null
    _sum: Vessel_filesSumAggregateOutputType | null
    _min: Vessel_filesMinAggregateOutputType | null
    _max: Vessel_filesMaxAggregateOutputType | null
  }

  type GetVessel_filesGroupByPayload<T extends Vessel_filesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Vessel_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Vessel_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Vessel_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Vessel_filesGroupByOutputType[P]>
        }
      >
    >


  export type vessel_filesSelect = {
    id?: boolean
    title?: boolean
    filename?: boolean
    originalName?: boolean
    vessel_id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    userId?: boolean
    users?: boolean | usersArgs
    vessels?: boolean | VesselArgs
  }

  export type vessel_filesInclude = {
    users?: boolean | usersArgs
    vessels?: boolean | VesselArgs
  }

  export type vessel_filesGetPayload<
    S extends boolean | null | undefined | vessel_filesArgs,
    U = keyof S
      > = S extends true
        ? vessel_files
    : S extends undefined
    ? never
    : S extends vessel_filesArgs | vessel_filesFindManyArgs
    ?'include' extends U
    ? vessel_files  & {
    [P in TrueKeys<S['include']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'vessels' ? VesselGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'vessels' ? VesselGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof vessel_files ? vessel_files[P] : never
  } 
    : vessel_files
  : vessel_files


  type vessel_filesCountArgs = Merge<
    Omit<vessel_filesFindManyArgs, 'select' | 'include'> & {
      select?: Vessel_filesCountAggregateInputType | true
    }
  >

  export interface vessel_filesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Vessel_files that matches the filter.
     * @param {vessel_filesFindUniqueArgs} args - Arguments to find a Vessel_files
     * @example
     * // Get one Vessel_files
     * const vessel_files = await prisma.vessel_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends vessel_filesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, vessel_filesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'vessel_files'> extends True ? CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>> : CheckSelect<T, Prisma__vessel_filesClient<vessel_files | null >, Prisma__vessel_filesClient<vessel_filesGetPayload<T> | null >>

    /**
     * Find the first Vessel_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vessel_filesFindFirstArgs} args - Arguments to find a Vessel_files
     * @example
     * // Get one Vessel_files
     * const vessel_files = await prisma.vessel_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends vessel_filesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, vessel_filesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'vessel_files'> extends True ? CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>> : CheckSelect<T, Prisma__vessel_filesClient<vessel_files | null >, Prisma__vessel_filesClient<vessel_filesGetPayload<T> | null >>

    /**
     * Find zero or more Vessel_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vessel_filesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vessel_files
     * const vessel_files = await prisma.vessel_files.findMany()
     * 
     * // Get first 10 Vessel_files
     * const vessel_files = await prisma.vessel_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vessel_filesWithIdOnly = await prisma.vessel_files.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends vessel_filesFindManyArgs>(
      args?: SelectSubset<T, vessel_filesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<vessel_files>>, PrismaPromise<Array<vessel_filesGetPayload<T>>>>

    /**
     * Create a Vessel_files.
     * @param {vessel_filesCreateArgs} args - Arguments to create a Vessel_files.
     * @example
     * // Create one Vessel_files
     * const Vessel_files = await prisma.vessel_files.create({
     *   data: {
     *     // ... data to create a Vessel_files
     *   }
     * })
     * 
    **/
    create<T extends vessel_filesCreateArgs>(
      args: SelectSubset<T, vessel_filesCreateArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Create many Vessel_files.
     *     @param {vessel_filesCreateManyArgs} args - Arguments to create many Vessel_files.
     *     @example
     *     // Create many Vessel_files
     *     const vessel_files = await prisma.vessel_files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends vessel_filesCreateManyArgs>(
      args?: SelectSubset<T, vessel_filesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Vessel_files.
     * @param {vessel_filesDeleteArgs} args - Arguments to delete one Vessel_files.
     * @example
     * // Delete one Vessel_files
     * const Vessel_files = await prisma.vessel_files.delete({
     *   where: {
     *     // ... filter to delete one Vessel_files
     *   }
     * })
     * 
    **/
    delete<T extends vessel_filesDeleteArgs>(
      args: SelectSubset<T, vessel_filesDeleteArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Update one Vessel_files.
     * @param {vessel_filesUpdateArgs} args - Arguments to update one Vessel_files.
     * @example
     * // Update one Vessel_files
     * const vessel_files = await prisma.vessel_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends vessel_filesUpdateArgs>(
      args: SelectSubset<T, vessel_filesUpdateArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Delete zero or more Vessel_files.
     * @param {vessel_filesDeleteManyArgs} args - Arguments to filter Vessel_files to delete.
     * @example
     * // Delete a few Vessel_files
     * const { count } = await prisma.vessel_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends vessel_filesDeleteManyArgs>(
      args?: SelectSubset<T, vessel_filesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vessel_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vessel_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vessel_files
     * const vessel_files = await prisma.vessel_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends vessel_filesUpdateManyArgs>(
      args: SelectSubset<T, vessel_filesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Vessel_files.
     * @param {vessel_filesUpsertArgs} args - Arguments to update or create a Vessel_files.
     * @example
     * // Update or create a Vessel_files
     * const vessel_files = await prisma.vessel_files.upsert({
     *   create: {
     *     // ... data to create a Vessel_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vessel_files we want to update
     *   }
     * })
    **/
    upsert<T extends vessel_filesUpsertArgs>(
      args: SelectSubset<T, vessel_filesUpsertArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Find one Vessel_files that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {vessel_filesFindUniqueOrThrowArgs} args - Arguments to find a Vessel_files
     * @example
     * // Get one Vessel_files
     * const vessel_files = await prisma.vessel_files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends vessel_filesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, vessel_filesFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Find the first Vessel_files that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vessel_filesFindFirstOrThrowArgs} args - Arguments to find a Vessel_files
     * @example
     * // Get one Vessel_files
     * const vessel_files = await prisma.vessel_files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends vessel_filesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, vessel_filesFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__vessel_filesClient<vessel_files>, Prisma__vessel_filesClient<vessel_filesGetPayload<T>>>

    /**
     * Count the number of Vessel_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vessel_filesCountArgs} args - Arguments to filter Vessel_files to count.
     * @example
     * // Count the number of Vessel_files
     * const count = await prisma.vessel_files.count({
     *   where: {
     *     // ... the filter for the Vessel_files we want to count
     *   }
     * })
    **/
    count<T extends vessel_filesCountArgs>(
      args?: Subset<T, vessel_filesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Vessel_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vessel_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Vessel_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Vessel_filesAggregateArgs>(args: Subset<T, Vessel_filesAggregateArgs>): PrismaPromise<GetVessel_filesAggregateType<T>>

    /**
     * Group by Vessel_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Vessel_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Vessel_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Vessel_filesGroupByArgs['orderBy'] }
        : { orderBy?: Vessel_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Vessel_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVessel_filesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for vessel_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__vessel_filesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    vessels<T extends VesselArgs = {}>(args?: Subset<T, VesselArgs>): CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * vessel_files base type for findUnique actions
   */
  export type vessel_filesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * Filter, which vessel_files to fetch.
     * 
    **/
    where: vessel_filesWhereUniqueInput
  }

  /**
   * vessel_files: findUnique
   */
  export interface vessel_filesFindUniqueArgs extends vessel_filesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * vessel_files base type for findFirst actions
   */
  export type vessel_filesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * Filter, which vessel_files to fetch.
     * 
    **/
    where?: vessel_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vessel_files to fetch.
     * 
    **/
    orderBy?: Enumerable<vessel_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vessel_files.
     * 
    **/
    cursor?: vessel_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vessel_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vessel_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vessel_files.
     * 
    **/
    distinct?: Enumerable<Vessel_filesScalarFieldEnum>
  }

  /**
   * vessel_files: findFirst
   */
  export interface vessel_filesFindFirstArgs extends vessel_filesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * vessel_files findMany
   */
  export type vessel_filesFindManyArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * Filter, which vessel_files to fetch.
     * 
    **/
    where?: vessel_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vessel_files to fetch.
     * 
    **/
    orderBy?: Enumerable<vessel_filesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing vessel_files.
     * 
    **/
    cursor?: vessel_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vessel_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vessel_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Vessel_filesScalarFieldEnum>
  }


  /**
   * vessel_files create
   */
  export type vessel_filesCreateArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * The data needed to create a vessel_files.
     * 
    **/
    data: XOR<vessel_filesCreateInput, vessel_filesUncheckedCreateInput>
  }


  /**
   * vessel_files createMany
   */
  export type vessel_filesCreateManyArgs = {
    /**
     * The data used to create many vessel_files.
     * 
    **/
    data: Enumerable<vessel_filesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * vessel_files update
   */
  export type vessel_filesUpdateArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * The data needed to update a vessel_files.
     * 
    **/
    data: XOR<vessel_filesUpdateInput, vessel_filesUncheckedUpdateInput>
    /**
     * Choose, which vessel_files to update.
     * 
    **/
    where: vessel_filesWhereUniqueInput
  }


  /**
   * vessel_files updateMany
   */
  export type vessel_filesUpdateManyArgs = {
    /**
     * The data used to update vessel_files.
     * 
    **/
    data: XOR<vessel_filesUpdateManyMutationInput, vessel_filesUncheckedUpdateManyInput>
    /**
     * Filter which vessel_files to update
     * 
    **/
    where?: vessel_filesWhereInput
  }


  /**
   * vessel_files upsert
   */
  export type vessel_filesUpsertArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * The filter to search for the vessel_files to update in case it exists.
     * 
    **/
    where: vessel_filesWhereUniqueInput
    /**
     * In case the vessel_files found by the `where` argument doesn't exist, create a new vessel_files with this data.
     * 
    **/
    create: XOR<vessel_filesCreateInput, vessel_filesUncheckedCreateInput>
    /**
     * In case the vessel_files was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<vessel_filesUpdateInput, vessel_filesUncheckedUpdateInput>
  }


  /**
   * vessel_files delete
   */
  export type vessel_filesDeleteArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
    /**
     * Filter which vessel_files to delete.
     * 
    **/
    where: vessel_filesWhereUniqueInput
  }


  /**
   * vessel_files deleteMany
   */
  export type vessel_filesDeleteManyArgs = {
    /**
     * Filter which vessel_files to delete
     * 
    **/
    where?: vessel_filesWhereInput
  }


  /**
   * vessel_files: findUniqueOrThrow
   */
  export type vessel_filesFindUniqueOrThrowArgs = vessel_filesFindUniqueArgsBase
      

  /**
   * vessel_files: findFirstOrThrow
   */
  export type vessel_filesFindFirstOrThrowArgs = vessel_filesFindFirstArgsBase
      

  /**
   * vessel_files without action
   */
  export type vessel_filesArgs = {
    /**
     * Select specific fields to fetch from the vessel_files
     * 
    **/
    select?: vessel_filesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: vessel_filesInclude | null
  }



  /**
   * Model Vessel
   */


  export type AggregateVessel = {
    _count: VesselCountAggregateOutputType | null
    _avg: VesselAvgAggregateOutputType | null
    _sum: VesselSumAggregateOutputType | null
    _min: VesselMinAggregateOutputType | null
    _max: VesselMaxAggregateOutputType | null
  }

  export type VesselAvgAggregateOutputType = {
    id: number | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    country_id: number | null
    built_year: number | null
  }

  export type VesselSumAggregateOutputType = {
    id: number | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    country_id: number | null
    built_year: number | null
  }

  export type VesselMinAggregateOutputType = {
    id: number | null
    name: string | null
    imo: string | null
    call_sign: string | null
    satellite_telephone: string | null
    classification_society: string | null
    type: string | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    country_id: number | null
    draft_sw: string | null
    built_year: number | null
  }

  export type VesselMaxAggregateOutputType = {
    id: number | null
    name: string | null
    imo: string | null
    call_sign: string | null
    satellite_telephone: string | null
    classification_society: string | null
    type: string | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    country_id: number | null
    draft_sw: string | null
    built_year: number | null
  }

  export type VesselCountAggregateOutputType = {
    id: number
    name: number
    imo: number
    call_sign: number
    satellite_telephone: number
    classification_society: number
    type: number
    length_overall: number
    dead_weight_tonnage: number
    beam: number
    cubic_meters: number
    gross_tonnage: number
    net_tonnage: number
    panama_gross_tonnage: number
    panama_net_tonnage: number
    suez_gross_tonnage: number
    suez_net_tonnage: number
    reduced_gross_tonnage: number
    length_between_perpendiculars: number
    molded_depth: number
    number_of_holds: number
    number_of_tanks: number
    created_at: number
    updated_at: number
    deleted_at: number
    country_id: number
    draft_sw: number
    built_year: number
    _all: number
  }


  export type VesselAvgAggregateInputType = {
    id?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    country_id?: true
    built_year?: true
  }

  export type VesselSumAggregateInputType = {
    id?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    country_id?: true
    built_year?: true
  }

  export type VesselMinAggregateInputType = {
    id?: true
    name?: true
    imo?: true
    call_sign?: true
    satellite_telephone?: true
    classification_society?: true
    type?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    country_id?: true
    draft_sw?: true
    built_year?: true
  }

  export type VesselMaxAggregateInputType = {
    id?: true
    name?: true
    imo?: true
    call_sign?: true
    satellite_telephone?: true
    classification_society?: true
    type?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    country_id?: true
    draft_sw?: true
    built_year?: true
  }

  export type VesselCountAggregateInputType = {
    id?: true
    name?: true
    imo?: true
    call_sign?: true
    satellite_telephone?: true
    classification_society?: true
    type?: true
    length_overall?: true
    dead_weight_tonnage?: true
    beam?: true
    cubic_meters?: true
    gross_tonnage?: true
    net_tonnage?: true
    panama_gross_tonnage?: true
    panama_net_tonnage?: true
    suez_gross_tonnage?: true
    suez_net_tonnage?: true
    reduced_gross_tonnage?: true
    length_between_perpendiculars?: true
    molded_depth?: true
    number_of_holds?: true
    number_of_tanks?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    country_id?: true
    draft_sw?: true
    built_year?: true
    _all?: true
  }

  export type VesselAggregateArgs = {
    /**
     * Filter which Vessel to aggregate.
     * 
    **/
    where?: VesselWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vessels to fetch.
     * 
    **/
    orderBy?: Enumerable<VesselOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: VesselWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vessels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vessels.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vessels
    **/
    _count?: true | VesselCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VesselAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VesselSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VesselMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VesselMaxAggregateInputType
  }

  export type GetVesselAggregateType<T extends VesselAggregateArgs> = {
        [P in keyof T & keyof AggregateVessel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVessel[P]>
      : GetScalarType<T[P], AggregateVessel[P]>
  }




  export type VesselGroupByArgs = {
    where?: VesselWhereInput
    orderBy?: Enumerable<VesselOrderByWithAggregationInput>
    by: Array<VesselScalarFieldEnum>
    having?: VesselScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VesselCountAggregateInputType | true
    _avg?: VesselAvgAggregateInputType
    _sum?: VesselSumAggregateInputType
    _min?: VesselMinAggregateInputType
    _max?: VesselMaxAggregateInputType
  }


  export type VesselGroupByOutputType = {
    id: number
    name: string | null
    imo: string | null
    call_sign: string | null
    satellite_telephone: string | null
    classification_society: string | null
    type: string | null
    length_overall: number | null
    dead_weight_tonnage: number | null
    beam: number | null
    cubic_meters: number | null
    gross_tonnage: number | null
    net_tonnage: number | null
    panama_gross_tonnage: number | null
    panama_net_tonnage: number | null
    suez_gross_tonnage: number | null
    suez_net_tonnage: number | null
    reduced_gross_tonnage: number | null
    length_between_perpendiculars: number | null
    molded_depth: number | null
    number_of_holds: number | null
    number_of_tanks: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    country_id: number | null
    draft_sw: string | null
    built_year: number | null
    _count: VesselCountAggregateOutputType | null
    _avg: VesselAvgAggregateOutputType | null
    _sum: VesselSumAggregateOutputType | null
    _min: VesselMinAggregateOutputType | null
    _max: VesselMaxAggregateOutputType | null
  }

  type GetVesselGroupByPayload<T extends VesselGroupByArgs> = PrismaPromise<
    Array<
      PickArray<VesselGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VesselGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VesselGroupByOutputType[P]>
            : GetScalarType<T[P], VesselGroupByOutputType[P]>
        }
      >
    >


  export type VesselSelect = {
    id?: boolean
    name?: boolean
    imo?: boolean
    call_sign?: boolean
    satellite_telephone?: boolean
    classification_society?: boolean
    type?: boolean
    length_overall?: boolean
    dead_weight_tonnage?: boolean
    beam?: boolean
    cubic_meters?: boolean
    gross_tonnage?: boolean
    net_tonnage?: boolean
    panama_gross_tonnage?: boolean
    panama_net_tonnage?: boolean
    suez_gross_tonnage?: boolean
    suez_net_tonnage?: boolean
    reduced_gross_tonnage?: boolean
    length_between_perpendiculars?: boolean
    molded_depth?: boolean
    number_of_holds?: boolean
    number_of_tanks?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    country_id?: boolean
    draft_sw?: boolean
    built_year?: boolean
    country?: boolean | CountryArgs
    shippings?: boolean | ShippingFindManyArgs
    vessel_files?: boolean | vessel_filesFindManyArgs
    group_emails?: boolean | group_emailsFindManyArgs
    _count?: boolean | VesselCountOutputTypeArgs
  }

  export type VesselInclude = {
    country?: boolean | CountryArgs
    shippings?: boolean | ShippingFindManyArgs
    vessel_files?: boolean | vessel_filesFindManyArgs
    group_emails?: boolean | group_emailsFindManyArgs
    _count?: boolean | VesselCountOutputTypeArgs
  }

  export type VesselGetPayload<
    S extends boolean | null | undefined | VesselArgs,
    U = keyof S
      > = S extends true
        ? Vessel
    : S extends undefined
    ? never
    : S extends VesselArgs | VesselFindManyArgs
    ?'include' extends U
    ? Vessel  & {
    [P in TrueKeys<S['include']>]:
        P extends 'country' ? CountryGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'shippings' ? Array < ShippingGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'vessel_files' ? Array < vessel_filesGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'group_emails' ? Array < group_emailsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? VesselCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'country' ? CountryGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'shippings' ? Array < ShippingGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'vessel_files' ? Array < vessel_filesGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'group_emails' ? Array < group_emailsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? VesselCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof Vessel ? Vessel[P] : never
  } 
    : Vessel
  : Vessel


  type VesselCountArgs = Merge<
    Omit<VesselFindManyArgs, 'select' | 'include'> & {
      select?: VesselCountAggregateInputType | true
    }
  >

  export interface VesselDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Vessel that matches the filter.
     * @param {VesselFindUniqueArgs} args - Arguments to find a Vessel
     * @example
     * // Get one Vessel
     * const vessel = await prisma.vessel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends VesselFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, VesselFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Vessel'> extends True ? CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>> : CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>

    /**
     * Find the first Vessel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselFindFirstArgs} args - Arguments to find a Vessel
     * @example
     * // Get one Vessel
     * const vessel = await prisma.vessel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends VesselFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, VesselFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Vessel'> extends True ? CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>> : CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>

    /**
     * Find zero or more Vessels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vessels
     * const vessels = await prisma.vessel.findMany()
     * 
     * // Get first 10 Vessels
     * const vessels = await prisma.vessel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vesselWithIdOnly = await prisma.vessel.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends VesselFindManyArgs>(
      args?: SelectSubset<T, VesselFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Vessel>>, PrismaPromise<Array<VesselGetPayload<T>>>>

    /**
     * Create a Vessel.
     * @param {VesselCreateArgs} args - Arguments to create a Vessel.
     * @example
     * // Create one Vessel
     * const Vessel = await prisma.vessel.create({
     *   data: {
     *     // ... data to create a Vessel
     *   }
     * })
     * 
    **/
    create<T extends VesselCreateArgs>(
      args: SelectSubset<T, VesselCreateArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Create many Vessels.
     *     @param {VesselCreateManyArgs} args - Arguments to create many Vessels.
     *     @example
     *     // Create many Vessels
     *     const vessel = await prisma.vessel.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends VesselCreateManyArgs>(
      args?: SelectSubset<T, VesselCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Vessel.
     * @param {VesselDeleteArgs} args - Arguments to delete one Vessel.
     * @example
     * // Delete one Vessel
     * const Vessel = await prisma.vessel.delete({
     *   where: {
     *     // ... filter to delete one Vessel
     *   }
     * })
     * 
    **/
    delete<T extends VesselDeleteArgs>(
      args: SelectSubset<T, VesselDeleteArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Update one Vessel.
     * @param {VesselUpdateArgs} args - Arguments to update one Vessel.
     * @example
     * // Update one Vessel
     * const vessel = await prisma.vessel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends VesselUpdateArgs>(
      args: SelectSubset<T, VesselUpdateArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Delete zero or more Vessels.
     * @param {VesselDeleteManyArgs} args - Arguments to filter Vessels to delete.
     * @example
     * // Delete a few Vessels
     * const { count } = await prisma.vessel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends VesselDeleteManyArgs>(
      args?: SelectSubset<T, VesselDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vessels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vessels
     * const vessel = await prisma.vessel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends VesselUpdateManyArgs>(
      args: SelectSubset<T, VesselUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Vessel.
     * @param {VesselUpsertArgs} args - Arguments to update or create a Vessel.
     * @example
     * // Update or create a Vessel
     * const vessel = await prisma.vessel.upsert({
     *   create: {
     *     // ... data to create a Vessel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vessel we want to update
     *   }
     * })
    **/
    upsert<T extends VesselUpsertArgs>(
      args: SelectSubset<T, VesselUpsertArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Find one Vessel that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {VesselFindUniqueOrThrowArgs} args - Arguments to find a Vessel
     * @example
     * // Get one Vessel
     * const vessel = await prisma.vessel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends VesselFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, VesselFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Find the first Vessel that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselFindFirstOrThrowArgs} args - Arguments to find a Vessel
     * @example
     * // Get one Vessel
     * const vessel = await prisma.vessel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends VesselFindFirstOrThrowArgs>(
      args?: SelectSubset<T, VesselFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__VesselClient<Vessel>, Prisma__VesselClient<VesselGetPayload<T>>>

    /**
     * Count the number of Vessels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselCountArgs} args - Arguments to filter Vessels to count.
     * @example
     * // Count the number of Vessels
     * const count = await prisma.vessel.count({
     *   where: {
     *     // ... the filter for the Vessels we want to count
     *   }
     * })
    **/
    count<T extends VesselCountArgs>(
      args?: Subset<T, VesselCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VesselCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vessel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VesselAggregateArgs>(args: Subset<T, VesselAggregateArgs>): PrismaPromise<GetVesselAggregateType<T>>

    /**
     * Group by Vessel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VesselGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VesselGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VesselGroupByArgs['orderBy'] }
        : { orderBy?: VesselGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VesselGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVesselGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Vessel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__VesselClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    country<T extends CountryArgs = {}>(args?: Subset<T, CountryArgs>): CheckSelect<T, Prisma__CountryClient<Country | null >, Prisma__CountryClient<CountryGetPayload<T> | null >>;

    shippings<T extends ShippingFindManyArgs = {}>(args?: Subset<T, ShippingFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Shipping>>, PrismaPromise<Array<ShippingGetPayload<T>>>>;

    vessel_files<T extends vessel_filesFindManyArgs = {}>(args?: Subset<T, vessel_filesFindManyArgs>): CheckSelect<T, PrismaPromise<Array<vessel_files>>, PrismaPromise<Array<vessel_filesGetPayload<T>>>>;

    group_emails<T extends group_emailsFindManyArgs = {}>(args?: Subset<T, group_emailsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<group_emails>>, PrismaPromise<Array<group_emailsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Vessel base type for findUnique actions
   */
  export type VesselFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * Filter, which Vessel to fetch.
     * 
    **/
    where: VesselWhereUniqueInput
  }

  /**
   * Vessel: findUnique
   */
  export interface VesselFindUniqueArgs extends VesselFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Vessel base type for findFirst actions
   */
  export type VesselFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * Filter, which Vessel to fetch.
     * 
    **/
    where?: VesselWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vessels to fetch.
     * 
    **/
    orderBy?: Enumerable<VesselOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vessels.
     * 
    **/
    cursor?: VesselWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vessels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vessels.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vessels.
     * 
    **/
    distinct?: Enumerable<VesselScalarFieldEnum>
  }

  /**
   * Vessel: findFirst
   */
  export interface VesselFindFirstArgs extends VesselFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Vessel findMany
   */
  export type VesselFindManyArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * Filter, which Vessels to fetch.
     * 
    **/
    where?: VesselWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vessels to fetch.
     * 
    **/
    orderBy?: Enumerable<VesselOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vessels.
     * 
    **/
    cursor?: VesselWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vessels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vessels.
     * 
    **/
    skip?: number
    distinct?: Enumerable<VesselScalarFieldEnum>
  }


  /**
   * Vessel create
   */
  export type VesselCreateArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * The data needed to create a Vessel.
     * 
    **/
    data: XOR<VesselCreateInput, VesselUncheckedCreateInput>
  }


  /**
   * Vessel createMany
   */
  export type VesselCreateManyArgs = {
    /**
     * The data used to create many Vessels.
     * 
    **/
    data: Enumerable<VesselCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Vessel update
   */
  export type VesselUpdateArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * The data needed to update a Vessel.
     * 
    **/
    data: XOR<VesselUpdateInput, VesselUncheckedUpdateInput>
    /**
     * Choose, which Vessel to update.
     * 
    **/
    where: VesselWhereUniqueInput
  }


  /**
   * Vessel updateMany
   */
  export type VesselUpdateManyArgs = {
    /**
     * The data used to update Vessels.
     * 
    **/
    data: XOR<VesselUpdateManyMutationInput, VesselUncheckedUpdateManyInput>
    /**
     * Filter which Vessels to update
     * 
    **/
    where?: VesselWhereInput
  }


  /**
   * Vessel upsert
   */
  export type VesselUpsertArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * The filter to search for the Vessel to update in case it exists.
     * 
    **/
    where: VesselWhereUniqueInput
    /**
     * In case the Vessel found by the `where` argument doesn't exist, create a new Vessel with this data.
     * 
    **/
    create: XOR<VesselCreateInput, VesselUncheckedCreateInput>
    /**
     * In case the Vessel was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<VesselUpdateInput, VesselUncheckedUpdateInput>
  }


  /**
   * Vessel delete
   */
  export type VesselDeleteArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
    /**
     * Filter which Vessel to delete.
     * 
    **/
    where: VesselWhereUniqueInput
  }


  /**
   * Vessel deleteMany
   */
  export type VesselDeleteManyArgs = {
    /**
     * Filter which Vessels to delete
     * 
    **/
    where?: VesselWhereInput
  }


  /**
   * Vessel: findUniqueOrThrow
   */
  export type VesselFindUniqueOrThrowArgs = VesselFindUniqueArgsBase
      

  /**
   * Vessel: findFirstOrThrow
   */
  export type VesselFindFirstOrThrowArgs = VesselFindFirstArgsBase
      

  /**
   * Vessel without action
   */
  export type VesselArgs = {
    /**
     * Select specific fields to fetch from the Vessel
     * 
    **/
    select?: VesselSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VesselInclude | null
  }



  /**
   * Model inquires
   */


  export type AggregateInquires = {
    _count: InquiresCountAggregateOutputType | null
    _avg: InquiresAvgAggregateOutputType | null
    _sum: InquiresSumAggregateOutputType | null
    _min: InquiresMinAggregateOutputType | null
    _max: InquiresMaxAggregateOutputType | null
  }

  export type InquiresAvgAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    updated_by_user_id: number | null
  }

  export type InquiresSumAggregateOutputType = {
    id: number | null
    shipping_id: number | null
    updated_by_user_id: number | null
  }

  export type InquiresMinAggregateOutputType = {
    id: number | null
    title: string | null
    group: string | null
    shipping_id: number | null
    updated_by_user_id: number | null
    deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type InquiresMaxAggregateOutputType = {
    id: number | null
    title: string | null
    group: string | null
    shipping_id: number | null
    updated_by_user_id: number | null
    deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type InquiresCountAggregateOutputType = {
    id: number
    title: number
    group: number
    shipping_id: number
    updated_by_user_id: number
    deleted: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type InquiresAvgAggregateInputType = {
    id?: true
    shipping_id?: true
    updated_by_user_id?: true
  }

  export type InquiresSumAggregateInputType = {
    id?: true
    shipping_id?: true
    updated_by_user_id?: true
  }

  export type InquiresMinAggregateInputType = {
    id?: true
    title?: true
    group?: true
    shipping_id?: true
    updated_by_user_id?: true
    deleted?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type InquiresMaxAggregateInputType = {
    id?: true
    title?: true
    group?: true
    shipping_id?: true
    updated_by_user_id?: true
    deleted?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type InquiresCountAggregateInputType = {
    id?: true
    title?: true
    group?: true
    shipping_id?: true
    updated_by_user_id?: true
    deleted?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type InquiresAggregateArgs = {
    /**
     * Filter which inquires to aggregate.
     * 
    **/
    where?: inquiresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires to fetch.
     * 
    **/
    orderBy?: Enumerable<inquiresOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: inquiresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned inquires
    **/
    _count?: true | InquiresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InquiresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InquiresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InquiresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InquiresMaxAggregateInputType
  }

  export type GetInquiresAggregateType<T extends InquiresAggregateArgs> = {
        [P in keyof T & keyof AggregateInquires]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInquires[P]>
      : GetScalarType<T[P], AggregateInquires[P]>
  }




  export type InquiresGroupByArgs = {
    where?: inquiresWhereInput
    orderBy?: Enumerable<inquiresOrderByWithAggregationInput>
    by: Array<InquiresScalarFieldEnum>
    having?: inquiresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InquiresCountAggregateInputType | true
    _avg?: InquiresAvgAggregateInputType
    _sum?: InquiresSumAggregateInputType
    _min?: InquiresMinAggregateInputType
    _max?: InquiresMaxAggregateInputType
  }


  export type InquiresGroupByOutputType = {
    id: number
    title: string | null
    group: string | null
    shipping_id: number | null
    updated_by_user_id: number | null
    deleted: boolean
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: InquiresCountAggregateOutputType | null
    _avg: InquiresAvgAggregateOutputType | null
    _sum: InquiresSumAggregateOutputType | null
    _min: InquiresMinAggregateOutputType | null
    _max: InquiresMaxAggregateOutputType | null
  }

  type GetInquiresGroupByPayload<T extends InquiresGroupByArgs> = PrismaPromise<
    Array<
      PickArray<InquiresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InquiresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InquiresGroupByOutputType[P]>
            : GetScalarType<T[P], InquiresGroupByOutputType[P]>
        }
      >
    >


  export type inquiresSelect = {
    id?: boolean
    title?: boolean
    group?: boolean
    shipping_id?: boolean
    updated_by_user_id?: boolean
    shippings?: boolean | ShippingArgs
    users?: boolean | usersArgs
    inquires_comments?: boolean | inquires_commentsFindManyArgs
    deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    _count?: boolean | InquiresCountOutputTypeArgs
  }

  export type inquiresInclude = {
    shippings?: boolean | ShippingArgs
    users?: boolean | usersArgs
    inquires_comments?: boolean | inquires_commentsFindManyArgs
    _count?: boolean | InquiresCountOutputTypeArgs
  }

  export type inquiresGetPayload<
    S extends boolean | null | undefined | inquiresArgs,
    U = keyof S
      > = S extends true
        ? inquires
    : S extends undefined
    ? never
    : S extends inquiresArgs | inquiresFindManyArgs
    ?'include' extends U
    ? inquires  & {
    [P in TrueKeys<S['include']>]:
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'inquires_comments' ? Array < inquires_commentsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? InquiresCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'shippings' ? ShippingGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'inquires_comments' ? Array < inquires_commentsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? InquiresCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof inquires ? inquires[P] : never
  } 
    : inquires
  : inquires


  type inquiresCountArgs = Merge<
    Omit<inquiresFindManyArgs, 'select' | 'include'> & {
      select?: InquiresCountAggregateInputType | true
    }
  >

  export interface inquiresDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Inquires that matches the filter.
     * @param {inquiresFindUniqueArgs} args - Arguments to find a Inquires
     * @example
     * // Get one Inquires
     * const inquires = await prisma.inquires.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends inquiresFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, inquiresFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'inquires'> extends True ? CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>> : CheckSelect<T, Prisma__inquiresClient<inquires | null >, Prisma__inquiresClient<inquiresGetPayload<T> | null >>

    /**
     * Find the first Inquires that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquiresFindFirstArgs} args - Arguments to find a Inquires
     * @example
     * // Get one Inquires
     * const inquires = await prisma.inquires.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends inquiresFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, inquiresFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'inquires'> extends True ? CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>> : CheckSelect<T, Prisma__inquiresClient<inquires | null >, Prisma__inquiresClient<inquiresGetPayload<T> | null >>

    /**
     * Find zero or more Inquires that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquiresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inquires
     * const inquires = await prisma.inquires.findMany()
     * 
     * // Get first 10 Inquires
     * const inquires = await prisma.inquires.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inquiresWithIdOnly = await prisma.inquires.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends inquiresFindManyArgs>(
      args?: SelectSubset<T, inquiresFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<inquires>>, PrismaPromise<Array<inquiresGetPayload<T>>>>

    /**
     * Create a Inquires.
     * @param {inquiresCreateArgs} args - Arguments to create a Inquires.
     * @example
     * // Create one Inquires
     * const Inquires = await prisma.inquires.create({
     *   data: {
     *     // ... data to create a Inquires
     *   }
     * })
     * 
    **/
    create<T extends inquiresCreateArgs>(
      args: SelectSubset<T, inquiresCreateArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Create many Inquires.
     *     @param {inquiresCreateManyArgs} args - Arguments to create many Inquires.
     *     @example
     *     // Create many Inquires
     *     const inquires = await prisma.inquires.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends inquiresCreateManyArgs>(
      args?: SelectSubset<T, inquiresCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Inquires.
     * @param {inquiresDeleteArgs} args - Arguments to delete one Inquires.
     * @example
     * // Delete one Inquires
     * const Inquires = await prisma.inquires.delete({
     *   where: {
     *     // ... filter to delete one Inquires
     *   }
     * })
     * 
    **/
    delete<T extends inquiresDeleteArgs>(
      args: SelectSubset<T, inquiresDeleteArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Update one Inquires.
     * @param {inquiresUpdateArgs} args - Arguments to update one Inquires.
     * @example
     * // Update one Inquires
     * const inquires = await prisma.inquires.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends inquiresUpdateArgs>(
      args: SelectSubset<T, inquiresUpdateArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Delete zero or more Inquires.
     * @param {inquiresDeleteManyArgs} args - Arguments to filter Inquires to delete.
     * @example
     * // Delete a few Inquires
     * const { count } = await prisma.inquires.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends inquiresDeleteManyArgs>(
      args?: SelectSubset<T, inquiresDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inquires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquiresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inquires
     * const inquires = await prisma.inquires.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends inquiresUpdateManyArgs>(
      args: SelectSubset<T, inquiresUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Inquires.
     * @param {inquiresUpsertArgs} args - Arguments to update or create a Inquires.
     * @example
     * // Update or create a Inquires
     * const inquires = await prisma.inquires.upsert({
     *   create: {
     *     // ... data to create a Inquires
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inquires we want to update
     *   }
     * })
    **/
    upsert<T extends inquiresUpsertArgs>(
      args: SelectSubset<T, inquiresUpsertArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Find one Inquires that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {inquiresFindUniqueOrThrowArgs} args - Arguments to find a Inquires
     * @example
     * // Get one Inquires
     * const inquires = await prisma.inquires.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends inquiresFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, inquiresFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Find the first Inquires that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquiresFindFirstOrThrowArgs} args - Arguments to find a Inquires
     * @example
     * // Get one Inquires
     * const inquires = await prisma.inquires.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends inquiresFindFirstOrThrowArgs>(
      args?: SelectSubset<T, inquiresFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__inquiresClient<inquires>, Prisma__inquiresClient<inquiresGetPayload<T>>>

    /**
     * Count the number of Inquires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquiresCountArgs} args - Arguments to filter Inquires to count.
     * @example
     * // Count the number of Inquires
     * const count = await prisma.inquires.count({
     *   where: {
     *     // ... the filter for the Inquires we want to count
     *   }
     * })
    **/
    count<T extends inquiresCountArgs>(
      args?: Subset<T, inquiresCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InquiresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inquires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InquiresAggregateArgs>(args: Subset<T, InquiresAggregateArgs>): PrismaPromise<GetInquiresAggregateType<T>>

    /**
     * Group by Inquires.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InquiresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InquiresGroupByArgs['orderBy'] }
        : { orderBy?: InquiresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InquiresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInquiresGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for inquires.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__inquiresClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shippings<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    inquires_comments<T extends inquires_commentsFindManyArgs = {}>(args?: Subset<T, inquires_commentsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<inquires_comments>>, PrismaPromise<Array<inquires_commentsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * inquires base type for findUnique actions
   */
  export type inquiresFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * Filter, which inquires to fetch.
     * 
    **/
    where: inquiresWhereUniqueInput
  }

  /**
   * inquires: findUnique
   */
  export interface inquiresFindUniqueArgs extends inquiresFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * inquires base type for findFirst actions
   */
  export type inquiresFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * Filter, which inquires to fetch.
     * 
    **/
    where?: inquiresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires to fetch.
     * 
    **/
    orderBy?: Enumerable<inquiresOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inquires.
     * 
    **/
    cursor?: inquiresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inquires.
     * 
    **/
    distinct?: Enumerable<InquiresScalarFieldEnum>
  }

  /**
   * inquires: findFirst
   */
  export interface inquiresFindFirstArgs extends inquiresFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * inquires findMany
   */
  export type inquiresFindManyArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * Filter, which inquires to fetch.
     * 
    **/
    where?: inquiresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires to fetch.
     * 
    **/
    orderBy?: Enumerable<inquiresOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing inquires.
     * 
    **/
    cursor?: inquiresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires.
     * 
    **/
    skip?: number
    distinct?: Enumerable<InquiresScalarFieldEnum>
  }


  /**
   * inquires create
   */
  export type inquiresCreateArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * The data needed to create a inquires.
     * 
    **/
    data: XOR<inquiresCreateInput, inquiresUncheckedCreateInput>
  }


  /**
   * inquires createMany
   */
  export type inquiresCreateManyArgs = {
    /**
     * The data used to create many inquires.
     * 
    **/
    data: Enumerable<inquiresCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * inquires update
   */
  export type inquiresUpdateArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * The data needed to update a inquires.
     * 
    **/
    data: XOR<inquiresUpdateInput, inquiresUncheckedUpdateInput>
    /**
     * Choose, which inquires to update.
     * 
    **/
    where: inquiresWhereUniqueInput
  }


  /**
   * inquires updateMany
   */
  export type inquiresUpdateManyArgs = {
    /**
     * The data used to update inquires.
     * 
    **/
    data: XOR<inquiresUpdateManyMutationInput, inquiresUncheckedUpdateManyInput>
    /**
     * Filter which inquires to update
     * 
    **/
    where?: inquiresWhereInput
  }


  /**
   * inquires upsert
   */
  export type inquiresUpsertArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * The filter to search for the inquires to update in case it exists.
     * 
    **/
    where: inquiresWhereUniqueInput
    /**
     * In case the inquires found by the `where` argument doesn't exist, create a new inquires with this data.
     * 
    **/
    create: XOR<inquiresCreateInput, inquiresUncheckedCreateInput>
    /**
     * In case the inquires was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<inquiresUpdateInput, inquiresUncheckedUpdateInput>
  }


  /**
   * inquires delete
   */
  export type inquiresDeleteArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
    /**
     * Filter which inquires to delete.
     * 
    **/
    where: inquiresWhereUniqueInput
  }


  /**
   * inquires deleteMany
   */
  export type inquiresDeleteManyArgs = {
    /**
     * Filter which inquires to delete
     * 
    **/
    where?: inquiresWhereInput
  }


  /**
   * inquires: findUniqueOrThrow
   */
  export type inquiresFindUniqueOrThrowArgs = inquiresFindUniqueArgsBase
      

  /**
   * inquires: findFirstOrThrow
   */
  export type inquiresFindFirstOrThrowArgs = inquiresFindFirstArgsBase
      

  /**
   * inquires without action
   */
  export type inquiresArgs = {
    /**
     * Select specific fields to fetch from the inquires
     * 
    **/
    select?: inquiresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquiresInclude | null
  }



  /**
   * Model inquires_comments
   */


  export type AggregateInquires_comments = {
    _count: Inquires_commentsCountAggregateOutputType | null
    _avg: Inquires_commentsAvgAggregateOutputType | null
    _sum: Inquires_commentsSumAggregateOutputType | null
    _min: Inquires_commentsMinAggregateOutputType | null
    _max: Inquires_commentsMaxAggregateOutputType | null
  }

  export type Inquires_commentsAvgAggregateOutputType = {
    id: number | null
    inquire_id: number | null
    user_id: number | null
  }

  export type Inquires_commentsSumAggregateOutputType = {
    id: number | null
    inquire_id: number | null
    user_id: number | null
  }

  export type Inquires_commentsMinAggregateOutputType = {
    id: number | null
    body: string | null
    type: string | null
    is_done: boolean | null
    deadline_date: Date | null
    inquire_id: number | null
    user_id: number | null
    deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Inquires_commentsMaxAggregateOutputType = {
    id: number | null
    body: string | null
    type: string | null
    is_done: boolean | null
    deadline_date: Date | null
    inquire_id: number | null
    user_id: number | null
    deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Inquires_commentsCountAggregateOutputType = {
    id: number
    body: number
    type: number
    is_done: number
    deadline_date: number
    inquire_id: number
    user_id: number
    deleted: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Inquires_commentsAvgAggregateInputType = {
    id?: true
    inquire_id?: true
    user_id?: true
  }

  export type Inquires_commentsSumAggregateInputType = {
    id?: true
    inquire_id?: true
    user_id?: true
  }

  export type Inquires_commentsMinAggregateInputType = {
    id?: true
    body?: true
    type?: true
    is_done?: true
    deadline_date?: true
    inquire_id?: true
    user_id?: true
    deleted?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Inquires_commentsMaxAggregateInputType = {
    id?: true
    body?: true
    type?: true
    is_done?: true
    deadline_date?: true
    inquire_id?: true
    user_id?: true
    deleted?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Inquires_commentsCountAggregateInputType = {
    id?: true
    body?: true
    type?: true
    is_done?: true
    deadline_date?: true
    inquire_id?: true
    user_id?: true
    deleted?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Inquires_commentsAggregateArgs = {
    /**
     * Filter which inquires_comments to aggregate.
     * 
    **/
    where?: inquires_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires_comments to fetch.
     * 
    **/
    orderBy?: Enumerable<inquires_commentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: inquires_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires_comments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires_comments.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned inquires_comments
    **/
    _count?: true | Inquires_commentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Inquires_commentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Inquires_commentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Inquires_commentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Inquires_commentsMaxAggregateInputType
  }

  export type GetInquires_commentsAggregateType<T extends Inquires_commentsAggregateArgs> = {
        [P in keyof T & keyof AggregateInquires_comments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInquires_comments[P]>
      : GetScalarType<T[P], AggregateInquires_comments[P]>
  }




  export type Inquires_commentsGroupByArgs = {
    where?: inquires_commentsWhereInput
    orderBy?: Enumerable<inquires_commentsOrderByWithAggregationInput>
    by: Array<Inquires_commentsScalarFieldEnum>
    having?: inquires_commentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Inquires_commentsCountAggregateInputType | true
    _avg?: Inquires_commentsAvgAggregateInputType
    _sum?: Inquires_commentsSumAggregateInputType
    _min?: Inquires_commentsMinAggregateInputType
    _max?: Inquires_commentsMaxAggregateInputType
  }


  export type Inquires_commentsGroupByOutputType = {
    id: number
    body: string | null
    type: string | null
    is_done: boolean
    deadline_date: Date | null
    inquire_id: number | null
    user_id: number | null
    deleted: boolean
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: Inquires_commentsCountAggregateOutputType | null
    _avg: Inquires_commentsAvgAggregateOutputType | null
    _sum: Inquires_commentsSumAggregateOutputType | null
    _min: Inquires_commentsMinAggregateOutputType | null
    _max: Inquires_commentsMaxAggregateOutputType | null
  }

  type GetInquires_commentsGroupByPayload<T extends Inquires_commentsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Inquires_commentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Inquires_commentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Inquires_commentsGroupByOutputType[P]>
            : GetScalarType<T[P], Inquires_commentsGroupByOutputType[P]>
        }
      >
    >


  export type inquires_commentsSelect = {
    id?: boolean
    body?: boolean
    type?: boolean
    is_done?: boolean
    deadline_date?: boolean
    inquire_id?: boolean
    user_id?: boolean
    inquires?: boolean | inquiresArgs
    users?: boolean | usersArgs
    deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }

  export type inquires_commentsInclude = {
    inquires?: boolean | inquiresArgs
    users?: boolean | usersArgs
  }

  export type inquires_commentsGetPayload<
    S extends boolean | null | undefined | inquires_commentsArgs,
    U = keyof S
      > = S extends true
        ? inquires_comments
    : S extends undefined
    ? never
    : S extends inquires_commentsArgs | inquires_commentsFindManyArgs
    ?'include' extends U
    ? inquires_comments  & {
    [P in TrueKeys<S['include']>]:
        P extends 'inquires' ? inquiresGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'inquires' ? inquiresGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof inquires_comments ? inquires_comments[P] : never
  } 
    : inquires_comments
  : inquires_comments


  type inquires_commentsCountArgs = Merge<
    Omit<inquires_commentsFindManyArgs, 'select' | 'include'> & {
      select?: Inquires_commentsCountAggregateInputType | true
    }
  >

  export interface inquires_commentsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Inquires_comments that matches the filter.
     * @param {inquires_commentsFindUniqueArgs} args - Arguments to find a Inquires_comments
     * @example
     * // Get one Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends inquires_commentsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, inquires_commentsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'inquires_comments'> extends True ? CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>> : CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments | null >, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T> | null >>

    /**
     * Find the first Inquires_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquires_commentsFindFirstArgs} args - Arguments to find a Inquires_comments
     * @example
     * // Get one Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends inquires_commentsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, inquires_commentsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'inquires_comments'> extends True ? CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>> : CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments | null >, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T> | null >>

    /**
     * Find zero or more Inquires_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquires_commentsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findMany()
     * 
     * // Get first 10 Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inquires_commentsWithIdOnly = await prisma.inquires_comments.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends inquires_commentsFindManyArgs>(
      args?: SelectSubset<T, inquires_commentsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<inquires_comments>>, PrismaPromise<Array<inquires_commentsGetPayload<T>>>>

    /**
     * Create a Inquires_comments.
     * @param {inquires_commentsCreateArgs} args - Arguments to create a Inquires_comments.
     * @example
     * // Create one Inquires_comments
     * const Inquires_comments = await prisma.inquires_comments.create({
     *   data: {
     *     // ... data to create a Inquires_comments
     *   }
     * })
     * 
    **/
    create<T extends inquires_commentsCreateArgs>(
      args: SelectSubset<T, inquires_commentsCreateArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Create many Inquires_comments.
     *     @param {inquires_commentsCreateManyArgs} args - Arguments to create many Inquires_comments.
     *     @example
     *     // Create many Inquires_comments
     *     const inquires_comments = await prisma.inquires_comments.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends inquires_commentsCreateManyArgs>(
      args?: SelectSubset<T, inquires_commentsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Inquires_comments.
     * @param {inquires_commentsDeleteArgs} args - Arguments to delete one Inquires_comments.
     * @example
     * // Delete one Inquires_comments
     * const Inquires_comments = await prisma.inquires_comments.delete({
     *   where: {
     *     // ... filter to delete one Inquires_comments
     *   }
     * })
     * 
    **/
    delete<T extends inquires_commentsDeleteArgs>(
      args: SelectSubset<T, inquires_commentsDeleteArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Update one Inquires_comments.
     * @param {inquires_commentsUpdateArgs} args - Arguments to update one Inquires_comments.
     * @example
     * // Update one Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends inquires_commentsUpdateArgs>(
      args: SelectSubset<T, inquires_commentsUpdateArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Delete zero or more Inquires_comments.
     * @param {inquires_commentsDeleteManyArgs} args - Arguments to filter Inquires_comments to delete.
     * @example
     * // Delete a few Inquires_comments
     * const { count } = await prisma.inquires_comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends inquires_commentsDeleteManyArgs>(
      args?: SelectSubset<T, inquires_commentsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inquires_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquires_commentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends inquires_commentsUpdateManyArgs>(
      args: SelectSubset<T, inquires_commentsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Inquires_comments.
     * @param {inquires_commentsUpsertArgs} args - Arguments to update or create a Inquires_comments.
     * @example
     * // Update or create a Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.upsert({
     *   create: {
     *     // ... data to create a Inquires_comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inquires_comments we want to update
     *   }
     * })
    **/
    upsert<T extends inquires_commentsUpsertArgs>(
      args: SelectSubset<T, inquires_commentsUpsertArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Find one Inquires_comments that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {inquires_commentsFindUniqueOrThrowArgs} args - Arguments to find a Inquires_comments
     * @example
     * // Get one Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends inquires_commentsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, inquires_commentsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Find the first Inquires_comments that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquires_commentsFindFirstOrThrowArgs} args - Arguments to find a Inquires_comments
     * @example
     * // Get one Inquires_comments
     * const inquires_comments = await prisma.inquires_comments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends inquires_commentsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, inquires_commentsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__inquires_commentsClient<inquires_comments>, Prisma__inquires_commentsClient<inquires_commentsGetPayload<T>>>

    /**
     * Count the number of Inquires_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inquires_commentsCountArgs} args - Arguments to filter Inquires_comments to count.
     * @example
     * // Count the number of Inquires_comments
     * const count = await prisma.inquires_comments.count({
     *   where: {
     *     // ... the filter for the Inquires_comments we want to count
     *   }
     * })
    **/
    count<T extends inquires_commentsCountArgs>(
      args?: Subset<T, inquires_commentsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Inquires_commentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inquires_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Inquires_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Inquires_commentsAggregateArgs>(args: Subset<T, Inquires_commentsAggregateArgs>): PrismaPromise<GetInquires_commentsAggregateType<T>>

    /**
     * Group by Inquires_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Inquires_commentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Inquires_commentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Inquires_commentsGroupByArgs['orderBy'] }
        : { orderBy?: Inquires_commentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Inquires_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInquires_commentsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for inquires_comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__inquires_commentsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    inquires<T extends inquiresArgs = {}>(args?: Subset<T, inquiresArgs>): CheckSelect<T, Prisma__inquiresClient<inquires | null >, Prisma__inquiresClient<inquiresGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * inquires_comments base type for findUnique actions
   */
  export type inquires_commentsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * Filter, which inquires_comments to fetch.
     * 
    **/
    where: inquires_commentsWhereUniqueInput
  }

  /**
   * inquires_comments: findUnique
   */
  export interface inquires_commentsFindUniqueArgs extends inquires_commentsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * inquires_comments base type for findFirst actions
   */
  export type inquires_commentsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * Filter, which inquires_comments to fetch.
     * 
    **/
    where?: inquires_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires_comments to fetch.
     * 
    **/
    orderBy?: Enumerable<inquires_commentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inquires_comments.
     * 
    **/
    cursor?: inquires_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires_comments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires_comments.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inquires_comments.
     * 
    **/
    distinct?: Enumerable<Inquires_commentsScalarFieldEnum>
  }

  /**
   * inquires_comments: findFirst
   */
  export interface inquires_commentsFindFirstArgs extends inquires_commentsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * inquires_comments findMany
   */
  export type inquires_commentsFindManyArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * Filter, which inquires_comments to fetch.
     * 
    **/
    where?: inquires_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inquires_comments to fetch.
     * 
    **/
    orderBy?: Enumerable<inquires_commentsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing inquires_comments.
     * 
    **/
    cursor?: inquires_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inquires_comments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inquires_comments.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Inquires_commentsScalarFieldEnum>
  }


  /**
   * inquires_comments create
   */
  export type inquires_commentsCreateArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * The data needed to create a inquires_comments.
     * 
    **/
    data: XOR<inquires_commentsCreateInput, inquires_commentsUncheckedCreateInput>
  }


  /**
   * inquires_comments createMany
   */
  export type inquires_commentsCreateManyArgs = {
    /**
     * The data used to create many inquires_comments.
     * 
    **/
    data: Enumerable<inquires_commentsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * inquires_comments update
   */
  export type inquires_commentsUpdateArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * The data needed to update a inquires_comments.
     * 
    **/
    data: XOR<inquires_commentsUpdateInput, inquires_commentsUncheckedUpdateInput>
    /**
     * Choose, which inquires_comments to update.
     * 
    **/
    where: inquires_commentsWhereUniqueInput
  }


  /**
   * inquires_comments updateMany
   */
  export type inquires_commentsUpdateManyArgs = {
    /**
     * The data used to update inquires_comments.
     * 
    **/
    data: XOR<inquires_commentsUpdateManyMutationInput, inquires_commentsUncheckedUpdateManyInput>
    /**
     * Filter which inquires_comments to update
     * 
    **/
    where?: inquires_commentsWhereInput
  }


  /**
   * inquires_comments upsert
   */
  export type inquires_commentsUpsertArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * The filter to search for the inquires_comments to update in case it exists.
     * 
    **/
    where: inquires_commentsWhereUniqueInput
    /**
     * In case the inquires_comments found by the `where` argument doesn't exist, create a new inquires_comments with this data.
     * 
    **/
    create: XOR<inquires_commentsCreateInput, inquires_commentsUncheckedCreateInput>
    /**
     * In case the inquires_comments was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<inquires_commentsUpdateInput, inquires_commentsUncheckedUpdateInput>
  }


  /**
   * inquires_comments delete
   */
  export type inquires_commentsDeleteArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
    /**
     * Filter which inquires_comments to delete.
     * 
    **/
    where: inquires_commentsWhereUniqueInput
  }


  /**
   * inquires_comments deleteMany
   */
  export type inquires_commentsDeleteManyArgs = {
    /**
     * Filter which inquires_comments to delete
     * 
    **/
    where?: inquires_commentsWhereInput
  }


  /**
   * inquires_comments: findUniqueOrThrow
   */
  export type inquires_commentsFindUniqueOrThrowArgs = inquires_commentsFindUniqueArgsBase
      

  /**
   * inquires_comments: findFirstOrThrow
   */
  export type inquires_commentsFindFirstOrThrowArgs = inquires_commentsFindFirstArgsBase
      

  /**
   * inquires_comments without action
   */
  export type inquires_commentsArgs = {
    /**
     * Select specific fields to fetch from the inquires_comments
     * 
    **/
    select?: inquires_commentsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: inquires_commentsInclude | null
  }



  /**
   * Model group_emails
   */


  export type AggregateGroup_emails = {
    _count: Group_emailsCountAggregateOutputType | null
    _avg: Group_emailsAvgAggregateOutputType | null
    _sum: Group_emailsSumAggregateOutputType | null
    _min: Group_emailsMinAggregateOutputType | null
    _max: Group_emailsMaxAggregateOutputType | null
  }

  export type Group_emailsAvgAggregateOutputType = {
    id: number | null
    vessel_id: number | null
    updated_by_user_id: number | null
  }

  export type Group_emailsSumAggregateOutputType = {
    id: number | null
    vessel_id: number | null
    updated_by_user_id: number | null
  }

  export type Group_emailsMinAggregateOutputType = {
    id: number | null
    name: string | null
    emails: string | null
    vessel_id: number | null
    updated_by_user_id: number | null
  }

  export type Group_emailsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    emails: string | null
    vessel_id: number | null
    updated_by_user_id: number | null
  }

  export type Group_emailsCountAggregateOutputType = {
    id: number
    name: number
    emails: number
    vessel_id: number
    updated_by_user_id: number
    _all: number
  }


  export type Group_emailsAvgAggregateInputType = {
    id?: true
    vessel_id?: true
    updated_by_user_id?: true
  }

  export type Group_emailsSumAggregateInputType = {
    id?: true
    vessel_id?: true
    updated_by_user_id?: true
  }

  export type Group_emailsMinAggregateInputType = {
    id?: true
    name?: true
    emails?: true
    vessel_id?: true
    updated_by_user_id?: true
  }

  export type Group_emailsMaxAggregateInputType = {
    id?: true
    name?: true
    emails?: true
    vessel_id?: true
    updated_by_user_id?: true
  }

  export type Group_emailsCountAggregateInputType = {
    id?: true
    name?: true
    emails?: true
    vessel_id?: true
    updated_by_user_id?: true
    _all?: true
  }

  export type Group_emailsAggregateArgs = {
    /**
     * Filter which group_emails to aggregate.
     * 
    **/
    where?: group_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_emails to fetch.
     * 
    **/
    orderBy?: Enumerable<group_emailsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: group_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_emails from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_emails.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned group_emails
    **/
    _count?: true | Group_emailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Group_emailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Group_emailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Group_emailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Group_emailsMaxAggregateInputType
  }

  export type GetGroup_emailsAggregateType<T extends Group_emailsAggregateArgs> = {
        [P in keyof T & keyof AggregateGroup_emails]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroup_emails[P]>
      : GetScalarType<T[P], AggregateGroup_emails[P]>
  }




  export type Group_emailsGroupByArgs = {
    where?: group_emailsWhereInput
    orderBy?: Enumerable<group_emailsOrderByWithAggregationInput>
    by: Array<Group_emailsScalarFieldEnum>
    having?: group_emailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Group_emailsCountAggregateInputType | true
    _avg?: Group_emailsAvgAggregateInputType
    _sum?: Group_emailsSumAggregateInputType
    _min?: Group_emailsMinAggregateInputType
    _max?: Group_emailsMaxAggregateInputType
  }


  export type Group_emailsGroupByOutputType = {
    id: number
    name: string | null
    emails: string | null
    vessel_id: number | null
    updated_by_user_id: number | null
    _count: Group_emailsCountAggregateOutputType | null
    _avg: Group_emailsAvgAggregateOutputType | null
    _sum: Group_emailsSumAggregateOutputType | null
    _min: Group_emailsMinAggregateOutputType | null
    _max: Group_emailsMaxAggregateOutputType | null
  }

  type GetGroup_emailsGroupByPayload<T extends Group_emailsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Group_emailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Group_emailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Group_emailsGroupByOutputType[P]>
            : GetScalarType<T[P], Group_emailsGroupByOutputType[P]>
        }
      >
    >


  export type group_emailsSelect = {
    id?: boolean
    name?: boolean
    emails?: boolean
    vessel_id?: boolean
    updated_by_user_id?: boolean
    vessel?: boolean | VesselArgs
    users?: boolean | usersArgs
  }

  export type group_emailsInclude = {
    vessel?: boolean | VesselArgs
    users?: boolean | usersArgs
  }

  export type group_emailsGetPayload<
    S extends boolean | null | undefined | group_emailsArgs,
    U = keyof S
      > = S extends true
        ? group_emails
    : S extends undefined
    ? never
    : S extends group_emailsArgs | group_emailsFindManyArgs
    ?'include' extends U
    ? group_emails  & {
    [P in TrueKeys<S['include']>]:
        P extends 'vessel' ? VesselGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'vessel' ? VesselGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'users' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof group_emails ? group_emails[P] : never
  } 
    : group_emails
  : group_emails


  type group_emailsCountArgs = Merge<
    Omit<group_emailsFindManyArgs, 'select' | 'include'> & {
      select?: Group_emailsCountAggregateInputType | true
    }
  >

  export interface group_emailsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Group_emails that matches the filter.
     * @param {group_emailsFindUniqueArgs} args - Arguments to find a Group_emails
     * @example
     * // Get one Group_emails
     * const group_emails = await prisma.group_emails.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends group_emailsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, group_emailsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'group_emails'> extends True ? CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>> : CheckSelect<T, Prisma__group_emailsClient<group_emails | null >, Prisma__group_emailsClient<group_emailsGetPayload<T> | null >>

    /**
     * Find the first Group_emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_emailsFindFirstArgs} args - Arguments to find a Group_emails
     * @example
     * // Get one Group_emails
     * const group_emails = await prisma.group_emails.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends group_emailsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, group_emailsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'group_emails'> extends True ? CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>> : CheckSelect<T, Prisma__group_emailsClient<group_emails | null >, Prisma__group_emailsClient<group_emailsGetPayload<T> | null >>

    /**
     * Find zero or more Group_emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_emailsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Group_emails
     * const group_emails = await prisma.group_emails.findMany()
     * 
     * // Get first 10 Group_emails
     * const group_emails = await prisma.group_emails.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const group_emailsWithIdOnly = await prisma.group_emails.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends group_emailsFindManyArgs>(
      args?: SelectSubset<T, group_emailsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<group_emails>>, PrismaPromise<Array<group_emailsGetPayload<T>>>>

    /**
     * Create a Group_emails.
     * @param {group_emailsCreateArgs} args - Arguments to create a Group_emails.
     * @example
     * // Create one Group_emails
     * const Group_emails = await prisma.group_emails.create({
     *   data: {
     *     // ... data to create a Group_emails
     *   }
     * })
     * 
    **/
    create<T extends group_emailsCreateArgs>(
      args: SelectSubset<T, group_emailsCreateArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Create many Group_emails.
     *     @param {group_emailsCreateManyArgs} args - Arguments to create many Group_emails.
     *     @example
     *     // Create many Group_emails
     *     const group_emails = await prisma.group_emails.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends group_emailsCreateManyArgs>(
      args?: SelectSubset<T, group_emailsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Group_emails.
     * @param {group_emailsDeleteArgs} args - Arguments to delete one Group_emails.
     * @example
     * // Delete one Group_emails
     * const Group_emails = await prisma.group_emails.delete({
     *   where: {
     *     // ... filter to delete one Group_emails
     *   }
     * })
     * 
    **/
    delete<T extends group_emailsDeleteArgs>(
      args: SelectSubset<T, group_emailsDeleteArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Update one Group_emails.
     * @param {group_emailsUpdateArgs} args - Arguments to update one Group_emails.
     * @example
     * // Update one Group_emails
     * const group_emails = await prisma.group_emails.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends group_emailsUpdateArgs>(
      args: SelectSubset<T, group_emailsUpdateArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Delete zero or more Group_emails.
     * @param {group_emailsDeleteManyArgs} args - Arguments to filter Group_emails to delete.
     * @example
     * // Delete a few Group_emails
     * const { count } = await prisma.group_emails.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends group_emailsDeleteManyArgs>(
      args?: SelectSubset<T, group_emailsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Group_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_emailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Group_emails
     * const group_emails = await prisma.group_emails.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends group_emailsUpdateManyArgs>(
      args: SelectSubset<T, group_emailsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Group_emails.
     * @param {group_emailsUpsertArgs} args - Arguments to update or create a Group_emails.
     * @example
     * // Update or create a Group_emails
     * const group_emails = await prisma.group_emails.upsert({
     *   create: {
     *     // ... data to create a Group_emails
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Group_emails we want to update
     *   }
     * })
    **/
    upsert<T extends group_emailsUpsertArgs>(
      args: SelectSubset<T, group_emailsUpsertArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Find one Group_emails that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {group_emailsFindUniqueOrThrowArgs} args - Arguments to find a Group_emails
     * @example
     * // Get one Group_emails
     * const group_emails = await prisma.group_emails.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends group_emailsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, group_emailsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Find the first Group_emails that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_emailsFindFirstOrThrowArgs} args - Arguments to find a Group_emails
     * @example
     * // Get one Group_emails
     * const group_emails = await prisma.group_emails.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends group_emailsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, group_emailsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__group_emailsClient<group_emails>, Prisma__group_emailsClient<group_emailsGetPayload<T>>>

    /**
     * Count the number of Group_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_emailsCountArgs} args - Arguments to filter Group_emails to count.
     * @example
     * // Count the number of Group_emails
     * const count = await prisma.group_emails.count({
     *   where: {
     *     // ... the filter for the Group_emails we want to count
     *   }
     * })
    **/
    count<T extends group_emailsCountArgs>(
      args?: Subset<T, group_emailsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Group_emailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Group_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Group_emailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Group_emailsAggregateArgs>(args: Subset<T, Group_emailsAggregateArgs>): PrismaPromise<GetGroup_emailsAggregateType<T>>

    /**
     * Group by Group_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Group_emailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Group_emailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Group_emailsGroupByArgs['orderBy'] }
        : { orderBy?: Group_emailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Group_emailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroup_emailsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for group_emails.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__group_emailsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    vessel<T extends VesselArgs = {}>(args?: Subset<T, VesselArgs>): CheckSelect<T, Prisma__VesselClient<Vessel | null >, Prisma__VesselClient<VesselGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * group_emails base type for findUnique actions
   */
  export type group_emailsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * Filter, which group_emails to fetch.
     * 
    **/
    where: group_emailsWhereUniqueInput
  }

  /**
   * group_emails: findUnique
   */
  export interface group_emailsFindUniqueArgs extends group_emailsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * group_emails base type for findFirst actions
   */
  export type group_emailsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * Filter, which group_emails to fetch.
     * 
    **/
    where?: group_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_emails to fetch.
     * 
    **/
    orderBy?: Enumerable<group_emailsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for group_emails.
     * 
    **/
    cursor?: group_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_emails from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_emails.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of group_emails.
     * 
    **/
    distinct?: Enumerable<Group_emailsScalarFieldEnum>
  }

  /**
   * group_emails: findFirst
   */
  export interface group_emailsFindFirstArgs extends group_emailsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * group_emails findMany
   */
  export type group_emailsFindManyArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * Filter, which group_emails to fetch.
     * 
    **/
    where?: group_emailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_emails to fetch.
     * 
    **/
    orderBy?: Enumerable<group_emailsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing group_emails.
     * 
    **/
    cursor?: group_emailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_emails from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_emails.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Group_emailsScalarFieldEnum>
  }


  /**
   * group_emails create
   */
  export type group_emailsCreateArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * The data needed to create a group_emails.
     * 
    **/
    data: XOR<group_emailsCreateInput, group_emailsUncheckedCreateInput>
  }


  /**
   * group_emails createMany
   */
  export type group_emailsCreateManyArgs = {
    /**
     * The data used to create many group_emails.
     * 
    **/
    data: Enumerable<group_emailsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * group_emails update
   */
  export type group_emailsUpdateArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * The data needed to update a group_emails.
     * 
    **/
    data: XOR<group_emailsUpdateInput, group_emailsUncheckedUpdateInput>
    /**
     * Choose, which group_emails to update.
     * 
    **/
    where: group_emailsWhereUniqueInput
  }


  /**
   * group_emails updateMany
   */
  export type group_emailsUpdateManyArgs = {
    /**
     * The data used to update group_emails.
     * 
    **/
    data: XOR<group_emailsUpdateManyMutationInput, group_emailsUncheckedUpdateManyInput>
    /**
     * Filter which group_emails to update
     * 
    **/
    where?: group_emailsWhereInput
  }


  /**
   * group_emails upsert
   */
  export type group_emailsUpsertArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * The filter to search for the group_emails to update in case it exists.
     * 
    **/
    where: group_emailsWhereUniqueInput
    /**
     * In case the group_emails found by the `where` argument doesn't exist, create a new group_emails with this data.
     * 
    **/
    create: XOR<group_emailsCreateInput, group_emailsUncheckedCreateInput>
    /**
     * In case the group_emails was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<group_emailsUpdateInput, group_emailsUncheckedUpdateInput>
  }


  /**
   * group_emails delete
   */
  export type group_emailsDeleteArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
    /**
     * Filter which group_emails to delete.
     * 
    **/
    where: group_emailsWhereUniqueInput
  }


  /**
   * group_emails deleteMany
   */
  export type group_emailsDeleteManyArgs = {
    /**
     * Filter which group_emails to delete
     * 
    **/
    where?: group_emailsWhereInput
  }


  /**
   * group_emails: findUniqueOrThrow
   */
  export type group_emailsFindUniqueOrThrowArgs = group_emailsFindUniqueArgsBase
      

  /**
   * group_emails: findFirstOrThrow
   */
  export type group_emailsFindFirstOrThrowArgs = group_emailsFindFirstArgsBase
      

  /**
   * group_emails without action
   */
  export type group_emailsArgs = {
    /**
     * Select specific fields to fetch from the group_emails
     * 
    **/
    select?: group_emailsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: group_emailsInclude | null
  }



  /**
   * Model sof
   */


  export type AggregateSof = {
    _count: SofCountAggregateOutputType | null
    _avg: SofAvgAggregateOutputType | null
    _sum: SofSumAggregateOutputType | null
    _min: SofMinAggregateOutputType | null
    _max: SofMaxAggregateOutputType | null
  }

  export type SofAvgAggregateOutputType = {
    id: number | null
    shipping_id: number | null
  }

  export type SofSumAggregateOutputType = {
    id: number | null
    shipping_id: number | null
  }

  export type SofMinAggregateOutputType = {
    id: number | null
    hidden_attributes: string | null
    shipping_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type SofMaxAggregateOutputType = {
    id: number | null
    hidden_attributes: string | null
    shipping_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type SofCountAggregateOutputType = {
    id: number
    hidden_attributes: number
    shipping_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type SofAvgAggregateInputType = {
    id?: true
    shipping_id?: true
  }

  export type SofSumAggregateInputType = {
    id?: true
    shipping_id?: true
  }

  export type SofMinAggregateInputType = {
    id?: true
    hidden_attributes?: true
    shipping_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type SofMaxAggregateInputType = {
    id?: true
    hidden_attributes?: true
    shipping_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type SofCountAggregateInputType = {
    id?: true
    hidden_attributes?: true
    shipping_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type SofAggregateArgs = {
    /**
     * Filter which sof to aggregate.
     * 
    **/
    where?: sofWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sofs to fetch.
     * 
    **/
    orderBy?: Enumerable<sofOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sofWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sofs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sofs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sofs
    **/
    _count?: true | SofCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SofAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SofSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SofMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SofMaxAggregateInputType
  }

  export type GetSofAggregateType<T extends SofAggregateArgs> = {
        [P in keyof T & keyof AggregateSof]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSof[P]>
      : GetScalarType<T[P], AggregateSof[P]>
  }




  export type SofGroupByArgs = {
    where?: sofWhereInput
    orderBy?: Enumerable<sofOrderByWithAggregationInput>
    by: Array<SofScalarFieldEnum>
    having?: sofScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SofCountAggregateInputType | true
    _avg?: SofAvgAggregateInputType
    _sum?: SofSumAggregateInputType
    _min?: SofMinAggregateInputType
    _max?: SofMaxAggregateInputType
  }


  export type SofGroupByOutputType = {
    id: number
    hidden_attributes: string | null
    shipping_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: SofCountAggregateOutputType | null
    _avg: SofAvgAggregateOutputType | null
    _sum: SofSumAggregateOutputType | null
    _min: SofMinAggregateOutputType | null
    _max: SofMaxAggregateOutputType | null
  }

  type GetSofGroupByPayload<T extends SofGroupByArgs> = PrismaPromise<
    Array<
      PickArray<SofGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SofGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SofGroupByOutputType[P]>
            : GetScalarType<T[P], SofGroupByOutputType[P]>
        }
      >
    >


  export type sofSelect = {
    id?: boolean
    hidden_attributes?: boolean
    shipping_id?: boolean
    shipping?: boolean | ShippingArgs
    sof_holidays?: boolean | sof_holidaysFindManyArgs
    sof_remarks?: boolean | sof_remarksFindManyArgs
    sof_draft?: boolean | sof_draftFindManyArgs
    sof_bunker_figures?: boolean | sof_bunker_figuresFindManyArgs
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    sof_port_log_events?: boolean | ShippingSofPortLogEventsFindManyArgs
    sof_shipper_cargo?: boolean | sof_shipper_cargoFindManyArgs
    _count?: boolean | SofCountOutputTypeArgs
  }

  export type sofInclude = {
    shipping?: boolean | ShippingArgs
    sof_holidays?: boolean | sof_holidaysFindManyArgs
    sof_remarks?: boolean | sof_remarksFindManyArgs
    sof_draft?: boolean | sof_draftFindManyArgs
    sof_bunker_figures?: boolean | sof_bunker_figuresFindManyArgs
    sof_port_log_events?: boolean | ShippingSofPortLogEventsFindManyArgs
    sof_shipper_cargo?: boolean | sof_shipper_cargoFindManyArgs
    _count?: boolean | SofCountOutputTypeArgs
  }

  export type sofGetPayload<
    S extends boolean | null | undefined | sofArgs,
    U = keyof S
      > = S extends true
        ? sof
    : S extends undefined
    ? never
    : S extends sofArgs | sofFindManyArgs
    ?'include' extends U
    ? sof  & {
    [P in TrueKeys<S['include']>]:
        P extends 'shipping' ? ShippingGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'sof_holidays' ? Array < sof_holidaysGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'sof_remarks' ? Array < sof_remarksGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'sof_draft' ? Array < sof_draftGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'sof_bunker_figures' ? Array < sof_bunker_figuresGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'sof_port_log_events' ? Array < ShippingSofPortLogEventsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'sof_shipper_cargo' ? Array < sof_shipper_cargoGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? SofCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'shipping' ? ShippingGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'sof_holidays' ? Array < sof_holidaysGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'sof_remarks' ? Array < sof_remarksGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'sof_draft' ? Array < sof_draftGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'sof_bunker_figures' ? Array < sof_bunker_figuresGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'sof_port_log_events' ? Array < ShippingSofPortLogEventsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'sof_shipper_cargo' ? Array < sof_shipper_cargoGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? SofCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof sof ? sof[P] : never
  } 
    : sof
  : sof


  type sofCountArgs = Merge<
    Omit<sofFindManyArgs, 'select' | 'include'> & {
      select?: SofCountAggregateInputType | true
    }
  >

  export interface sofDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sof that matches the filter.
     * @param {sofFindUniqueArgs} args - Arguments to find a Sof
     * @example
     * // Get one Sof
     * const sof = await prisma.sof.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sofFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sofFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sof'> extends True ? CheckSelect<T, Prisma__sofClient<sof>, Prisma__sofClient<sofGetPayload<T>>> : CheckSelect<T, Prisma__sofClient<sof | null >, Prisma__sofClient<sofGetPayload<T> | null >>

    /**
     * Find the first Sof that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sofFindFirstArgs} args - Arguments to find a Sof
     * @example
     * // Get one Sof
     * const sof = await prisma.sof.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sofFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sofFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sof'> extends True ? CheckSelect<T, Prisma__sofClient<sof>, Prisma__sofClient<sofGetPayload<T>>> : CheckSelect<T, Prisma__sofClient<sof | null >, Prisma__sofClient<sofGetPayload<T> | null >>

    /**
     * Find zero or more Sofs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sofFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sofs
     * const sofs = await prisma.sof.findMany()
     * 
     * // Get first 10 Sofs
     * const sofs = await prisma.sof.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sofWithIdOnly = await prisma.sof.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sofFindManyArgs>(
      args?: SelectSubset<T, sofFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<sof>>, PrismaPromise<Array<sofGetPayload<T>>>>

    /**
     * Create a Sof.
     * @param {sofCreateArgs} args - Arguments to create a Sof.
     * @example
     * // Create one Sof
     * const Sof = await prisma.sof.create({
     *   data: {
     *     // ... data to create a Sof
     *   }
     * })
     * 
    **/
    create<T extends sofCreateArgs>(
      args: SelectSubset<T, sofCreateArgs>
    ): CheckSelect<T, Prisma__sofClient<sof>, Prisma__sofClient<sofGetPayload<T>>>

    /**
     * Create many Sofs.
     *     @param {sofCreateManyArgs} args - Arguments to create many Sofs.
     *     @example
     *     // Create many Sofs
     *     const sof = await prisma.sof.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sofCreateManyArgs>(
      args?: SelectSubset<T, sofCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sof.
     * @param {sofDeleteArgs} args - Arguments to delete one Sof.
     * @example
     * // Delete one Sof
     * const Sof = await prisma.sof.delete({
     *   where: {
     *     // ... filter to delete one Sof
     *   }
     * })
     * 
    **/
    delete<T extends sofDeleteArgs>(
      args: SelectSubset<T, sofDeleteArgs>
    ): CheckSelect<T, Prisma__sofClient<sof>, Prisma__sofClient<sofGetPayload<T>>>

    /**
     * Update one Sof.
     * @param {sofUpdateArgs} args - Arguments to update one Sof.
     * @example
     * // Update one Sof
     * const sof = await prisma.sof.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sofUpdateArgs>(
      args: SelectSubset<T, sofUpdateArgs>
    ): CheckSelect<T, Prisma__sofClient<sof>, Prisma__sofClient<sofGetPayload<T>>>

    /**
     * Delete zero or more Sofs.
     * @param {sofDeleteManyArgs} args - Arguments to filter Sofs to delete.
     * @example
     * // Delete a few Sofs
     * const { count } = await prisma.sof.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sofDeleteManyArgs>(
      args?: SelectSubset<T, sofDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sofs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sofUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sofs
     * const sof = await prisma.sof.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sofUpdateManyArgs>(
      args: SelectSubset<T, sofUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sof.
     * @param {sofUpsertArgs} args - Arguments to update or create a Sof.
     * @example
     * // Update or create a Sof
     * const sof = await prisma.sof.upsert({
     *   create: {
     *     // ... data to create a Sof
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sof we want to update
     *   }
     * })
    **/
    upsert<T extends sofUpsertArgs>(
      args: SelectSubset<T, sofUpsertArgs>
    ): CheckSelect<T, Prisma__sofClient<sof>, Prisma__sofClient<sofGetPayload<T>>>

    /**
     * Find one Sof that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sofFindUniqueOrThrowArgs} args - Arguments to find a Sof
     * @example
     * // Get one Sof
     * const sof = await prisma.sof.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sofFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sofFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__sofClient<sof>, Prisma__sofClient<sofGetPayload<T>>>

    /**
     * Find the first Sof that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sofFindFirstOrThrowArgs} args - Arguments to find a Sof
     * @example
     * // Get one Sof
     * const sof = await prisma.sof.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sofFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sofFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__sofClient<sof>, Prisma__sofClient<sofGetPayload<T>>>

    /**
     * Count the number of Sofs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sofCountArgs} args - Arguments to filter Sofs to count.
     * @example
     * // Count the number of Sofs
     * const count = await prisma.sof.count({
     *   where: {
     *     // ... the filter for the Sofs we want to count
     *   }
     * })
    **/
    count<T extends sofCountArgs>(
      args?: Subset<T, sofCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SofCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sof.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SofAggregateArgs>(args: Subset<T, SofAggregateArgs>): PrismaPromise<GetSofAggregateType<T>>

    /**
     * Group by Sof.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SofGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SofGroupByArgs['orderBy'] }
        : { orderBy?: SofGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SofGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSofGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sof.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sofClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    shipping<T extends ShippingArgs = {}>(args?: Subset<T, ShippingArgs>): CheckSelect<T, Prisma__ShippingClient<Shipping | null >, Prisma__ShippingClient<ShippingGetPayload<T> | null >>;

    sof_holidays<T extends sof_holidaysFindManyArgs = {}>(args?: Subset<T, sof_holidaysFindManyArgs>): CheckSelect<T, PrismaPromise<Array<sof_holidays>>, PrismaPromise<Array<sof_holidaysGetPayload<T>>>>;

    sof_remarks<T extends sof_remarksFindManyArgs = {}>(args?: Subset<T, sof_remarksFindManyArgs>): CheckSelect<T, PrismaPromise<Array<sof_remarks>>, PrismaPromise<Array<sof_remarksGetPayload<T>>>>;

    sof_draft<T extends sof_draftFindManyArgs = {}>(args?: Subset<T, sof_draftFindManyArgs>): CheckSelect<T, PrismaPromise<Array<sof_draft>>, PrismaPromise<Array<sof_draftGetPayload<T>>>>;

    sof_bunker_figures<T extends sof_bunker_figuresFindManyArgs = {}>(args?: Subset<T, sof_bunker_figuresFindManyArgs>): CheckSelect<T, PrismaPromise<Array<sof_bunker_figures>>, PrismaPromise<Array<sof_bunker_figuresGetPayload<T>>>>;

    sof_port_log_events<T extends ShippingSofPortLogEventsFindManyArgs = {}>(args?: Subset<T, ShippingSofPortLogEventsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingSofPortLogEvents>>, PrismaPromise<Array<ShippingSofPortLogEventsGetPayload<T>>>>;

    sof_shipper_cargo<T extends sof_shipper_cargoFindManyArgs = {}>(args?: Subset<T, sof_shipper_cargoFindManyArgs>): CheckSelect<T, PrismaPromise<Array<sof_shipper_cargo>>, PrismaPromise<Array<sof_shipper_cargoGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sof base type for findUnique actions
   */
  export type sofFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sof
     * 
    **/
    select?: sofSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sofInclude | null
    /**
     * Filter, which sof to fetch.
     * 
    **/
    where: sofWhereUniqueInput
  }

  /**
   * sof: findUnique
   */
  export interface sofFindUniqueArgs extends sofFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof base type for findFirst actions
   */
  export type sofFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sof
     * 
    **/
    select?: sofSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sofInclude | null
    /**
     * Filter, which sof to fetch.
     * 
    **/
    where?: sofWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sofs to fetch.
     * 
    **/
    orderBy?: Enumerable<sofOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sofs.
     * 
    **/
    cursor?: sofWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sofs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sofs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sofs.
     * 
    **/
    distinct?: Enumerable<SofScalarFieldEnum>
  }

  /**
   * sof: findFirst
   */
  export interface sofFindFirstArgs extends sofFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof findMany
   */
  export type sofFindManyArgs = {
    /**
     * Select specific fields to fetch from the sof
     * 
    **/
    select?: sofSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sofInclude | null
    /**
     * Filter, which sofs to fetch.
     * 
    **/
    where?: sofWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sofs to fetch.
     * 
    **/
    orderBy?: Enumerable<sofOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sofs.
     * 
    **/
    cursor?: sofWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sofs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sofs.
     * 
    **/
    skip?: number
    distinct?: Enumerable<SofScalarFieldEnum>
  }


  /**
   * sof create
   */
  export type sofCreateArgs = {
    /**
     * Select specific fields to fetch from the sof
     * 
    **/
    select?: sofSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sofInclude | null
    /**
     * The data needed to create a sof.
     * 
    **/
    data: XOR<sofCreateInput, sofUncheckedCreateInput>
  }


  /**
   * sof createMany
   */
  export type sofCreateManyArgs = {
    /**
     * The data used to create many sofs.
     * 
    **/
    data: Enumerable<sofCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sof update
   */
  export type sofUpdateArgs = {
    /**
     * Select specific fields to fetch from the sof
     * 
    **/
    select?: sofSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sofInclude | null
    /**
     * The data needed to update a sof.
     * 
    **/
    data: XOR<sofUpdateInput, sofUncheckedUpdateInput>
    /**
     * Choose, which sof to update.
     * 
    **/
    where: sofWhereUniqueInput
  }


  /**
   * sof updateMany
   */
  export type sofUpdateManyArgs = {
    /**
     * The data used to update sofs.
     * 
    **/
    data: XOR<sofUpdateManyMutationInput, sofUncheckedUpdateManyInput>
    /**
     * Filter which sofs to update
     * 
    **/
    where?: sofWhereInput
  }


  /**
   * sof upsert
   */
  export type sofUpsertArgs = {
    /**
     * Select specific fields to fetch from the sof
     * 
    **/
    select?: sofSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sofInclude | null
    /**
     * The filter to search for the sof to update in case it exists.
     * 
    **/
    where: sofWhereUniqueInput
    /**
     * In case the sof found by the `where` argument doesn't exist, create a new sof with this data.
     * 
    **/
    create: XOR<sofCreateInput, sofUncheckedCreateInput>
    /**
     * In case the sof was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sofUpdateInput, sofUncheckedUpdateInput>
  }


  /**
   * sof delete
   */
  export type sofDeleteArgs = {
    /**
     * Select specific fields to fetch from the sof
     * 
    **/
    select?: sofSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sofInclude | null
    /**
     * Filter which sof to delete.
     * 
    **/
    where: sofWhereUniqueInput
  }


  /**
   * sof deleteMany
   */
  export type sofDeleteManyArgs = {
    /**
     * Filter which sofs to delete
     * 
    **/
    where?: sofWhereInput
  }


  /**
   * sof: findUniqueOrThrow
   */
  export type sofFindUniqueOrThrowArgs = sofFindUniqueArgsBase
      

  /**
   * sof: findFirstOrThrow
   */
  export type sofFindFirstOrThrowArgs = sofFindFirstArgsBase
      

  /**
   * sof without action
   */
  export type sofArgs = {
    /**
     * Select specific fields to fetch from the sof
     * 
    **/
    select?: sofSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sofInclude | null
  }



  /**
   * Model sof_holidays
   */


  export type AggregateSof_holidays = {
    _count: Sof_holidaysCountAggregateOutputType | null
    _avg: Sof_holidaysAvgAggregateOutputType | null
    _sum: Sof_holidaysSumAggregateOutputType | null
    _min: Sof_holidaysMinAggregateOutputType | null
    _max: Sof_holidaysMaxAggregateOutputType | null
  }

  export type Sof_holidaysAvgAggregateOutputType = {
    id: number | null
    sof_id: number | null
  }

  export type Sof_holidaysSumAggregateOutputType = {
    id: number | null
    sof_id: number | null
  }

  export type Sof_holidaysMinAggregateOutputType = {
    id: number | null
    name: string | null
    date: Date | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_holidaysMaxAggregateOutputType = {
    id: number | null
    name: string | null
    date: Date | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_holidaysCountAggregateOutputType = {
    id: number
    name: number
    date: number
    sof_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sof_holidaysAvgAggregateInputType = {
    id?: true
    sof_id?: true
  }

  export type Sof_holidaysSumAggregateInputType = {
    id?: true
    sof_id?: true
  }

  export type Sof_holidaysMinAggregateInputType = {
    id?: true
    name?: true
    date?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_holidaysMaxAggregateInputType = {
    id?: true
    name?: true
    date?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_holidaysCountAggregateInputType = {
    id?: true
    name?: true
    date?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sof_holidaysAggregateArgs = {
    /**
     * Filter which sof_holidays to aggregate.
     * 
    **/
    where?: sof_holidaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_holidays to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_holidaysOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sof_holidaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_holidays from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_holidays.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sof_holidays
    **/
    _count?: true | Sof_holidaysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sof_holidaysAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sof_holidaysSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sof_holidaysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sof_holidaysMaxAggregateInputType
  }

  export type GetSof_holidaysAggregateType<T extends Sof_holidaysAggregateArgs> = {
        [P in keyof T & keyof AggregateSof_holidays]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSof_holidays[P]>
      : GetScalarType<T[P], AggregateSof_holidays[P]>
  }




  export type Sof_holidaysGroupByArgs = {
    where?: sof_holidaysWhereInput
    orderBy?: Enumerable<sof_holidaysOrderByWithAggregationInput>
    by: Array<Sof_holidaysScalarFieldEnum>
    having?: sof_holidaysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sof_holidaysCountAggregateInputType | true
    _avg?: Sof_holidaysAvgAggregateInputType
    _sum?: Sof_holidaysSumAggregateInputType
    _min?: Sof_holidaysMinAggregateInputType
    _max?: Sof_holidaysMaxAggregateInputType
  }


  export type Sof_holidaysGroupByOutputType = {
    id: number
    name: string | null
    date: Date | null
    sof_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: Sof_holidaysCountAggregateOutputType | null
    _avg: Sof_holidaysAvgAggregateOutputType | null
    _sum: Sof_holidaysSumAggregateOutputType | null
    _min: Sof_holidaysMinAggregateOutputType | null
    _max: Sof_holidaysMaxAggregateOutputType | null
  }

  type GetSof_holidaysGroupByPayload<T extends Sof_holidaysGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Sof_holidaysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sof_holidaysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sof_holidaysGroupByOutputType[P]>
            : GetScalarType<T[P], Sof_holidaysGroupByOutputType[P]>
        }
      >
    >


  export type sof_holidaysSelect = {
    id?: boolean
    name?: boolean
    date?: boolean
    sof_id?: boolean
    sof?: boolean | sofArgs
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }

  export type sof_holidaysInclude = {
    sof?: boolean | sofArgs
  }

  export type sof_holidaysGetPayload<
    S extends boolean | null | undefined | sof_holidaysArgs,
    U = keyof S
      > = S extends true
        ? sof_holidays
    : S extends undefined
    ? never
    : S extends sof_holidaysArgs | sof_holidaysFindManyArgs
    ?'include' extends U
    ? sof_holidays  & {
    [P in TrueKeys<S['include']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof sof_holidays ? sof_holidays[P] : never
  } 
    : sof_holidays
  : sof_holidays


  type sof_holidaysCountArgs = Merge<
    Omit<sof_holidaysFindManyArgs, 'select' | 'include'> & {
      select?: Sof_holidaysCountAggregateInputType | true
    }
  >

  export interface sof_holidaysDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sof_holidays that matches the filter.
     * @param {sof_holidaysFindUniqueArgs} args - Arguments to find a Sof_holidays
     * @example
     * // Get one Sof_holidays
     * const sof_holidays = await prisma.sof_holidays.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sof_holidaysFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sof_holidaysFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sof_holidays'> extends True ? CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays>, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T>>> : CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays | null >, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T> | null >>

    /**
     * Find the first Sof_holidays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_holidaysFindFirstArgs} args - Arguments to find a Sof_holidays
     * @example
     * // Get one Sof_holidays
     * const sof_holidays = await prisma.sof_holidays.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sof_holidaysFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sof_holidaysFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sof_holidays'> extends True ? CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays>, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T>>> : CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays | null >, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T> | null >>

    /**
     * Find zero or more Sof_holidays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_holidaysFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sof_holidays
     * const sof_holidays = await prisma.sof_holidays.findMany()
     * 
     * // Get first 10 Sof_holidays
     * const sof_holidays = await prisma.sof_holidays.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sof_holidaysWithIdOnly = await prisma.sof_holidays.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sof_holidaysFindManyArgs>(
      args?: SelectSubset<T, sof_holidaysFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<sof_holidays>>, PrismaPromise<Array<sof_holidaysGetPayload<T>>>>

    /**
     * Create a Sof_holidays.
     * @param {sof_holidaysCreateArgs} args - Arguments to create a Sof_holidays.
     * @example
     * // Create one Sof_holidays
     * const Sof_holidays = await prisma.sof_holidays.create({
     *   data: {
     *     // ... data to create a Sof_holidays
     *   }
     * })
     * 
    **/
    create<T extends sof_holidaysCreateArgs>(
      args: SelectSubset<T, sof_holidaysCreateArgs>
    ): CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays>, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T>>>

    /**
     * Create many Sof_holidays.
     *     @param {sof_holidaysCreateManyArgs} args - Arguments to create many Sof_holidays.
     *     @example
     *     // Create many Sof_holidays
     *     const sof_holidays = await prisma.sof_holidays.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sof_holidaysCreateManyArgs>(
      args?: SelectSubset<T, sof_holidaysCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sof_holidays.
     * @param {sof_holidaysDeleteArgs} args - Arguments to delete one Sof_holidays.
     * @example
     * // Delete one Sof_holidays
     * const Sof_holidays = await prisma.sof_holidays.delete({
     *   where: {
     *     // ... filter to delete one Sof_holidays
     *   }
     * })
     * 
    **/
    delete<T extends sof_holidaysDeleteArgs>(
      args: SelectSubset<T, sof_holidaysDeleteArgs>
    ): CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays>, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T>>>

    /**
     * Update one Sof_holidays.
     * @param {sof_holidaysUpdateArgs} args - Arguments to update one Sof_holidays.
     * @example
     * // Update one Sof_holidays
     * const sof_holidays = await prisma.sof_holidays.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sof_holidaysUpdateArgs>(
      args: SelectSubset<T, sof_holidaysUpdateArgs>
    ): CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays>, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T>>>

    /**
     * Delete zero or more Sof_holidays.
     * @param {sof_holidaysDeleteManyArgs} args - Arguments to filter Sof_holidays to delete.
     * @example
     * // Delete a few Sof_holidays
     * const { count } = await prisma.sof_holidays.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sof_holidaysDeleteManyArgs>(
      args?: SelectSubset<T, sof_holidaysDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sof_holidays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_holidaysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sof_holidays
     * const sof_holidays = await prisma.sof_holidays.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sof_holidaysUpdateManyArgs>(
      args: SelectSubset<T, sof_holidaysUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sof_holidays.
     * @param {sof_holidaysUpsertArgs} args - Arguments to update or create a Sof_holidays.
     * @example
     * // Update or create a Sof_holidays
     * const sof_holidays = await prisma.sof_holidays.upsert({
     *   create: {
     *     // ... data to create a Sof_holidays
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sof_holidays we want to update
     *   }
     * })
    **/
    upsert<T extends sof_holidaysUpsertArgs>(
      args: SelectSubset<T, sof_holidaysUpsertArgs>
    ): CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays>, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T>>>

    /**
     * Find one Sof_holidays that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sof_holidaysFindUniqueOrThrowArgs} args - Arguments to find a Sof_holidays
     * @example
     * // Get one Sof_holidays
     * const sof_holidays = await prisma.sof_holidays.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sof_holidaysFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sof_holidaysFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays>, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T>>>

    /**
     * Find the first Sof_holidays that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_holidaysFindFirstOrThrowArgs} args - Arguments to find a Sof_holidays
     * @example
     * // Get one Sof_holidays
     * const sof_holidays = await prisma.sof_holidays.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sof_holidaysFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sof_holidaysFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_holidaysClient<sof_holidays>, Prisma__sof_holidaysClient<sof_holidaysGetPayload<T>>>

    /**
     * Count the number of Sof_holidays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_holidaysCountArgs} args - Arguments to filter Sof_holidays to count.
     * @example
     * // Count the number of Sof_holidays
     * const count = await prisma.sof_holidays.count({
     *   where: {
     *     // ... the filter for the Sof_holidays we want to count
     *   }
     * })
    **/
    count<T extends sof_holidaysCountArgs>(
      args?: Subset<T, sof_holidaysCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sof_holidaysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sof_holidays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_holidaysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sof_holidaysAggregateArgs>(args: Subset<T, Sof_holidaysAggregateArgs>): PrismaPromise<GetSof_holidaysAggregateType<T>>

    /**
     * Group by Sof_holidays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_holidaysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Sof_holidaysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Sof_holidaysGroupByArgs['orderBy'] }
        : { orderBy?: Sof_holidaysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Sof_holidaysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSof_holidaysGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sof_holidays.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sof_holidaysClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    sof<T extends sofArgs = {}>(args?: Subset<T, sofArgs>): CheckSelect<T, Prisma__sofClient<sof | null >, Prisma__sofClient<sofGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sof_holidays base type for findUnique actions
   */
  export type sof_holidaysFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sof_holidays
     * 
    **/
    select?: sof_holidaysSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_holidaysInclude | null
    /**
     * Filter, which sof_holidays to fetch.
     * 
    **/
    where: sof_holidaysWhereUniqueInput
  }

  /**
   * sof_holidays: findUnique
   */
  export interface sof_holidaysFindUniqueArgs extends sof_holidaysFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_holidays base type for findFirst actions
   */
  export type sof_holidaysFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sof_holidays
     * 
    **/
    select?: sof_holidaysSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_holidaysInclude | null
    /**
     * Filter, which sof_holidays to fetch.
     * 
    **/
    where?: sof_holidaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_holidays to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_holidaysOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sof_holidays.
     * 
    **/
    cursor?: sof_holidaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_holidays from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_holidays.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sof_holidays.
     * 
    **/
    distinct?: Enumerable<Sof_holidaysScalarFieldEnum>
  }

  /**
   * sof_holidays: findFirst
   */
  export interface sof_holidaysFindFirstArgs extends sof_holidaysFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_holidays findMany
   */
  export type sof_holidaysFindManyArgs = {
    /**
     * Select specific fields to fetch from the sof_holidays
     * 
    **/
    select?: sof_holidaysSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_holidaysInclude | null
    /**
     * Filter, which sof_holidays to fetch.
     * 
    **/
    where?: sof_holidaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_holidays to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_holidaysOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sof_holidays.
     * 
    **/
    cursor?: sof_holidaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_holidays from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_holidays.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Sof_holidaysScalarFieldEnum>
  }


  /**
   * sof_holidays create
   */
  export type sof_holidaysCreateArgs = {
    /**
     * Select specific fields to fetch from the sof_holidays
     * 
    **/
    select?: sof_holidaysSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_holidaysInclude | null
    /**
     * The data needed to create a sof_holidays.
     * 
    **/
    data: XOR<sof_holidaysCreateInput, sof_holidaysUncheckedCreateInput>
  }


  /**
   * sof_holidays createMany
   */
  export type sof_holidaysCreateManyArgs = {
    /**
     * The data used to create many sof_holidays.
     * 
    **/
    data: Enumerable<sof_holidaysCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sof_holidays update
   */
  export type sof_holidaysUpdateArgs = {
    /**
     * Select specific fields to fetch from the sof_holidays
     * 
    **/
    select?: sof_holidaysSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_holidaysInclude | null
    /**
     * The data needed to update a sof_holidays.
     * 
    **/
    data: XOR<sof_holidaysUpdateInput, sof_holidaysUncheckedUpdateInput>
    /**
     * Choose, which sof_holidays to update.
     * 
    **/
    where: sof_holidaysWhereUniqueInput
  }


  /**
   * sof_holidays updateMany
   */
  export type sof_holidaysUpdateManyArgs = {
    /**
     * The data used to update sof_holidays.
     * 
    **/
    data: XOR<sof_holidaysUpdateManyMutationInput, sof_holidaysUncheckedUpdateManyInput>
    /**
     * Filter which sof_holidays to update
     * 
    **/
    where?: sof_holidaysWhereInput
  }


  /**
   * sof_holidays upsert
   */
  export type sof_holidaysUpsertArgs = {
    /**
     * Select specific fields to fetch from the sof_holidays
     * 
    **/
    select?: sof_holidaysSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_holidaysInclude | null
    /**
     * The filter to search for the sof_holidays to update in case it exists.
     * 
    **/
    where: sof_holidaysWhereUniqueInput
    /**
     * In case the sof_holidays found by the `where` argument doesn't exist, create a new sof_holidays with this data.
     * 
    **/
    create: XOR<sof_holidaysCreateInput, sof_holidaysUncheckedCreateInput>
    /**
     * In case the sof_holidays was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sof_holidaysUpdateInput, sof_holidaysUncheckedUpdateInput>
  }


  /**
   * sof_holidays delete
   */
  export type sof_holidaysDeleteArgs = {
    /**
     * Select specific fields to fetch from the sof_holidays
     * 
    **/
    select?: sof_holidaysSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_holidaysInclude | null
    /**
     * Filter which sof_holidays to delete.
     * 
    **/
    where: sof_holidaysWhereUniqueInput
  }


  /**
   * sof_holidays deleteMany
   */
  export type sof_holidaysDeleteManyArgs = {
    /**
     * Filter which sof_holidays to delete
     * 
    **/
    where?: sof_holidaysWhereInput
  }


  /**
   * sof_holidays: findUniqueOrThrow
   */
  export type sof_holidaysFindUniqueOrThrowArgs = sof_holidaysFindUniqueArgsBase
      

  /**
   * sof_holidays: findFirstOrThrow
   */
  export type sof_holidaysFindFirstOrThrowArgs = sof_holidaysFindFirstArgsBase
      

  /**
   * sof_holidays without action
   */
  export type sof_holidaysArgs = {
    /**
     * Select specific fields to fetch from the sof_holidays
     * 
    **/
    select?: sof_holidaysSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_holidaysInclude | null
  }



  /**
   * Model sof_remarks
   */


  export type AggregateSof_remarks = {
    _count: Sof_remarksCountAggregateOutputType | null
    _avg: Sof_remarksAvgAggregateOutputType | null
    _sum: Sof_remarksSumAggregateOutputType | null
    _min: Sof_remarksMinAggregateOutputType | null
    _max: Sof_remarksMaxAggregateOutputType | null
  }

  export type Sof_remarksAvgAggregateOutputType = {
    id: number | null
    sof_id: number | null
  }

  export type Sof_remarksSumAggregateOutputType = {
    id: number | null
    sof_id: number | null
  }

  export type Sof_remarksMinAggregateOutputType = {
    id: number | null
    title: string | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_remarksMaxAggregateOutputType = {
    id: number | null
    title: string | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_remarksCountAggregateOutputType = {
    id: number
    title: number
    sof_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sof_remarksAvgAggregateInputType = {
    id?: true
    sof_id?: true
  }

  export type Sof_remarksSumAggregateInputType = {
    id?: true
    sof_id?: true
  }

  export type Sof_remarksMinAggregateInputType = {
    id?: true
    title?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_remarksMaxAggregateInputType = {
    id?: true
    title?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_remarksCountAggregateInputType = {
    id?: true
    title?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sof_remarksAggregateArgs = {
    /**
     * Filter which sof_remarks to aggregate.
     * 
    **/
    where?: sof_remarksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_remarks to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_remarksOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sof_remarksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_remarks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_remarks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sof_remarks
    **/
    _count?: true | Sof_remarksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sof_remarksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sof_remarksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sof_remarksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sof_remarksMaxAggregateInputType
  }

  export type GetSof_remarksAggregateType<T extends Sof_remarksAggregateArgs> = {
        [P in keyof T & keyof AggregateSof_remarks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSof_remarks[P]>
      : GetScalarType<T[P], AggregateSof_remarks[P]>
  }




  export type Sof_remarksGroupByArgs = {
    where?: sof_remarksWhereInput
    orderBy?: Enumerable<sof_remarksOrderByWithAggregationInput>
    by: Array<Sof_remarksScalarFieldEnum>
    having?: sof_remarksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sof_remarksCountAggregateInputType | true
    _avg?: Sof_remarksAvgAggregateInputType
    _sum?: Sof_remarksSumAggregateInputType
    _min?: Sof_remarksMinAggregateInputType
    _max?: Sof_remarksMaxAggregateInputType
  }


  export type Sof_remarksGroupByOutputType = {
    id: number
    title: string | null
    sof_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: Sof_remarksCountAggregateOutputType | null
    _avg: Sof_remarksAvgAggregateOutputType | null
    _sum: Sof_remarksSumAggregateOutputType | null
    _min: Sof_remarksMinAggregateOutputType | null
    _max: Sof_remarksMaxAggregateOutputType | null
  }

  type GetSof_remarksGroupByPayload<T extends Sof_remarksGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Sof_remarksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sof_remarksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sof_remarksGroupByOutputType[P]>
            : GetScalarType<T[P], Sof_remarksGroupByOutputType[P]>
        }
      >
    >


  export type sof_remarksSelect = {
    id?: boolean
    title?: boolean
    sof_id?: boolean
    sof?: boolean | sofArgs
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    sof_remarks_itens?: boolean | sof_remarks_itemsFindManyArgs
    _count?: boolean | Sof_remarksCountOutputTypeArgs
  }

  export type sof_remarksInclude = {
    sof?: boolean | sofArgs
    sof_remarks_itens?: boolean | sof_remarks_itemsFindManyArgs
    _count?: boolean | Sof_remarksCountOutputTypeArgs
  }

  export type sof_remarksGetPayload<
    S extends boolean | null | undefined | sof_remarksArgs,
    U = keyof S
      > = S extends true
        ? sof_remarks
    : S extends undefined
    ? never
    : S extends sof_remarksArgs | sof_remarksFindManyArgs
    ?'include' extends U
    ? sof_remarks  & {
    [P in TrueKeys<S['include']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'sof_remarks_itens' ? Array < sof_remarks_itemsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? Sof_remarksCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'sof_remarks_itens' ? Array < sof_remarks_itemsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? Sof_remarksCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof sof_remarks ? sof_remarks[P] : never
  } 
    : sof_remarks
  : sof_remarks


  type sof_remarksCountArgs = Merge<
    Omit<sof_remarksFindManyArgs, 'select' | 'include'> & {
      select?: Sof_remarksCountAggregateInputType | true
    }
  >

  export interface sof_remarksDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sof_remarks that matches the filter.
     * @param {sof_remarksFindUniqueArgs} args - Arguments to find a Sof_remarks
     * @example
     * // Get one Sof_remarks
     * const sof_remarks = await prisma.sof_remarks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sof_remarksFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sof_remarksFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sof_remarks'> extends True ? CheckSelect<T, Prisma__sof_remarksClient<sof_remarks>, Prisma__sof_remarksClient<sof_remarksGetPayload<T>>> : CheckSelect<T, Prisma__sof_remarksClient<sof_remarks | null >, Prisma__sof_remarksClient<sof_remarksGetPayload<T> | null >>

    /**
     * Find the first Sof_remarks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarksFindFirstArgs} args - Arguments to find a Sof_remarks
     * @example
     * // Get one Sof_remarks
     * const sof_remarks = await prisma.sof_remarks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sof_remarksFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sof_remarksFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sof_remarks'> extends True ? CheckSelect<T, Prisma__sof_remarksClient<sof_remarks>, Prisma__sof_remarksClient<sof_remarksGetPayload<T>>> : CheckSelect<T, Prisma__sof_remarksClient<sof_remarks | null >, Prisma__sof_remarksClient<sof_remarksGetPayload<T> | null >>

    /**
     * Find zero or more Sof_remarks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarksFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sof_remarks
     * const sof_remarks = await prisma.sof_remarks.findMany()
     * 
     * // Get first 10 Sof_remarks
     * const sof_remarks = await prisma.sof_remarks.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sof_remarksWithIdOnly = await prisma.sof_remarks.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sof_remarksFindManyArgs>(
      args?: SelectSubset<T, sof_remarksFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<sof_remarks>>, PrismaPromise<Array<sof_remarksGetPayload<T>>>>

    /**
     * Create a Sof_remarks.
     * @param {sof_remarksCreateArgs} args - Arguments to create a Sof_remarks.
     * @example
     * // Create one Sof_remarks
     * const Sof_remarks = await prisma.sof_remarks.create({
     *   data: {
     *     // ... data to create a Sof_remarks
     *   }
     * })
     * 
    **/
    create<T extends sof_remarksCreateArgs>(
      args: SelectSubset<T, sof_remarksCreateArgs>
    ): CheckSelect<T, Prisma__sof_remarksClient<sof_remarks>, Prisma__sof_remarksClient<sof_remarksGetPayload<T>>>

    /**
     * Create many Sof_remarks.
     *     @param {sof_remarksCreateManyArgs} args - Arguments to create many Sof_remarks.
     *     @example
     *     // Create many Sof_remarks
     *     const sof_remarks = await prisma.sof_remarks.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sof_remarksCreateManyArgs>(
      args?: SelectSubset<T, sof_remarksCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sof_remarks.
     * @param {sof_remarksDeleteArgs} args - Arguments to delete one Sof_remarks.
     * @example
     * // Delete one Sof_remarks
     * const Sof_remarks = await prisma.sof_remarks.delete({
     *   where: {
     *     // ... filter to delete one Sof_remarks
     *   }
     * })
     * 
    **/
    delete<T extends sof_remarksDeleteArgs>(
      args: SelectSubset<T, sof_remarksDeleteArgs>
    ): CheckSelect<T, Prisma__sof_remarksClient<sof_remarks>, Prisma__sof_remarksClient<sof_remarksGetPayload<T>>>

    /**
     * Update one Sof_remarks.
     * @param {sof_remarksUpdateArgs} args - Arguments to update one Sof_remarks.
     * @example
     * // Update one Sof_remarks
     * const sof_remarks = await prisma.sof_remarks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sof_remarksUpdateArgs>(
      args: SelectSubset<T, sof_remarksUpdateArgs>
    ): CheckSelect<T, Prisma__sof_remarksClient<sof_remarks>, Prisma__sof_remarksClient<sof_remarksGetPayload<T>>>

    /**
     * Delete zero or more Sof_remarks.
     * @param {sof_remarksDeleteManyArgs} args - Arguments to filter Sof_remarks to delete.
     * @example
     * // Delete a few Sof_remarks
     * const { count } = await prisma.sof_remarks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sof_remarksDeleteManyArgs>(
      args?: SelectSubset<T, sof_remarksDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sof_remarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sof_remarks
     * const sof_remarks = await prisma.sof_remarks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sof_remarksUpdateManyArgs>(
      args: SelectSubset<T, sof_remarksUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sof_remarks.
     * @param {sof_remarksUpsertArgs} args - Arguments to update or create a Sof_remarks.
     * @example
     * // Update or create a Sof_remarks
     * const sof_remarks = await prisma.sof_remarks.upsert({
     *   create: {
     *     // ... data to create a Sof_remarks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sof_remarks we want to update
     *   }
     * })
    **/
    upsert<T extends sof_remarksUpsertArgs>(
      args: SelectSubset<T, sof_remarksUpsertArgs>
    ): CheckSelect<T, Prisma__sof_remarksClient<sof_remarks>, Prisma__sof_remarksClient<sof_remarksGetPayload<T>>>

    /**
     * Find one Sof_remarks that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sof_remarksFindUniqueOrThrowArgs} args - Arguments to find a Sof_remarks
     * @example
     * // Get one Sof_remarks
     * const sof_remarks = await prisma.sof_remarks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sof_remarksFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sof_remarksFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_remarksClient<sof_remarks>, Prisma__sof_remarksClient<sof_remarksGetPayload<T>>>

    /**
     * Find the first Sof_remarks that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarksFindFirstOrThrowArgs} args - Arguments to find a Sof_remarks
     * @example
     * // Get one Sof_remarks
     * const sof_remarks = await prisma.sof_remarks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sof_remarksFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sof_remarksFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_remarksClient<sof_remarks>, Prisma__sof_remarksClient<sof_remarksGetPayload<T>>>

    /**
     * Count the number of Sof_remarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarksCountArgs} args - Arguments to filter Sof_remarks to count.
     * @example
     * // Count the number of Sof_remarks
     * const count = await prisma.sof_remarks.count({
     *   where: {
     *     // ... the filter for the Sof_remarks we want to count
     *   }
     * })
    **/
    count<T extends sof_remarksCountArgs>(
      args?: Subset<T, sof_remarksCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sof_remarksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sof_remarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_remarksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sof_remarksAggregateArgs>(args: Subset<T, Sof_remarksAggregateArgs>): PrismaPromise<GetSof_remarksAggregateType<T>>

    /**
     * Group by Sof_remarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_remarksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Sof_remarksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Sof_remarksGroupByArgs['orderBy'] }
        : { orderBy?: Sof_remarksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Sof_remarksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSof_remarksGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sof_remarks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sof_remarksClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    sof<T extends sofArgs = {}>(args?: Subset<T, sofArgs>): CheckSelect<T, Prisma__sofClient<sof | null >, Prisma__sofClient<sofGetPayload<T> | null >>;

    sof_remarks_itens<T extends sof_remarks_itemsFindManyArgs = {}>(args?: Subset<T, sof_remarks_itemsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<sof_remarks_items>>, PrismaPromise<Array<sof_remarks_itemsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sof_remarks base type for findUnique actions
   */
  export type sof_remarksFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sof_remarks
     * 
    **/
    select?: sof_remarksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarksInclude | null
    /**
     * Filter, which sof_remarks to fetch.
     * 
    **/
    where: sof_remarksWhereUniqueInput
  }

  /**
   * sof_remarks: findUnique
   */
  export interface sof_remarksFindUniqueArgs extends sof_remarksFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_remarks base type for findFirst actions
   */
  export type sof_remarksFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sof_remarks
     * 
    **/
    select?: sof_remarksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarksInclude | null
    /**
     * Filter, which sof_remarks to fetch.
     * 
    **/
    where?: sof_remarksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_remarks to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_remarksOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sof_remarks.
     * 
    **/
    cursor?: sof_remarksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_remarks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_remarks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sof_remarks.
     * 
    **/
    distinct?: Enumerable<Sof_remarksScalarFieldEnum>
  }

  /**
   * sof_remarks: findFirst
   */
  export interface sof_remarksFindFirstArgs extends sof_remarksFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_remarks findMany
   */
  export type sof_remarksFindManyArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks
     * 
    **/
    select?: sof_remarksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarksInclude | null
    /**
     * Filter, which sof_remarks to fetch.
     * 
    **/
    where?: sof_remarksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_remarks to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_remarksOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sof_remarks.
     * 
    **/
    cursor?: sof_remarksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_remarks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_remarks.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Sof_remarksScalarFieldEnum>
  }


  /**
   * sof_remarks create
   */
  export type sof_remarksCreateArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks
     * 
    **/
    select?: sof_remarksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarksInclude | null
    /**
     * The data needed to create a sof_remarks.
     * 
    **/
    data: XOR<sof_remarksCreateInput, sof_remarksUncheckedCreateInput>
  }


  /**
   * sof_remarks createMany
   */
  export type sof_remarksCreateManyArgs = {
    /**
     * The data used to create many sof_remarks.
     * 
    **/
    data: Enumerable<sof_remarksCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sof_remarks update
   */
  export type sof_remarksUpdateArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks
     * 
    **/
    select?: sof_remarksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarksInclude | null
    /**
     * The data needed to update a sof_remarks.
     * 
    **/
    data: XOR<sof_remarksUpdateInput, sof_remarksUncheckedUpdateInput>
    /**
     * Choose, which sof_remarks to update.
     * 
    **/
    where: sof_remarksWhereUniqueInput
  }


  /**
   * sof_remarks updateMany
   */
  export type sof_remarksUpdateManyArgs = {
    /**
     * The data used to update sof_remarks.
     * 
    **/
    data: XOR<sof_remarksUpdateManyMutationInput, sof_remarksUncheckedUpdateManyInput>
    /**
     * Filter which sof_remarks to update
     * 
    **/
    where?: sof_remarksWhereInput
  }


  /**
   * sof_remarks upsert
   */
  export type sof_remarksUpsertArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks
     * 
    **/
    select?: sof_remarksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarksInclude | null
    /**
     * The filter to search for the sof_remarks to update in case it exists.
     * 
    **/
    where: sof_remarksWhereUniqueInput
    /**
     * In case the sof_remarks found by the `where` argument doesn't exist, create a new sof_remarks with this data.
     * 
    **/
    create: XOR<sof_remarksCreateInput, sof_remarksUncheckedCreateInput>
    /**
     * In case the sof_remarks was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sof_remarksUpdateInput, sof_remarksUncheckedUpdateInput>
  }


  /**
   * sof_remarks delete
   */
  export type sof_remarksDeleteArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks
     * 
    **/
    select?: sof_remarksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarksInclude | null
    /**
     * Filter which sof_remarks to delete.
     * 
    **/
    where: sof_remarksWhereUniqueInput
  }


  /**
   * sof_remarks deleteMany
   */
  export type sof_remarksDeleteManyArgs = {
    /**
     * Filter which sof_remarks to delete
     * 
    **/
    where?: sof_remarksWhereInput
  }


  /**
   * sof_remarks: findUniqueOrThrow
   */
  export type sof_remarksFindUniqueOrThrowArgs = sof_remarksFindUniqueArgsBase
      

  /**
   * sof_remarks: findFirstOrThrow
   */
  export type sof_remarksFindFirstOrThrowArgs = sof_remarksFindFirstArgsBase
      

  /**
   * sof_remarks without action
   */
  export type sof_remarksArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks
     * 
    **/
    select?: sof_remarksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarksInclude | null
  }



  /**
   * Model sof_remarks_items
   */


  export type AggregateSof_remarks_items = {
    _count: Sof_remarks_itemsCountAggregateOutputType | null
    _avg: Sof_remarks_itemsAvgAggregateOutputType | null
    _sum: Sof_remarks_itemsSumAggregateOutputType | null
    _min: Sof_remarks_itemsMinAggregateOutputType | null
    _max: Sof_remarks_itemsMaxAggregateOutputType | null
  }

  export type Sof_remarks_itemsAvgAggregateOutputType = {
    id: number | null
    sof_remark_id: number | null
  }

  export type Sof_remarks_itemsSumAggregateOutputType = {
    id: number | null
    sof_remark_id: number | null
  }

  export type Sof_remarks_itemsMinAggregateOutputType = {
    id: number | null
    title: string | null
    value: string | null
    is_single: boolean | null
    sof_remark_id: number | null
    deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_remarks_itemsMaxAggregateOutputType = {
    id: number | null
    title: string | null
    value: string | null
    is_single: boolean | null
    sof_remark_id: number | null
    deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_remarks_itemsCountAggregateOutputType = {
    id: number
    title: number
    value: number
    is_single: number
    sof_remark_id: number
    deleted: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sof_remarks_itemsAvgAggregateInputType = {
    id?: true
    sof_remark_id?: true
  }

  export type Sof_remarks_itemsSumAggregateInputType = {
    id?: true
    sof_remark_id?: true
  }

  export type Sof_remarks_itemsMinAggregateInputType = {
    id?: true
    title?: true
    value?: true
    is_single?: true
    sof_remark_id?: true
    deleted?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_remarks_itemsMaxAggregateInputType = {
    id?: true
    title?: true
    value?: true
    is_single?: true
    sof_remark_id?: true
    deleted?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_remarks_itemsCountAggregateInputType = {
    id?: true
    title?: true
    value?: true
    is_single?: true
    sof_remark_id?: true
    deleted?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sof_remarks_itemsAggregateArgs = {
    /**
     * Filter which sof_remarks_items to aggregate.
     * 
    **/
    where?: sof_remarks_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_remarks_items to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_remarks_itemsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sof_remarks_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_remarks_items from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_remarks_items.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sof_remarks_items
    **/
    _count?: true | Sof_remarks_itemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sof_remarks_itemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sof_remarks_itemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sof_remarks_itemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sof_remarks_itemsMaxAggregateInputType
  }

  export type GetSof_remarks_itemsAggregateType<T extends Sof_remarks_itemsAggregateArgs> = {
        [P in keyof T & keyof AggregateSof_remarks_items]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSof_remarks_items[P]>
      : GetScalarType<T[P], AggregateSof_remarks_items[P]>
  }




  export type Sof_remarks_itemsGroupByArgs = {
    where?: sof_remarks_itemsWhereInput
    orderBy?: Enumerable<sof_remarks_itemsOrderByWithAggregationInput>
    by: Array<Sof_remarks_itemsScalarFieldEnum>
    having?: sof_remarks_itemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sof_remarks_itemsCountAggregateInputType | true
    _avg?: Sof_remarks_itemsAvgAggregateInputType
    _sum?: Sof_remarks_itemsSumAggregateInputType
    _min?: Sof_remarks_itemsMinAggregateInputType
    _max?: Sof_remarks_itemsMaxAggregateInputType
  }


  export type Sof_remarks_itemsGroupByOutputType = {
    id: number
    title: string | null
    value: string | null
    is_single: boolean
    sof_remark_id: number
    deleted: boolean
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: Sof_remarks_itemsCountAggregateOutputType | null
    _avg: Sof_remarks_itemsAvgAggregateOutputType | null
    _sum: Sof_remarks_itemsSumAggregateOutputType | null
    _min: Sof_remarks_itemsMinAggregateOutputType | null
    _max: Sof_remarks_itemsMaxAggregateOutputType | null
  }

  type GetSof_remarks_itemsGroupByPayload<T extends Sof_remarks_itemsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Sof_remarks_itemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sof_remarks_itemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sof_remarks_itemsGroupByOutputType[P]>
            : GetScalarType<T[P], Sof_remarks_itemsGroupByOutputType[P]>
        }
      >
    >


  export type sof_remarks_itemsSelect = {
    id?: boolean
    title?: boolean
    value?: boolean
    is_single?: boolean
    sof_remark_id?: boolean
    sof_remarks?: boolean | sof_remarksArgs
    deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }

  export type sof_remarks_itemsInclude = {
    sof_remarks?: boolean | sof_remarksArgs
  }

  export type sof_remarks_itemsGetPayload<
    S extends boolean | null | undefined | sof_remarks_itemsArgs,
    U = keyof S
      > = S extends true
        ? sof_remarks_items
    : S extends undefined
    ? never
    : S extends sof_remarks_itemsArgs | sof_remarks_itemsFindManyArgs
    ?'include' extends U
    ? sof_remarks_items  & {
    [P in TrueKeys<S['include']>]:
        P extends 'sof_remarks' ? sof_remarksGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'sof_remarks' ? sof_remarksGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof sof_remarks_items ? sof_remarks_items[P] : never
  } 
    : sof_remarks_items
  : sof_remarks_items


  type sof_remarks_itemsCountArgs = Merge<
    Omit<sof_remarks_itemsFindManyArgs, 'select' | 'include'> & {
      select?: Sof_remarks_itemsCountAggregateInputType | true
    }
  >

  export interface sof_remarks_itemsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sof_remarks_items that matches the filter.
     * @param {sof_remarks_itemsFindUniqueArgs} args - Arguments to find a Sof_remarks_items
     * @example
     * // Get one Sof_remarks_items
     * const sof_remarks_items = await prisma.sof_remarks_items.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sof_remarks_itemsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sof_remarks_itemsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sof_remarks_items'> extends True ? CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items>, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T>>> : CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items | null >, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T> | null >>

    /**
     * Find the first Sof_remarks_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarks_itemsFindFirstArgs} args - Arguments to find a Sof_remarks_items
     * @example
     * // Get one Sof_remarks_items
     * const sof_remarks_items = await prisma.sof_remarks_items.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sof_remarks_itemsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sof_remarks_itemsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sof_remarks_items'> extends True ? CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items>, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T>>> : CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items | null >, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T> | null >>

    /**
     * Find zero or more Sof_remarks_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarks_itemsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sof_remarks_items
     * const sof_remarks_items = await prisma.sof_remarks_items.findMany()
     * 
     * // Get first 10 Sof_remarks_items
     * const sof_remarks_items = await prisma.sof_remarks_items.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sof_remarks_itemsWithIdOnly = await prisma.sof_remarks_items.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sof_remarks_itemsFindManyArgs>(
      args?: SelectSubset<T, sof_remarks_itemsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<sof_remarks_items>>, PrismaPromise<Array<sof_remarks_itemsGetPayload<T>>>>

    /**
     * Create a Sof_remarks_items.
     * @param {sof_remarks_itemsCreateArgs} args - Arguments to create a Sof_remarks_items.
     * @example
     * // Create one Sof_remarks_items
     * const Sof_remarks_items = await prisma.sof_remarks_items.create({
     *   data: {
     *     // ... data to create a Sof_remarks_items
     *   }
     * })
     * 
    **/
    create<T extends sof_remarks_itemsCreateArgs>(
      args: SelectSubset<T, sof_remarks_itemsCreateArgs>
    ): CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items>, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T>>>

    /**
     * Create many Sof_remarks_items.
     *     @param {sof_remarks_itemsCreateManyArgs} args - Arguments to create many Sof_remarks_items.
     *     @example
     *     // Create many Sof_remarks_items
     *     const sof_remarks_items = await prisma.sof_remarks_items.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sof_remarks_itemsCreateManyArgs>(
      args?: SelectSubset<T, sof_remarks_itemsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sof_remarks_items.
     * @param {sof_remarks_itemsDeleteArgs} args - Arguments to delete one Sof_remarks_items.
     * @example
     * // Delete one Sof_remarks_items
     * const Sof_remarks_items = await prisma.sof_remarks_items.delete({
     *   where: {
     *     // ... filter to delete one Sof_remarks_items
     *   }
     * })
     * 
    **/
    delete<T extends sof_remarks_itemsDeleteArgs>(
      args: SelectSubset<T, sof_remarks_itemsDeleteArgs>
    ): CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items>, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T>>>

    /**
     * Update one Sof_remarks_items.
     * @param {sof_remarks_itemsUpdateArgs} args - Arguments to update one Sof_remarks_items.
     * @example
     * // Update one Sof_remarks_items
     * const sof_remarks_items = await prisma.sof_remarks_items.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sof_remarks_itemsUpdateArgs>(
      args: SelectSubset<T, sof_remarks_itemsUpdateArgs>
    ): CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items>, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T>>>

    /**
     * Delete zero or more Sof_remarks_items.
     * @param {sof_remarks_itemsDeleteManyArgs} args - Arguments to filter Sof_remarks_items to delete.
     * @example
     * // Delete a few Sof_remarks_items
     * const { count } = await prisma.sof_remarks_items.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sof_remarks_itemsDeleteManyArgs>(
      args?: SelectSubset<T, sof_remarks_itemsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sof_remarks_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarks_itemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sof_remarks_items
     * const sof_remarks_items = await prisma.sof_remarks_items.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sof_remarks_itemsUpdateManyArgs>(
      args: SelectSubset<T, sof_remarks_itemsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sof_remarks_items.
     * @param {sof_remarks_itemsUpsertArgs} args - Arguments to update or create a Sof_remarks_items.
     * @example
     * // Update or create a Sof_remarks_items
     * const sof_remarks_items = await prisma.sof_remarks_items.upsert({
     *   create: {
     *     // ... data to create a Sof_remarks_items
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sof_remarks_items we want to update
     *   }
     * })
    **/
    upsert<T extends sof_remarks_itemsUpsertArgs>(
      args: SelectSubset<T, sof_remarks_itemsUpsertArgs>
    ): CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items>, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T>>>

    /**
     * Find one Sof_remarks_items that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sof_remarks_itemsFindUniqueOrThrowArgs} args - Arguments to find a Sof_remarks_items
     * @example
     * // Get one Sof_remarks_items
     * const sof_remarks_items = await prisma.sof_remarks_items.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sof_remarks_itemsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sof_remarks_itemsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items>, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T>>>

    /**
     * Find the first Sof_remarks_items that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarks_itemsFindFirstOrThrowArgs} args - Arguments to find a Sof_remarks_items
     * @example
     * // Get one Sof_remarks_items
     * const sof_remarks_items = await prisma.sof_remarks_items.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sof_remarks_itemsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sof_remarks_itemsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_remarks_itemsClient<sof_remarks_items>, Prisma__sof_remarks_itemsClient<sof_remarks_itemsGetPayload<T>>>

    /**
     * Count the number of Sof_remarks_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_remarks_itemsCountArgs} args - Arguments to filter Sof_remarks_items to count.
     * @example
     * // Count the number of Sof_remarks_items
     * const count = await prisma.sof_remarks_items.count({
     *   where: {
     *     // ... the filter for the Sof_remarks_items we want to count
     *   }
     * })
    **/
    count<T extends sof_remarks_itemsCountArgs>(
      args?: Subset<T, sof_remarks_itemsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sof_remarks_itemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sof_remarks_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_remarks_itemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sof_remarks_itemsAggregateArgs>(args: Subset<T, Sof_remarks_itemsAggregateArgs>): PrismaPromise<GetSof_remarks_itemsAggregateType<T>>

    /**
     * Group by Sof_remarks_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_remarks_itemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Sof_remarks_itemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Sof_remarks_itemsGroupByArgs['orderBy'] }
        : { orderBy?: Sof_remarks_itemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Sof_remarks_itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSof_remarks_itemsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sof_remarks_items.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sof_remarks_itemsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    sof_remarks<T extends sof_remarksArgs = {}>(args?: Subset<T, sof_remarksArgs>): CheckSelect<T, Prisma__sof_remarksClient<sof_remarks | null >, Prisma__sof_remarksClient<sof_remarksGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sof_remarks_items base type for findUnique actions
   */
  export type sof_remarks_itemsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sof_remarks_items
     * 
    **/
    select?: sof_remarks_itemsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarks_itemsInclude | null
    /**
     * Filter, which sof_remarks_items to fetch.
     * 
    **/
    where: sof_remarks_itemsWhereUniqueInput
  }

  /**
   * sof_remarks_items: findUnique
   */
  export interface sof_remarks_itemsFindUniqueArgs extends sof_remarks_itemsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_remarks_items base type for findFirst actions
   */
  export type sof_remarks_itemsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sof_remarks_items
     * 
    **/
    select?: sof_remarks_itemsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarks_itemsInclude | null
    /**
     * Filter, which sof_remarks_items to fetch.
     * 
    **/
    where?: sof_remarks_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_remarks_items to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_remarks_itemsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sof_remarks_items.
     * 
    **/
    cursor?: sof_remarks_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_remarks_items from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_remarks_items.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sof_remarks_items.
     * 
    **/
    distinct?: Enumerable<Sof_remarks_itemsScalarFieldEnum>
  }

  /**
   * sof_remarks_items: findFirst
   */
  export interface sof_remarks_itemsFindFirstArgs extends sof_remarks_itemsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_remarks_items findMany
   */
  export type sof_remarks_itemsFindManyArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks_items
     * 
    **/
    select?: sof_remarks_itemsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarks_itemsInclude | null
    /**
     * Filter, which sof_remarks_items to fetch.
     * 
    **/
    where?: sof_remarks_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_remarks_items to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_remarks_itemsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sof_remarks_items.
     * 
    **/
    cursor?: sof_remarks_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_remarks_items from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_remarks_items.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Sof_remarks_itemsScalarFieldEnum>
  }


  /**
   * sof_remarks_items create
   */
  export type sof_remarks_itemsCreateArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks_items
     * 
    **/
    select?: sof_remarks_itemsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarks_itemsInclude | null
    /**
     * The data needed to create a sof_remarks_items.
     * 
    **/
    data: XOR<sof_remarks_itemsCreateInput, sof_remarks_itemsUncheckedCreateInput>
  }


  /**
   * sof_remarks_items createMany
   */
  export type sof_remarks_itemsCreateManyArgs = {
    /**
     * The data used to create many sof_remarks_items.
     * 
    **/
    data: Enumerable<sof_remarks_itemsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sof_remarks_items update
   */
  export type sof_remarks_itemsUpdateArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks_items
     * 
    **/
    select?: sof_remarks_itemsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarks_itemsInclude | null
    /**
     * The data needed to update a sof_remarks_items.
     * 
    **/
    data: XOR<sof_remarks_itemsUpdateInput, sof_remarks_itemsUncheckedUpdateInput>
    /**
     * Choose, which sof_remarks_items to update.
     * 
    **/
    where: sof_remarks_itemsWhereUniqueInput
  }


  /**
   * sof_remarks_items updateMany
   */
  export type sof_remarks_itemsUpdateManyArgs = {
    /**
     * The data used to update sof_remarks_items.
     * 
    **/
    data: XOR<sof_remarks_itemsUpdateManyMutationInput, sof_remarks_itemsUncheckedUpdateManyInput>
    /**
     * Filter which sof_remarks_items to update
     * 
    **/
    where?: sof_remarks_itemsWhereInput
  }


  /**
   * sof_remarks_items upsert
   */
  export type sof_remarks_itemsUpsertArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks_items
     * 
    **/
    select?: sof_remarks_itemsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarks_itemsInclude | null
    /**
     * The filter to search for the sof_remarks_items to update in case it exists.
     * 
    **/
    where: sof_remarks_itemsWhereUniqueInput
    /**
     * In case the sof_remarks_items found by the `where` argument doesn't exist, create a new sof_remarks_items with this data.
     * 
    **/
    create: XOR<sof_remarks_itemsCreateInput, sof_remarks_itemsUncheckedCreateInput>
    /**
     * In case the sof_remarks_items was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sof_remarks_itemsUpdateInput, sof_remarks_itemsUncheckedUpdateInput>
  }


  /**
   * sof_remarks_items delete
   */
  export type sof_remarks_itemsDeleteArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks_items
     * 
    **/
    select?: sof_remarks_itemsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarks_itemsInclude | null
    /**
     * Filter which sof_remarks_items to delete.
     * 
    **/
    where: sof_remarks_itemsWhereUniqueInput
  }


  /**
   * sof_remarks_items deleteMany
   */
  export type sof_remarks_itemsDeleteManyArgs = {
    /**
     * Filter which sof_remarks_items to delete
     * 
    **/
    where?: sof_remarks_itemsWhereInput
  }


  /**
   * sof_remarks_items: findUniqueOrThrow
   */
  export type sof_remarks_itemsFindUniqueOrThrowArgs = sof_remarks_itemsFindUniqueArgsBase
      

  /**
   * sof_remarks_items: findFirstOrThrow
   */
  export type sof_remarks_itemsFindFirstOrThrowArgs = sof_remarks_itemsFindFirstArgsBase
      

  /**
   * sof_remarks_items without action
   */
  export type sof_remarks_itemsArgs = {
    /**
     * Select specific fields to fetch from the sof_remarks_items
     * 
    **/
    select?: sof_remarks_itemsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_remarks_itemsInclude | null
  }



  /**
   * Model sof_draft
   */


  export type AggregateSof_draft = {
    _count: Sof_draftCountAggregateOutputType | null
    _avg: Sof_draftAvgAggregateOutputType | null
    _sum: Sof_draftSumAggregateOutputType | null
    _min: Sof_draftMinAggregateOutputType | null
    _max: Sof_draftMaxAggregateOutputType | null
  }

  export type Sof_draftAvgAggregateOutputType = {
    id: number | null
    fwd: number | null
    mid: number | null
    aft: number | null
    sof_id: number | null
  }

  export type Sof_draftSumAggregateOutputType = {
    id: number | null
    fwd: number | null
    mid: number | null
    aft: number | null
    sof_id: number | null
  }

  export type Sof_draftMinAggregateOutputType = {
    id: number | null
    title: string | null
    fwd: number | null
    mid: number | null
    aft: number | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_draftMaxAggregateOutputType = {
    id: number | null
    title: string | null
    fwd: number | null
    mid: number | null
    aft: number | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_draftCountAggregateOutputType = {
    id: number
    title: number
    fwd: number
    mid: number
    aft: number
    sof_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sof_draftAvgAggregateInputType = {
    id?: true
    fwd?: true
    mid?: true
    aft?: true
    sof_id?: true
  }

  export type Sof_draftSumAggregateInputType = {
    id?: true
    fwd?: true
    mid?: true
    aft?: true
    sof_id?: true
  }

  export type Sof_draftMinAggregateInputType = {
    id?: true
    title?: true
    fwd?: true
    mid?: true
    aft?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_draftMaxAggregateInputType = {
    id?: true
    title?: true
    fwd?: true
    mid?: true
    aft?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_draftCountAggregateInputType = {
    id?: true
    title?: true
    fwd?: true
    mid?: true
    aft?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sof_draftAggregateArgs = {
    /**
     * Filter which sof_draft to aggregate.
     * 
    **/
    where?: sof_draftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_drafts to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_draftOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sof_draftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_drafts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_drafts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sof_drafts
    **/
    _count?: true | Sof_draftCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sof_draftAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sof_draftSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sof_draftMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sof_draftMaxAggregateInputType
  }

  export type GetSof_draftAggregateType<T extends Sof_draftAggregateArgs> = {
        [P in keyof T & keyof AggregateSof_draft]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSof_draft[P]>
      : GetScalarType<T[P], AggregateSof_draft[P]>
  }




  export type Sof_draftGroupByArgs = {
    where?: sof_draftWhereInput
    orderBy?: Enumerable<sof_draftOrderByWithAggregationInput>
    by: Array<Sof_draftScalarFieldEnum>
    having?: sof_draftScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sof_draftCountAggregateInputType | true
    _avg?: Sof_draftAvgAggregateInputType
    _sum?: Sof_draftSumAggregateInputType
    _min?: Sof_draftMinAggregateInputType
    _max?: Sof_draftMaxAggregateInputType
  }


  export type Sof_draftGroupByOutputType = {
    id: number
    title: string | null
    fwd: number | null
    mid: number | null
    aft: number | null
    sof_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: Sof_draftCountAggregateOutputType | null
    _avg: Sof_draftAvgAggregateOutputType | null
    _sum: Sof_draftSumAggregateOutputType | null
    _min: Sof_draftMinAggregateOutputType | null
    _max: Sof_draftMaxAggregateOutputType | null
  }

  type GetSof_draftGroupByPayload<T extends Sof_draftGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Sof_draftGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sof_draftGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sof_draftGroupByOutputType[P]>
            : GetScalarType<T[P], Sof_draftGroupByOutputType[P]>
        }
      >
    >


  export type sof_draftSelect = {
    id?: boolean
    title?: boolean
    fwd?: boolean
    mid?: boolean
    aft?: boolean
    sof_id?: boolean
    sof?: boolean | sofArgs
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }

  export type sof_draftInclude = {
    sof?: boolean | sofArgs
  }

  export type sof_draftGetPayload<
    S extends boolean | null | undefined | sof_draftArgs,
    U = keyof S
      > = S extends true
        ? sof_draft
    : S extends undefined
    ? never
    : S extends sof_draftArgs | sof_draftFindManyArgs
    ?'include' extends U
    ? sof_draft  & {
    [P in TrueKeys<S['include']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof sof_draft ? sof_draft[P] : never
  } 
    : sof_draft
  : sof_draft


  type sof_draftCountArgs = Merge<
    Omit<sof_draftFindManyArgs, 'select' | 'include'> & {
      select?: Sof_draftCountAggregateInputType | true
    }
  >

  export interface sof_draftDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sof_draft that matches the filter.
     * @param {sof_draftFindUniqueArgs} args - Arguments to find a Sof_draft
     * @example
     * // Get one Sof_draft
     * const sof_draft = await prisma.sof_draft.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sof_draftFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sof_draftFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sof_draft'> extends True ? CheckSelect<T, Prisma__sof_draftClient<sof_draft>, Prisma__sof_draftClient<sof_draftGetPayload<T>>> : CheckSelect<T, Prisma__sof_draftClient<sof_draft | null >, Prisma__sof_draftClient<sof_draftGetPayload<T> | null >>

    /**
     * Find the first Sof_draft that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_draftFindFirstArgs} args - Arguments to find a Sof_draft
     * @example
     * // Get one Sof_draft
     * const sof_draft = await prisma.sof_draft.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sof_draftFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sof_draftFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sof_draft'> extends True ? CheckSelect<T, Prisma__sof_draftClient<sof_draft>, Prisma__sof_draftClient<sof_draftGetPayload<T>>> : CheckSelect<T, Prisma__sof_draftClient<sof_draft | null >, Prisma__sof_draftClient<sof_draftGetPayload<T> | null >>

    /**
     * Find zero or more Sof_drafts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_draftFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sof_drafts
     * const sof_drafts = await prisma.sof_draft.findMany()
     * 
     * // Get first 10 Sof_drafts
     * const sof_drafts = await prisma.sof_draft.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sof_draftWithIdOnly = await prisma.sof_draft.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sof_draftFindManyArgs>(
      args?: SelectSubset<T, sof_draftFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<sof_draft>>, PrismaPromise<Array<sof_draftGetPayload<T>>>>

    /**
     * Create a Sof_draft.
     * @param {sof_draftCreateArgs} args - Arguments to create a Sof_draft.
     * @example
     * // Create one Sof_draft
     * const Sof_draft = await prisma.sof_draft.create({
     *   data: {
     *     // ... data to create a Sof_draft
     *   }
     * })
     * 
    **/
    create<T extends sof_draftCreateArgs>(
      args: SelectSubset<T, sof_draftCreateArgs>
    ): CheckSelect<T, Prisma__sof_draftClient<sof_draft>, Prisma__sof_draftClient<sof_draftGetPayload<T>>>

    /**
     * Create many Sof_drafts.
     *     @param {sof_draftCreateManyArgs} args - Arguments to create many Sof_drafts.
     *     @example
     *     // Create many Sof_drafts
     *     const sof_draft = await prisma.sof_draft.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sof_draftCreateManyArgs>(
      args?: SelectSubset<T, sof_draftCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sof_draft.
     * @param {sof_draftDeleteArgs} args - Arguments to delete one Sof_draft.
     * @example
     * // Delete one Sof_draft
     * const Sof_draft = await prisma.sof_draft.delete({
     *   where: {
     *     // ... filter to delete one Sof_draft
     *   }
     * })
     * 
    **/
    delete<T extends sof_draftDeleteArgs>(
      args: SelectSubset<T, sof_draftDeleteArgs>
    ): CheckSelect<T, Prisma__sof_draftClient<sof_draft>, Prisma__sof_draftClient<sof_draftGetPayload<T>>>

    /**
     * Update one Sof_draft.
     * @param {sof_draftUpdateArgs} args - Arguments to update one Sof_draft.
     * @example
     * // Update one Sof_draft
     * const sof_draft = await prisma.sof_draft.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sof_draftUpdateArgs>(
      args: SelectSubset<T, sof_draftUpdateArgs>
    ): CheckSelect<T, Prisma__sof_draftClient<sof_draft>, Prisma__sof_draftClient<sof_draftGetPayload<T>>>

    /**
     * Delete zero or more Sof_drafts.
     * @param {sof_draftDeleteManyArgs} args - Arguments to filter Sof_drafts to delete.
     * @example
     * // Delete a few Sof_drafts
     * const { count } = await prisma.sof_draft.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sof_draftDeleteManyArgs>(
      args?: SelectSubset<T, sof_draftDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sof_drafts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_draftUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sof_drafts
     * const sof_draft = await prisma.sof_draft.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sof_draftUpdateManyArgs>(
      args: SelectSubset<T, sof_draftUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sof_draft.
     * @param {sof_draftUpsertArgs} args - Arguments to update or create a Sof_draft.
     * @example
     * // Update or create a Sof_draft
     * const sof_draft = await prisma.sof_draft.upsert({
     *   create: {
     *     // ... data to create a Sof_draft
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sof_draft we want to update
     *   }
     * })
    **/
    upsert<T extends sof_draftUpsertArgs>(
      args: SelectSubset<T, sof_draftUpsertArgs>
    ): CheckSelect<T, Prisma__sof_draftClient<sof_draft>, Prisma__sof_draftClient<sof_draftGetPayload<T>>>

    /**
     * Find one Sof_draft that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sof_draftFindUniqueOrThrowArgs} args - Arguments to find a Sof_draft
     * @example
     * // Get one Sof_draft
     * const sof_draft = await prisma.sof_draft.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sof_draftFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sof_draftFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_draftClient<sof_draft>, Prisma__sof_draftClient<sof_draftGetPayload<T>>>

    /**
     * Find the first Sof_draft that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_draftFindFirstOrThrowArgs} args - Arguments to find a Sof_draft
     * @example
     * // Get one Sof_draft
     * const sof_draft = await prisma.sof_draft.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sof_draftFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sof_draftFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_draftClient<sof_draft>, Prisma__sof_draftClient<sof_draftGetPayload<T>>>

    /**
     * Count the number of Sof_drafts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_draftCountArgs} args - Arguments to filter Sof_drafts to count.
     * @example
     * // Count the number of Sof_drafts
     * const count = await prisma.sof_draft.count({
     *   where: {
     *     // ... the filter for the Sof_drafts we want to count
     *   }
     * })
    **/
    count<T extends sof_draftCountArgs>(
      args?: Subset<T, sof_draftCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sof_draftCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sof_draft.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_draftAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sof_draftAggregateArgs>(args: Subset<T, Sof_draftAggregateArgs>): PrismaPromise<GetSof_draftAggregateType<T>>

    /**
     * Group by Sof_draft.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_draftGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Sof_draftGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Sof_draftGroupByArgs['orderBy'] }
        : { orderBy?: Sof_draftGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Sof_draftGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSof_draftGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sof_draft.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sof_draftClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    sof<T extends sofArgs = {}>(args?: Subset<T, sofArgs>): CheckSelect<T, Prisma__sofClient<sof | null >, Prisma__sofClient<sofGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sof_draft base type for findUnique actions
   */
  export type sof_draftFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sof_draft
     * 
    **/
    select?: sof_draftSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_draftInclude | null
    /**
     * Filter, which sof_draft to fetch.
     * 
    **/
    where: sof_draftWhereUniqueInput
  }

  /**
   * sof_draft: findUnique
   */
  export interface sof_draftFindUniqueArgs extends sof_draftFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_draft base type for findFirst actions
   */
  export type sof_draftFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sof_draft
     * 
    **/
    select?: sof_draftSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_draftInclude | null
    /**
     * Filter, which sof_draft to fetch.
     * 
    **/
    where?: sof_draftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_drafts to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_draftOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sof_drafts.
     * 
    **/
    cursor?: sof_draftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_drafts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_drafts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sof_drafts.
     * 
    **/
    distinct?: Enumerable<Sof_draftScalarFieldEnum>
  }

  /**
   * sof_draft: findFirst
   */
  export interface sof_draftFindFirstArgs extends sof_draftFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_draft findMany
   */
  export type sof_draftFindManyArgs = {
    /**
     * Select specific fields to fetch from the sof_draft
     * 
    **/
    select?: sof_draftSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_draftInclude | null
    /**
     * Filter, which sof_drafts to fetch.
     * 
    **/
    where?: sof_draftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_drafts to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_draftOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sof_drafts.
     * 
    **/
    cursor?: sof_draftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_drafts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_drafts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Sof_draftScalarFieldEnum>
  }


  /**
   * sof_draft create
   */
  export type sof_draftCreateArgs = {
    /**
     * Select specific fields to fetch from the sof_draft
     * 
    **/
    select?: sof_draftSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_draftInclude | null
    /**
     * The data needed to create a sof_draft.
     * 
    **/
    data: XOR<sof_draftCreateInput, sof_draftUncheckedCreateInput>
  }


  /**
   * sof_draft createMany
   */
  export type sof_draftCreateManyArgs = {
    /**
     * The data used to create many sof_drafts.
     * 
    **/
    data: Enumerable<sof_draftCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sof_draft update
   */
  export type sof_draftUpdateArgs = {
    /**
     * Select specific fields to fetch from the sof_draft
     * 
    **/
    select?: sof_draftSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_draftInclude | null
    /**
     * The data needed to update a sof_draft.
     * 
    **/
    data: XOR<sof_draftUpdateInput, sof_draftUncheckedUpdateInput>
    /**
     * Choose, which sof_draft to update.
     * 
    **/
    where: sof_draftWhereUniqueInput
  }


  /**
   * sof_draft updateMany
   */
  export type sof_draftUpdateManyArgs = {
    /**
     * The data used to update sof_drafts.
     * 
    **/
    data: XOR<sof_draftUpdateManyMutationInput, sof_draftUncheckedUpdateManyInput>
    /**
     * Filter which sof_drafts to update
     * 
    **/
    where?: sof_draftWhereInput
  }


  /**
   * sof_draft upsert
   */
  export type sof_draftUpsertArgs = {
    /**
     * Select specific fields to fetch from the sof_draft
     * 
    **/
    select?: sof_draftSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_draftInclude | null
    /**
     * The filter to search for the sof_draft to update in case it exists.
     * 
    **/
    where: sof_draftWhereUniqueInput
    /**
     * In case the sof_draft found by the `where` argument doesn't exist, create a new sof_draft with this data.
     * 
    **/
    create: XOR<sof_draftCreateInput, sof_draftUncheckedCreateInput>
    /**
     * In case the sof_draft was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sof_draftUpdateInput, sof_draftUncheckedUpdateInput>
  }


  /**
   * sof_draft delete
   */
  export type sof_draftDeleteArgs = {
    /**
     * Select specific fields to fetch from the sof_draft
     * 
    **/
    select?: sof_draftSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_draftInclude | null
    /**
     * Filter which sof_draft to delete.
     * 
    **/
    where: sof_draftWhereUniqueInput
  }


  /**
   * sof_draft deleteMany
   */
  export type sof_draftDeleteManyArgs = {
    /**
     * Filter which sof_drafts to delete
     * 
    **/
    where?: sof_draftWhereInput
  }


  /**
   * sof_draft: findUniqueOrThrow
   */
  export type sof_draftFindUniqueOrThrowArgs = sof_draftFindUniqueArgsBase
      

  /**
   * sof_draft: findFirstOrThrow
   */
  export type sof_draftFindFirstOrThrowArgs = sof_draftFindFirstArgsBase
      

  /**
   * sof_draft without action
   */
  export type sof_draftArgs = {
    /**
     * Select specific fields to fetch from the sof_draft
     * 
    **/
    select?: sof_draftSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_draftInclude | null
  }



  /**
   * Model sof_bunker_figures
   */


  export type AggregateSof_bunker_figures = {
    _count: Sof_bunker_figuresCountAggregateOutputType | null
    _avg: Sof_bunker_figuresAvgAggregateOutputType | null
    _sum: Sof_bunker_figuresSumAggregateOutputType | null
    _min: Sof_bunker_figuresMinAggregateOutputType | null
    _max: Sof_bunker_figuresMaxAggregateOutputType | null
  }

  export type Sof_bunker_figuresAvgAggregateOutputType = {
    id: number | null
    ifo: number | null
    mdo: number | null
    fw: number | null
    sof_id: number | null
  }

  export type Sof_bunker_figuresSumAggregateOutputType = {
    id: number | null
    ifo: number | null
    mdo: number | null
    fw: number | null
    sof_id: number | null
  }

  export type Sof_bunker_figuresMinAggregateOutputType = {
    id: number | null
    title: string | null
    ifo: number | null
    mdo: number | null
    fw: number | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_bunker_figuresMaxAggregateOutputType = {
    id: number | null
    title: string | null
    ifo: number | null
    mdo: number | null
    fw: number | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_bunker_figuresCountAggregateOutputType = {
    id: number
    title: number
    ifo: number
    mdo: number
    fw: number
    sof_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sof_bunker_figuresAvgAggregateInputType = {
    id?: true
    ifo?: true
    mdo?: true
    fw?: true
    sof_id?: true
  }

  export type Sof_bunker_figuresSumAggregateInputType = {
    id?: true
    ifo?: true
    mdo?: true
    fw?: true
    sof_id?: true
  }

  export type Sof_bunker_figuresMinAggregateInputType = {
    id?: true
    title?: true
    ifo?: true
    mdo?: true
    fw?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_bunker_figuresMaxAggregateInputType = {
    id?: true
    title?: true
    ifo?: true
    mdo?: true
    fw?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_bunker_figuresCountAggregateInputType = {
    id?: true
    title?: true
    ifo?: true
    mdo?: true
    fw?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sof_bunker_figuresAggregateArgs = {
    /**
     * Filter which sof_bunker_figures to aggregate.
     * 
    **/
    where?: sof_bunker_figuresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_bunker_figures to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_bunker_figuresOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sof_bunker_figuresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_bunker_figures from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_bunker_figures.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sof_bunker_figures
    **/
    _count?: true | Sof_bunker_figuresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sof_bunker_figuresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sof_bunker_figuresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sof_bunker_figuresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sof_bunker_figuresMaxAggregateInputType
  }

  export type GetSof_bunker_figuresAggregateType<T extends Sof_bunker_figuresAggregateArgs> = {
        [P in keyof T & keyof AggregateSof_bunker_figures]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSof_bunker_figures[P]>
      : GetScalarType<T[P], AggregateSof_bunker_figures[P]>
  }




  export type Sof_bunker_figuresGroupByArgs = {
    where?: sof_bunker_figuresWhereInput
    orderBy?: Enumerable<sof_bunker_figuresOrderByWithAggregationInput>
    by: Array<Sof_bunker_figuresScalarFieldEnum>
    having?: sof_bunker_figuresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sof_bunker_figuresCountAggregateInputType | true
    _avg?: Sof_bunker_figuresAvgAggregateInputType
    _sum?: Sof_bunker_figuresSumAggregateInputType
    _min?: Sof_bunker_figuresMinAggregateInputType
    _max?: Sof_bunker_figuresMaxAggregateInputType
  }


  export type Sof_bunker_figuresGroupByOutputType = {
    id: number
    title: string | null
    ifo: number | null
    mdo: number | null
    fw: number | null
    sof_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: Sof_bunker_figuresCountAggregateOutputType | null
    _avg: Sof_bunker_figuresAvgAggregateOutputType | null
    _sum: Sof_bunker_figuresSumAggregateOutputType | null
    _min: Sof_bunker_figuresMinAggregateOutputType | null
    _max: Sof_bunker_figuresMaxAggregateOutputType | null
  }

  type GetSof_bunker_figuresGroupByPayload<T extends Sof_bunker_figuresGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Sof_bunker_figuresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sof_bunker_figuresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sof_bunker_figuresGroupByOutputType[P]>
            : GetScalarType<T[P], Sof_bunker_figuresGroupByOutputType[P]>
        }
      >
    >


  export type sof_bunker_figuresSelect = {
    id?: boolean
    title?: boolean
    ifo?: boolean
    mdo?: boolean
    fw?: boolean
    sof_id?: boolean
    sof?: boolean | sofArgs
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }

  export type sof_bunker_figuresInclude = {
    sof?: boolean | sofArgs
  }

  export type sof_bunker_figuresGetPayload<
    S extends boolean | null | undefined | sof_bunker_figuresArgs,
    U = keyof S
      > = S extends true
        ? sof_bunker_figures
    : S extends undefined
    ? never
    : S extends sof_bunker_figuresArgs | sof_bunker_figuresFindManyArgs
    ?'include' extends U
    ? sof_bunker_figures  & {
    [P in TrueKeys<S['include']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof sof_bunker_figures ? sof_bunker_figures[P] : never
  } 
    : sof_bunker_figures
  : sof_bunker_figures


  type sof_bunker_figuresCountArgs = Merge<
    Omit<sof_bunker_figuresFindManyArgs, 'select' | 'include'> & {
      select?: Sof_bunker_figuresCountAggregateInputType | true
    }
  >

  export interface sof_bunker_figuresDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sof_bunker_figures that matches the filter.
     * @param {sof_bunker_figuresFindUniqueArgs} args - Arguments to find a Sof_bunker_figures
     * @example
     * // Get one Sof_bunker_figures
     * const sof_bunker_figures = await prisma.sof_bunker_figures.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sof_bunker_figuresFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sof_bunker_figuresFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sof_bunker_figures'> extends True ? CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures>, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T>>> : CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures | null >, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T> | null >>

    /**
     * Find the first Sof_bunker_figures that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_bunker_figuresFindFirstArgs} args - Arguments to find a Sof_bunker_figures
     * @example
     * // Get one Sof_bunker_figures
     * const sof_bunker_figures = await prisma.sof_bunker_figures.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sof_bunker_figuresFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sof_bunker_figuresFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sof_bunker_figures'> extends True ? CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures>, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T>>> : CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures | null >, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T> | null >>

    /**
     * Find zero or more Sof_bunker_figures that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_bunker_figuresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sof_bunker_figures
     * const sof_bunker_figures = await prisma.sof_bunker_figures.findMany()
     * 
     * // Get first 10 Sof_bunker_figures
     * const sof_bunker_figures = await prisma.sof_bunker_figures.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sof_bunker_figuresWithIdOnly = await prisma.sof_bunker_figures.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sof_bunker_figuresFindManyArgs>(
      args?: SelectSubset<T, sof_bunker_figuresFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<sof_bunker_figures>>, PrismaPromise<Array<sof_bunker_figuresGetPayload<T>>>>

    /**
     * Create a Sof_bunker_figures.
     * @param {sof_bunker_figuresCreateArgs} args - Arguments to create a Sof_bunker_figures.
     * @example
     * // Create one Sof_bunker_figures
     * const Sof_bunker_figures = await prisma.sof_bunker_figures.create({
     *   data: {
     *     // ... data to create a Sof_bunker_figures
     *   }
     * })
     * 
    **/
    create<T extends sof_bunker_figuresCreateArgs>(
      args: SelectSubset<T, sof_bunker_figuresCreateArgs>
    ): CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures>, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T>>>

    /**
     * Create many Sof_bunker_figures.
     *     @param {sof_bunker_figuresCreateManyArgs} args - Arguments to create many Sof_bunker_figures.
     *     @example
     *     // Create many Sof_bunker_figures
     *     const sof_bunker_figures = await prisma.sof_bunker_figures.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sof_bunker_figuresCreateManyArgs>(
      args?: SelectSubset<T, sof_bunker_figuresCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sof_bunker_figures.
     * @param {sof_bunker_figuresDeleteArgs} args - Arguments to delete one Sof_bunker_figures.
     * @example
     * // Delete one Sof_bunker_figures
     * const Sof_bunker_figures = await prisma.sof_bunker_figures.delete({
     *   where: {
     *     // ... filter to delete one Sof_bunker_figures
     *   }
     * })
     * 
    **/
    delete<T extends sof_bunker_figuresDeleteArgs>(
      args: SelectSubset<T, sof_bunker_figuresDeleteArgs>
    ): CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures>, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T>>>

    /**
     * Update one Sof_bunker_figures.
     * @param {sof_bunker_figuresUpdateArgs} args - Arguments to update one Sof_bunker_figures.
     * @example
     * // Update one Sof_bunker_figures
     * const sof_bunker_figures = await prisma.sof_bunker_figures.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sof_bunker_figuresUpdateArgs>(
      args: SelectSubset<T, sof_bunker_figuresUpdateArgs>
    ): CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures>, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T>>>

    /**
     * Delete zero or more Sof_bunker_figures.
     * @param {sof_bunker_figuresDeleteManyArgs} args - Arguments to filter Sof_bunker_figures to delete.
     * @example
     * // Delete a few Sof_bunker_figures
     * const { count } = await prisma.sof_bunker_figures.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sof_bunker_figuresDeleteManyArgs>(
      args?: SelectSubset<T, sof_bunker_figuresDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sof_bunker_figures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_bunker_figuresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sof_bunker_figures
     * const sof_bunker_figures = await prisma.sof_bunker_figures.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sof_bunker_figuresUpdateManyArgs>(
      args: SelectSubset<T, sof_bunker_figuresUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sof_bunker_figures.
     * @param {sof_bunker_figuresUpsertArgs} args - Arguments to update or create a Sof_bunker_figures.
     * @example
     * // Update or create a Sof_bunker_figures
     * const sof_bunker_figures = await prisma.sof_bunker_figures.upsert({
     *   create: {
     *     // ... data to create a Sof_bunker_figures
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sof_bunker_figures we want to update
     *   }
     * })
    **/
    upsert<T extends sof_bunker_figuresUpsertArgs>(
      args: SelectSubset<T, sof_bunker_figuresUpsertArgs>
    ): CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures>, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T>>>

    /**
     * Find one Sof_bunker_figures that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sof_bunker_figuresFindUniqueOrThrowArgs} args - Arguments to find a Sof_bunker_figures
     * @example
     * // Get one Sof_bunker_figures
     * const sof_bunker_figures = await prisma.sof_bunker_figures.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sof_bunker_figuresFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sof_bunker_figuresFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures>, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T>>>

    /**
     * Find the first Sof_bunker_figures that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_bunker_figuresFindFirstOrThrowArgs} args - Arguments to find a Sof_bunker_figures
     * @example
     * // Get one Sof_bunker_figures
     * const sof_bunker_figures = await prisma.sof_bunker_figures.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sof_bunker_figuresFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sof_bunker_figuresFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_bunker_figuresClient<sof_bunker_figures>, Prisma__sof_bunker_figuresClient<sof_bunker_figuresGetPayload<T>>>

    /**
     * Count the number of Sof_bunker_figures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_bunker_figuresCountArgs} args - Arguments to filter Sof_bunker_figures to count.
     * @example
     * // Count the number of Sof_bunker_figures
     * const count = await prisma.sof_bunker_figures.count({
     *   where: {
     *     // ... the filter for the Sof_bunker_figures we want to count
     *   }
     * })
    **/
    count<T extends sof_bunker_figuresCountArgs>(
      args?: Subset<T, sof_bunker_figuresCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sof_bunker_figuresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sof_bunker_figures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_bunker_figuresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sof_bunker_figuresAggregateArgs>(args: Subset<T, Sof_bunker_figuresAggregateArgs>): PrismaPromise<GetSof_bunker_figuresAggregateType<T>>

    /**
     * Group by Sof_bunker_figures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_bunker_figuresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Sof_bunker_figuresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Sof_bunker_figuresGroupByArgs['orderBy'] }
        : { orderBy?: Sof_bunker_figuresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Sof_bunker_figuresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSof_bunker_figuresGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sof_bunker_figures.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sof_bunker_figuresClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    sof<T extends sofArgs = {}>(args?: Subset<T, sofArgs>): CheckSelect<T, Prisma__sofClient<sof | null >, Prisma__sofClient<sofGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sof_bunker_figures base type for findUnique actions
   */
  export type sof_bunker_figuresFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sof_bunker_figures
     * 
    **/
    select?: sof_bunker_figuresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_bunker_figuresInclude | null
    /**
     * Filter, which sof_bunker_figures to fetch.
     * 
    **/
    where: sof_bunker_figuresWhereUniqueInput
  }

  /**
   * sof_bunker_figures: findUnique
   */
  export interface sof_bunker_figuresFindUniqueArgs extends sof_bunker_figuresFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_bunker_figures base type for findFirst actions
   */
  export type sof_bunker_figuresFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sof_bunker_figures
     * 
    **/
    select?: sof_bunker_figuresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_bunker_figuresInclude | null
    /**
     * Filter, which sof_bunker_figures to fetch.
     * 
    **/
    where?: sof_bunker_figuresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_bunker_figures to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_bunker_figuresOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sof_bunker_figures.
     * 
    **/
    cursor?: sof_bunker_figuresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_bunker_figures from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_bunker_figures.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sof_bunker_figures.
     * 
    **/
    distinct?: Enumerable<Sof_bunker_figuresScalarFieldEnum>
  }

  /**
   * sof_bunker_figures: findFirst
   */
  export interface sof_bunker_figuresFindFirstArgs extends sof_bunker_figuresFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_bunker_figures findMany
   */
  export type sof_bunker_figuresFindManyArgs = {
    /**
     * Select specific fields to fetch from the sof_bunker_figures
     * 
    **/
    select?: sof_bunker_figuresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_bunker_figuresInclude | null
    /**
     * Filter, which sof_bunker_figures to fetch.
     * 
    **/
    where?: sof_bunker_figuresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_bunker_figures to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_bunker_figuresOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sof_bunker_figures.
     * 
    **/
    cursor?: sof_bunker_figuresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_bunker_figures from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_bunker_figures.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Sof_bunker_figuresScalarFieldEnum>
  }


  /**
   * sof_bunker_figures create
   */
  export type sof_bunker_figuresCreateArgs = {
    /**
     * Select specific fields to fetch from the sof_bunker_figures
     * 
    **/
    select?: sof_bunker_figuresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_bunker_figuresInclude | null
    /**
     * The data needed to create a sof_bunker_figures.
     * 
    **/
    data: XOR<sof_bunker_figuresCreateInput, sof_bunker_figuresUncheckedCreateInput>
  }


  /**
   * sof_bunker_figures createMany
   */
  export type sof_bunker_figuresCreateManyArgs = {
    /**
     * The data used to create many sof_bunker_figures.
     * 
    **/
    data: Enumerable<sof_bunker_figuresCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sof_bunker_figures update
   */
  export type sof_bunker_figuresUpdateArgs = {
    /**
     * Select specific fields to fetch from the sof_bunker_figures
     * 
    **/
    select?: sof_bunker_figuresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_bunker_figuresInclude | null
    /**
     * The data needed to update a sof_bunker_figures.
     * 
    **/
    data: XOR<sof_bunker_figuresUpdateInput, sof_bunker_figuresUncheckedUpdateInput>
    /**
     * Choose, which sof_bunker_figures to update.
     * 
    **/
    where: sof_bunker_figuresWhereUniqueInput
  }


  /**
   * sof_bunker_figures updateMany
   */
  export type sof_bunker_figuresUpdateManyArgs = {
    /**
     * The data used to update sof_bunker_figures.
     * 
    **/
    data: XOR<sof_bunker_figuresUpdateManyMutationInput, sof_bunker_figuresUncheckedUpdateManyInput>
    /**
     * Filter which sof_bunker_figures to update
     * 
    **/
    where?: sof_bunker_figuresWhereInput
  }


  /**
   * sof_bunker_figures upsert
   */
  export type sof_bunker_figuresUpsertArgs = {
    /**
     * Select specific fields to fetch from the sof_bunker_figures
     * 
    **/
    select?: sof_bunker_figuresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_bunker_figuresInclude | null
    /**
     * The filter to search for the sof_bunker_figures to update in case it exists.
     * 
    **/
    where: sof_bunker_figuresWhereUniqueInput
    /**
     * In case the sof_bunker_figures found by the `where` argument doesn't exist, create a new sof_bunker_figures with this data.
     * 
    **/
    create: XOR<sof_bunker_figuresCreateInput, sof_bunker_figuresUncheckedCreateInput>
    /**
     * In case the sof_bunker_figures was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sof_bunker_figuresUpdateInput, sof_bunker_figuresUncheckedUpdateInput>
  }


  /**
   * sof_bunker_figures delete
   */
  export type sof_bunker_figuresDeleteArgs = {
    /**
     * Select specific fields to fetch from the sof_bunker_figures
     * 
    **/
    select?: sof_bunker_figuresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_bunker_figuresInclude | null
    /**
     * Filter which sof_bunker_figures to delete.
     * 
    **/
    where: sof_bunker_figuresWhereUniqueInput
  }


  /**
   * sof_bunker_figures deleteMany
   */
  export type sof_bunker_figuresDeleteManyArgs = {
    /**
     * Filter which sof_bunker_figures to delete
     * 
    **/
    where?: sof_bunker_figuresWhereInput
  }


  /**
   * sof_bunker_figures: findUniqueOrThrow
   */
  export type sof_bunker_figuresFindUniqueOrThrowArgs = sof_bunker_figuresFindUniqueArgsBase
      

  /**
   * sof_bunker_figures: findFirstOrThrow
   */
  export type sof_bunker_figuresFindFirstOrThrowArgs = sof_bunker_figuresFindFirstArgsBase
      

  /**
   * sof_bunker_figures without action
   */
  export type sof_bunker_figuresArgs = {
    /**
     * Select specific fields to fetch from the sof_bunker_figures
     * 
    **/
    select?: sof_bunker_figuresSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_bunker_figuresInclude | null
  }



  /**
   * Model SofPortLogEventCategories
   */


  export type AggregateSofPortLogEventCategories = {
    _count: SofPortLogEventCategoriesCountAggregateOutputType | null
    _avg: SofPortLogEventCategoriesAvgAggregateOutputType | null
    _sum: SofPortLogEventCategoriesSumAggregateOutputType | null
    _min: SofPortLogEventCategoriesMinAggregateOutputType | null
    _max: SofPortLogEventCategoriesMaxAggregateOutputType | null
  }

  export type SofPortLogEventCategoriesAvgAggregateOutputType = {
    id: number | null
  }

  export type SofPortLogEventCategoriesSumAggregateOutputType = {
    id: number | null
  }

  export type SofPortLogEventCategoriesMinAggregateOutputType = {
    id: number | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type SofPortLogEventCategoriesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type SofPortLogEventCategoriesCountAggregateOutputType = {
    id: number
    name: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type SofPortLogEventCategoriesAvgAggregateInputType = {
    id?: true
  }

  export type SofPortLogEventCategoriesSumAggregateInputType = {
    id?: true
  }

  export type SofPortLogEventCategoriesMinAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type SofPortLogEventCategoriesMaxAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type SofPortLogEventCategoriesCountAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type SofPortLogEventCategoriesAggregateArgs = {
    /**
     * Filter which SofPortLogEventCategories to aggregate.
     * 
    **/
    where?: SofPortLogEventCategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SofPortLogEventCategories to fetch.
     * 
    **/
    orderBy?: Enumerable<SofPortLogEventCategoriesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: SofPortLogEventCategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SofPortLogEventCategories from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SofPortLogEventCategories.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SofPortLogEventCategories
    **/
    _count?: true | SofPortLogEventCategoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SofPortLogEventCategoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SofPortLogEventCategoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SofPortLogEventCategoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SofPortLogEventCategoriesMaxAggregateInputType
  }

  export type GetSofPortLogEventCategoriesAggregateType<T extends SofPortLogEventCategoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateSofPortLogEventCategories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSofPortLogEventCategories[P]>
      : GetScalarType<T[P], AggregateSofPortLogEventCategories[P]>
  }




  export type SofPortLogEventCategoriesGroupByArgs = {
    where?: SofPortLogEventCategoriesWhereInput
    orderBy?: Enumerable<SofPortLogEventCategoriesOrderByWithAggregationInput>
    by: Array<SofPortLogEventCategoriesScalarFieldEnum>
    having?: SofPortLogEventCategoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SofPortLogEventCategoriesCountAggregateInputType | true
    _avg?: SofPortLogEventCategoriesAvgAggregateInputType
    _sum?: SofPortLogEventCategoriesSumAggregateInputType
    _min?: SofPortLogEventCategoriesMinAggregateInputType
    _max?: SofPortLogEventCategoriesMaxAggregateInputType
  }


  export type SofPortLogEventCategoriesGroupByOutputType = {
    id: number
    name: string | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: SofPortLogEventCategoriesCountAggregateOutputType | null
    _avg: SofPortLogEventCategoriesAvgAggregateOutputType | null
    _sum: SofPortLogEventCategoriesSumAggregateOutputType | null
    _min: SofPortLogEventCategoriesMinAggregateOutputType | null
    _max: SofPortLogEventCategoriesMaxAggregateOutputType | null
  }

  type GetSofPortLogEventCategoriesGroupByPayload<T extends SofPortLogEventCategoriesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<SofPortLogEventCategoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SofPortLogEventCategoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SofPortLogEventCategoriesGroupByOutputType[P]>
            : GetScalarType<T[P], SofPortLogEventCategoriesGroupByOutputType[P]>
        }
      >
    >


  export type SofPortLogEventCategoriesSelect = {
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    events?: boolean | SofPortLogEventsFindManyArgs
    _count?: boolean | SofPortLogEventCategoriesCountOutputTypeArgs
  }

  export type SofPortLogEventCategoriesInclude = {
    events?: boolean | SofPortLogEventsFindManyArgs
    _count?: boolean | SofPortLogEventCategoriesCountOutputTypeArgs
  }

  export type SofPortLogEventCategoriesGetPayload<
    S extends boolean | null | undefined | SofPortLogEventCategoriesArgs,
    U = keyof S
      > = S extends true
        ? SofPortLogEventCategories
    : S extends undefined
    ? never
    : S extends SofPortLogEventCategoriesArgs | SofPortLogEventCategoriesFindManyArgs
    ?'include' extends U
    ? SofPortLogEventCategories  & {
    [P in TrueKeys<S['include']>]:
        P extends 'events' ? Array < SofPortLogEventsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? SofPortLogEventCategoriesCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'events' ? Array < SofPortLogEventsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? SofPortLogEventCategoriesCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof SofPortLogEventCategories ? SofPortLogEventCategories[P] : never
  } 
    : SofPortLogEventCategories
  : SofPortLogEventCategories


  type SofPortLogEventCategoriesCountArgs = Merge<
    Omit<SofPortLogEventCategoriesFindManyArgs, 'select' | 'include'> & {
      select?: SofPortLogEventCategoriesCountAggregateInputType | true
    }
  >

  export interface SofPortLogEventCategoriesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one SofPortLogEventCategories that matches the filter.
     * @param {SofPortLogEventCategoriesFindUniqueArgs} args - Arguments to find a SofPortLogEventCategories
     * @example
     * // Get one SofPortLogEventCategories
     * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SofPortLogEventCategoriesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, SofPortLogEventCategoriesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'SofPortLogEventCategories'> extends True ? CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories>, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T>>> : CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories | null >, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T> | null >>

    /**
     * Find the first SofPortLogEventCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventCategoriesFindFirstArgs} args - Arguments to find a SofPortLogEventCategories
     * @example
     * // Get one SofPortLogEventCategories
     * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SofPortLogEventCategoriesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, SofPortLogEventCategoriesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'SofPortLogEventCategories'> extends True ? CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories>, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T>>> : CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories | null >, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T> | null >>

    /**
     * Find zero or more SofPortLogEventCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventCategoriesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SofPortLogEventCategories
     * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.findMany()
     * 
     * // Get first 10 SofPortLogEventCategories
     * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sofPortLogEventCategoriesWithIdOnly = await prisma.sofPortLogEventCategories.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends SofPortLogEventCategoriesFindManyArgs>(
      args?: SelectSubset<T, SofPortLogEventCategoriesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<SofPortLogEventCategories>>, PrismaPromise<Array<SofPortLogEventCategoriesGetPayload<T>>>>

    /**
     * Create a SofPortLogEventCategories.
     * @param {SofPortLogEventCategoriesCreateArgs} args - Arguments to create a SofPortLogEventCategories.
     * @example
     * // Create one SofPortLogEventCategories
     * const SofPortLogEventCategories = await prisma.sofPortLogEventCategories.create({
     *   data: {
     *     // ... data to create a SofPortLogEventCategories
     *   }
     * })
     * 
    **/
    create<T extends SofPortLogEventCategoriesCreateArgs>(
      args: SelectSubset<T, SofPortLogEventCategoriesCreateArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories>, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T>>>

    /**
     * Create many SofPortLogEventCategories.
     *     @param {SofPortLogEventCategoriesCreateManyArgs} args - Arguments to create many SofPortLogEventCategories.
     *     @example
     *     // Create many SofPortLogEventCategories
     *     const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends SofPortLogEventCategoriesCreateManyArgs>(
      args?: SelectSubset<T, SofPortLogEventCategoriesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a SofPortLogEventCategories.
     * @param {SofPortLogEventCategoriesDeleteArgs} args - Arguments to delete one SofPortLogEventCategories.
     * @example
     * // Delete one SofPortLogEventCategories
     * const SofPortLogEventCategories = await prisma.sofPortLogEventCategories.delete({
     *   where: {
     *     // ... filter to delete one SofPortLogEventCategories
     *   }
     * })
     * 
    **/
    delete<T extends SofPortLogEventCategoriesDeleteArgs>(
      args: SelectSubset<T, SofPortLogEventCategoriesDeleteArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories>, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T>>>

    /**
     * Update one SofPortLogEventCategories.
     * @param {SofPortLogEventCategoriesUpdateArgs} args - Arguments to update one SofPortLogEventCategories.
     * @example
     * // Update one SofPortLogEventCategories
     * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SofPortLogEventCategoriesUpdateArgs>(
      args: SelectSubset<T, SofPortLogEventCategoriesUpdateArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories>, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T>>>

    /**
     * Delete zero or more SofPortLogEventCategories.
     * @param {SofPortLogEventCategoriesDeleteManyArgs} args - Arguments to filter SofPortLogEventCategories to delete.
     * @example
     * // Delete a few SofPortLogEventCategories
     * const { count } = await prisma.sofPortLogEventCategories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SofPortLogEventCategoriesDeleteManyArgs>(
      args?: SelectSubset<T, SofPortLogEventCategoriesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more SofPortLogEventCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventCategoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SofPortLogEventCategories
     * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SofPortLogEventCategoriesUpdateManyArgs>(
      args: SelectSubset<T, SofPortLogEventCategoriesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one SofPortLogEventCategories.
     * @param {SofPortLogEventCategoriesUpsertArgs} args - Arguments to update or create a SofPortLogEventCategories.
     * @example
     * // Update or create a SofPortLogEventCategories
     * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.upsert({
     *   create: {
     *     // ... data to create a SofPortLogEventCategories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SofPortLogEventCategories we want to update
     *   }
     * })
    **/
    upsert<T extends SofPortLogEventCategoriesUpsertArgs>(
      args: SelectSubset<T, SofPortLogEventCategoriesUpsertArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories>, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T>>>

    /**
     * Find one SofPortLogEventCategories that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {SofPortLogEventCategoriesFindUniqueOrThrowArgs} args - Arguments to find a SofPortLogEventCategories
     * @example
     * // Get one SofPortLogEventCategories
     * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SofPortLogEventCategoriesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, SofPortLogEventCategoriesFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories>, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T>>>

    /**
     * Find the first SofPortLogEventCategories that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventCategoriesFindFirstOrThrowArgs} args - Arguments to find a SofPortLogEventCategories
     * @example
     * // Get one SofPortLogEventCategories
     * const sofPortLogEventCategories = await prisma.sofPortLogEventCategories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SofPortLogEventCategoriesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, SofPortLogEventCategoriesFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories>, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T>>>

    /**
     * Count the number of SofPortLogEventCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventCategoriesCountArgs} args - Arguments to filter SofPortLogEventCategories to count.
     * @example
     * // Count the number of SofPortLogEventCategories
     * const count = await prisma.sofPortLogEventCategories.count({
     *   where: {
     *     // ... the filter for the SofPortLogEventCategories we want to count
     *   }
     * })
    **/
    count<T extends SofPortLogEventCategoriesCountArgs>(
      args?: Subset<T, SofPortLogEventCategoriesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SofPortLogEventCategoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SofPortLogEventCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventCategoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SofPortLogEventCategoriesAggregateArgs>(args: Subset<T, SofPortLogEventCategoriesAggregateArgs>): PrismaPromise<GetSofPortLogEventCategoriesAggregateType<T>>

    /**
     * Group by SofPortLogEventCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventCategoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SofPortLogEventCategoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SofPortLogEventCategoriesGroupByArgs['orderBy'] }
        : { orderBy?: SofPortLogEventCategoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SofPortLogEventCategoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSofPortLogEventCategoriesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for SofPortLogEventCategories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__SofPortLogEventCategoriesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    events<T extends SofPortLogEventsFindManyArgs = {}>(args?: Subset<T, SofPortLogEventsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<SofPortLogEvents>>, PrismaPromise<Array<SofPortLogEventsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * SofPortLogEventCategories base type for findUnique actions
   */
  export type SofPortLogEventCategoriesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the SofPortLogEventCategories
     * 
    **/
    select?: SofPortLogEventCategoriesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventCategoriesInclude | null
    /**
     * Filter, which SofPortLogEventCategories to fetch.
     * 
    **/
    where: SofPortLogEventCategoriesWhereUniqueInput
  }

  /**
   * SofPortLogEventCategories: findUnique
   */
  export interface SofPortLogEventCategoriesFindUniqueArgs extends SofPortLogEventCategoriesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * SofPortLogEventCategories base type for findFirst actions
   */
  export type SofPortLogEventCategoriesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the SofPortLogEventCategories
     * 
    **/
    select?: SofPortLogEventCategoriesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventCategoriesInclude | null
    /**
     * Filter, which SofPortLogEventCategories to fetch.
     * 
    **/
    where?: SofPortLogEventCategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SofPortLogEventCategories to fetch.
     * 
    **/
    orderBy?: Enumerable<SofPortLogEventCategoriesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SofPortLogEventCategories.
     * 
    **/
    cursor?: SofPortLogEventCategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SofPortLogEventCategories from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SofPortLogEventCategories.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SofPortLogEventCategories.
     * 
    **/
    distinct?: Enumerable<SofPortLogEventCategoriesScalarFieldEnum>
  }

  /**
   * SofPortLogEventCategories: findFirst
   */
  export interface SofPortLogEventCategoriesFindFirstArgs extends SofPortLogEventCategoriesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * SofPortLogEventCategories findMany
   */
  export type SofPortLogEventCategoriesFindManyArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEventCategories
     * 
    **/
    select?: SofPortLogEventCategoriesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventCategoriesInclude | null
    /**
     * Filter, which SofPortLogEventCategories to fetch.
     * 
    **/
    where?: SofPortLogEventCategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SofPortLogEventCategories to fetch.
     * 
    **/
    orderBy?: Enumerable<SofPortLogEventCategoriesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SofPortLogEventCategories.
     * 
    **/
    cursor?: SofPortLogEventCategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SofPortLogEventCategories from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SofPortLogEventCategories.
     * 
    **/
    skip?: number
    distinct?: Enumerable<SofPortLogEventCategoriesScalarFieldEnum>
  }


  /**
   * SofPortLogEventCategories create
   */
  export type SofPortLogEventCategoriesCreateArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEventCategories
     * 
    **/
    select?: SofPortLogEventCategoriesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventCategoriesInclude | null
    /**
     * The data needed to create a SofPortLogEventCategories.
     * 
    **/
    data: XOR<SofPortLogEventCategoriesCreateInput, SofPortLogEventCategoriesUncheckedCreateInput>
  }


  /**
   * SofPortLogEventCategories createMany
   */
  export type SofPortLogEventCategoriesCreateManyArgs = {
    /**
     * The data used to create many SofPortLogEventCategories.
     * 
    **/
    data: Enumerable<SofPortLogEventCategoriesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * SofPortLogEventCategories update
   */
  export type SofPortLogEventCategoriesUpdateArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEventCategories
     * 
    **/
    select?: SofPortLogEventCategoriesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventCategoriesInclude | null
    /**
     * The data needed to update a SofPortLogEventCategories.
     * 
    **/
    data: XOR<SofPortLogEventCategoriesUpdateInput, SofPortLogEventCategoriesUncheckedUpdateInput>
    /**
     * Choose, which SofPortLogEventCategories to update.
     * 
    **/
    where: SofPortLogEventCategoriesWhereUniqueInput
  }


  /**
   * SofPortLogEventCategories updateMany
   */
  export type SofPortLogEventCategoriesUpdateManyArgs = {
    /**
     * The data used to update SofPortLogEventCategories.
     * 
    **/
    data: XOR<SofPortLogEventCategoriesUpdateManyMutationInput, SofPortLogEventCategoriesUncheckedUpdateManyInput>
    /**
     * Filter which SofPortLogEventCategories to update
     * 
    **/
    where?: SofPortLogEventCategoriesWhereInput
  }


  /**
   * SofPortLogEventCategories upsert
   */
  export type SofPortLogEventCategoriesUpsertArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEventCategories
     * 
    **/
    select?: SofPortLogEventCategoriesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventCategoriesInclude | null
    /**
     * The filter to search for the SofPortLogEventCategories to update in case it exists.
     * 
    **/
    where: SofPortLogEventCategoriesWhereUniqueInput
    /**
     * In case the SofPortLogEventCategories found by the `where` argument doesn't exist, create a new SofPortLogEventCategories with this data.
     * 
    **/
    create: XOR<SofPortLogEventCategoriesCreateInput, SofPortLogEventCategoriesUncheckedCreateInput>
    /**
     * In case the SofPortLogEventCategories was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<SofPortLogEventCategoriesUpdateInput, SofPortLogEventCategoriesUncheckedUpdateInput>
  }


  /**
   * SofPortLogEventCategories delete
   */
  export type SofPortLogEventCategoriesDeleteArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEventCategories
     * 
    **/
    select?: SofPortLogEventCategoriesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventCategoriesInclude | null
    /**
     * Filter which SofPortLogEventCategories to delete.
     * 
    **/
    where: SofPortLogEventCategoriesWhereUniqueInput
  }


  /**
   * SofPortLogEventCategories deleteMany
   */
  export type SofPortLogEventCategoriesDeleteManyArgs = {
    /**
     * Filter which SofPortLogEventCategories to delete
     * 
    **/
    where?: SofPortLogEventCategoriesWhereInput
  }


  /**
   * SofPortLogEventCategories: findUniqueOrThrow
   */
  export type SofPortLogEventCategoriesFindUniqueOrThrowArgs = SofPortLogEventCategoriesFindUniqueArgsBase
      

  /**
   * SofPortLogEventCategories: findFirstOrThrow
   */
  export type SofPortLogEventCategoriesFindFirstOrThrowArgs = SofPortLogEventCategoriesFindFirstArgsBase
      

  /**
   * SofPortLogEventCategories without action
   */
  export type SofPortLogEventCategoriesArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEventCategories
     * 
    **/
    select?: SofPortLogEventCategoriesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventCategoriesInclude | null
  }



  /**
   * Model SofPortLogEvents
   */


  export type AggregateSofPortLogEvents = {
    _count: SofPortLogEventsCountAggregateOutputType | null
    _avg: SofPortLogEventsAvgAggregateOutputType | null
    _sum: SofPortLogEventsSumAggregateOutputType | null
    _min: SofPortLogEventsMinAggregateOutputType | null
    _max: SofPortLogEventsMaxAggregateOutputType | null
  }

  export type SofPortLogEventsAvgAggregateOutputType = {
    id: number | null
    category_id: number | null
  }

  export type SofPortLogEventsSumAggregateOutputType = {
    id: number | null
    category_id: number | null
  }

  export type SofPortLogEventsMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    category_id: number | null
  }

  export type SofPortLogEventsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    category_id: number | null
  }

  export type SofPortLogEventsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created_at: number
    updated_at: number
    deleted_at: number
    category_id: number
    _all: number
  }


  export type SofPortLogEventsAvgAggregateInputType = {
    id?: true
    category_id?: true
  }

  export type SofPortLogEventsSumAggregateInputType = {
    id?: true
    category_id?: true
  }

  export type SofPortLogEventsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    category_id?: true
  }

  export type SofPortLogEventsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    category_id?: true
  }

  export type SofPortLogEventsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    category_id?: true
    _all?: true
  }

  export type SofPortLogEventsAggregateArgs = {
    /**
     * Filter which SofPortLogEvents to aggregate.
     * 
    **/
    where?: SofPortLogEventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SofPortLogEvents to fetch.
     * 
    **/
    orderBy?: Enumerable<SofPortLogEventsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: SofPortLogEventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SofPortLogEvents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SofPortLogEvents.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SofPortLogEvents
    **/
    _count?: true | SofPortLogEventsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SofPortLogEventsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SofPortLogEventsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SofPortLogEventsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SofPortLogEventsMaxAggregateInputType
  }

  export type GetSofPortLogEventsAggregateType<T extends SofPortLogEventsAggregateArgs> = {
        [P in keyof T & keyof AggregateSofPortLogEvents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSofPortLogEvents[P]>
      : GetScalarType<T[P], AggregateSofPortLogEvents[P]>
  }




  export type SofPortLogEventsGroupByArgs = {
    where?: SofPortLogEventsWhereInput
    orderBy?: Enumerable<SofPortLogEventsOrderByWithAggregationInput>
    by: Array<SofPortLogEventsScalarFieldEnum>
    having?: SofPortLogEventsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SofPortLogEventsCountAggregateInputType | true
    _avg?: SofPortLogEventsAvgAggregateInputType
    _sum?: SofPortLogEventsSumAggregateInputType
    _min?: SofPortLogEventsMinAggregateInputType
    _max?: SofPortLogEventsMaxAggregateInputType
  }


  export type SofPortLogEventsGroupByOutputType = {
    id: number
    name: string | null
    description: string | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    category_id: number | null
    _count: SofPortLogEventsCountAggregateOutputType | null
    _avg: SofPortLogEventsAvgAggregateOutputType | null
    _sum: SofPortLogEventsSumAggregateOutputType | null
    _min: SofPortLogEventsMinAggregateOutputType | null
    _max: SofPortLogEventsMaxAggregateOutputType | null
  }

  type GetSofPortLogEventsGroupByPayload<T extends SofPortLogEventsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<SofPortLogEventsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SofPortLogEventsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SofPortLogEventsGroupByOutputType[P]>
            : GetScalarType<T[P], SofPortLogEventsGroupByOutputType[P]>
        }
      >
    >


  export type SofPortLogEventsSelect = {
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    category?: boolean | SofPortLogEventCategoriesArgs
    category_id?: boolean
    ShippingSofPortLogEvents?: boolean | ShippingSofPortLogEventsFindManyArgs
    _count?: boolean | SofPortLogEventsCountOutputTypeArgs
  }

  export type SofPortLogEventsInclude = {
    category?: boolean | SofPortLogEventCategoriesArgs
    ShippingSofPortLogEvents?: boolean | ShippingSofPortLogEventsFindManyArgs
    _count?: boolean | SofPortLogEventsCountOutputTypeArgs
  }

  export type SofPortLogEventsGetPayload<
    S extends boolean | null | undefined | SofPortLogEventsArgs,
    U = keyof S
      > = S extends true
        ? SofPortLogEvents
    : S extends undefined
    ? never
    : S extends SofPortLogEventsArgs | SofPortLogEventsFindManyArgs
    ?'include' extends U
    ? SofPortLogEvents  & {
    [P in TrueKeys<S['include']>]:
        P extends 'category' ? SofPortLogEventCategoriesGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'ShippingSofPortLogEvents' ? Array < ShippingSofPortLogEventsGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? SofPortLogEventsCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'category' ? SofPortLogEventCategoriesGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'ShippingSofPortLogEvents' ? Array < ShippingSofPortLogEventsGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? SofPortLogEventsCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof SofPortLogEvents ? SofPortLogEvents[P] : never
  } 
    : SofPortLogEvents
  : SofPortLogEvents


  type SofPortLogEventsCountArgs = Merge<
    Omit<SofPortLogEventsFindManyArgs, 'select' | 'include'> & {
      select?: SofPortLogEventsCountAggregateInputType | true
    }
  >

  export interface SofPortLogEventsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one SofPortLogEvents that matches the filter.
     * @param {SofPortLogEventsFindUniqueArgs} args - Arguments to find a SofPortLogEvents
     * @example
     * // Get one SofPortLogEvents
     * const sofPortLogEvents = await prisma.sofPortLogEvents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SofPortLogEventsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, SofPortLogEventsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'SofPortLogEvents'> extends True ? CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents>, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T>>> : CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents | null >, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T> | null >>

    /**
     * Find the first SofPortLogEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventsFindFirstArgs} args - Arguments to find a SofPortLogEvents
     * @example
     * // Get one SofPortLogEvents
     * const sofPortLogEvents = await prisma.sofPortLogEvents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SofPortLogEventsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, SofPortLogEventsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'SofPortLogEvents'> extends True ? CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents>, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T>>> : CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents | null >, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T> | null >>

    /**
     * Find zero or more SofPortLogEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SofPortLogEvents
     * const sofPortLogEvents = await prisma.sofPortLogEvents.findMany()
     * 
     * // Get first 10 SofPortLogEvents
     * const sofPortLogEvents = await prisma.sofPortLogEvents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sofPortLogEventsWithIdOnly = await prisma.sofPortLogEvents.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends SofPortLogEventsFindManyArgs>(
      args?: SelectSubset<T, SofPortLogEventsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<SofPortLogEvents>>, PrismaPromise<Array<SofPortLogEventsGetPayload<T>>>>

    /**
     * Create a SofPortLogEvents.
     * @param {SofPortLogEventsCreateArgs} args - Arguments to create a SofPortLogEvents.
     * @example
     * // Create one SofPortLogEvents
     * const SofPortLogEvents = await prisma.sofPortLogEvents.create({
     *   data: {
     *     // ... data to create a SofPortLogEvents
     *   }
     * })
     * 
    **/
    create<T extends SofPortLogEventsCreateArgs>(
      args: SelectSubset<T, SofPortLogEventsCreateArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents>, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T>>>

    /**
     * Create many SofPortLogEvents.
     *     @param {SofPortLogEventsCreateManyArgs} args - Arguments to create many SofPortLogEvents.
     *     @example
     *     // Create many SofPortLogEvents
     *     const sofPortLogEvents = await prisma.sofPortLogEvents.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends SofPortLogEventsCreateManyArgs>(
      args?: SelectSubset<T, SofPortLogEventsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a SofPortLogEvents.
     * @param {SofPortLogEventsDeleteArgs} args - Arguments to delete one SofPortLogEvents.
     * @example
     * // Delete one SofPortLogEvents
     * const SofPortLogEvents = await prisma.sofPortLogEvents.delete({
     *   where: {
     *     // ... filter to delete one SofPortLogEvents
     *   }
     * })
     * 
    **/
    delete<T extends SofPortLogEventsDeleteArgs>(
      args: SelectSubset<T, SofPortLogEventsDeleteArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents>, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T>>>

    /**
     * Update one SofPortLogEvents.
     * @param {SofPortLogEventsUpdateArgs} args - Arguments to update one SofPortLogEvents.
     * @example
     * // Update one SofPortLogEvents
     * const sofPortLogEvents = await prisma.sofPortLogEvents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SofPortLogEventsUpdateArgs>(
      args: SelectSubset<T, SofPortLogEventsUpdateArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents>, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T>>>

    /**
     * Delete zero or more SofPortLogEvents.
     * @param {SofPortLogEventsDeleteManyArgs} args - Arguments to filter SofPortLogEvents to delete.
     * @example
     * // Delete a few SofPortLogEvents
     * const { count } = await prisma.sofPortLogEvents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SofPortLogEventsDeleteManyArgs>(
      args?: SelectSubset<T, SofPortLogEventsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more SofPortLogEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SofPortLogEvents
     * const sofPortLogEvents = await prisma.sofPortLogEvents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SofPortLogEventsUpdateManyArgs>(
      args: SelectSubset<T, SofPortLogEventsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one SofPortLogEvents.
     * @param {SofPortLogEventsUpsertArgs} args - Arguments to update or create a SofPortLogEvents.
     * @example
     * // Update or create a SofPortLogEvents
     * const sofPortLogEvents = await prisma.sofPortLogEvents.upsert({
     *   create: {
     *     // ... data to create a SofPortLogEvents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SofPortLogEvents we want to update
     *   }
     * })
    **/
    upsert<T extends SofPortLogEventsUpsertArgs>(
      args: SelectSubset<T, SofPortLogEventsUpsertArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents>, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T>>>

    /**
     * Find one SofPortLogEvents that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {SofPortLogEventsFindUniqueOrThrowArgs} args - Arguments to find a SofPortLogEvents
     * @example
     * // Get one SofPortLogEvents
     * const sofPortLogEvents = await prisma.sofPortLogEvents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SofPortLogEventsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, SofPortLogEventsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents>, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T>>>

    /**
     * Find the first SofPortLogEvents that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventsFindFirstOrThrowArgs} args - Arguments to find a SofPortLogEvents
     * @example
     * // Get one SofPortLogEvents
     * const sofPortLogEvents = await prisma.sofPortLogEvents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SofPortLogEventsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, SofPortLogEventsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents>, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T>>>

    /**
     * Count the number of SofPortLogEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventsCountArgs} args - Arguments to filter SofPortLogEvents to count.
     * @example
     * // Count the number of SofPortLogEvents
     * const count = await prisma.sofPortLogEvents.count({
     *   where: {
     *     // ... the filter for the SofPortLogEvents we want to count
     *   }
     * })
    **/
    count<T extends SofPortLogEventsCountArgs>(
      args?: Subset<T, SofPortLogEventsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SofPortLogEventsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SofPortLogEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SofPortLogEventsAggregateArgs>(args: Subset<T, SofPortLogEventsAggregateArgs>): PrismaPromise<GetSofPortLogEventsAggregateType<T>>

    /**
     * Group by SofPortLogEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SofPortLogEventsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SofPortLogEventsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SofPortLogEventsGroupByArgs['orderBy'] }
        : { orderBy?: SofPortLogEventsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SofPortLogEventsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSofPortLogEventsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for SofPortLogEvents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__SofPortLogEventsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    category<T extends SofPortLogEventCategoriesArgs = {}>(args?: Subset<T, SofPortLogEventCategoriesArgs>): CheckSelect<T, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategories | null >, Prisma__SofPortLogEventCategoriesClient<SofPortLogEventCategoriesGetPayload<T> | null >>;

    ShippingSofPortLogEvents<T extends ShippingSofPortLogEventsFindManyArgs = {}>(args?: Subset<T, ShippingSofPortLogEventsFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShippingSofPortLogEvents>>, PrismaPromise<Array<ShippingSofPortLogEventsGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * SofPortLogEvents base type for findUnique actions
   */
  export type SofPortLogEventsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the SofPortLogEvents
     * 
    **/
    select?: SofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventsInclude | null
    /**
     * Filter, which SofPortLogEvents to fetch.
     * 
    **/
    where: SofPortLogEventsWhereUniqueInput
  }

  /**
   * SofPortLogEvents: findUnique
   */
  export interface SofPortLogEventsFindUniqueArgs extends SofPortLogEventsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * SofPortLogEvents base type for findFirst actions
   */
  export type SofPortLogEventsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the SofPortLogEvents
     * 
    **/
    select?: SofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventsInclude | null
    /**
     * Filter, which SofPortLogEvents to fetch.
     * 
    **/
    where?: SofPortLogEventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SofPortLogEvents to fetch.
     * 
    **/
    orderBy?: Enumerable<SofPortLogEventsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SofPortLogEvents.
     * 
    **/
    cursor?: SofPortLogEventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SofPortLogEvents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SofPortLogEvents.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SofPortLogEvents.
     * 
    **/
    distinct?: Enumerable<SofPortLogEventsScalarFieldEnum>
  }

  /**
   * SofPortLogEvents: findFirst
   */
  export interface SofPortLogEventsFindFirstArgs extends SofPortLogEventsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * SofPortLogEvents findMany
   */
  export type SofPortLogEventsFindManyArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEvents
     * 
    **/
    select?: SofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventsInclude | null
    /**
     * Filter, which SofPortLogEvents to fetch.
     * 
    **/
    where?: SofPortLogEventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SofPortLogEvents to fetch.
     * 
    **/
    orderBy?: Enumerable<SofPortLogEventsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SofPortLogEvents.
     * 
    **/
    cursor?: SofPortLogEventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SofPortLogEvents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SofPortLogEvents.
     * 
    **/
    skip?: number
    distinct?: Enumerable<SofPortLogEventsScalarFieldEnum>
  }


  /**
   * SofPortLogEvents create
   */
  export type SofPortLogEventsCreateArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEvents
     * 
    **/
    select?: SofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventsInclude | null
    /**
     * The data needed to create a SofPortLogEvents.
     * 
    **/
    data: XOR<SofPortLogEventsCreateInput, SofPortLogEventsUncheckedCreateInput>
  }


  /**
   * SofPortLogEvents createMany
   */
  export type SofPortLogEventsCreateManyArgs = {
    /**
     * The data used to create many SofPortLogEvents.
     * 
    **/
    data: Enumerable<SofPortLogEventsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * SofPortLogEvents update
   */
  export type SofPortLogEventsUpdateArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEvents
     * 
    **/
    select?: SofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventsInclude | null
    /**
     * The data needed to update a SofPortLogEvents.
     * 
    **/
    data: XOR<SofPortLogEventsUpdateInput, SofPortLogEventsUncheckedUpdateInput>
    /**
     * Choose, which SofPortLogEvents to update.
     * 
    **/
    where: SofPortLogEventsWhereUniqueInput
  }


  /**
   * SofPortLogEvents updateMany
   */
  export type SofPortLogEventsUpdateManyArgs = {
    /**
     * The data used to update SofPortLogEvents.
     * 
    **/
    data: XOR<SofPortLogEventsUpdateManyMutationInput, SofPortLogEventsUncheckedUpdateManyInput>
    /**
     * Filter which SofPortLogEvents to update
     * 
    **/
    where?: SofPortLogEventsWhereInput
  }


  /**
   * SofPortLogEvents upsert
   */
  export type SofPortLogEventsUpsertArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEvents
     * 
    **/
    select?: SofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventsInclude | null
    /**
     * The filter to search for the SofPortLogEvents to update in case it exists.
     * 
    **/
    where: SofPortLogEventsWhereUniqueInput
    /**
     * In case the SofPortLogEvents found by the `where` argument doesn't exist, create a new SofPortLogEvents with this data.
     * 
    **/
    create: XOR<SofPortLogEventsCreateInput, SofPortLogEventsUncheckedCreateInput>
    /**
     * In case the SofPortLogEvents was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<SofPortLogEventsUpdateInput, SofPortLogEventsUncheckedUpdateInput>
  }


  /**
   * SofPortLogEvents delete
   */
  export type SofPortLogEventsDeleteArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEvents
     * 
    **/
    select?: SofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventsInclude | null
    /**
     * Filter which SofPortLogEvents to delete.
     * 
    **/
    where: SofPortLogEventsWhereUniqueInput
  }


  /**
   * SofPortLogEvents deleteMany
   */
  export type SofPortLogEventsDeleteManyArgs = {
    /**
     * Filter which SofPortLogEvents to delete
     * 
    **/
    where?: SofPortLogEventsWhereInput
  }


  /**
   * SofPortLogEvents: findUniqueOrThrow
   */
  export type SofPortLogEventsFindUniqueOrThrowArgs = SofPortLogEventsFindUniqueArgsBase
      

  /**
   * SofPortLogEvents: findFirstOrThrow
   */
  export type SofPortLogEventsFindFirstOrThrowArgs = SofPortLogEventsFindFirstArgsBase
      

  /**
   * SofPortLogEvents without action
   */
  export type SofPortLogEventsArgs = {
    /**
     * Select specific fields to fetch from the SofPortLogEvents
     * 
    **/
    select?: SofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SofPortLogEventsInclude | null
  }



  /**
   * Model ShippingSofPortLogEvents
   */


  export type AggregateShippingSofPortLogEvents = {
    _count: ShippingSofPortLogEventsCountAggregateOutputType | null
    _avg: ShippingSofPortLogEventsAvgAggregateOutputType | null
    _sum: ShippingSofPortLogEventsSumAggregateOutputType | null
    _min: ShippingSofPortLogEventsMinAggregateOutputType | null
    _max: ShippingSofPortLogEventsMaxAggregateOutputType | null
  }

  export type ShippingSofPortLogEventsAvgAggregateOutputType = {
    id: number | null
    sof_port_log_event_id: number | null
    shipping_sof_id: number | null
    created_by_user_id: number | null
  }

  export type ShippingSofPortLogEventsSumAggregateOutputType = {
    id: number | null
    sof_port_log_event_id: number | null
    shipping_sof_id: number | null
    created_by_user_id: number | null
  }

  export type ShippingSofPortLogEventsMinAggregateOutputType = {
    id: number | null
    name: string | null
    commentary: string | null
    is_important: boolean | null
    is_highlighted: boolean | null
    start_date: Date | null
    end_date: Date | null
    sof_port_log_event_id: number | null
    shipping_sof_id: number | null
    created_by_user_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ShippingSofPortLogEventsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    commentary: string | null
    is_important: boolean | null
    is_highlighted: boolean | null
    start_date: Date | null
    end_date: Date | null
    sof_port_log_event_id: number | null
    shipping_sof_id: number | null
    created_by_user_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type ShippingSofPortLogEventsCountAggregateOutputType = {
    id: number
    name: number
    commentary: number
    is_important: number
    is_highlighted: number
    start_date: number
    end_date: number
    sof_port_log_event_id: number
    shipping_sof_id: number
    created_by_user_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type ShippingSofPortLogEventsAvgAggregateInputType = {
    id?: true
    sof_port_log_event_id?: true
    shipping_sof_id?: true
    created_by_user_id?: true
  }

  export type ShippingSofPortLogEventsSumAggregateInputType = {
    id?: true
    sof_port_log_event_id?: true
    shipping_sof_id?: true
    created_by_user_id?: true
  }

  export type ShippingSofPortLogEventsMinAggregateInputType = {
    id?: true
    name?: true
    commentary?: true
    is_important?: true
    is_highlighted?: true
    start_date?: true
    end_date?: true
    sof_port_log_event_id?: true
    shipping_sof_id?: true
    created_by_user_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ShippingSofPortLogEventsMaxAggregateInputType = {
    id?: true
    name?: true
    commentary?: true
    is_important?: true
    is_highlighted?: true
    start_date?: true
    end_date?: true
    sof_port_log_event_id?: true
    shipping_sof_id?: true
    created_by_user_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type ShippingSofPortLogEventsCountAggregateInputType = {
    id?: true
    name?: true
    commentary?: true
    is_important?: true
    is_highlighted?: true
    start_date?: true
    end_date?: true
    sof_port_log_event_id?: true
    shipping_sof_id?: true
    created_by_user_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type ShippingSofPortLogEventsAggregateArgs = {
    /**
     * Filter which ShippingSofPortLogEvents to aggregate.
     * 
    **/
    where?: ShippingSofPortLogEventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingSofPortLogEvents to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingSofPortLogEventsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ShippingSofPortLogEventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingSofPortLogEvents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingSofPortLogEvents.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShippingSofPortLogEvents
    **/
    _count?: true | ShippingSofPortLogEventsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingSofPortLogEventsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingSofPortLogEventsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingSofPortLogEventsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingSofPortLogEventsMaxAggregateInputType
  }

  export type GetShippingSofPortLogEventsAggregateType<T extends ShippingSofPortLogEventsAggregateArgs> = {
        [P in keyof T & keyof AggregateShippingSofPortLogEvents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShippingSofPortLogEvents[P]>
      : GetScalarType<T[P], AggregateShippingSofPortLogEvents[P]>
  }




  export type ShippingSofPortLogEventsGroupByArgs = {
    where?: ShippingSofPortLogEventsWhereInput
    orderBy?: Enumerable<ShippingSofPortLogEventsOrderByWithAggregationInput>
    by: Array<ShippingSofPortLogEventsScalarFieldEnum>
    having?: ShippingSofPortLogEventsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingSofPortLogEventsCountAggregateInputType | true
    _avg?: ShippingSofPortLogEventsAvgAggregateInputType
    _sum?: ShippingSofPortLogEventsSumAggregateInputType
    _min?: ShippingSofPortLogEventsMinAggregateInputType
    _max?: ShippingSofPortLogEventsMaxAggregateInputType
  }


  export type ShippingSofPortLogEventsGroupByOutputType = {
    id: number
    name: string | null
    commentary: string | null
    is_important: boolean | null
    is_highlighted: boolean | null
    start_date: Date | null
    end_date: Date | null
    sof_port_log_event_id: number
    shipping_sof_id: number
    created_by_user_id: number
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: ShippingSofPortLogEventsCountAggregateOutputType | null
    _avg: ShippingSofPortLogEventsAvgAggregateOutputType | null
    _sum: ShippingSofPortLogEventsSumAggregateOutputType | null
    _min: ShippingSofPortLogEventsMinAggregateOutputType | null
    _max: ShippingSofPortLogEventsMaxAggregateOutputType | null
  }

  type GetShippingSofPortLogEventsGroupByPayload<T extends ShippingSofPortLogEventsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ShippingSofPortLogEventsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingSofPortLogEventsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingSofPortLogEventsGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingSofPortLogEventsGroupByOutputType[P]>
        }
      >
    >


  export type ShippingSofPortLogEventsSelect = {
    id?: boolean
    name?: boolean
    commentary?: boolean
    is_important?: boolean
    is_highlighted?: boolean
    start_date?: boolean
    end_date?: boolean
    sof_port_log_event_id?: boolean
    shipping_sof_id?: boolean
    created_by_user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    sof_port_log_event?: boolean | SofPortLogEventsArgs
    shipping_sof?: boolean | sofArgs
    created_by_user?: boolean | usersArgs
  }

  export type ShippingSofPortLogEventsInclude = {
    sof_port_log_event?: boolean | SofPortLogEventsArgs
    shipping_sof?: boolean | sofArgs
    created_by_user?: boolean | usersArgs
  }

  export type ShippingSofPortLogEventsGetPayload<
    S extends boolean | null | undefined | ShippingSofPortLogEventsArgs,
    U = keyof S
      > = S extends true
        ? ShippingSofPortLogEvents
    : S extends undefined
    ? never
    : S extends ShippingSofPortLogEventsArgs | ShippingSofPortLogEventsFindManyArgs
    ?'include' extends U
    ? ShippingSofPortLogEvents  & {
    [P in TrueKeys<S['include']>]:
        P extends 'sof_port_log_event' ? SofPortLogEventsGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'shipping_sof' ? sofGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'created_by_user' ? usersGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'sof_port_log_event' ? SofPortLogEventsGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'shipping_sof' ? sofGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'created_by_user' ? usersGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof ShippingSofPortLogEvents ? ShippingSofPortLogEvents[P] : never
  } 
    : ShippingSofPortLogEvents
  : ShippingSofPortLogEvents


  type ShippingSofPortLogEventsCountArgs = Merge<
    Omit<ShippingSofPortLogEventsFindManyArgs, 'select' | 'include'> & {
      select?: ShippingSofPortLogEventsCountAggregateInputType | true
    }
  >

  export interface ShippingSofPortLogEventsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ShippingSofPortLogEvents that matches the filter.
     * @param {ShippingSofPortLogEventsFindUniqueArgs} args - Arguments to find a ShippingSofPortLogEvents
     * @example
     * // Get one ShippingSofPortLogEvents
     * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShippingSofPortLogEventsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ShippingSofPortLogEventsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ShippingSofPortLogEvents'> extends True ? CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents>, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T>>> : CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents | null >, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T> | null >>

    /**
     * Find the first ShippingSofPortLogEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingSofPortLogEventsFindFirstArgs} args - Arguments to find a ShippingSofPortLogEvents
     * @example
     * // Get one ShippingSofPortLogEvents
     * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShippingSofPortLogEventsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ShippingSofPortLogEventsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ShippingSofPortLogEvents'> extends True ? CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents>, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T>>> : CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents | null >, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T> | null >>

    /**
     * Find zero or more ShippingSofPortLogEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingSofPortLogEventsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShippingSofPortLogEvents
     * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.findMany()
     * 
     * // Get first 10 ShippingSofPortLogEvents
     * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingSofPortLogEventsWithIdOnly = await prisma.shippingSofPortLogEvents.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShippingSofPortLogEventsFindManyArgs>(
      args?: SelectSubset<T, ShippingSofPortLogEventsFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ShippingSofPortLogEvents>>, PrismaPromise<Array<ShippingSofPortLogEventsGetPayload<T>>>>

    /**
     * Create a ShippingSofPortLogEvents.
     * @param {ShippingSofPortLogEventsCreateArgs} args - Arguments to create a ShippingSofPortLogEvents.
     * @example
     * // Create one ShippingSofPortLogEvents
     * const ShippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.create({
     *   data: {
     *     // ... data to create a ShippingSofPortLogEvents
     *   }
     * })
     * 
    **/
    create<T extends ShippingSofPortLogEventsCreateArgs>(
      args: SelectSubset<T, ShippingSofPortLogEventsCreateArgs>
    ): CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents>, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T>>>

    /**
     * Create many ShippingSofPortLogEvents.
     *     @param {ShippingSofPortLogEventsCreateManyArgs} args - Arguments to create many ShippingSofPortLogEvents.
     *     @example
     *     // Create many ShippingSofPortLogEvents
     *     const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ShippingSofPortLogEventsCreateManyArgs>(
      args?: SelectSubset<T, ShippingSofPortLogEventsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ShippingSofPortLogEvents.
     * @param {ShippingSofPortLogEventsDeleteArgs} args - Arguments to delete one ShippingSofPortLogEvents.
     * @example
     * // Delete one ShippingSofPortLogEvents
     * const ShippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.delete({
     *   where: {
     *     // ... filter to delete one ShippingSofPortLogEvents
     *   }
     * })
     * 
    **/
    delete<T extends ShippingSofPortLogEventsDeleteArgs>(
      args: SelectSubset<T, ShippingSofPortLogEventsDeleteArgs>
    ): CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents>, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T>>>

    /**
     * Update one ShippingSofPortLogEvents.
     * @param {ShippingSofPortLogEventsUpdateArgs} args - Arguments to update one ShippingSofPortLogEvents.
     * @example
     * // Update one ShippingSofPortLogEvents
     * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShippingSofPortLogEventsUpdateArgs>(
      args: SelectSubset<T, ShippingSofPortLogEventsUpdateArgs>
    ): CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents>, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T>>>

    /**
     * Delete zero or more ShippingSofPortLogEvents.
     * @param {ShippingSofPortLogEventsDeleteManyArgs} args - Arguments to filter ShippingSofPortLogEvents to delete.
     * @example
     * // Delete a few ShippingSofPortLogEvents
     * const { count } = await prisma.shippingSofPortLogEvents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShippingSofPortLogEventsDeleteManyArgs>(
      args?: SelectSubset<T, ShippingSofPortLogEventsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingSofPortLogEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingSofPortLogEventsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShippingSofPortLogEvents
     * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShippingSofPortLogEventsUpdateManyArgs>(
      args: SelectSubset<T, ShippingSofPortLogEventsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ShippingSofPortLogEvents.
     * @param {ShippingSofPortLogEventsUpsertArgs} args - Arguments to update or create a ShippingSofPortLogEvents.
     * @example
     * // Update or create a ShippingSofPortLogEvents
     * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.upsert({
     *   create: {
     *     // ... data to create a ShippingSofPortLogEvents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShippingSofPortLogEvents we want to update
     *   }
     * })
    **/
    upsert<T extends ShippingSofPortLogEventsUpsertArgs>(
      args: SelectSubset<T, ShippingSofPortLogEventsUpsertArgs>
    ): CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents>, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T>>>

    /**
     * Find one ShippingSofPortLogEvents that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ShippingSofPortLogEventsFindUniqueOrThrowArgs} args - Arguments to find a ShippingSofPortLogEvents
     * @example
     * // Get one ShippingSofPortLogEvents
     * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ShippingSofPortLogEventsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ShippingSofPortLogEventsFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents>, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T>>>

    /**
     * Find the first ShippingSofPortLogEvents that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingSofPortLogEventsFindFirstOrThrowArgs} args - Arguments to find a ShippingSofPortLogEvents
     * @example
     * // Get one ShippingSofPortLogEvents
     * const shippingSofPortLogEvents = await prisma.shippingSofPortLogEvents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ShippingSofPortLogEventsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ShippingSofPortLogEventsFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEvents>, Prisma__ShippingSofPortLogEventsClient<ShippingSofPortLogEventsGetPayload<T>>>

    /**
     * Count the number of ShippingSofPortLogEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingSofPortLogEventsCountArgs} args - Arguments to filter ShippingSofPortLogEvents to count.
     * @example
     * // Count the number of ShippingSofPortLogEvents
     * const count = await prisma.shippingSofPortLogEvents.count({
     *   where: {
     *     // ... the filter for the ShippingSofPortLogEvents we want to count
     *   }
     * })
    **/
    count<T extends ShippingSofPortLogEventsCountArgs>(
      args?: Subset<T, ShippingSofPortLogEventsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingSofPortLogEventsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShippingSofPortLogEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingSofPortLogEventsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingSofPortLogEventsAggregateArgs>(args: Subset<T, ShippingSofPortLogEventsAggregateArgs>): PrismaPromise<GetShippingSofPortLogEventsAggregateType<T>>

    /**
     * Group by ShippingSofPortLogEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingSofPortLogEventsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingSofPortLogEventsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingSofPortLogEventsGroupByArgs['orderBy'] }
        : { orderBy?: ShippingSofPortLogEventsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingSofPortLogEventsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingSofPortLogEventsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ShippingSofPortLogEvents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ShippingSofPortLogEventsClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    sof_port_log_event<T extends SofPortLogEventsArgs = {}>(args?: Subset<T, SofPortLogEventsArgs>): CheckSelect<T, Prisma__SofPortLogEventsClient<SofPortLogEvents | null >, Prisma__SofPortLogEventsClient<SofPortLogEventsGetPayload<T> | null >>;

    shipping_sof<T extends sofArgs = {}>(args?: Subset<T, sofArgs>): CheckSelect<T, Prisma__sofClient<sof | null >, Prisma__sofClient<sofGetPayload<T> | null >>;

    created_by_user<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ShippingSofPortLogEvents base type for findUnique actions
   */
  export type ShippingSofPortLogEventsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ShippingSofPortLogEvents
     * 
    **/
    select?: ShippingSofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingSofPortLogEventsInclude | null
    /**
     * Filter, which ShippingSofPortLogEvents to fetch.
     * 
    **/
    where: ShippingSofPortLogEventsWhereUniqueInput
  }

  /**
   * ShippingSofPortLogEvents: findUnique
   */
  export interface ShippingSofPortLogEventsFindUniqueArgs extends ShippingSofPortLogEventsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShippingSofPortLogEvents base type for findFirst actions
   */
  export type ShippingSofPortLogEventsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ShippingSofPortLogEvents
     * 
    **/
    select?: ShippingSofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingSofPortLogEventsInclude | null
    /**
     * Filter, which ShippingSofPortLogEvents to fetch.
     * 
    **/
    where?: ShippingSofPortLogEventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingSofPortLogEvents to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingSofPortLogEventsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingSofPortLogEvents.
     * 
    **/
    cursor?: ShippingSofPortLogEventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingSofPortLogEvents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingSofPortLogEvents.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingSofPortLogEvents.
     * 
    **/
    distinct?: Enumerable<ShippingSofPortLogEventsScalarFieldEnum>
  }

  /**
   * ShippingSofPortLogEvents: findFirst
   */
  export interface ShippingSofPortLogEventsFindFirstArgs extends ShippingSofPortLogEventsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShippingSofPortLogEvents findMany
   */
  export type ShippingSofPortLogEventsFindManyArgs = {
    /**
     * Select specific fields to fetch from the ShippingSofPortLogEvents
     * 
    **/
    select?: ShippingSofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingSofPortLogEventsInclude | null
    /**
     * Filter, which ShippingSofPortLogEvents to fetch.
     * 
    **/
    where?: ShippingSofPortLogEventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingSofPortLogEvents to fetch.
     * 
    **/
    orderBy?: Enumerable<ShippingSofPortLogEventsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShippingSofPortLogEvents.
     * 
    **/
    cursor?: ShippingSofPortLogEventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingSofPortLogEvents from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingSofPortLogEvents.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ShippingSofPortLogEventsScalarFieldEnum>
  }


  /**
   * ShippingSofPortLogEvents create
   */
  export type ShippingSofPortLogEventsCreateArgs = {
    /**
     * Select specific fields to fetch from the ShippingSofPortLogEvents
     * 
    **/
    select?: ShippingSofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingSofPortLogEventsInclude | null
    /**
     * The data needed to create a ShippingSofPortLogEvents.
     * 
    **/
    data: XOR<ShippingSofPortLogEventsCreateInput, ShippingSofPortLogEventsUncheckedCreateInput>
  }


  /**
   * ShippingSofPortLogEvents createMany
   */
  export type ShippingSofPortLogEventsCreateManyArgs = {
    /**
     * The data used to create many ShippingSofPortLogEvents.
     * 
    **/
    data: Enumerable<ShippingSofPortLogEventsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ShippingSofPortLogEvents update
   */
  export type ShippingSofPortLogEventsUpdateArgs = {
    /**
     * Select specific fields to fetch from the ShippingSofPortLogEvents
     * 
    **/
    select?: ShippingSofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingSofPortLogEventsInclude | null
    /**
     * The data needed to update a ShippingSofPortLogEvents.
     * 
    **/
    data: XOR<ShippingSofPortLogEventsUpdateInput, ShippingSofPortLogEventsUncheckedUpdateInput>
    /**
     * Choose, which ShippingSofPortLogEvents to update.
     * 
    **/
    where: ShippingSofPortLogEventsWhereUniqueInput
  }


  /**
   * ShippingSofPortLogEvents updateMany
   */
  export type ShippingSofPortLogEventsUpdateManyArgs = {
    /**
     * The data used to update ShippingSofPortLogEvents.
     * 
    **/
    data: XOR<ShippingSofPortLogEventsUpdateManyMutationInput, ShippingSofPortLogEventsUncheckedUpdateManyInput>
    /**
     * Filter which ShippingSofPortLogEvents to update
     * 
    **/
    where?: ShippingSofPortLogEventsWhereInput
  }


  /**
   * ShippingSofPortLogEvents upsert
   */
  export type ShippingSofPortLogEventsUpsertArgs = {
    /**
     * Select specific fields to fetch from the ShippingSofPortLogEvents
     * 
    **/
    select?: ShippingSofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingSofPortLogEventsInclude | null
    /**
     * The filter to search for the ShippingSofPortLogEvents to update in case it exists.
     * 
    **/
    where: ShippingSofPortLogEventsWhereUniqueInput
    /**
     * In case the ShippingSofPortLogEvents found by the `where` argument doesn't exist, create a new ShippingSofPortLogEvents with this data.
     * 
    **/
    create: XOR<ShippingSofPortLogEventsCreateInput, ShippingSofPortLogEventsUncheckedCreateInput>
    /**
     * In case the ShippingSofPortLogEvents was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ShippingSofPortLogEventsUpdateInput, ShippingSofPortLogEventsUncheckedUpdateInput>
  }


  /**
   * ShippingSofPortLogEvents delete
   */
  export type ShippingSofPortLogEventsDeleteArgs = {
    /**
     * Select specific fields to fetch from the ShippingSofPortLogEvents
     * 
    **/
    select?: ShippingSofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingSofPortLogEventsInclude | null
    /**
     * Filter which ShippingSofPortLogEvents to delete.
     * 
    **/
    where: ShippingSofPortLogEventsWhereUniqueInput
  }


  /**
   * ShippingSofPortLogEvents deleteMany
   */
  export type ShippingSofPortLogEventsDeleteManyArgs = {
    /**
     * Filter which ShippingSofPortLogEvents to delete
     * 
    **/
    where?: ShippingSofPortLogEventsWhereInput
  }


  /**
   * ShippingSofPortLogEvents: findUniqueOrThrow
   */
  export type ShippingSofPortLogEventsFindUniqueOrThrowArgs = ShippingSofPortLogEventsFindUniqueArgsBase
      

  /**
   * ShippingSofPortLogEvents: findFirstOrThrow
   */
  export type ShippingSofPortLogEventsFindFirstOrThrowArgs = ShippingSofPortLogEventsFindFirstArgsBase
      

  /**
   * ShippingSofPortLogEvents without action
   */
  export type ShippingSofPortLogEventsArgs = {
    /**
     * Select specific fields to fetch from the ShippingSofPortLogEvents
     * 
    **/
    select?: ShippingSofPortLogEventsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShippingSofPortLogEventsInclude | null
  }



  /**
   * Model sof_shipper_cargo
   */


  export type AggregateSof_shipper_cargo = {
    _count: Sof_shipper_cargoCountAggregateOutputType | null
    _avg: Sof_shipper_cargoAvgAggregateOutputType | null
    _sum: Sof_shipper_cargoSumAggregateOutputType | null
    _min: Sof_shipper_cargoMinAggregateOutputType | null
    _max: Sof_shipper_cargoMaxAggregateOutputType | null
  }

  export type Sof_shipper_cargoAvgAggregateOutputType = {
    id: number | null
    sof_id: number | null
  }

  export type Sof_shipper_cargoSumAggregateOutputType = {
    id: number | null
    sof_id: number | null
  }

  export type Sof_shipper_cargoMinAggregateOutputType = {
    id: number | null
    berth: string | null
    cargo: string | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_shipper_cargoMaxAggregateOutputType = {
    id: number | null
    berth: string | null
    cargo: string | null
    sof_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sof_shipper_cargoCountAggregateOutputType = {
    id: number
    berth: number
    cargo: number
    sof_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sof_shipper_cargoAvgAggregateInputType = {
    id?: true
    sof_id?: true
  }

  export type Sof_shipper_cargoSumAggregateInputType = {
    id?: true
    sof_id?: true
  }

  export type Sof_shipper_cargoMinAggregateInputType = {
    id?: true
    berth?: true
    cargo?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_shipper_cargoMaxAggregateInputType = {
    id?: true
    berth?: true
    cargo?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sof_shipper_cargoCountAggregateInputType = {
    id?: true
    berth?: true
    cargo?: true
    sof_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sof_shipper_cargoAggregateArgs = {
    /**
     * Filter which sof_shipper_cargo to aggregate.
     * 
    **/
    where?: sof_shipper_cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_shipper_cargos to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_shipper_cargoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sof_shipper_cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_shipper_cargos from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_shipper_cargos.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sof_shipper_cargos
    **/
    _count?: true | Sof_shipper_cargoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sof_shipper_cargoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sof_shipper_cargoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sof_shipper_cargoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sof_shipper_cargoMaxAggregateInputType
  }

  export type GetSof_shipper_cargoAggregateType<T extends Sof_shipper_cargoAggregateArgs> = {
        [P in keyof T & keyof AggregateSof_shipper_cargo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSof_shipper_cargo[P]>
      : GetScalarType<T[P], AggregateSof_shipper_cargo[P]>
  }




  export type Sof_shipper_cargoGroupByArgs = {
    where?: sof_shipper_cargoWhereInput
    orderBy?: Enumerable<sof_shipper_cargoOrderByWithAggregationInput>
    by: Array<Sof_shipper_cargoScalarFieldEnum>
    having?: sof_shipper_cargoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sof_shipper_cargoCountAggregateInputType | true
    _avg?: Sof_shipper_cargoAvgAggregateInputType
    _sum?: Sof_shipper_cargoSumAggregateInputType
    _min?: Sof_shipper_cargoMinAggregateInputType
    _max?: Sof_shipper_cargoMaxAggregateInputType
  }


  export type Sof_shipper_cargoGroupByOutputType = {
    id: number
    berth: string | null
    cargo: string | null
    sof_id: number | null
    created_at: Date
    updated_at: Date
    deleted_at: Date | null
    _count: Sof_shipper_cargoCountAggregateOutputType | null
    _avg: Sof_shipper_cargoAvgAggregateOutputType | null
    _sum: Sof_shipper_cargoSumAggregateOutputType | null
    _min: Sof_shipper_cargoMinAggregateOutputType | null
    _max: Sof_shipper_cargoMaxAggregateOutputType | null
  }

  type GetSof_shipper_cargoGroupByPayload<T extends Sof_shipper_cargoGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Sof_shipper_cargoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sof_shipper_cargoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sof_shipper_cargoGroupByOutputType[P]>
            : GetScalarType<T[P], Sof_shipper_cargoGroupByOutputType[P]>
        }
      >
    >


  export type sof_shipper_cargoSelect = {
    id?: boolean
    berth?: boolean
    cargo?: boolean
    sof_id?: boolean
    sof?: boolean | sofArgs
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    sof_shipper?: boolean | sof_shipperFindManyArgs
    sof_shipper_value?: boolean | sof_shipper_valueFindManyArgs
    _count?: boolean | Sof_shipper_cargoCountOutputTypeArgs
  }

  export type sof_shipper_cargoInclude = {
    sof?: boolean | sofArgs
    sof_shipper?: boolean | sof_shipperFindManyArgs
    sof_shipper_value?: boolean | sof_shipper_valueFindManyArgs
    _count?: boolean | Sof_shipper_cargoCountOutputTypeArgs
  }

  export type sof_shipper_cargoGetPayload<
    S extends boolean | null | undefined | sof_shipper_cargoArgs,
    U = keyof S
      > = S extends true
        ? sof_shipper_cargo
    : S extends undefined
    ? never
    : S extends sof_shipper_cargoArgs | sof_shipper_cargoFindManyArgs
    ?'include' extends U
    ? sof_shipper_cargo  & {
    [P in TrueKeys<S['include']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'sof_shipper' ? Array < sof_shipperGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'sof_shipper_value' ? Array < sof_shipper_valueGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? Sof_shipper_cargoCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'sof' ? sofGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'sof_shipper' ? Array < sof_shipperGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'sof_shipper_value' ? Array < sof_shipper_valueGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? Sof_shipper_cargoCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof sof_shipper_cargo ? sof_shipper_cargo[P] : never
  } 
    : sof_shipper_cargo
  : sof_shipper_cargo


  type sof_shipper_cargoCountArgs = Merge<
    Omit<sof_shipper_cargoFindManyArgs, 'select' | 'include'> & {
      select?: Sof_shipper_cargoCountAggregateInputType | true
    }
  >

  export interface sof_shipper_cargoDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sof_shipper_cargo that matches the filter.
     * @param {sof_shipper_cargoFindUniqueArgs} args - Arguments to find a Sof_shipper_cargo
     * @example
     * // Get one Sof_shipper_cargo
     * const sof_shipper_cargo = await prisma.sof_shipper_cargo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sof_shipper_cargoFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sof_shipper_cargoFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sof_shipper_cargo'> extends True ? CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo>, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T>>> : CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo | null >, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T> | null >>

    /**
     * Find the first Sof_shipper_cargo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_cargoFindFirstArgs} args - Arguments to find a Sof_shipper_cargo
     * @example
     * // Get one Sof_shipper_cargo
     * const sof_shipper_cargo = await prisma.sof_shipper_cargo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sof_shipper_cargoFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sof_shipper_cargoFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sof_shipper_cargo'> extends True ? CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo>, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T>>> : CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo | null >, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T> | null >>

    /**
     * Find zero or more Sof_shipper_cargos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_cargoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sof_shipper_cargos
     * const sof_shipper_cargos = await prisma.sof_shipper_cargo.findMany()
     * 
     * // Get first 10 Sof_shipper_cargos
     * const sof_shipper_cargos = await prisma.sof_shipper_cargo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sof_shipper_cargoWithIdOnly = await prisma.sof_shipper_cargo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sof_shipper_cargoFindManyArgs>(
      args?: SelectSubset<T, sof_shipper_cargoFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<sof_shipper_cargo>>, PrismaPromise<Array<sof_shipper_cargoGetPayload<T>>>>

    /**
     * Create a Sof_shipper_cargo.
     * @param {sof_shipper_cargoCreateArgs} args - Arguments to create a Sof_shipper_cargo.
     * @example
     * // Create one Sof_shipper_cargo
     * const Sof_shipper_cargo = await prisma.sof_shipper_cargo.create({
     *   data: {
     *     // ... data to create a Sof_shipper_cargo
     *   }
     * })
     * 
    **/
    create<T extends sof_shipper_cargoCreateArgs>(
      args: SelectSubset<T, sof_shipper_cargoCreateArgs>
    ): CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo>, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T>>>

    /**
     * Create many Sof_shipper_cargos.
     *     @param {sof_shipper_cargoCreateManyArgs} args - Arguments to create many Sof_shipper_cargos.
     *     @example
     *     // Create many Sof_shipper_cargos
     *     const sof_shipper_cargo = await prisma.sof_shipper_cargo.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sof_shipper_cargoCreateManyArgs>(
      args?: SelectSubset<T, sof_shipper_cargoCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sof_shipper_cargo.
     * @param {sof_shipper_cargoDeleteArgs} args - Arguments to delete one Sof_shipper_cargo.
     * @example
     * // Delete one Sof_shipper_cargo
     * const Sof_shipper_cargo = await prisma.sof_shipper_cargo.delete({
     *   where: {
     *     // ... filter to delete one Sof_shipper_cargo
     *   }
     * })
     * 
    **/
    delete<T extends sof_shipper_cargoDeleteArgs>(
      args: SelectSubset<T, sof_shipper_cargoDeleteArgs>
    ): CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo>, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T>>>

    /**
     * Update one Sof_shipper_cargo.
     * @param {sof_shipper_cargoUpdateArgs} args - Arguments to update one Sof_shipper_cargo.
     * @example
     * // Update one Sof_shipper_cargo
     * const sof_shipper_cargo = await prisma.sof_shipper_cargo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sof_shipper_cargoUpdateArgs>(
      args: SelectSubset<T, sof_shipper_cargoUpdateArgs>
    ): CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo>, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T>>>

    /**
     * Delete zero or more Sof_shipper_cargos.
     * @param {sof_shipper_cargoDeleteManyArgs} args - Arguments to filter Sof_shipper_cargos to delete.
     * @example
     * // Delete a few Sof_shipper_cargos
     * const { count } = await prisma.sof_shipper_cargo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sof_shipper_cargoDeleteManyArgs>(
      args?: SelectSubset<T, sof_shipper_cargoDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sof_shipper_cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_cargoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sof_shipper_cargos
     * const sof_shipper_cargo = await prisma.sof_shipper_cargo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sof_shipper_cargoUpdateManyArgs>(
      args: SelectSubset<T, sof_shipper_cargoUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sof_shipper_cargo.
     * @param {sof_shipper_cargoUpsertArgs} args - Arguments to update or create a Sof_shipper_cargo.
     * @example
     * // Update or create a Sof_shipper_cargo
     * const sof_shipper_cargo = await prisma.sof_shipper_cargo.upsert({
     *   create: {
     *     // ... data to create a Sof_shipper_cargo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sof_shipper_cargo we want to update
     *   }
     * })
    **/
    upsert<T extends sof_shipper_cargoUpsertArgs>(
      args: SelectSubset<T, sof_shipper_cargoUpsertArgs>
    ): CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo>, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T>>>

    /**
     * Find one Sof_shipper_cargo that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sof_shipper_cargoFindUniqueOrThrowArgs} args - Arguments to find a Sof_shipper_cargo
     * @example
     * // Get one Sof_shipper_cargo
     * const sof_shipper_cargo = await prisma.sof_shipper_cargo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sof_shipper_cargoFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sof_shipper_cargoFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo>, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T>>>

    /**
     * Find the first Sof_shipper_cargo that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_cargoFindFirstOrThrowArgs} args - Arguments to find a Sof_shipper_cargo
     * @example
     * // Get one Sof_shipper_cargo
     * const sof_shipper_cargo = await prisma.sof_shipper_cargo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sof_shipper_cargoFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sof_shipper_cargoFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo>, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T>>>

    /**
     * Count the number of Sof_shipper_cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_cargoCountArgs} args - Arguments to filter Sof_shipper_cargos to count.
     * @example
     * // Count the number of Sof_shipper_cargos
     * const count = await prisma.sof_shipper_cargo.count({
     *   where: {
     *     // ... the filter for the Sof_shipper_cargos we want to count
     *   }
     * })
    **/
    count<T extends sof_shipper_cargoCountArgs>(
      args?: Subset<T, sof_shipper_cargoCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sof_shipper_cargoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sof_shipper_cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_shipper_cargoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sof_shipper_cargoAggregateArgs>(args: Subset<T, Sof_shipper_cargoAggregateArgs>): PrismaPromise<GetSof_shipper_cargoAggregateType<T>>

    /**
     * Group by Sof_shipper_cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_shipper_cargoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Sof_shipper_cargoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Sof_shipper_cargoGroupByArgs['orderBy'] }
        : { orderBy?: Sof_shipper_cargoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Sof_shipper_cargoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSof_shipper_cargoGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sof_shipper_cargo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sof_shipper_cargoClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    sof<T extends sofArgs = {}>(args?: Subset<T, sofArgs>): CheckSelect<T, Prisma__sofClient<sof | null >, Prisma__sofClient<sofGetPayload<T> | null >>;

    sof_shipper<T extends sof_shipperFindManyArgs = {}>(args?: Subset<T, sof_shipperFindManyArgs>): CheckSelect<T, PrismaPromise<Array<sof_shipper>>, PrismaPromise<Array<sof_shipperGetPayload<T>>>>;

    sof_shipper_value<T extends sof_shipper_valueFindManyArgs = {}>(args?: Subset<T, sof_shipper_valueFindManyArgs>): CheckSelect<T, PrismaPromise<Array<sof_shipper_value>>, PrismaPromise<Array<sof_shipper_valueGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sof_shipper_cargo base type for findUnique actions
   */
  export type sof_shipper_cargoFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sof_shipper_cargo
     * 
    **/
    select?: sof_shipper_cargoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_cargoInclude | null
    /**
     * Filter, which sof_shipper_cargo to fetch.
     * 
    **/
    where: sof_shipper_cargoWhereUniqueInput
  }

  /**
   * sof_shipper_cargo: findUnique
   */
  export interface sof_shipper_cargoFindUniqueArgs extends sof_shipper_cargoFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_shipper_cargo base type for findFirst actions
   */
  export type sof_shipper_cargoFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sof_shipper_cargo
     * 
    **/
    select?: sof_shipper_cargoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_cargoInclude | null
    /**
     * Filter, which sof_shipper_cargo to fetch.
     * 
    **/
    where?: sof_shipper_cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_shipper_cargos to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_shipper_cargoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sof_shipper_cargos.
     * 
    **/
    cursor?: sof_shipper_cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_shipper_cargos from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_shipper_cargos.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sof_shipper_cargos.
     * 
    **/
    distinct?: Enumerable<Sof_shipper_cargoScalarFieldEnum>
  }

  /**
   * sof_shipper_cargo: findFirst
   */
  export interface sof_shipper_cargoFindFirstArgs extends sof_shipper_cargoFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_shipper_cargo findMany
   */
  export type sof_shipper_cargoFindManyArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_cargo
     * 
    **/
    select?: sof_shipper_cargoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_cargoInclude | null
    /**
     * Filter, which sof_shipper_cargos to fetch.
     * 
    **/
    where?: sof_shipper_cargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_shipper_cargos to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_shipper_cargoOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sof_shipper_cargos.
     * 
    **/
    cursor?: sof_shipper_cargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_shipper_cargos from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_shipper_cargos.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Sof_shipper_cargoScalarFieldEnum>
  }


  /**
   * sof_shipper_cargo create
   */
  export type sof_shipper_cargoCreateArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_cargo
     * 
    **/
    select?: sof_shipper_cargoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_cargoInclude | null
    /**
     * The data needed to create a sof_shipper_cargo.
     * 
    **/
    data: XOR<sof_shipper_cargoCreateInput, sof_shipper_cargoUncheckedCreateInput>
  }


  /**
   * sof_shipper_cargo createMany
   */
  export type sof_shipper_cargoCreateManyArgs = {
    /**
     * The data used to create many sof_shipper_cargos.
     * 
    **/
    data: Enumerable<sof_shipper_cargoCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sof_shipper_cargo update
   */
  export type sof_shipper_cargoUpdateArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_cargo
     * 
    **/
    select?: sof_shipper_cargoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_cargoInclude | null
    /**
     * The data needed to update a sof_shipper_cargo.
     * 
    **/
    data: XOR<sof_shipper_cargoUpdateInput, sof_shipper_cargoUncheckedUpdateInput>
    /**
     * Choose, which sof_shipper_cargo to update.
     * 
    **/
    where: sof_shipper_cargoWhereUniqueInput
  }


  /**
   * sof_shipper_cargo updateMany
   */
  export type sof_shipper_cargoUpdateManyArgs = {
    /**
     * The data used to update sof_shipper_cargos.
     * 
    **/
    data: XOR<sof_shipper_cargoUpdateManyMutationInput, sof_shipper_cargoUncheckedUpdateManyInput>
    /**
     * Filter which sof_shipper_cargos to update
     * 
    **/
    where?: sof_shipper_cargoWhereInput
  }


  /**
   * sof_shipper_cargo upsert
   */
  export type sof_shipper_cargoUpsertArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_cargo
     * 
    **/
    select?: sof_shipper_cargoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_cargoInclude | null
    /**
     * The filter to search for the sof_shipper_cargo to update in case it exists.
     * 
    **/
    where: sof_shipper_cargoWhereUniqueInput
    /**
     * In case the sof_shipper_cargo found by the `where` argument doesn't exist, create a new sof_shipper_cargo with this data.
     * 
    **/
    create: XOR<sof_shipper_cargoCreateInput, sof_shipper_cargoUncheckedCreateInput>
    /**
     * In case the sof_shipper_cargo was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sof_shipper_cargoUpdateInput, sof_shipper_cargoUncheckedUpdateInput>
  }


  /**
   * sof_shipper_cargo delete
   */
  export type sof_shipper_cargoDeleteArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_cargo
     * 
    **/
    select?: sof_shipper_cargoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_cargoInclude | null
    /**
     * Filter which sof_shipper_cargo to delete.
     * 
    **/
    where: sof_shipper_cargoWhereUniqueInput
  }


  /**
   * sof_shipper_cargo deleteMany
   */
  export type sof_shipper_cargoDeleteManyArgs = {
    /**
     * Filter which sof_shipper_cargos to delete
     * 
    **/
    where?: sof_shipper_cargoWhereInput
  }


  /**
   * sof_shipper_cargo: findUniqueOrThrow
   */
  export type sof_shipper_cargoFindUniqueOrThrowArgs = sof_shipper_cargoFindUniqueArgsBase
      

  /**
   * sof_shipper_cargo: findFirstOrThrow
   */
  export type sof_shipper_cargoFindFirstOrThrowArgs = sof_shipper_cargoFindFirstArgsBase
      

  /**
   * sof_shipper_cargo without action
   */
  export type sof_shipper_cargoArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_cargo
     * 
    **/
    select?: sof_shipper_cargoSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_cargoInclude | null
  }



  /**
   * Model sof_shipper
   */


  export type AggregateSof_shipper = {
    _count: Sof_shipperCountAggregateOutputType | null
    _avg: Sof_shipperAvgAggregateOutputType | null
    _sum: Sof_shipperSumAggregateOutputType | null
    _min: Sof_shipperMinAggregateOutputType | null
    _max: Sof_shipperMaxAggregateOutputType | null
  }

  export type Sof_shipperAvgAggregateOutputType = {
    id: number | null
    quantity: number | null
    sof_shipper_cargo_id: number | null
  }

  export type Sof_shipperSumAggregateOutputType = {
    id: number | null
    quantity: number | null
    sof_shipper_cargo_id: number | null
  }

  export type Sof_shipperMinAggregateOutputType = {
    id: number | null
    name: string | null
    quantity: number | null
    sof_shipper_cargo_id: number | null
  }

  export type Sof_shipperMaxAggregateOutputType = {
    id: number | null
    name: string | null
    quantity: number | null
    sof_shipper_cargo_id: number | null
  }

  export type Sof_shipperCountAggregateOutputType = {
    id: number
    name: number
    quantity: number
    sof_shipper_cargo_id: number
    _all: number
  }


  export type Sof_shipperAvgAggregateInputType = {
    id?: true
    quantity?: true
    sof_shipper_cargo_id?: true
  }

  export type Sof_shipperSumAggregateInputType = {
    id?: true
    quantity?: true
    sof_shipper_cargo_id?: true
  }

  export type Sof_shipperMinAggregateInputType = {
    id?: true
    name?: true
    quantity?: true
    sof_shipper_cargo_id?: true
  }

  export type Sof_shipperMaxAggregateInputType = {
    id?: true
    name?: true
    quantity?: true
    sof_shipper_cargo_id?: true
  }

  export type Sof_shipperCountAggregateInputType = {
    id?: true
    name?: true
    quantity?: true
    sof_shipper_cargo_id?: true
    _all?: true
  }

  export type Sof_shipperAggregateArgs = {
    /**
     * Filter which sof_shipper to aggregate.
     * 
    **/
    where?: sof_shipperWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_shippers to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_shipperOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sof_shipperWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_shippers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_shippers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sof_shippers
    **/
    _count?: true | Sof_shipperCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sof_shipperAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sof_shipperSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sof_shipperMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sof_shipperMaxAggregateInputType
  }

  export type GetSof_shipperAggregateType<T extends Sof_shipperAggregateArgs> = {
        [P in keyof T & keyof AggregateSof_shipper]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSof_shipper[P]>
      : GetScalarType<T[P], AggregateSof_shipper[P]>
  }




  export type Sof_shipperGroupByArgs = {
    where?: sof_shipperWhereInput
    orderBy?: Enumerable<sof_shipperOrderByWithAggregationInput>
    by: Array<Sof_shipperScalarFieldEnum>
    having?: sof_shipperScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sof_shipperCountAggregateInputType | true
    _avg?: Sof_shipperAvgAggregateInputType
    _sum?: Sof_shipperSumAggregateInputType
    _min?: Sof_shipperMinAggregateInputType
    _max?: Sof_shipperMaxAggregateInputType
  }


  export type Sof_shipperGroupByOutputType = {
    id: number
    name: string | null
    quantity: number | null
    sof_shipper_cargo_id: number | null
    _count: Sof_shipperCountAggregateOutputType | null
    _avg: Sof_shipperAvgAggregateOutputType | null
    _sum: Sof_shipperSumAggregateOutputType | null
    _min: Sof_shipperMinAggregateOutputType | null
    _max: Sof_shipperMaxAggregateOutputType | null
  }

  type GetSof_shipperGroupByPayload<T extends Sof_shipperGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Sof_shipperGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sof_shipperGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sof_shipperGroupByOutputType[P]>
            : GetScalarType<T[P], Sof_shipperGroupByOutputType[P]>
        }
      >
    >


  export type sof_shipperSelect = {
    id?: boolean
    name?: boolean
    quantity?: boolean
    sof_shipper_cargo_id?: boolean
    sof_shipper_cargo?: boolean | sof_shipper_cargoArgs
  }

  export type sof_shipperInclude = {
    sof_shipper_cargo?: boolean | sof_shipper_cargoArgs
  }

  export type sof_shipperGetPayload<
    S extends boolean | null | undefined | sof_shipperArgs,
    U = keyof S
      > = S extends true
        ? sof_shipper
    : S extends undefined
    ? never
    : S extends sof_shipperArgs | sof_shipperFindManyArgs
    ?'include' extends U
    ? sof_shipper  & {
    [P in TrueKeys<S['include']>]:
        P extends 'sof_shipper_cargo' ? sof_shipper_cargoGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'sof_shipper_cargo' ? sof_shipper_cargoGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof sof_shipper ? sof_shipper[P] : never
  } 
    : sof_shipper
  : sof_shipper


  type sof_shipperCountArgs = Merge<
    Omit<sof_shipperFindManyArgs, 'select' | 'include'> & {
      select?: Sof_shipperCountAggregateInputType | true
    }
  >

  export interface sof_shipperDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sof_shipper that matches the filter.
     * @param {sof_shipperFindUniqueArgs} args - Arguments to find a Sof_shipper
     * @example
     * // Get one Sof_shipper
     * const sof_shipper = await prisma.sof_shipper.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sof_shipperFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sof_shipperFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sof_shipper'> extends True ? CheckSelect<T, Prisma__sof_shipperClient<sof_shipper>, Prisma__sof_shipperClient<sof_shipperGetPayload<T>>> : CheckSelect<T, Prisma__sof_shipperClient<sof_shipper | null >, Prisma__sof_shipperClient<sof_shipperGetPayload<T> | null >>

    /**
     * Find the first Sof_shipper that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipperFindFirstArgs} args - Arguments to find a Sof_shipper
     * @example
     * // Get one Sof_shipper
     * const sof_shipper = await prisma.sof_shipper.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sof_shipperFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sof_shipperFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sof_shipper'> extends True ? CheckSelect<T, Prisma__sof_shipperClient<sof_shipper>, Prisma__sof_shipperClient<sof_shipperGetPayload<T>>> : CheckSelect<T, Prisma__sof_shipperClient<sof_shipper | null >, Prisma__sof_shipperClient<sof_shipperGetPayload<T> | null >>

    /**
     * Find zero or more Sof_shippers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipperFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sof_shippers
     * const sof_shippers = await prisma.sof_shipper.findMany()
     * 
     * // Get first 10 Sof_shippers
     * const sof_shippers = await prisma.sof_shipper.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sof_shipperWithIdOnly = await prisma.sof_shipper.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sof_shipperFindManyArgs>(
      args?: SelectSubset<T, sof_shipperFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<sof_shipper>>, PrismaPromise<Array<sof_shipperGetPayload<T>>>>

    /**
     * Create a Sof_shipper.
     * @param {sof_shipperCreateArgs} args - Arguments to create a Sof_shipper.
     * @example
     * // Create one Sof_shipper
     * const Sof_shipper = await prisma.sof_shipper.create({
     *   data: {
     *     // ... data to create a Sof_shipper
     *   }
     * })
     * 
    **/
    create<T extends sof_shipperCreateArgs>(
      args: SelectSubset<T, sof_shipperCreateArgs>
    ): CheckSelect<T, Prisma__sof_shipperClient<sof_shipper>, Prisma__sof_shipperClient<sof_shipperGetPayload<T>>>

    /**
     * Create many Sof_shippers.
     *     @param {sof_shipperCreateManyArgs} args - Arguments to create many Sof_shippers.
     *     @example
     *     // Create many Sof_shippers
     *     const sof_shipper = await prisma.sof_shipper.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sof_shipperCreateManyArgs>(
      args?: SelectSubset<T, sof_shipperCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sof_shipper.
     * @param {sof_shipperDeleteArgs} args - Arguments to delete one Sof_shipper.
     * @example
     * // Delete one Sof_shipper
     * const Sof_shipper = await prisma.sof_shipper.delete({
     *   where: {
     *     // ... filter to delete one Sof_shipper
     *   }
     * })
     * 
    **/
    delete<T extends sof_shipperDeleteArgs>(
      args: SelectSubset<T, sof_shipperDeleteArgs>
    ): CheckSelect<T, Prisma__sof_shipperClient<sof_shipper>, Prisma__sof_shipperClient<sof_shipperGetPayload<T>>>

    /**
     * Update one Sof_shipper.
     * @param {sof_shipperUpdateArgs} args - Arguments to update one Sof_shipper.
     * @example
     * // Update one Sof_shipper
     * const sof_shipper = await prisma.sof_shipper.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sof_shipperUpdateArgs>(
      args: SelectSubset<T, sof_shipperUpdateArgs>
    ): CheckSelect<T, Prisma__sof_shipperClient<sof_shipper>, Prisma__sof_shipperClient<sof_shipperGetPayload<T>>>

    /**
     * Delete zero or more Sof_shippers.
     * @param {sof_shipperDeleteManyArgs} args - Arguments to filter Sof_shippers to delete.
     * @example
     * // Delete a few Sof_shippers
     * const { count } = await prisma.sof_shipper.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sof_shipperDeleteManyArgs>(
      args?: SelectSubset<T, sof_shipperDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sof_shippers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipperUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sof_shippers
     * const sof_shipper = await prisma.sof_shipper.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sof_shipperUpdateManyArgs>(
      args: SelectSubset<T, sof_shipperUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sof_shipper.
     * @param {sof_shipperUpsertArgs} args - Arguments to update or create a Sof_shipper.
     * @example
     * // Update or create a Sof_shipper
     * const sof_shipper = await prisma.sof_shipper.upsert({
     *   create: {
     *     // ... data to create a Sof_shipper
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sof_shipper we want to update
     *   }
     * })
    **/
    upsert<T extends sof_shipperUpsertArgs>(
      args: SelectSubset<T, sof_shipperUpsertArgs>
    ): CheckSelect<T, Prisma__sof_shipperClient<sof_shipper>, Prisma__sof_shipperClient<sof_shipperGetPayload<T>>>

    /**
     * Find one Sof_shipper that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sof_shipperFindUniqueOrThrowArgs} args - Arguments to find a Sof_shipper
     * @example
     * // Get one Sof_shipper
     * const sof_shipper = await prisma.sof_shipper.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sof_shipperFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sof_shipperFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_shipperClient<sof_shipper>, Prisma__sof_shipperClient<sof_shipperGetPayload<T>>>

    /**
     * Find the first Sof_shipper that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipperFindFirstOrThrowArgs} args - Arguments to find a Sof_shipper
     * @example
     * // Get one Sof_shipper
     * const sof_shipper = await prisma.sof_shipper.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sof_shipperFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sof_shipperFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_shipperClient<sof_shipper>, Prisma__sof_shipperClient<sof_shipperGetPayload<T>>>

    /**
     * Count the number of Sof_shippers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipperCountArgs} args - Arguments to filter Sof_shippers to count.
     * @example
     * // Count the number of Sof_shippers
     * const count = await prisma.sof_shipper.count({
     *   where: {
     *     // ... the filter for the Sof_shippers we want to count
     *   }
     * })
    **/
    count<T extends sof_shipperCountArgs>(
      args?: Subset<T, sof_shipperCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sof_shipperCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sof_shipper.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_shipperAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sof_shipperAggregateArgs>(args: Subset<T, Sof_shipperAggregateArgs>): PrismaPromise<GetSof_shipperAggregateType<T>>

    /**
     * Group by Sof_shipper.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_shipperGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Sof_shipperGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Sof_shipperGroupByArgs['orderBy'] }
        : { orderBy?: Sof_shipperGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Sof_shipperGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSof_shipperGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sof_shipper.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sof_shipperClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    sof_shipper_cargo<T extends sof_shipper_cargoArgs = {}>(args?: Subset<T, sof_shipper_cargoArgs>): CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo | null >, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sof_shipper base type for findUnique actions
   */
  export type sof_shipperFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sof_shipper
     * 
    **/
    select?: sof_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipperInclude | null
    /**
     * Filter, which sof_shipper to fetch.
     * 
    **/
    where: sof_shipperWhereUniqueInput
  }

  /**
   * sof_shipper: findUnique
   */
  export interface sof_shipperFindUniqueArgs extends sof_shipperFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_shipper base type for findFirst actions
   */
  export type sof_shipperFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sof_shipper
     * 
    **/
    select?: sof_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipperInclude | null
    /**
     * Filter, which sof_shipper to fetch.
     * 
    **/
    where?: sof_shipperWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_shippers to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_shipperOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sof_shippers.
     * 
    **/
    cursor?: sof_shipperWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_shippers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_shippers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sof_shippers.
     * 
    **/
    distinct?: Enumerable<Sof_shipperScalarFieldEnum>
  }

  /**
   * sof_shipper: findFirst
   */
  export interface sof_shipperFindFirstArgs extends sof_shipperFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_shipper findMany
   */
  export type sof_shipperFindManyArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper
     * 
    **/
    select?: sof_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipperInclude | null
    /**
     * Filter, which sof_shippers to fetch.
     * 
    **/
    where?: sof_shipperWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_shippers to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_shipperOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sof_shippers.
     * 
    **/
    cursor?: sof_shipperWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_shippers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_shippers.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Sof_shipperScalarFieldEnum>
  }


  /**
   * sof_shipper create
   */
  export type sof_shipperCreateArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper
     * 
    **/
    select?: sof_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipperInclude | null
    /**
     * The data needed to create a sof_shipper.
     * 
    **/
    data: XOR<sof_shipperCreateInput, sof_shipperUncheckedCreateInput>
  }


  /**
   * sof_shipper createMany
   */
  export type sof_shipperCreateManyArgs = {
    /**
     * The data used to create many sof_shippers.
     * 
    **/
    data: Enumerable<sof_shipperCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sof_shipper update
   */
  export type sof_shipperUpdateArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper
     * 
    **/
    select?: sof_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipperInclude | null
    /**
     * The data needed to update a sof_shipper.
     * 
    **/
    data: XOR<sof_shipperUpdateInput, sof_shipperUncheckedUpdateInput>
    /**
     * Choose, which sof_shipper to update.
     * 
    **/
    where: sof_shipperWhereUniqueInput
  }


  /**
   * sof_shipper updateMany
   */
  export type sof_shipperUpdateManyArgs = {
    /**
     * The data used to update sof_shippers.
     * 
    **/
    data: XOR<sof_shipperUpdateManyMutationInput, sof_shipperUncheckedUpdateManyInput>
    /**
     * Filter which sof_shippers to update
     * 
    **/
    where?: sof_shipperWhereInput
  }


  /**
   * sof_shipper upsert
   */
  export type sof_shipperUpsertArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper
     * 
    **/
    select?: sof_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipperInclude | null
    /**
     * The filter to search for the sof_shipper to update in case it exists.
     * 
    **/
    where: sof_shipperWhereUniqueInput
    /**
     * In case the sof_shipper found by the `where` argument doesn't exist, create a new sof_shipper with this data.
     * 
    **/
    create: XOR<sof_shipperCreateInput, sof_shipperUncheckedCreateInput>
    /**
     * In case the sof_shipper was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sof_shipperUpdateInput, sof_shipperUncheckedUpdateInput>
  }


  /**
   * sof_shipper delete
   */
  export type sof_shipperDeleteArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper
     * 
    **/
    select?: sof_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipperInclude | null
    /**
     * Filter which sof_shipper to delete.
     * 
    **/
    where: sof_shipperWhereUniqueInput
  }


  /**
   * sof_shipper deleteMany
   */
  export type sof_shipperDeleteManyArgs = {
    /**
     * Filter which sof_shippers to delete
     * 
    **/
    where?: sof_shipperWhereInput
  }


  /**
   * sof_shipper: findUniqueOrThrow
   */
  export type sof_shipperFindUniqueOrThrowArgs = sof_shipperFindUniqueArgsBase
      

  /**
   * sof_shipper: findFirstOrThrow
   */
  export type sof_shipperFindFirstOrThrowArgs = sof_shipperFindFirstArgsBase
      

  /**
   * sof_shipper without action
   */
  export type sof_shipperArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper
     * 
    **/
    select?: sof_shipperSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipperInclude | null
  }



  /**
   * Model sof_shipper_value
   */


  export type AggregateSof_shipper_value = {
    _count: Sof_shipper_valueCountAggregateOutputType | null
    _avg: Sof_shipper_valueAvgAggregateOutputType | null
    _sum: Sof_shipper_valueSumAggregateOutputType | null
    _min: Sof_shipper_valueMinAggregateOutputType | null
    _max: Sof_shipper_valueMaxAggregateOutputType | null
  }

  export type Sof_shipper_valueAvgAggregateOutputType = {
    id: number | null
    value: number | null
    sof_shipper_cargo_id: number | null
  }

  export type Sof_shipper_valueSumAggregateOutputType = {
    id: number | null
    value: number | null
    sof_shipper_cargo_id: number | null
  }

  export type Sof_shipper_valueMinAggregateOutputType = {
    id: number | null
    value: number | null
    sof_shipper_cargo_id: number | null
  }

  export type Sof_shipper_valueMaxAggregateOutputType = {
    id: number | null
    value: number | null
    sof_shipper_cargo_id: number | null
  }

  export type Sof_shipper_valueCountAggregateOutputType = {
    id: number
    value: number
    sof_shipper_cargo_id: number
    _all: number
  }


  export type Sof_shipper_valueAvgAggregateInputType = {
    id?: true
    value?: true
    sof_shipper_cargo_id?: true
  }

  export type Sof_shipper_valueSumAggregateInputType = {
    id?: true
    value?: true
    sof_shipper_cargo_id?: true
  }

  export type Sof_shipper_valueMinAggregateInputType = {
    id?: true
    value?: true
    sof_shipper_cargo_id?: true
  }

  export type Sof_shipper_valueMaxAggregateInputType = {
    id?: true
    value?: true
    sof_shipper_cargo_id?: true
  }

  export type Sof_shipper_valueCountAggregateInputType = {
    id?: true
    value?: true
    sof_shipper_cargo_id?: true
    _all?: true
  }

  export type Sof_shipper_valueAggregateArgs = {
    /**
     * Filter which sof_shipper_value to aggregate.
     * 
    **/
    where?: sof_shipper_valueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_shipper_values to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_shipper_valueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sof_shipper_valueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_shipper_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_shipper_values.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sof_shipper_values
    **/
    _count?: true | Sof_shipper_valueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sof_shipper_valueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sof_shipper_valueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sof_shipper_valueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sof_shipper_valueMaxAggregateInputType
  }

  export type GetSof_shipper_valueAggregateType<T extends Sof_shipper_valueAggregateArgs> = {
        [P in keyof T & keyof AggregateSof_shipper_value]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSof_shipper_value[P]>
      : GetScalarType<T[P], AggregateSof_shipper_value[P]>
  }




  export type Sof_shipper_valueGroupByArgs = {
    where?: sof_shipper_valueWhereInput
    orderBy?: Enumerable<sof_shipper_valueOrderByWithAggregationInput>
    by: Array<Sof_shipper_valueScalarFieldEnum>
    having?: sof_shipper_valueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sof_shipper_valueCountAggregateInputType | true
    _avg?: Sof_shipper_valueAvgAggregateInputType
    _sum?: Sof_shipper_valueSumAggregateInputType
    _min?: Sof_shipper_valueMinAggregateInputType
    _max?: Sof_shipper_valueMaxAggregateInputType
  }


  export type Sof_shipper_valueGroupByOutputType = {
    id: number
    value: number | null
    sof_shipper_cargo_id: number | null
    _count: Sof_shipper_valueCountAggregateOutputType | null
    _avg: Sof_shipper_valueAvgAggregateOutputType | null
    _sum: Sof_shipper_valueSumAggregateOutputType | null
    _min: Sof_shipper_valueMinAggregateOutputType | null
    _max: Sof_shipper_valueMaxAggregateOutputType | null
  }

  type GetSof_shipper_valueGroupByPayload<T extends Sof_shipper_valueGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Sof_shipper_valueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sof_shipper_valueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sof_shipper_valueGroupByOutputType[P]>
            : GetScalarType<T[P], Sof_shipper_valueGroupByOutputType[P]>
        }
      >
    >


  export type sof_shipper_valueSelect = {
    id?: boolean
    value?: boolean
    sof_shipper_cargo_id?: boolean
    sof_shipper_cargo?: boolean | sof_shipper_cargoArgs
  }

  export type sof_shipper_valueInclude = {
    sof_shipper_cargo?: boolean | sof_shipper_cargoArgs
  }

  export type sof_shipper_valueGetPayload<
    S extends boolean | null | undefined | sof_shipper_valueArgs,
    U = keyof S
      > = S extends true
        ? sof_shipper_value
    : S extends undefined
    ? never
    : S extends sof_shipper_valueArgs | sof_shipper_valueFindManyArgs
    ?'include' extends U
    ? sof_shipper_value  & {
    [P in TrueKeys<S['include']>]:
        P extends 'sof_shipper_cargo' ? sof_shipper_cargoGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'sof_shipper_cargo' ? sof_shipper_cargoGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof sof_shipper_value ? sof_shipper_value[P] : never
  } 
    : sof_shipper_value
  : sof_shipper_value


  type sof_shipper_valueCountArgs = Merge<
    Omit<sof_shipper_valueFindManyArgs, 'select' | 'include'> & {
      select?: Sof_shipper_valueCountAggregateInputType | true
    }
  >

  export interface sof_shipper_valueDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sof_shipper_value that matches the filter.
     * @param {sof_shipper_valueFindUniqueArgs} args - Arguments to find a Sof_shipper_value
     * @example
     * // Get one Sof_shipper_value
     * const sof_shipper_value = await prisma.sof_shipper_value.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sof_shipper_valueFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sof_shipper_valueFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sof_shipper_value'> extends True ? CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value>, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T>>> : CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value | null >, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T> | null >>

    /**
     * Find the first Sof_shipper_value that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_valueFindFirstArgs} args - Arguments to find a Sof_shipper_value
     * @example
     * // Get one Sof_shipper_value
     * const sof_shipper_value = await prisma.sof_shipper_value.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sof_shipper_valueFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sof_shipper_valueFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sof_shipper_value'> extends True ? CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value>, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T>>> : CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value | null >, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T> | null >>

    /**
     * Find zero or more Sof_shipper_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_valueFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sof_shipper_values
     * const sof_shipper_values = await prisma.sof_shipper_value.findMany()
     * 
     * // Get first 10 Sof_shipper_values
     * const sof_shipper_values = await prisma.sof_shipper_value.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sof_shipper_valueWithIdOnly = await prisma.sof_shipper_value.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sof_shipper_valueFindManyArgs>(
      args?: SelectSubset<T, sof_shipper_valueFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<sof_shipper_value>>, PrismaPromise<Array<sof_shipper_valueGetPayload<T>>>>

    /**
     * Create a Sof_shipper_value.
     * @param {sof_shipper_valueCreateArgs} args - Arguments to create a Sof_shipper_value.
     * @example
     * // Create one Sof_shipper_value
     * const Sof_shipper_value = await prisma.sof_shipper_value.create({
     *   data: {
     *     // ... data to create a Sof_shipper_value
     *   }
     * })
     * 
    **/
    create<T extends sof_shipper_valueCreateArgs>(
      args: SelectSubset<T, sof_shipper_valueCreateArgs>
    ): CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value>, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T>>>

    /**
     * Create many Sof_shipper_values.
     *     @param {sof_shipper_valueCreateManyArgs} args - Arguments to create many Sof_shipper_values.
     *     @example
     *     // Create many Sof_shipper_values
     *     const sof_shipper_value = await prisma.sof_shipper_value.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sof_shipper_valueCreateManyArgs>(
      args?: SelectSubset<T, sof_shipper_valueCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sof_shipper_value.
     * @param {sof_shipper_valueDeleteArgs} args - Arguments to delete one Sof_shipper_value.
     * @example
     * // Delete one Sof_shipper_value
     * const Sof_shipper_value = await prisma.sof_shipper_value.delete({
     *   where: {
     *     // ... filter to delete one Sof_shipper_value
     *   }
     * })
     * 
    **/
    delete<T extends sof_shipper_valueDeleteArgs>(
      args: SelectSubset<T, sof_shipper_valueDeleteArgs>
    ): CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value>, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T>>>

    /**
     * Update one Sof_shipper_value.
     * @param {sof_shipper_valueUpdateArgs} args - Arguments to update one Sof_shipper_value.
     * @example
     * // Update one Sof_shipper_value
     * const sof_shipper_value = await prisma.sof_shipper_value.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sof_shipper_valueUpdateArgs>(
      args: SelectSubset<T, sof_shipper_valueUpdateArgs>
    ): CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value>, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T>>>

    /**
     * Delete zero or more Sof_shipper_values.
     * @param {sof_shipper_valueDeleteManyArgs} args - Arguments to filter Sof_shipper_values to delete.
     * @example
     * // Delete a few Sof_shipper_values
     * const { count } = await prisma.sof_shipper_value.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sof_shipper_valueDeleteManyArgs>(
      args?: SelectSubset<T, sof_shipper_valueDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sof_shipper_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_valueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sof_shipper_values
     * const sof_shipper_value = await prisma.sof_shipper_value.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sof_shipper_valueUpdateManyArgs>(
      args: SelectSubset<T, sof_shipper_valueUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sof_shipper_value.
     * @param {sof_shipper_valueUpsertArgs} args - Arguments to update or create a Sof_shipper_value.
     * @example
     * // Update or create a Sof_shipper_value
     * const sof_shipper_value = await prisma.sof_shipper_value.upsert({
     *   create: {
     *     // ... data to create a Sof_shipper_value
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sof_shipper_value we want to update
     *   }
     * })
    **/
    upsert<T extends sof_shipper_valueUpsertArgs>(
      args: SelectSubset<T, sof_shipper_valueUpsertArgs>
    ): CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value>, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T>>>

    /**
     * Find one Sof_shipper_value that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sof_shipper_valueFindUniqueOrThrowArgs} args - Arguments to find a Sof_shipper_value
     * @example
     * // Get one Sof_shipper_value
     * const sof_shipper_value = await prisma.sof_shipper_value.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sof_shipper_valueFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sof_shipper_valueFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value>, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T>>>

    /**
     * Find the first Sof_shipper_value that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_valueFindFirstOrThrowArgs} args - Arguments to find a Sof_shipper_value
     * @example
     * // Get one Sof_shipper_value
     * const sof_shipper_value = await prisma.sof_shipper_value.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sof_shipper_valueFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sof_shipper_valueFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__sof_shipper_valueClient<sof_shipper_value>, Prisma__sof_shipper_valueClient<sof_shipper_valueGetPayload<T>>>

    /**
     * Count the number of Sof_shipper_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sof_shipper_valueCountArgs} args - Arguments to filter Sof_shipper_values to count.
     * @example
     * // Count the number of Sof_shipper_values
     * const count = await prisma.sof_shipper_value.count({
     *   where: {
     *     // ... the filter for the Sof_shipper_values we want to count
     *   }
     * })
    **/
    count<T extends sof_shipper_valueCountArgs>(
      args?: Subset<T, sof_shipper_valueCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sof_shipper_valueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sof_shipper_value.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_shipper_valueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sof_shipper_valueAggregateArgs>(args: Subset<T, Sof_shipper_valueAggregateArgs>): PrismaPromise<GetSof_shipper_valueAggregateType<T>>

    /**
     * Group by Sof_shipper_value.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sof_shipper_valueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Sof_shipper_valueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Sof_shipper_valueGroupByArgs['orderBy'] }
        : { orderBy?: Sof_shipper_valueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Sof_shipper_valueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSof_shipper_valueGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sof_shipper_value.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sof_shipper_valueClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    sof_shipper_cargo<T extends sof_shipper_cargoArgs = {}>(args?: Subset<T, sof_shipper_cargoArgs>): CheckSelect<T, Prisma__sof_shipper_cargoClient<sof_shipper_cargo | null >, Prisma__sof_shipper_cargoClient<sof_shipper_cargoGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sof_shipper_value base type for findUnique actions
   */
  export type sof_shipper_valueFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sof_shipper_value
     * 
    **/
    select?: sof_shipper_valueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_valueInclude | null
    /**
     * Filter, which sof_shipper_value to fetch.
     * 
    **/
    where: sof_shipper_valueWhereUniqueInput
  }

  /**
   * sof_shipper_value: findUnique
   */
  export interface sof_shipper_valueFindUniqueArgs extends sof_shipper_valueFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_shipper_value base type for findFirst actions
   */
  export type sof_shipper_valueFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sof_shipper_value
     * 
    **/
    select?: sof_shipper_valueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_valueInclude | null
    /**
     * Filter, which sof_shipper_value to fetch.
     * 
    **/
    where?: sof_shipper_valueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_shipper_values to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_shipper_valueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sof_shipper_values.
     * 
    **/
    cursor?: sof_shipper_valueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_shipper_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_shipper_values.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sof_shipper_values.
     * 
    **/
    distinct?: Enumerable<Sof_shipper_valueScalarFieldEnum>
  }

  /**
   * sof_shipper_value: findFirst
   */
  export interface sof_shipper_valueFindFirstArgs extends sof_shipper_valueFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sof_shipper_value findMany
   */
  export type sof_shipper_valueFindManyArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_value
     * 
    **/
    select?: sof_shipper_valueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_valueInclude | null
    /**
     * Filter, which sof_shipper_values to fetch.
     * 
    **/
    where?: sof_shipper_valueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sof_shipper_values to fetch.
     * 
    **/
    orderBy?: Enumerable<sof_shipper_valueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sof_shipper_values.
     * 
    **/
    cursor?: sof_shipper_valueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sof_shipper_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sof_shipper_values.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Sof_shipper_valueScalarFieldEnum>
  }


  /**
   * sof_shipper_value create
   */
  export type sof_shipper_valueCreateArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_value
     * 
    **/
    select?: sof_shipper_valueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_valueInclude | null
    /**
     * The data needed to create a sof_shipper_value.
     * 
    **/
    data: XOR<sof_shipper_valueCreateInput, sof_shipper_valueUncheckedCreateInput>
  }


  /**
   * sof_shipper_value createMany
   */
  export type sof_shipper_valueCreateManyArgs = {
    /**
     * The data used to create many sof_shipper_values.
     * 
    **/
    data: Enumerable<sof_shipper_valueCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sof_shipper_value update
   */
  export type sof_shipper_valueUpdateArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_value
     * 
    **/
    select?: sof_shipper_valueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_valueInclude | null
    /**
     * The data needed to update a sof_shipper_value.
     * 
    **/
    data: XOR<sof_shipper_valueUpdateInput, sof_shipper_valueUncheckedUpdateInput>
    /**
     * Choose, which sof_shipper_value to update.
     * 
    **/
    where: sof_shipper_valueWhereUniqueInput
  }


  /**
   * sof_shipper_value updateMany
   */
  export type sof_shipper_valueUpdateManyArgs = {
    /**
     * The data used to update sof_shipper_values.
     * 
    **/
    data: XOR<sof_shipper_valueUpdateManyMutationInput, sof_shipper_valueUncheckedUpdateManyInput>
    /**
     * Filter which sof_shipper_values to update
     * 
    **/
    where?: sof_shipper_valueWhereInput
  }


  /**
   * sof_shipper_value upsert
   */
  export type sof_shipper_valueUpsertArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_value
     * 
    **/
    select?: sof_shipper_valueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_valueInclude | null
    /**
     * The filter to search for the sof_shipper_value to update in case it exists.
     * 
    **/
    where: sof_shipper_valueWhereUniqueInput
    /**
     * In case the sof_shipper_value found by the `where` argument doesn't exist, create a new sof_shipper_value with this data.
     * 
    **/
    create: XOR<sof_shipper_valueCreateInput, sof_shipper_valueUncheckedCreateInput>
    /**
     * In case the sof_shipper_value was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sof_shipper_valueUpdateInput, sof_shipper_valueUncheckedUpdateInput>
  }


  /**
   * sof_shipper_value delete
   */
  export type sof_shipper_valueDeleteArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_value
     * 
    **/
    select?: sof_shipper_valueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_valueInclude | null
    /**
     * Filter which sof_shipper_value to delete.
     * 
    **/
    where: sof_shipper_valueWhereUniqueInput
  }


  /**
   * sof_shipper_value deleteMany
   */
  export type sof_shipper_valueDeleteManyArgs = {
    /**
     * Filter which sof_shipper_values to delete
     * 
    **/
    where?: sof_shipper_valueWhereInput
  }


  /**
   * sof_shipper_value: findUniqueOrThrow
   */
  export type sof_shipper_valueFindUniqueOrThrowArgs = sof_shipper_valueFindUniqueArgsBase
      

  /**
   * sof_shipper_value: findFirstOrThrow
   */
  export type sof_shipper_valueFindFirstOrThrowArgs = sof_shipper_valueFindFirstArgsBase
      

  /**
   * sof_shipper_value without action
   */
  export type sof_shipper_valueArgs = {
    /**
     * Select specific fields to fetch from the sof_shipper_value
     * 
    **/
    select?: sof_shipper_valueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: sof_shipper_valueInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const AgencyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    country_id: 'country_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type AgencyScalarFieldEnum = (typeof AgencyScalarFieldEnum)[keyof typeof AgencyScalarFieldEnum]


  export const Berth_productsScalarFieldEnum: {
    id: 'id',
    loadingCapacity: 'loadingCapacity',
    unloadingCapacity: 'unloadingCapacity',
    berthId: 'berthId',
    productId: 'productId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type Berth_productsScalarFieldEnum = (typeof Berth_productsScalarFieldEnum)[keyof typeof Berth_productsScalarFieldEnum]


  export const BerthsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    portId: 'portId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    maxDraft: 'maxDraft',
    airDraft: 'airDraft',
    maxLengthOverall: 'maxLengthOverall',
    maxDeadWeightTonnage: 'maxDeadWeightTonnage',
    maxBeam: 'maxBeam',
    waterDensity: 'waterDensity'
  };

  export type BerthsScalarFieldEnum = (typeof BerthsScalarFieldEnum)[keyof typeof BerthsScalarFieldEnum]


  export const ChecklistTemplateItemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    type: 'type',
    working_days: 'working_days',
    checklist_template_id: 'checklist_template_id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ChecklistTemplateItemScalarFieldEnum = (typeof ChecklistTemplateItemScalarFieldEnum)[keyof typeof ChecklistTemplateItemScalarFieldEnum]


  export const ChecklistTemplateScalarFieldEnum: {
    id: 'id',
    name: 'name',
    operation_type: 'operation_type',
    agency_id: 'agency_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type ChecklistTemplateScalarFieldEnum = (typeof ChecklistTemplateScalarFieldEnum)[keyof typeof ChecklistTemplateScalarFieldEnum]


  export const CountryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    flag: 'flag',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type CountryScalarFieldEnum = (typeof CountryScalarFieldEnum)[keyof typeof CountryScalarFieldEnum]


  export const Document_productScalarFieldEnum: {
    id: 'id',
    name: 'name',
    abbreviation: 'abbreviation',
    description: 'description',
    packing_type: 'packing_type'
  };

  export type Document_productScalarFieldEnum = (typeof Document_productScalarFieldEnum)[keyof typeof Document_productScalarFieldEnum]


  export const Document_shipperScalarFieldEnum: {
    id: 'id',
    name: 'name',
    cnpj: 'cnpj',
    complement: 'complement'
  };

  export type Document_shipperScalarFieldEnum = (typeof Document_shipperScalarFieldEnum)[keyof typeof Document_shipperScalarFieldEnum]


  export const Group_emailsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    emails: 'emails',
    vessel_id: 'vessel_id',
    updated_by_user_id: 'updated_by_user_id'
  };

  export type Group_emailsScalarFieldEnum = (typeof Group_emailsScalarFieldEnum)[keyof typeof Group_emailsScalarFieldEnum]


  export const InquiresScalarFieldEnum: {
    id: 'id',
    title: 'title',
    group: 'group',
    shipping_id: 'shipping_id',
    updated_by_user_id: 'updated_by_user_id',
    deleted: 'deleted',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type InquiresScalarFieldEnum = (typeof InquiresScalarFieldEnum)[keyof typeof InquiresScalarFieldEnum]


  export const Inquires_commentsScalarFieldEnum: {
    id: 'id',
    body: 'body',
    type: 'type',
    is_done: 'is_done',
    deadline_date: 'deadline_date',
    inquire_id: 'inquire_id',
    user_id: 'user_id',
    deleted: 'deleted',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Inquires_commentsScalarFieldEnum = (typeof Inquires_commentsScalarFieldEnum)[keyof typeof Inquires_commentsScalarFieldEnum]


  export const MigrationsScalarFieldEnum: {
    id: 'id',
    timestamp: 'timestamp',
    name: 'name'
  };

  export type MigrationsScalarFieldEnum = (typeof MigrationsScalarFieldEnum)[keyof typeof MigrationsScalarFieldEnum]


  export const Port_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    portId: 'portId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    userId: 'userId'
  };

  export type Port_filesScalarFieldEnum = (typeof Port_filesScalarFieldEnum)[keyof typeof Port_filesScalarFieldEnum]


  export const PortsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    time_zone: 'time_zone',
    countryId: 'countryId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    slug: 'slug'
  };

  export type PortsScalarFieldEnum = (typeof PortsScalarFieldEnum)[keyof typeof PortsScalarFieldEnum]


  export const ProductsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ProductsScalarFieldEnum = (typeof ProductsScalarFieldEnum)[keyof typeof ProductsScalarFieldEnum]


  export const Proforma_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    proformaId: 'proformaId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type Proforma_filesScalarFieldEnum = (typeof Proforma_filesScalarFieldEnum)[keyof typeof Proforma_filesScalarFieldEnum]


  export const ProformasScalarFieldEnum: {
    id: 'id',
    taxes: 'taxes',
    totalValue: 'totalValue',
    berthedHours: 'berthedHours',
    berthProductId: 'berthProductId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    idHash: 'idHash',
    applicantName: 'applicantName',
    applicantEmail: 'applicantEmail',
    vesselName: 'vesselName',
    imo: 'imo',
    deadWeightTonnage: 'deadWeightTonnage',
    lengthOverall: 'lengthOverall',
    grossTonnage: 'grossTonnage',
    package: 'package',
    builtYear: 'builtYear',
    agencyType: 'agencyType',
    operationType: 'operationType',
    productTonnage: 'productTonnage',
    usd: 'usd',
    isCargillInternational: 'isCargillInternational',
    beam: 'beam',
    etb: 'etb',
    draft: 'draft',
    requestingCustomer: 'requestingCustomer',
    vesselType: 'vesselType'
  };

  export type ProformasScalarFieldEnum = (typeof ProformasScalarFieldEnum)[keyof typeof ProformasScalarFieldEnum]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const ShippingChecklistItemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    type: 'type',
    deadline_date: 'deadline_date',
    commentary: 'commentary',
    is_done: 'is_done',
    shipping_id: 'shipping_id',
    updated_by_user_id: 'updated_by_user_id',
    created_at: 'created_at',
    updated_ut: 'updated_ut',
    deleted_at: 'deleted_at'
  };

  export type ShippingChecklistItemScalarFieldEnum = (typeof ShippingChecklistItemScalarFieldEnum)[keyof typeof ShippingChecklistItemScalarFieldEnum]


  export const ShippingPortScalarFieldEnum: {
    id: 'id',
    estimated_time_of_arrival: 'estimated_time_of_arrival',
    estimated_time_of_berthing: 'estimated_time_of_berthing',
    estimated_time_of_sailing: 'estimated_time_of_sailing',
    time_of_arrival: 'time_of_arrival',
    time_of_berthing: 'time_of_berthing',
    time_of_sailing: 'time_of_sailing',
    shipping_id: 'shipping_id',
    port_id: 'port_id',
    berth_id: 'berth_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type ShippingPortScalarFieldEnum = (typeof ShippingPortScalarFieldEnum)[keyof typeof ShippingPortScalarFieldEnum]


  export const ShippingProductScalarFieldEnum: {
    id: 'id',
    weight: 'weight',
    shipping_id: 'shipping_id',
    product_id: 'product_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type ShippingProductScalarFieldEnum = (typeof ShippingProductScalarFieldEnum)[keyof typeof ShippingProductScalarFieldEnum]


  export const ShippingScalarFieldEnum: {
    id: 'id',
    status: 'status',
    owner_head_name: 'owner_head_name',
    owner_head_address: 'owner_head_address',
    disponent_owner: 'disponent_owner',
    charter_name: 'charter_name',
    master_name: 'master_name',
    master_email: 'master_email',
    estimated_draft_arrival: 'estimated_draft_arrival',
    estimated_draft_departure: 'estimated_draft_departure',
    arrival_draft: 'arrival_draft',
    depart_draft: 'depart_draft',
    vessel_operator: 'vessel_operator',
    vessel_operator_email: 'vessel_operator_email',
    operation_type: 'operation_type',
    agency_type: 'agency_type',
    voyage_number: 'voyage_number',
    external_code: 'external_code',
    comments: 'comments',
    last_port: 'last_port',
    next_port: 'next_port',
    broker: 'broker',
    boat: 'boat',
    tugs: 'tugs',
    garbage: 'garbage',
    last_cargoes: 'last_cargoes',
    sscec_port: 'sscec_port',
    sscec_exp: 'sscec_exp',
    in_marsat_c_number: 'in_marsat_c_number',
    master_phone_01: 'master_phone_01',
    master_phone_02: 'master_phone_02',
    vessel_expert: 'vessel_expert',
    vessel_expert_phone01: 'vessel_expert_phone01',
    vessel_expert_phone02: 'vessel_expert_phone02',
    vessel_expert_alternate: 'vessel_expert_alternate',
    vessel_expert_alternate_phone01: 'vessel_expert_alternate_phone01',
    vessel_expert_alternate_phone02: 'vessel_expert_alternate_phone02',
    vessel_operator_phone01: 'vessel_operator_phone01',
    vessel_operator_phone02: 'vessel_operator_phone02',
    vessel_operator_city_country: 'vessel_operator_city_country',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at',
    vessel_id: 'vessel_id',
    user_id: 'user_id',
    total_load_expected: 'total_load_expected',
    total_load_actual: 'total_load_actual',
    port_operator: 'port_operator'
  };

  export type ShippingScalarFieldEnum = (typeof ShippingScalarFieldEnum)[keyof typeof ShippingScalarFieldEnum]


  export const ShippingSofPortLogEventsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    commentary: 'commentary',
    is_important: 'is_important',
    is_highlighted: 'is_highlighted',
    start_date: 'start_date',
    end_date: 'end_date',
    sof_port_log_event_id: 'sof_port_log_event_id',
    shipping_sof_id: 'shipping_sof_id',
    created_by_user_id: 'created_by_user_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type ShippingSofPortLogEventsScalarFieldEnum = (typeof ShippingSofPortLogEventsScalarFieldEnum)[keyof typeof ShippingSofPortLogEventsScalarFieldEnum]


  export const Shipping_documentsScalarFieldEnum: {
    id: 'id',
    type: 'type',
    document_number: 'document_number',
    consignee: 'consignee',
    vessel_name: 'vessel_name',
    port_of_loading: 'port_of_loading',
    port_of_discharge: 'port_of_discharge',
    notify: 'notify',
    product_name_extra_info: 'product_name_extra_info',
    product_weight_extra_info: 'product_weight_extra_info',
    freight_type: 'freight_type',
    charter_party_date: 'charter_party_date',
    ship_boarded_date: 'ship_boarded_date',
    issue_place_date: 'issue_place_date',
    number_of_original_bill_of_landing: 'number_of_original_bill_of_landing',
    shipper_id: 'shipper_id',
    product_id: 'product_id',
    master_name: 'master_name',
    signature: 'signature',
    shipping_id: 'shipping_id',
    user_id: 'user_id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    order: 'order',
    subset_id: 'subset_id',
    product_gross_weight: 'product_gross_weight',
    product_net_weight: 'product_net_weight',
    product_quantity: 'product_quantity',
    product_packing: 'product_packing'
  };

  export type Shipping_documentsScalarFieldEnum = (typeof Shipping_documentsScalarFieldEnum)[keyof typeof Shipping_documentsScalarFieldEnum]


  export const Shipping_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    shippingId: 'shippingId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    userId: 'userId'
  };

  export type Shipping_filesScalarFieldEnum = (typeof Shipping_filesScalarFieldEnum)[keyof typeof Shipping_filesScalarFieldEnum]


  export const SofPortLogEventCategoriesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type SofPortLogEventCategoriesScalarFieldEnum = (typeof SofPortLogEventCategoriesScalarFieldEnum)[keyof typeof SofPortLogEventCategoriesScalarFieldEnum]


  export const SofPortLogEventsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at',
    category_id: 'category_id'
  };

  export type SofPortLogEventsScalarFieldEnum = (typeof SofPortLogEventsScalarFieldEnum)[keyof typeof SofPortLogEventsScalarFieldEnum]


  export const SofScalarFieldEnum: {
    id: 'id',
    hidden_attributes: 'hidden_attributes',
    shipping_id: 'shipping_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type SofScalarFieldEnum = (typeof SofScalarFieldEnum)[keyof typeof SofScalarFieldEnum]


  export const Sof_bunker_figuresScalarFieldEnum: {
    id: 'id',
    title: 'title',
    ifo: 'ifo',
    mdo: 'mdo',
    fw: 'fw',
    sof_id: 'sof_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sof_bunker_figuresScalarFieldEnum = (typeof Sof_bunker_figuresScalarFieldEnum)[keyof typeof Sof_bunker_figuresScalarFieldEnum]


  export const Sof_draftScalarFieldEnum: {
    id: 'id',
    title: 'title',
    fwd: 'fwd',
    mid: 'mid',
    aft: 'aft',
    sof_id: 'sof_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sof_draftScalarFieldEnum = (typeof Sof_draftScalarFieldEnum)[keyof typeof Sof_draftScalarFieldEnum]


  export const Sof_holidaysScalarFieldEnum: {
    id: 'id',
    name: 'name',
    date: 'date',
    sof_id: 'sof_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sof_holidaysScalarFieldEnum = (typeof Sof_holidaysScalarFieldEnum)[keyof typeof Sof_holidaysScalarFieldEnum]


  export const Sof_remarksScalarFieldEnum: {
    id: 'id',
    title: 'title',
    sof_id: 'sof_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sof_remarksScalarFieldEnum = (typeof Sof_remarksScalarFieldEnum)[keyof typeof Sof_remarksScalarFieldEnum]


  export const Sof_remarks_itemsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    value: 'value',
    is_single: 'is_single',
    sof_remark_id: 'sof_remark_id',
    deleted: 'deleted',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sof_remarks_itemsScalarFieldEnum = (typeof Sof_remarks_itemsScalarFieldEnum)[keyof typeof Sof_remarks_itemsScalarFieldEnum]


  export const Sof_shipperScalarFieldEnum: {
    id: 'id',
    name: 'name',
    quantity: 'quantity',
    sof_shipper_cargo_id: 'sof_shipper_cargo_id'
  };

  export type Sof_shipperScalarFieldEnum = (typeof Sof_shipperScalarFieldEnum)[keyof typeof Sof_shipperScalarFieldEnum]


  export const Sof_shipper_cargoScalarFieldEnum: {
    id: 'id',
    berth: 'berth',
    cargo: 'cargo',
    sof_id: 'sof_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sof_shipper_cargoScalarFieldEnum = (typeof Sof_shipper_cargoScalarFieldEnum)[keyof typeof Sof_shipper_cargoScalarFieldEnum]


  export const Sof_shipper_valueScalarFieldEnum: {
    id: 'id',
    value: 'value',
    sof_shipper_cargo_id: 'sof_shipper_cargo_id'
  };

  export type Sof_shipper_valueScalarFieldEnum = (typeof Sof_shipper_valueScalarFieldEnum)[keyof typeof Sof_shipper_valueScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const SubsetsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    shippingId: 'shippingId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type SubsetsScalarFieldEnum = (typeof SubsetsScalarFieldEnum)[keyof typeof SubsetsScalarFieldEnum]


  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const User_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type User_filesScalarFieldEnum = (typeof User_filesScalarFieldEnum)[keyof typeof User_filesScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    agencyId: 'agencyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Users_preferenceScalarFieldEnum: {
    id: 'id',
    team: 'team',
    ports: 'ports',
    initial_page: 'initial_page',
    user_id: 'user_id'
  };

  export type Users_preferenceScalarFieldEnum = (typeof Users_preferenceScalarFieldEnum)[keyof typeof Users_preferenceScalarFieldEnum]


  export const VesselScalarFieldEnum: {
    id: 'id',
    name: 'name',
    imo: 'imo',
    call_sign: 'call_sign',
    satellite_telephone: 'satellite_telephone',
    classification_society: 'classification_society',
    type: 'type',
    length_overall: 'length_overall',
    dead_weight_tonnage: 'dead_weight_tonnage',
    beam: 'beam',
    cubic_meters: 'cubic_meters',
    gross_tonnage: 'gross_tonnage',
    net_tonnage: 'net_tonnage',
    panama_gross_tonnage: 'panama_gross_tonnage',
    panama_net_tonnage: 'panama_net_tonnage',
    suez_gross_tonnage: 'suez_gross_tonnage',
    suez_net_tonnage: 'suez_net_tonnage',
    reduced_gross_tonnage: 'reduced_gross_tonnage',
    length_between_perpendiculars: 'length_between_perpendiculars',
    molded_depth: 'molded_depth',
    number_of_holds: 'number_of_holds',
    number_of_tanks: 'number_of_tanks',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at',
    country_id: 'country_id',
    draft_sw: 'draft_sw',
    built_year: 'built_year'
  };

  export type VesselScalarFieldEnum = (typeof VesselScalarFieldEnum)[keyof typeof VesselScalarFieldEnum]


  export const Vessel_filesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    filename: 'filename',
    originalName: 'originalName',
    vessel_id: 'vessel_id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    userId: 'userId'
  };

  export type Vessel_filesScalarFieldEnum = (typeof Vessel_filesScalarFieldEnum)[keyof typeof Vessel_filesScalarFieldEnum]


  /**
   * Deep Input Types
   */


  export type AgencyWhereInput = {
    AND?: Enumerable<AgencyWhereInput>
    OR?: Enumerable<AgencyWhereInput>
    NOT?: Enumerable<AgencyWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    country_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    country?: XOR<CountryRelationFilter, CountryWhereInput> | null
    users?: UsersListRelationFilter
    ChecklistTemplate?: ChecklistTemplateListRelationFilter
  }

  export type AgencyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    country_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country?: CountryOrderByWithRelationInput
    users?: usersOrderByRelationAggregateInput
    ChecklistTemplate?: ChecklistTemplateOrderByRelationAggregateInput
  }

  export type AgencyWhereUniqueInput = {
    id?: number
  }

  export type AgencyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    country_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: AgencyCountOrderByAggregateInput
    _avg?: AgencyAvgOrderByAggregateInput
    _max?: AgencyMaxOrderByAggregateInput
    _min?: AgencyMinOrderByAggregateInput
    _sum?: AgencySumOrderByAggregateInput
  }

  export type AgencyScalarWhereWithAggregatesInput = {
    AND?: Enumerable<AgencyScalarWhereWithAggregatesInput>
    OR?: Enumerable<AgencyScalarWhereWithAggregatesInput>
    NOT?: Enumerable<AgencyScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
    country_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type berth_productsWhereInput = {
    AND?: Enumerable<berth_productsWhereInput>
    OR?: Enumerable<berth_productsWhereInput>
    NOT?: Enumerable<berth_productsWhereInput>
    id?: IntFilter | number
    loadingCapacity?: FloatNullableFilter | number | null
    unloadingCapacity?: FloatNullableFilter | number | null
    berthId?: IntFilter | number
    productId?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    berths?: XOR<BerthsRelationFilter, berthsWhereInput>
    products?: XOR<ProductsRelationFilter, productsWhereInput>
    proformas?: ProformasListRelationFilter
  }

  export type berth_productsOrderByWithRelationInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    berths?: berthsOrderByWithRelationInput
    products?: productsOrderByWithRelationInput
    proformas?: proformasOrderByRelationAggregateInput
  }

  export type berth_productsWhereUniqueInput = {
    id?: number
  }

  export type berth_productsOrderByWithAggregationInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: berth_productsCountOrderByAggregateInput
    _avg?: berth_productsAvgOrderByAggregateInput
    _max?: berth_productsMaxOrderByAggregateInput
    _min?: berth_productsMinOrderByAggregateInput
    _sum?: berth_productsSumOrderByAggregateInput
  }

  export type berth_productsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<berth_productsScalarWhereWithAggregatesInput>
    OR?: Enumerable<berth_productsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<berth_productsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    loadingCapacity?: FloatNullableWithAggregatesFilter | number | null
    unloadingCapacity?: FloatNullableWithAggregatesFilter | number | null
    berthId?: IntWithAggregatesFilter | number
    productId?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type berthsWhereInput = {
    AND?: Enumerable<berthsWhereInput>
    OR?: Enumerable<berthsWhereInput>
    NOT?: Enumerable<berthsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    portId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    maxDraft?: FloatNullableFilter | number | null
    airDraft?: FloatNullableFilter | number | null
    maxLengthOverall?: FloatNullableFilter | number | null
    maxDeadWeightTonnage?: FloatNullableFilter | number | null
    maxBeam?: FloatNullableFilter | number | null
    waterDensity?: FloatNullableFilter | number | null
    ports?: XOR<PortsRelationFilter, portsWhereInput> | null
    berth_products?: Berth_productsListRelationFilter
    shipping_ports?: ShippingPortListRelationFilter
  }

  export type berthsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
    ports?: portsOrderByWithRelationInput
    berth_products?: berth_productsOrderByRelationAggregateInput
    shipping_ports?: ShippingPortOrderByRelationAggregateInput
  }

  export type berthsWhereUniqueInput = {
    id?: number
  }

  export type berthsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
    _count?: berthsCountOrderByAggregateInput
    _avg?: berthsAvgOrderByAggregateInput
    _max?: berthsMaxOrderByAggregateInput
    _min?: berthsMinOrderByAggregateInput
    _sum?: berthsSumOrderByAggregateInput
  }

  export type berthsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<berthsScalarWhereWithAggregatesInput>
    OR?: Enumerable<berthsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<berthsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    description?: StringNullableWithAggregatesFilter | string | null
    portId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    maxDraft?: FloatNullableWithAggregatesFilter | number | null
    airDraft?: FloatNullableWithAggregatesFilter | number | null
    maxLengthOverall?: FloatNullableWithAggregatesFilter | number | null
    maxDeadWeightTonnage?: FloatNullableWithAggregatesFilter | number | null
    maxBeam?: FloatNullableWithAggregatesFilter | number | null
    waterDensity?: FloatNullableWithAggregatesFilter | number | null
  }

  export type ChecklistTemplateWhereInput = {
    AND?: Enumerable<ChecklistTemplateWhereInput>
    OR?: Enumerable<ChecklistTemplateWhereInput>
    NOT?: Enumerable<ChecklistTemplateWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    operation_type?: StringNullableFilter | string | null
    agency_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    items?: ChecklistTemplateItemListRelationFilter
    agency?: XOR<AgencyRelationFilter, AgencyWhereInput> | null
  }

  export type ChecklistTemplateOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    operation_type?: SortOrder
    agency_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    items?: ChecklistTemplateItemOrderByRelationAggregateInput
    agency?: AgencyOrderByWithRelationInput
  }

  export type ChecklistTemplateWhereUniqueInput = {
    id?: number
  }

  export type ChecklistTemplateOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    operation_type?: SortOrder
    agency_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: ChecklistTemplateCountOrderByAggregateInput
    _avg?: ChecklistTemplateAvgOrderByAggregateInput
    _max?: ChecklistTemplateMaxOrderByAggregateInput
    _min?: ChecklistTemplateMinOrderByAggregateInput
    _sum?: ChecklistTemplateSumOrderByAggregateInput
  }

  export type ChecklistTemplateScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ChecklistTemplateScalarWhereWithAggregatesInput>
    OR?: Enumerable<ChecklistTemplateScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ChecklistTemplateScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
    operation_type?: StringNullableWithAggregatesFilter | string | null
    agency_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type ChecklistTemplateItemWhereInput = {
    AND?: Enumerable<ChecklistTemplateItemWhereInput>
    OR?: Enumerable<ChecklistTemplateItemWhereInput>
    NOT?: Enumerable<ChecklistTemplateItemWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    type?: StringFilter | string
    working_days?: IntNullableFilter | number | null
    checklist_template_id?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    checklistTemplate?: XOR<ChecklistTemplateRelationFilter, ChecklistTemplateWhereInput> | null
  }

  export type ChecklistTemplateItemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    checklistTemplate?: ChecklistTemplateOrderByWithRelationInput
  }

  export type ChecklistTemplateItemWhereUniqueInput = {
    id?: number
  }

  export type ChecklistTemplateItemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: ChecklistTemplateItemCountOrderByAggregateInput
    _avg?: ChecklistTemplateItemAvgOrderByAggregateInput
    _max?: ChecklistTemplateItemMaxOrderByAggregateInput
    _min?: ChecklistTemplateItemMinOrderByAggregateInput
    _sum?: ChecklistTemplateItemSumOrderByAggregateInput
  }

  export type ChecklistTemplateItemScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ChecklistTemplateItemScalarWhereWithAggregatesInput>
    OR?: Enumerable<ChecklistTemplateItemScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ChecklistTemplateItemScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    type?: StringWithAggregatesFilter | string
    working_days?: IntNullableWithAggregatesFilter | number | null
    checklist_template_id?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type ShippingChecklistItemWhereInput = {
    AND?: Enumerable<ShippingChecklistItemWhereInput>
    OR?: Enumerable<ShippingChecklistItemWhereInput>
    NOT?: Enumerable<ShippingChecklistItemWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    type?: StringFilter | string
    deadline_date?: DateTimeNullableFilter | Date | string | null
    commentary?: StringNullableFilter | string | null
    is_done?: BoolFilter | boolean
    shipping_id?: IntFilter | number
    updated_by_user_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_ut?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    shipping?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    user?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type ShippingChecklistItemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_ut?: SortOrder
    deleted_at?: SortOrder
    shipping?: ShippingOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
  }

  export type ShippingChecklistItemWhereUniqueInput = {
    id?: number
  }

  export type ShippingChecklistItemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_ut?: SortOrder
    deleted_at?: SortOrder
    _count?: ShippingChecklistItemCountOrderByAggregateInput
    _avg?: ShippingChecklistItemAvgOrderByAggregateInput
    _max?: ShippingChecklistItemMaxOrderByAggregateInput
    _min?: ShippingChecklistItemMinOrderByAggregateInput
    _sum?: ShippingChecklistItemSumOrderByAggregateInput
  }

  export type ShippingChecklistItemScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ShippingChecklistItemScalarWhereWithAggregatesInput>
    OR?: Enumerable<ShippingChecklistItemScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ShippingChecklistItemScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    type?: StringWithAggregatesFilter | string
    deadline_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    commentary?: StringNullableWithAggregatesFilter | string | null
    is_done?: BoolWithAggregatesFilter | boolean
    shipping_id?: IntWithAggregatesFilter | number
    updated_by_user_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_ut?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type CountryWhereInput = {
    AND?: Enumerable<CountryWhereInput>
    OR?: Enumerable<CountryWhereInput>
    NOT?: Enumerable<CountryWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    flag?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    ports?: PortsListRelationFilter
    vessels?: VesselListRelationFilter
    agency?: AgencyListRelationFilter
  }

  export type CountryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    ports?: portsOrderByRelationAggregateInput
    vessels?: VesselOrderByRelationAggregateInput
    agency?: AgencyOrderByRelationAggregateInput
  }

  export type CountryWhereUniqueInput = {
    id?: number
  }

  export type CountryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: CountryCountOrderByAggregateInput
    _avg?: CountryAvgOrderByAggregateInput
    _max?: CountryMaxOrderByAggregateInput
    _min?: CountryMinOrderByAggregateInput
    _sum?: CountrySumOrderByAggregateInput
  }

  export type CountryScalarWhereWithAggregatesInput = {
    AND?: Enumerable<CountryScalarWhereWithAggregatesInput>
    OR?: Enumerable<CountryScalarWhereWithAggregatesInput>
    NOT?: Enumerable<CountryScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    flag?: StringNullableWithAggregatesFilter | string | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type migrationsWhereInput = {
    AND?: Enumerable<migrationsWhereInput>
    OR?: Enumerable<migrationsWhereInput>
    NOT?: Enumerable<migrationsWhereInput>
    id?: IntFilter | number
    timestamp?: IntFilter | number
    name?: StringFilter | string
  }

  export type migrationsOrderByWithRelationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
  }

  export type migrationsWhereUniqueInput = {
    id?: number
  }

  export type migrationsOrderByWithAggregationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
    _count?: migrationsCountOrderByAggregateInput
    _avg?: migrationsAvgOrderByAggregateInput
    _max?: migrationsMaxOrderByAggregateInput
    _min?: migrationsMinOrderByAggregateInput
    _sum?: migrationsSumOrderByAggregateInput
  }

  export type migrationsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<migrationsScalarWhereWithAggregatesInput>
    OR?: Enumerable<migrationsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<migrationsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    timestamp?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
  }

  export type port_filesWhereInput = {
    AND?: Enumerable<port_filesWhereInput>
    OR?: Enumerable<port_filesWhereInput>
    NOT?: Enumerable<port_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    portId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    ports?: XOR<PortsRelationFilter, portsWhereInput> | null
  }

  export type port_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    users?: usersOrderByWithRelationInput
    ports?: portsOrderByWithRelationInput
  }

  export type port_filesWhereUniqueInput = {
    id?: number
  }

  export type port_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    _count?: port_filesCountOrderByAggregateInput
    _avg?: port_filesAvgOrderByAggregateInput
    _max?: port_filesMaxOrderByAggregateInput
    _min?: port_filesMinOrderByAggregateInput
    _sum?: port_filesSumOrderByAggregateInput
  }

  export type port_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<port_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<port_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<port_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    portId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    userId?: IntNullableWithAggregatesFilter | number | null
  }

  export type portsWhereInput = {
    AND?: Enumerable<portsWhereInput>
    OR?: Enumerable<portsWhereInput>
    NOT?: Enumerable<portsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    time_zone?: StringNullableFilter | string | null
    countryId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    slug?: StringNullableFilter | string | null
    country?: XOR<CountryRelationFilter, CountryWhereInput> | null
    berths?: BerthsListRelationFilter
    port_files?: Port_filesListRelationFilter
    shipping_ports?: ShippingPortListRelationFilter
  }

  export type portsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    time_zone?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
    country?: CountryOrderByWithRelationInput
    berths?: berthsOrderByRelationAggregateInput
    port_files?: port_filesOrderByRelationAggregateInput
    shipping_ports?: ShippingPortOrderByRelationAggregateInput
  }

  export type portsWhereUniqueInput = {
    id?: number
  }

  export type portsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    time_zone?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
    _count?: portsCountOrderByAggregateInput
    _avg?: portsAvgOrderByAggregateInput
    _max?: portsMaxOrderByAggregateInput
    _min?: portsMinOrderByAggregateInput
    _sum?: portsSumOrderByAggregateInput
  }

  export type portsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<portsScalarWhereWithAggregatesInput>
    OR?: Enumerable<portsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<portsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    time_zone?: StringNullableWithAggregatesFilter | string | null
    countryId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    slug?: StringNullableWithAggregatesFilter | string | null
  }

  export type productsWhereInput = {
    AND?: Enumerable<productsWhereInput>
    OR?: Enumerable<productsWhereInput>
    NOT?: Enumerable<productsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    berth_products?: Berth_productsListRelationFilter
    shipping_products?: ShippingProductListRelationFilter
  }

  export type productsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    berth_products?: berth_productsOrderByRelationAggregateInput
    shipping_products?: ShippingProductOrderByRelationAggregateInput
  }

  export type productsWhereUniqueInput = {
    id?: number
  }

  export type productsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: productsCountOrderByAggregateInput
    _avg?: productsAvgOrderByAggregateInput
    _max?: productsMaxOrderByAggregateInput
    _min?: productsMinOrderByAggregateInput
    _sum?: productsSumOrderByAggregateInput
  }

  export type productsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<productsScalarWhereWithAggregatesInput>
    OR?: Enumerable<productsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<productsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    description?: StringNullableWithAggregatesFilter | string | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type proforma_filesWhereInput = {
    AND?: Enumerable<proforma_filesWhereInput>
    OR?: Enumerable<proforma_filesWhereInput>
    NOT?: Enumerable<proforma_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    proformaId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    proformas?: XOR<ProformasRelationFilter, proformasWhereInput> | null
  }

  export type proforma_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    proformas?: proformasOrderByWithRelationInput
  }

  export type proforma_filesWhereUniqueInput = {
    id?: number
  }

  export type proforma_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: proforma_filesCountOrderByAggregateInput
    _avg?: proforma_filesAvgOrderByAggregateInput
    _max?: proforma_filesMaxOrderByAggregateInput
    _min?: proforma_filesMinOrderByAggregateInput
    _sum?: proforma_filesSumOrderByAggregateInput
  }

  export type proforma_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<proforma_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<proforma_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<proforma_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    proformaId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type proformasWhereInput = {
    AND?: Enumerable<proformasWhereInput>
    OR?: Enumerable<proformasWhereInput>
    NOT?: Enumerable<proformasWhereInput>
    id?: IntFilter | number
    taxes?: StringNullableFilter | string | null
    totalValue?: IntNullableFilter | number | null
    berthedHours?: FloatNullableFilter | number | null
    berthProductId?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    idHash?: StringNullableFilter | string | null
    applicantName?: StringNullableFilter | string | null
    applicantEmail?: StringNullableFilter | string | null
    vesselName?: StringNullableFilter | string | null
    imo?: StringNullableFilter | string | null
    deadWeightTonnage?: FloatNullableFilter | number | null
    lengthOverall?: FloatNullableFilter | number | null
    grossTonnage?: FloatNullableFilter | number | null
    package?: StringNullableFilter | string | null
    builtYear?: IntNullableFilter | number | null
    agencyType?: StringNullableFilter | string | null
    operationType?: StringNullableFilter | string | null
    productTonnage?: FloatNullableFilter | number | null
    usd?: FloatNullableFilter | number | null
    isCargillInternational?: BoolNullableFilter | boolean | null
    beam?: FloatNullableFilter | number | null
    etb?: DateTimeNullableFilter | Date | string | null
    draft?: FloatNullableFilter | number | null
    requestingCustomer?: StringNullableFilter | string | null
    vesselType?: StringNullableFilter | string | null
    berth_products?: XOR<Berth_productsRelationFilter, berth_productsWhereInput>
    proforma_files?: Proforma_filesListRelationFilter
  }

  export type proformasOrderByWithRelationInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
    berth_products?: berth_productsOrderByWithRelationInput
    proforma_files?: proforma_filesOrderByRelationAggregateInput
  }

  export type proformasWhereUniqueInput = {
    id?: number
  }

  export type proformasOrderByWithAggregationInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
    _count?: proformasCountOrderByAggregateInput
    _avg?: proformasAvgOrderByAggregateInput
    _max?: proformasMaxOrderByAggregateInput
    _min?: proformasMinOrderByAggregateInput
    _sum?: proformasSumOrderByAggregateInput
  }

  export type proformasScalarWhereWithAggregatesInput = {
    AND?: Enumerable<proformasScalarWhereWithAggregatesInput>
    OR?: Enumerable<proformasScalarWhereWithAggregatesInput>
    NOT?: Enumerable<proformasScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    taxes?: StringNullableWithAggregatesFilter | string | null
    totalValue?: IntNullableWithAggregatesFilter | number | null
    berthedHours?: FloatNullableWithAggregatesFilter | number | null
    berthProductId?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    idHash?: StringNullableWithAggregatesFilter | string | null
    applicantName?: StringNullableWithAggregatesFilter | string | null
    applicantEmail?: StringNullableWithAggregatesFilter | string | null
    vesselName?: StringNullableWithAggregatesFilter | string | null
    imo?: StringNullableWithAggregatesFilter | string | null
    deadWeightTonnage?: FloatNullableWithAggregatesFilter | number | null
    lengthOverall?: FloatNullableWithAggregatesFilter | number | null
    grossTonnage?: FloatNullableWithAggregatesFilter | number | null
    package?: StringNullableWithAggregatesFilter | string | null
    builtYear?: IntNullableWithAggregatesFilter | number | null
    agencyType?: StringNullableWithAggregatesFilter | string | null
    operationType?: StringNullableWithAggregatesFilter | string | null
    productTonnage?: FloatNullableWithAggregatesFilter | number | null
    usd?: FloatNullableWithAggregatesFilter | number | null
    isCargillInternational?: BoolNullableWithAggregatesFilter | boolean | null
    beam?: FloatNullableWithAggregatesFilter | number | null
    etb?: DateTimeNullableWithAggregatesFilter | Date | string | null
    draft?: FloatNullableWithAggregatesFilter | number | null
    requestingCustomer?: StringNullableWithAggregatesFilter | string | null
    vesselType?: StringNullableWithAggregatesFilter | string | null
  }

  export type shipping_documentsWhereInput = {
    AND?: Enumerable<shipping_documentsWhereInput>
    OR?: Enumerable<shipping_documentsWhereInput>
    NOT?: Enumerable<shipping_documentsWhereInput>
    id?: IntFilter | number
    type?: StringNullableFilter | string | null
    document_number?: StringNullableFilter | string | null
    consignee?: StringNullableFilter | string | null
    vessel_name?: StringNullableFilter | string | null
    port_of_loading?: StringNullableFilter | string | null
    port_of_discharge?: StringNullableFilter | string | null
    notify?: StringNullableFilter | string | null
    product_name_extra_info?: StringNullableFilter | string | null
    product_weight_extra_info?: StringNullableFilter | string | null
    freight_type?: StringNullableFilter | string | null
    charter_party_date?: StringNullableFilter | string | null
    ship_boarded_date?: StringNullableFilter | string | null
    issue_place_date?: StringNullableFilter | string | null
    number_of_original_bill_of_landing?: FloatNullableFilter | number | null
    shipper_id?: IntNullableFilter | number | null
    product_id?: IntNullableFilter | number | null
    master_name?: StringNullableFilter | string | null
    signature?: StringNullableFilter | string | null
    shipping_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    order?: IntNullableFilter | number | null
    subset_id?: IntNullableFilter | number | null
    product_gross_weight?: FloatNullableFilter | number | null
    product_net_weight?: FloatNullableFilter | number | null
    product_quantity?: FloatNullableFilter | number | null
    product_packing?: StringNullableFilter | string | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    subsets?: XOR<SubsetsRelationFilter, subsetsWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    document_shipper?: XOR<Document_shipperRelationFilter, document_shipperWhereInput> | null
    document_product?: XOR<Document_productRelationFilter, document_productWhereInput> | null
  }

  export type shipping_documentsOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    document_number?: SortOrder
    consignee?: SortOrder
    vessel_name?: SortOrder
    port_of_loading?: SortOrder
    port_of_discharge?: SortOrder
    notify?: SortOrder
    product_name_extra_info?: SortOrder
    product_weight_extra_info?: SortOrder
    freight_type?: SortOrder
    charter_party_date?: SortOrder
    ship_boarded_date?: SortOrder
    issue_place_date?: SortOrder
    number_of_original_bill_of_landing?: SortOrder
    shipper_id?: SortOrder
    product_id?: SortOrder
    master_name?: SortOrder
    signature?: SortOrder
    shipping_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subset_id?: SortOrder
    product_gross_weight?: SortOrder
    product_net_weight?: SortOrder
    product_quantity?: SortOrder
    product_packing?: SortOrder
    shippings?: ShippingOrderByWithRelationInput
    subsets?: subsetsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    document_shipper?: document_shipperOrderByWithRelationInput
    document_product?: document_productOrderByWithRelationInput
  }

  export type shipping_documentsWhereUniqueInput = {
    id?: number
  }

  export type shipping_documentsOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    document_number?: SortOrder
    consignee?: SortOrder
    vessel_name?: SortOrder
    port_of_loading?: SortOrder
    port_of_discharge?: SortOrder
    notify?: SortOrder
    product_name_extra_info?: SortOrder
    product_weight_extra_info?: SortOrder
    freight_type?: SortOrder
    charter_party_date?: SortOrder
    ship_boarded_date?: SortOrder
    issue_place_date?: SortOrder
    number_of_original_bill_of_landing?: SortOrder
    shipper_id?: SortOrder
    product_id?: SortOrder
    master_name?: SortOrder
    signature?: SortOrder
    shipping_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subset_id?: SortOrder
    product_gross_weight?: SortOrder
    product_net_weight?: SortOrder
    product_quantity?: SortOrder
    product_packing?: SortOrder
    _count?: shipping_documentsCountOrderByAggregateInput
    _avg?: shipping_documentsAvgOrderByAggregateInput
    _max?: shipping_documentsMaxOrderByAggregateInput
    _min?: shipping_documentsMinOrderByAggregateInput
    _sum?: shipping_documentsSumOrderByAggregateInput
  }

  export type shipping_documentsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<shipping_documentsScalarWhereWithAggregatesInput>
    OR?: Enumerable<shipping_documentsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<shipping_documentsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    type?: StringNullableWithAggregatesFilter | string | null
    document_number?: StringNullableWithAggregatesFilter | string | null
    consignee?: StringNullableWithAggregatesFilter | string | null
    vessel_name?: StringNullableWithAggregatesFilter | string | null
    port_of_loading?: StringNullableWithAggregatesFilter | string | null
    port_of_discharge?: StringNullableWithAggregatesFilter | string | null
    notify?: StringNullableWithAggregatesFilter | string | null
    product_name_extra_info?: StringNullableWithAggregatesFilter | string | null
    product_weight_extra_info?: StringNullableWithAggregatesFilter | string | null
    freight_type?: StringNullableWithAggregatesFilter | string | null
    charter_party_date?: StringNullableWithAggregatesFilter | string | null
    ship_boarded_date?: StringNullableWithAggregatesFilter | string | null
    issue_place_date?: StringNullableWithAggregatesFilter | string | null
    number_of_original_bill_of_landing?: FloatNullableWithAggregatesFilter | number | null
    shipper_id?: IntNullableWithAggregatesFilter | number | null
    product_id?: IntNullableWithAggregatesFilter | number | null
    master_name?: StringNullableWithAggregatesFilter | string | null
    signature?: StringNullableWithAggregatesFilter | string | null
    shipping_id?: IntNullableWithAggregatesFilter | number | null
    user_id?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    order?: IntNullableWithAggregatesFilter | number | null
    subset_id?: IntNullableWithAggregatesFilter | number | null
    product_gross_weight?: FloatNullableWithAggregatesFilter | number | null
    product_net_weight?: FloatNullableWithAggregatesFilter | number | null
    product_quantity?: FloatNullableWithAggregatesFilter | number | null
    product_packing?: StringNullableWithAggregatesFilter | string | null
  }

  export type document_shipperWhereInput = {
    AND?: Enumerable<document_shipperWhereInput>
    OR?: Enumerable<document_shipperWhereInput>
    NOT?: Enumerable<document_shipperWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    cnpj?: StringNullableFilter | string | null
    complement?: StringNullableFilter | string | null
    shipping_documents?: Shipping_documentsListRelationFilter
  }

  export type document_shipperOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    complement?: SortOrder
    shipping_documents?: shipping_documentsOrderByRelationAggregateInput
  }

  export type document_shipperWhereUniqueInput = {
    id?: number
  }

  export type document_shipperOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    complement?: SortOrder
    _count?: document_shipperCountOrderByAggregateInput
    _avg?: document_shipperAvgOrderByAggregateInput
    _max?: document_shipperMaxOrderByAggregateInput
    _min?: document_shipperMinOrderByAggregateInput
    _sum?: document_shipperSumOrderByAggregateInput
  }

  export type document_shipperScalarWhereWithAggregatesInput = {
    AND?: Enumerable<document_shipperScalarWhereWithAggregatesInput>
    OR?: Enumerable<document_shipperScalarWhereWithAggregatesInput>
    NOT?: Enumerable<document_shipperScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    cnpj?: StringNullableWithAggregatesFilter | string | null
    complement?: StringNullableWithAggregatesFilter | string | null
  }

  export type document_productWhereInput = {
    AND?: Enumerable<document_productWhereInput>
    OR?: Enumerable<document_productWhereInput>
    NOT?: Enumerable<document_productWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    abbreviation?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    packing_type?: StringNullableFilter | string | null
    shipping_documents?: Shipping_documentsListRelationFilter
  }

  export type document_productOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    abbreviation?: SortOrder
    description?: SortOrder
    packing_type?: SortOrder
    shipping_documents?: shipping_documentsOrderByRelationAggregateInput
  }

  export type document_productWhereUniqueInput = {
    id?: number
  }

  export type document_productOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    abbreviation?: SortOrder
    description?: SortOrder
    packing_type?: SortOrder
    _count?: document_productCountOrderByAggregateInput
    _avg?: document_productAvgOrderByAggregateInput
    _max?: document_productMaxOrderByAggregateInput
    _min?: document_productMinOrderByAggregateInput
    _sum?: document_productSumOrderByAggregateInput
  }

  export type document_productScalarWhereWithAggregatesInput = {
    AND?: Enumerable<document_productScalarWhereWithAggregatesInput>
    OR?: Enumerable<document_productScalarWhereWithAggregatesInput>
    NOT?: Enumerable<document_productScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    abbreviation?: StringNullableWithAggregatesFilter | string | null
    description?: StringNullableWithAggregatesFilter | string | null
    packing_type?: StringNullableWithAggregatesFilter | string | null
  }

  export type shipping_filesWhereInput = {
    AND?: Enumerable<shipping_filesWhereInput>
    OR?: Enumerable<shipping_filesWhereInput>
    NOT?: Enumerable<shipping_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type shipping_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    shippings?: ShippingOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type shipping_filesWhereUniqueInput = {
    id?: number
  }

  export type shipping_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    _count?: shipping_filesCountOrderByAggregateInput
    _avg?: shipping_filesAvgOrderByAggregateInput
    _max?: shipping_filesMaxOrderByAggregateInput
    _min?: shipping_filesMinOrderByAggregateInput
    _sum?: shipping_filesSumOrderByAggregateInput
  }

  export type shipping_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<shipping_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<shipping_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<shipping_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    shippingId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    userId?: IntNullableWithAggregatesFilter | number | null
  }

  export type ShippingPortWhereInput = {
    AND?: Enumerable<ShippingPortWhereInput>
    OR?: Enumerable<ShippingPortWhereInput>
    NOT?: Enumerable<ShippingPortWhereInput>
    id?: IntFilter | number
    estimated_time_of_arrival?: DateTimeNullableFilter | Date | string | null
    estimated_time_of_berthing?: DateTimeNullableFilter | Date | string | null
    estimated_time_of_sailing?: DateTimeNullableFilter | Date | string | null
    time_of_arrival?: DateTimeNullableFilter | Date | string | null
    time_of_berthing?: DateTimeNullableFilter | Date | string | null
    time_of_sailing?: DateTimeNullableFilter | Date | string | null
    shipping_id?: IntNullableFilter | number | null
    port_id?: IntNullableFilter | number | null
    berth_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    berths?: XOR<BerthsRelationFilter, berthsWhereInput> | null
    ports?: XOR<PortsRelationFilter, portsWhereInput> | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
  }

  export type ShippingPortOrderByWithRelationInput = {
    id?: SortOrder
    estimated_time_of_arrival?: SortOrder
    estimated_time_of_berthing?: SortOrder
    estimated_time_of_sailing?: SortOrder
    time_of_arrival?: SortOrder
    time_of_berthing?: SortOrder
    time_of_sailing?: SortOrder
    shipping_id?: SortOrder
    port_id?: SortOrder
    berth_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    berths?: berthsOrderByWithRelationInput
    ports?: portsOrderByWithRelationInput
    shippings?: ShippingOrderByWithRelationInput
  }

  export type ShippingPortWhereUniqueInput = {
    id?: number
  }

  export type ShippingPortOrderByWithAggregationInput = {
    id?: SortOrder
    estimated_time_of_arrival?: SortOrder
    estimated_time_of_berthing?: SortOrder
    estimated_time_of_sailing?: SortOrder
    time_of_arrival?: SortOrder
    time_of_berthing?: SortOrder
    time_of_sailing?: SortOrder
    shipping_id?: SortOrder
    port_id?: SortOrder
    berth_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: ShippingPortCountOrderByAggregateInput
    _avg?: ShippingPortAvgOrderByAggregateInput
    _max?: ShippingPortMaxOrderByAggregateInput
    _min?: ShippingPortMinOrderByAggregateInput
    _sum?: ShippingPortSumOrderByAggregateInput
  }

  export type ShippingPortScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ShippingPortScalarWhereWithAggregatesInput>
    OR?: Enumerable<ShippingPortScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ShippingPortScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    estimated_time_of_arrival?: DateTimeNullableWithAggregatesFilter | Date | string | null
    estimated_time_of_berthing?: DateTimeNullableWithAggregatesFilter | Date | string | null
    estimated_time_of_sailing?: DateTimeNullableWithAggregatesFilter | Date | string | null
    time_of_arrival?: DateTimeNullableWithAggregatesFilter | Date | string | null
    time_of_berthing?: DateTimeNullableWithAggregatesFilter | Date | string | null
    time_of_sailing?: DateTimeNullableWithAggregatesFilter | Date | string | null
    shipping_id?: IntNullableWithAggregatesFilter | number | null
    port_id?: IntNullableWithAggregatesFilter | number | null
    berth_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type ShippingProductWhereInput = {
    AND?: Enumerable<ShippingProductWhereInput>
    OR?: Enumerable<ShippingProductWhereInput>
    NOT?: Enumerable<ShippingProductWhereInput>
    id?: IntFilter | number
    weight?: FloatNullableFilter | number | null
    shipping_id?: IntNullableFilter | number | null
    product_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    product?: XOR<ProductsRelationFilter, productsWhereInput> | null
    shipping?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
  }

  export type ShippingProductOrderByWithRelationInput = {
    id?: SortOrder
    weight?: SortOrder
    shipping_id?: SortOrder
    product_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    product?: productsOrderByWithRelationInput
    shipping?: ShippingOrderByWithRelationInput
  }

  export type ShippingProductWhereUniqueInput = {
    id?: number
  }

  export type ShippingProductOrderByWithAggregationInput = {
    id?: SortOrder
    weight?: SortOrder
    shipping_id?: SortOrder
    product_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: ShippingProductCountOrderByAggregateInput
    _avg?: ShippingProductAvgOrderByAggregateInput
    _max?: ShippingProductMaxOrderByAggregateInput
    _min?: ShippingProductMinOrderByAggregateInput
    _sum?: ShippingProductSumOrderByAggregateInput
  }

  export type ShippingProductScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ShippingProductScalarWhereWithAggregatesInput>
    OR?: Enumerable<ShippingProductScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ShippingProductScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    weight?: FloatNullableWithAggregatesFilter | number | null
    shipping_id?: IntNullableWithAggregatesFilter | number | null
    product_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type ShippingWhereInput = {
    AND?: Enumerable<ShippingWhereInput>
    OR?: Enumerable<ShippingWhereInput>
    NOT?: Enumerable<ShippingWhereInput>
    id?: IntFilter | number
    status?: StringNullableFilter | string | null
    owner_head_name?: StringNullableFilter | string | null
    owner_head_address?: StringNullableFilter | string | null
    disponent_owner?: StringNullableFilter | string | null
    charter_name?: StringNullableFilter | string | null
    master_name?: StringNullableFilter | string | null
    master_email?: StringNullableFilter | string | null
    estimated_draft_arrival?: StringNullableFilter | string | null
    estimated_draft_departure?: StringNullableFilter | string | null
    arrival_draft?: FloatNullableFilter | number | null
    depart_draft?: FloatNullableFilter | number | null
    vessel_operator?: StringNullableFilter | string | null
    vessel_operator_email?: StringNullableFilter | string | null
    operation_type?: StringNullableFilter | string | null
    agency_type?: StringNullableFilter | string | null
    voyage_number?: StringNullableFilter | string | null
    external_code?: StringNullableFilter | string | null
    comments?: StringNullableFilter | string | null
    last_port?: StringNullableFilter | string | null
    next_port?: StringNullableFilter | string | null
    broker?: StringNullableFilter | string | null
    boat?: StringNullableFilter | string | null
    tugs?: StringNullableFilter | string | null
    garbage?: StringNullableFilter | string | null
    last_cargoes?: StringNullableFilter | string | null
    sscec_port?: StringNullableFilter | string | null
    sscec_exp?: StringNullableFilter | string | null
    in_marsat_c_number?: StringNullableFilter | string | null
    master_phone_01?: StringNullableFilter | string | null
    master_phone_02?: StringNullableFilter | string | null
    vessel_expert?: StringNullableFilter | string | null
    vessel_expert_phone01?: StringNullableFilter | string | null
    vessel_expert_phone02?: StringNullableFilter | string | null
    vessel_expert_alternate?: StringNullableFilter | string | null
    vessel_expert_alternate_phone01?: StringNullableFilter | string | null
    vessel_expert_alternate_phone02?: StringNullableFilter | string | null
    vessel_operator_phone01?: StringNullableFilter | string | null
    vessel_operator_phone02?: StringNullableFilter | string | null
    vessel_operator_city_country?: StringNullableFilter | string | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    vessel_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    total_load_expected?: FloatNullableFilter | number | null
    total_load_actual?: FloatNullableFilter | number | null
    port_operator?: StringNullableFilter | string | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    vessel?: XOR<VesselRelationFilter, VesselWhereInput> | null
    shipping_documents?: Shipping_documentsListRelationFilter
    shipping_files?: Shipping_filesListRelationFilter
    shipping_ports?: ShippingPortListRelationFilter
    shipping_products?: ShippingProductListRelationFilter
    subsets?: SubsetsListRelationFilter
    inquires?: InquiresListRelationFilter
    ShippingChecklistItem?: ShippingChecklistItemListRelationFilter
    sof?: XOR<SofRelationFilter, sofWhereInput> | null
  }

  export type ShippingOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
    port_operator?: SortOrder
    users?: usersOrderByWithRelationInput
    vessel?: VesselOrderByWithRelationInput
    shipping_documents?: shipping_documentsOrderByRelationAggregateInput
    shipping_files?: shipping_filesOrderByRelationAggregateInput
    shipping_ports?: ShippingPortOrderByRelationAggregateInput
    shipping_products?: ShippingProductOrderByRelationAggregateInput
    subsets?: subsetsOrderByRelationAggregateInput
    inquires?: inquiresOrderByRelationAggregateInput
    ShippingChecklistItem?: ShippingChecklistItemOrderByRelationAggregateInput
    sof?: sofOrderByWithRelationInput
  }

  export type ShippingWhereUniqueInput = {
    id?: number
  }

  export type ShippingOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
    port_operator?: SortOrder
    _count?: ShippingCountOrderByAggregateInput
    _avg?: ShippingAvgOrderByAggregateInput
    _max?: ShippingMaxOrderByAggregateInput
    _min?: ShippingMinOrderByAggregateInput
    _sum?: ShippingSumOrderByAggregateInput
  }

  export type ShippingScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ShippingScalarWhereWithAggregatesInput>
    OR?: Enumerable<ShippingScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ShippingScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    status?: StringNullableWithAggregatesFilter | string | null
    owner_head_name?: StringNullableWithAggregatesFilter | string | null
    owner_head_address?: StringNullableWithAggregatesFilter | string | null
    disponent_owner?: StringNullableWithAggregatesFilter | string | null
    charter_name?: StringNullableWithAggregatesFilter | string | null
    master_name?: StringNullableWithAggregatesFilter | string | null
    master_email?: StringNullableWithAggregatesFilter | string | null
    estimated_draft_arrival?: StringNullableWithAggregatesFilter | string | null
    estimated_draft_departure?: StringNullableWithAggregatesFilter | string | null
    arrival_draft?: FloatNullableWithAggregatesFilter | number | null
    depart_draft?: FloatNullableWithAggregatesFilter | number | null
    vessel_operator?: StringNullableWithAggregatesFilter | string | null
    vessel_operator_email?: StringNullableWithAggregatesFilter | string | null
    operation_type?: StringNullableWithAggregatesFilter | string | null
    agency_type?: StringNullableWithAggregatesFilter | string | null
    voyage_number?: StringNullableWithAggregatesFilter | string | null
    external_code?: StringNullableWithAggregatesFilter | string | null
    comments?: StringNullableWithAggregatesFilter | string | null
    last_port?: StringNullableWithAggregatesFilter | string | null
    next_port?: StringNullableWithAggregatesFilter | string | null
    broker?: StringNullableWithAggregatesFilter | string | null
    boat?: StringNullableWithAggregatesFilter | string | null
    tugs?: StringNullableWithAggregatesFilter | string | null
    garbage?: StringNullableWithAggregatesFilter | string | null
    last_cargoes?: StringNullableWithAggregatesFilter | string | null
    sscec_port?: StringNullableWithAggregatesFilter | string | null
    sscec_exp?: StringNullableWithAggregatesFilter | string | null
    in_marsat_c_number?: StringNullableWithAggregatesFilter | string | null
    master_phone_01?: StringNullableWithAggregatesFilter | string | null
    master_phone_02?: StringNullableWithAggregatesFilter | string | null
    vessel_expert?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_phone01?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_phone02?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_alternate?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_alternate_phone01?: StringNullableWithAggregatesFilter | string | null
    vessel_expert_alternate_phone02?: StringNullableWithAggregatesFilter | string | null
    vessel_operator_phone01?: StringNullableWithAggregatesFilter | string | null
    vessel_operator_phone02?: StringNullableWithAggregatesFilter | string | null
    vessel_operator_city_country?: StringNullableWithAggregatesFilter | string | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    vessel_id?: IntNullableWithAggregatesFilter | number | null
    user_id?: IntNullableWithAggregatesFilter | number | null
    total_load_expected?: FloatNullableWithAggregatesFilter | number | null
    total_load_actual?: FloatNullableWithAggregatesFilter | number | null
    port_operator?: StringNullableWithAggregatesFilter | string | null
  }

  export type subsetsWhereInput = {
    AND?: Enumerable<subsetsWhereInput>
    OR?: Enumerable<subsetsWhereInput>
    NOT?: Enumerable<subsetsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    shipping_documents?: Shipping_documentsListRelationFilter
  }

  export type subsetsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    shippings?: ShippingOrderByWithRelationInput
    shipping_documents?: shipping_documentsOrderByRelationAggregateInput
  }

  export type subsetsWhereUniqueInput = {
    id?: number
  }

  export type subsetsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: subsetsCountOrderByAggregateInput
    _avg?: subsetsAvgOrderByAggregateInput
    _max?: subsetsMaxOrderByAggregateInput
    _min?: subsetsMinOrderByAggregateInput
    _sum?: subsetsSumOrderByAggregateInput
  }

  export type subsetsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<subsetsScalarWhereWithAggregatesInput>
    OR?: Enumerable<subsetsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<subsetsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    shippingId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type user_filesWhereInput = {
    AND?: Enumerable<user_filesWhereInput>
    OR?: Enumerable<user_filesWhereInput>
    NOT?: Enumerable<user_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    userId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type user_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_filesWhereUniqueInput = {
    id?: number
  }

  export type user_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: user_filesCountOrderByAggregateInput
    _avg?: user_filesAvgOrderByAggregateInput
    _max?: user_filesMaxOrderByAggregateInput
    _min?: user_filesMinOrderByAggregateInput
    _sum?: user_filesSumOrderByAggregateInput
  }

  export type user_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<user_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<user_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<user_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    userId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type usersWhereInput = {
    AND?: Enumerable<usersWhereInput>
    OR?: Enumerable<usersWhereInput>
    NOT?: Enumerable<usersWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    email?: StringNullableFilter | string | null
    password?: StringNullableFilter | string | null
    agencyId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    shipping_documents?: Shipping_documentsListRelationFilter
    shipping_files?: Shipping_filesListRelationFilter
    shippings?: ShippingListRelationFilter
    user_files?: User_filesListRelationFilter
    inquires?: InquiresListRelationFilter
    inquires_comments?: Inquires_commentsListRelationFilter
    ShippingChecklistItem?: ShippingChecklistItemListRelationFilter
    group_emails?: Group_emailsListRelationFilter
    port_files?: Port_filesListRelationFilter
    vessel_files?: Vessel_filesListRelationFilter
    agency?: XOR<AgencyRelationFilter, AgencyWhereInput> | null
    users_preference?: Users_preferenceListRelationFilter
    shipping_sof_port_log_events?: ShippingSofPortLogEventsListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    agencyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    shipping_documents?: shipping_documentsOrderByRelationAggregateInput
    shipping_files?: shipping_filesOrderByRelationAggregateInput
    shippings?: ShippingOrderByRelationAggregateInput
    user_files?: user_filesOrderByRelationAggregateInput
    inquires?: inquiresOrderByRelationAggregateInput
    inquires_comments?: inquires_commentsOrderByRelationAggregateInput
    ShippingChecklistItem?: ShippingChecklistItemOrderByRelationAggregateInput
    group_emails?: group_emailsOrderByRelationAggregateInput
    port_files?: port_filesOrderByRelationAggregateInput
    vessel_files?: vessel_filesOrderByRelationAggregateInput
    agency?: AgencyOrderByWithRelationInput
    users_preference?: users_preferenceOrderByRelationAggregateInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = {
    id?: number
  }

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    agencyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<usersScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    email?: StringNullableWithAggregatesFilter | string | null
    password?: StringNullableWithAggregatesFilter | string | null
    agencyId?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type users_preferenceWhereInput = {
    AND?: Enumerable<users_preferenceWhereInput>
    OR?: Enumerable<users_preferenceWhereInput>
    NOT?: Enumerable<users_preferenceWhereInput>
    id?: IntFilter | number
    team?: StringNullableFilter | string | null
    ports?: StringNullableFilter | string | null
    initial_page?: StringNullableFilter | string | null
    user_id?: IntNullableFilter | number | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type users_preferenceOrderByWithRelationInput = {
    id?: SortOrder
    team?: SortOrder
    ports?: SortOrder
    initial_page?: SortOrder
    user_id?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type users_preferenceWhereUniqueInput = {
    id?: number
    user_id?: number
  }

  export type users_preferenceOrderByWithAggregationInput = {
    id?: SortOrder
    team?: SortOrder
    ports?: SortOrder
    initial_page?: SortOrder
    user_id?: SortOrder
    _count?: users_preferenceCountOrderByAggregateInput
    _avg?: users_preferenceAvgOrderByAggregateInput
    _max?: users_preferenceMaxOrderByAggregateInput
    _min?: users_preferenceMinOrderByAggregateInput
    _sum?: users_preferenceSumOrderByAggregateInput
  }

  export type users_preferenceScalarWhereWithAggregatesInput = {
    AND?: Enumerable<users_preferenceScalarWhereWithAggregatesInput>
    OR?: Enumerable<users_preferenceScalarWhereWithAggregatesInput>
    NOT?: Enumerable<users_preferenceScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    team?: StringNullableWithAggregatesFilter | string | null
    ports?: StringNullableWithAggregatesFilter | string | null
    initial_page?: StringNullableWithAggregatesFilter | string | null
    user_id?: IntNullableWithAggregatesFilter | number | null
  }

  export type vessel_filesWhereInput = {
    AND?: Enumerable<vessel_filesWhereInput>
    OR?: Enumerable<vessel_filesWhereInput>
    NOT?: Enumerable<vessel_filesWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    vessel_id?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    vessels?: XOR<VesselRelationFilter, VesselWhereInput> | null
  }

  export type vessel_filesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vessel_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    users?: usersOrderByWithRelationInput
    vessels?: VesselOrderByWithRelationInput
  }

  export type vessel_filesWhereUniqueInput = {
    id?: number
  }

  export type vessel_filesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vessel_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
    _count?: vessel_filesCountOrderByAggregateInput
    _avg?: vessel_filesAvgOrderByAggregateInput
    _max?: vessel_filesMaxOrderByAggregateInput
    _min?: vessel_filesMinOrderByAggregateInput
    _sum?: vessel_filesSumOrderByAggregateInput
  }

  export type vessel_filesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<vessel_filesScalarWhereWithAggregatesInput>
    OR?: Enumerable<vessel_filesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<vessel_filesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    filename?: StringNullableWithAggregatesFilter | string | null
    originalName?: StringNullableWithAggregatesFilter | string | null
    vessel_id?: IntNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    userId?: IntNullableWithAggregatesFilter | number | null
  }

  export type VesselWhereInput = {
    AND?: Enumerable<VesselWhereInput>
    OR?: Enumerable<VesselWhereInput>
    NOT?: Enumerable<VesselWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    imo?: StringNullableFilter | string | null
    call_sign?: StringNullableFilter | string | null
    satellite_telephone?: StringNullableFilter | string | null
    classification_society?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    length_overall?: FloatNullableFilter | number | null
    dead_weight_tonnage?: FloatNullableFilter | number | null
    beam?: FloatNullableFilter | number | null
    cubic_meters?: FloatNullableFilter | number | null
    gross_tonnage?: FloatNullableFilter | number | null
    net_tonnage?: FloatNullableFilter | number | null
    panama_gross_tonnage?: FloatNullableFilter | number | null
    panama_net_tonnage?: FloatNullableFilter | number | null
    suez_gross_tonnage?: FloatNullableFilter | number | null
    suez_net_tonnage?: FloatNullableFilter | number | null
    reduced_gross_tonnage?: FloatNullableFilter | number | null
    length_between_perpendiculars?: FloatNullableFilter | number | null
    molded_depth?: FloatNullableFilter | number | null
    number_of_holds?: FloatNullableFilter | number | null
    number_of_tanks?: FloatNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    country_id?: IntNullableFilter | number | null
    draft_sw?: StringNullableFilter | string | null
    built_year?: IntNullableFilter | number | null
    country?: XOR<CountryRelationFilter, CountryWhereInput> | null
    shippings?: ShippingListRelationFilter
    vessel_files?: Vessel_filesListRelationFilter
    group_emails?: Group_emailsListRelationFilter
  }

  export type VesselOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
    country?: CountryOrderByWithRelationInput
    shippings?: ShippingOrderByRelationAggregateInput
    vessel_files?: vessel_filesOrderByRelationAggregateInput
    group_emails?: group_emailsOrderByRelationAggregateInput
  }

  export type VesselWhereUniqueInput = {
    id?: number
    imo?: string
  }

  export type VesselOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
    _count?: VesselCountOrderByAggregateInput
    _avg?: VesselAvgOrderByAggregateInput
    _max?: VesselMaxOrderByAggregateInput
    _min?: VesselMinOrderByAggregateInput
    _sum?: VesselSumOrderByAggregateInput
  }

  export type VesselScalarWhereWithAggregatesInput = {
    AND?: Enumerable<VesselScalarWhereWithAggregatesInput>
    OR?: Enumerable<VesselScalarWhereWithAggregatesInput>
    NOT?: Enumerable<VesselScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    imo?: StringNullableWithAggregatesFilter | string | null
    call_sign?: StringNullableWithAggregatesFilter | string | null
    satellite_telephone?: StringNullableWithAggregatesFilter | string | null
    classification_society?: StringNullableWithAggregatesFilter | string | null
    type?: StringNullableWithAggregatesFilter | string | null
    length_overall?: FloatNullableWithAggregatesFilter | number | null
    dead_weight_tonnage?: FloatNullableWithAggregatesFilter | number | null
    beam?: FloatNullableWithAggregatesFilter | number | null
    cubic_meters?: FloatNullableWithAggregatesFilter | number | null
    gross_tonnage?: FloatNullableWithAggregatesFilter | number | null
    net_tonnage?: FloatNullableWithAggregatesFilter | number | null
    panama_gross_tonnage?: FloatNullableWithAggregatesFilter | number | null
    panama_net_tonnage?: FloatNullableWithAggregatesFilter | number | null
    suez_gross_tonnage?: FloatNullableWithAggregatesFilter | number | null
    suez_net_tonnage?: FloatNullableWithAggregatesFilter | number | null
    reduced_gross_tonnage?: FloatNullableWithAggregatesFilter | number | null
    length_between_perpendiculars?: FloatNullableWithAggregatesFilter | number | null
    molded_depth?: FloatNullableWithAggregatesFilter | number | null
    number_of_holds?: FloatNullableWithAggregatesFilter | number | null
    number_of_tanks?: FloatNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    country_id?: IntNullableWithAggregatesFilter | number | null
    draft_sw?: StringNullableWithAggregatesFilter | string | null
    built_year?: IntNullableWithAggregatesFilter | number | null
  }

  export type inquiresWhereInput = {
    AND?: Enumerable<inquiresWhereInput>
    OR?: Enumerable<inquiresWhereInput>
    NOT?: Enumerable<inquiresWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    group?: StringNullableFilter | string | null
    shipping_id?: IntNullableFilter | number | null
    updated_by_user_id?: IntNullableFilter | number | null
    shippings?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    inquires_comments?: Inquires_commentsListRelationFilter
    deleted?: BoolFilter | boolean
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type inquiresOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    group?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    shippings?: ShippingOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    inquires_comments?: inquires_commentsOrderByRelationAggregateInput
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type inquiresWhereUniqueInput = {
    id?: number
  }

  export type inquiresOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    group?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: inquiresCountOrderByAggregateInput
    _avg?: inquiresAvgOrderByAggregateInput
    _max?: inquiresMaxOrderByAggregateInput
    _min?: inquiresMinOrderByAggregateInput
    _sum?: inquiresSumOrderByAggregateInput
  }

  export type inquiresScalarWhereWithAggregatesInput = {
    AND?: Enumerable<inquiresScalarWhereWithAggregatesInput>
    OR?: Enumerable<inquiresScalarWhereWithAggregatesInput>
    NOT?: Enumerable<inquiresScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    group?: StringNullableWithAggregatesFilter | string | null
    shipping_id?: IntNullableWithAggregatesFilter | number | null
    updated_by_user_id?: IntNullableWithAggregatesFilter | number | null
    deleted?: BoolWithAggregatesFilter | boolean
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type inquires_commentsWhereInput = {
    AND?: Enumerable<inquires_commentsWhereInput>
    OR?: Enumerable<inquires_commentsWhereInput>
    NOT?: Enumerable<inquires_commentsWhereInput>
    id?: IntFilter | number
    body?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    is_done?: BoolFilter | boolean
    deadline_date?: DateTimeNullableFilter | Date | string | null
    inquire_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    inquires?: XOR<InquiresRelationFilter, inquiresWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
    deleted?: BoolFilter | boolean
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type inquires_commentsOrderByWithRelationInput = {
    id?: SortOrder
    body?: SortOrder
    type?: SortOrder
    is_done?: SortOrder
    deadline_date?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    inquires?: inquiresOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type inquires_commentsWhereUniqueInput = {
    id?: number
  }

  export type inquires_commentsOrderByWithAggregationInput = {
    id?: SortOrder
    body?: SortOrder
    type?: SortOrder
    is_done?: SortOrder
    deadline_date?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: inquires_commentsCountOrderByAggregateInput
    _avg?: inquires_commentsAvgOrderByAggregateInput
    _max?: inquires_commentsMaxOrderByAggregateInput
    _min?: inquires_commentsMinOrderByAggregateInput
    _sum?: inquires_commentsSumOrderByAggregateInput
  }

  export type inquires_commentsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<inquires_commentsScalarWhereWithAggregatesInput>
    OR?: Enumerable<inquires_commentsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<inquires_commentsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    body?: StringNullableWithAggregatesFilter | string | null
    type?: StringNullableWithAggregatesFilter | string | null
    is_done?: BoolWithAggregatesFilter | boolean
    deadline_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    inquire_id?: IntNullableWithAggregatesFilter | number | null
    user_id?: IntNullableWithAggregatesFilter | number | null
    deleted?: BoolWithAggregatesFilter | boolean
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type group_emailsWhereInput = {
    AND?: Enumerable<group_emailsWhereInput>
    OR?: Enumerable<group_emailsWhereInput>
    NOT?: Enumerable<group_emailsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    emails?: StringNullableFilter | string | null
    vessel_id?: IntNullableFilter | number | null
    updated_by_user_id?: IntNullableFilter | number | null
    vessel?: XOR<VesselRelationFilter, VesselWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type group_emailsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
    vessel?: VesselOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type group_emailsWhereUniqueInput = {
    id?: number
  }

  export type group_emailsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
    _count?: group_emailsCountOrderByAggregateInput
    _avg?: group_emailsAvgOrderByAggregateInput
    _max?: group_emailsMaxOrderByAggregateInput
    _min?: group_emailsMinOrderByAggregateInput
    _sum?: group_emailsSumOrderByAggregateInput
  }

  export type group_emailsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<group_emailsScalarWhereWithAggregatesInput>
    OR?: Enumerable<group_emailsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<group_emailsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    emails?: StringNullableWithAggregatesFilter | string | null
    vessel_id?: IntNullableWithAggregatesFilter | number | null
    updated_by_user_id?: IntNullableWithAggregatesFilter | number | null
  }

  export type sofWhereInput = {
    AND?: Enumerable<sofWhereInput>
    OR?: Enumerable<sofWhereInput>
    NOT?: Enumerable<sofWhereInput>
    id?: IntFilter | number
    hidden_attributes?: StringNullableFilter | string | null
    shipping_id?: IntNullableFilter | number | null
    shipping?: XOR<ShippingRelationFilter, ShippingWhereInput> | null
    sof_holidays?: Sof_holidaysListRelationFilter
    sof_remarks?: Sof_remarksListRelationFilter
    sof_draft?: Sof_draftListRelationFilter
    sof_bunker_figures?: Sof_bunker_figuresListRelationFilter
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsListRelationFilter
    sof_shipper_cargo?: Sof_shipper_cargoListRelationFilter
  }

  export type sofOrderByWithRelationInput = {
    id?: SortOrder
    hidden_attributes?: SortOrder
    shipping_id?: SortOrder
    shipping?: ShippingOrderByWithRelationInput
    sof_holidays?: sof_holidaysOrderByRelationAggregateInput
    sof_remarks?: sof_remarksOrderByRelationAggregateInput
    sof_draft?: sof_draftOrderByRelationAggregateInput
    sof_bunker_figures?: sof_bunker_figuresOrderByRelationAggregateInput
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    sof_port_log_events?: ShippingSofPortLogEventsOrderByRelationAggregateInput
    sof_shipper_cargo?: sof_shipper_cargoOrderByRelationAggregateInput
  }

  export type sofWhereUniqueInput = {
    id?: number
    shipping_id?: number
  }

  export type sofOrderByWithAggregationInput = {
    id?: SortOrder
    hidden_attributes?: SortOrder
    shipping_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: sofCountOrderByAggregateInput
    _avg?: sofAvgOrderByAggregateInput
    _max?: sofMaxOrderByAggregateInput
    _min?: sofMinOrderByAggregateInput
    _sum?: sofSumOrderByAggregateInput
  }

  export type sofScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sofScalarWhereWithAggregatesInput>
    OR?: Enumerable<sofScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sofScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    hidden_attributes?: StringNullableWithAggregatesFilter | string | null
    shipping_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type sof_holidaysWhereInput = {
    AND?: Enumerable<sof_holidaysWhereInput>
    OR?: Enumerable<sof_holidaysWhereInput>
    NOT?: Enumerable<sof_holidaysWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    date?: DateTimeNullableFilter | Date | string | null
    sof_id?: IntNullableFilter | number | null
    sof?: XOR<SofRelationFilter, sofWhereInput> | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sof_holidaysOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    date?: SortOrder
    sof_id?: SortOrder
    sof?: sofOrderByWithRelationInput
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_holidaysWhereUniqueInput = {
    id?: number
  }

  export type sof_holidaysOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    date?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: sof_holidaysCountOrderByAggregateInput
    _avg?: sof_holidaysAvgOrderByAggregateInput
    _max?: sof_holidaysMaxOrderByAggregateInput
    _min?: sof_holidaysMinOrderByAggregateInput
    _sum?: sof_holidaysSumOrderByAggregateInput
  }

  export type sof_holidaysScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sof_holidaysScalarWhereWithAggregatesInput>
    OR?: Enumerable<sof_holidaysScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sof_holidaysScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    sof_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type sof_remarksWhereInput = {
    AND?: Enumerable<sof_remarksWhereInput>
    OR?: Enumerable<sof_remarksWhereInput>
    NOT?: Enumerable<sof_remarksWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    sof_id?: IntNullableFilter | number | null
    sof?: XOR<SofRelationFilter, sofWhereInput> | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    sof_remarks_itens?: Sof_remarks_itemsListRelationFilter
  }

  export type sof_remarksOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    sof_id?: SortOrder
    sof?: sofOrderByWithRelationInput
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    sof_remarks_itens?: sof_remarks_itemsOrderByRelationAggregateInput
  }

  export type sof_remarksWhereUniqueInput = {
    id?: number
  }

  export type sof_remarksOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: sof_remarksCountOrderByAggregateInput
    _avg?: sof_remarksAvgOrderByAggregateInput
    _max?: sof_remarksMaxOrderByAggregateInput
    _min?: sof_remarksMinOrderByAggregateInput
    _sum?: sof_remarksSumOrderByAggregateInput
  }

  export type sof_remarksScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sof_remarksScalarWhereWithAggregatesInput>
    OR?: Enumerable<sof_remarksScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sof_remarksScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    sof_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type sof_remarks_itemsWhereInput = {
    AND?: Enumerable<sof_remarks_itemsWhereInput>
    OR?: Enumerable<sof_remarks_itemsWhereInput>
    NOT?: Enumerable<sof_remarks_itemsWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    value?: StringNullableFilter | string | null
    is_single?: BoolFilter | boolean
    sof_remark_id?: IntFilter | number
    sof_remarks?: XOR<Sof_remarksRelationFilter, sof_remarksWhereInput> | null
    deleted?: BoolFilter | boolean
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sof_remarks_itemsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    value?: SortOrder
    is_single?: SortOrder
    sof_remark_id?: SortOrder
    sof_remarks?: sof_remarksOrderByWithRelationInput
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_remarks_itemsWhereUniqueInput = {
    id?: number
  }

  export type sof_remarks_itemsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    value?: SortOrder
    is_single?: SortOrder
    sof_remark_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: sof_remarks_itemsCountOrderByAggregateInput
    _avg?: sof_remarks_itemsAvgOrderByAggregateInput
    _max?: sof_remarks_itemsMaxOrderByAggregateInput
    _min?: sof_remarks_itemsMinOrderByAggregateInput
    _sum?: sof_remarks_itemsSumOrderByAggregateInput
  }

  export type sof_remarks_itemsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sof_remarks_itemsScalarWhereWithAggregatesInput>
    OR?: Enumerable<sof_remarks_itemsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sof_remarks_itemsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    value?: StringNullableWithAggregatesFilter | string | null
    is_single?: BoolWithAggregatesFilter | boolean
    sof_remark_id?: IntWithAggregatesFilter | number
    deleted?: BoolWithAggregatesFilter | boolean
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type sof_draftWhereInput = {
    AND?: Enumerable<sof_draftWhereInput>
    OR?: Enumerable<sof_draftWhereInput>
    NOT?: Enumerable<sof_draftWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    fwd?: FloatNullableFilter | number | null
    mid?: FloatNullableFilter | number | null
    aft?: FloatNullableFilter | number | null
    sof_id?: IntNullableFilter | number | null
    sof?: XOR<SofRelationFilter, sofWhereInput> | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sof_draftOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    fwd?: SortOrder
    mid?: SortOrder
    aft?: SortOrder
    sof_id?: SortOrder
    sof?: sofOrderByWithRelationInput
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_draftWhereUniqueInput = {
    id?: number
  }

  export type sof_draftOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    fwd?: SortOrder
    mid?: SortOrder
    aft?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: sof_draftCountOrderByAggregateInput
    _avg?: sof_draftAvgOrderByAggregateInput
    _max?: sof_draftMaxOrderByAggregateInput
    _min?: sof_draftMinOrderByAggregateInput
    _sum?: sof_draftSumOrderByAggregateInput
  }

  export type sof_draftScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sof_draftScalarWhereWithAggregatesInput>
    OR?: Enumerable<sof_draftScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sof_draftScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    fwd?: FloatNullableWithAggregatesFilter | number | null
    mid?: FloatNullableWithAggregatesFilter | number | null
    aft?: FloatNullableWithAggregatesFilter | number | null
    sof_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type sof_bunker_figuresWhereInput = {
    AND?: Enumerable<sof_bunker_figuresWhereInput>
    OR?: Enumerable<sof_bunker_figuresWhereInput>
    NOT?: Enumerable<sof_bunker_figuresWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    ifo?: FloatNullableFilter | number | null
    mdo?: FloatNullableFilter | number | null
    fw?: FloatNullableFilter | number | null
    sof_id?: IntNullableFilter | number | null
    sof?: XOR<SofRelationFilter, sofWhereInput> | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sof_bunker_figuresOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    ifo?: SortOrder
    mdo?: SortOrder
    fw?: SortOrder
    sof_id?: SortOrder
    sof?: sofOrderByWithRelationInput
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_bunker_figuresWhereUniqueInput = {
    id?: number
  }

  export type sof_bunker_figuresOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    ifo?: SortOrder
    mdo?: SortOrder
    fw?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: sof_bunker_figuresCountOrderByAggregateInput
    _avg?: sof_bunker_figuresAvgOrderByAggregateInput
    _max?: sof_bunker_figuresMaxOrderByAggregateInput
    _min?: sof_bunker_figuresMinOrderByAggregateInput
    _sum?: sof_bunker_figuresSumOrderByAggregateInput
  }

  export type sof_bunker_figuresScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sof_bunker_figuresScalarWhereWithAggregatesInput>
    OR?: Enumerable<sof_bunker_figuresScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sof_bunker_figuresScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringNullableWithAggregatesFilter | string | null
    ifo?: FloatNullableWithAggregatesFilter | number | null
    mdo?: FloatNullableWithAggregatesFilter | number | null
    fw?: FloatNullableWithAggregatesFilter | number | null
    sof_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type SofPortLogEventCategoriesWhereInput = {
    AND?: Enumerable<SofPortLogEventCategoriesWhereInput>
    OR?: Enumerable<SofPortLogEventCategoriesWhereInput>
    NOT?: Enumerable<SofPortLogEventCategoriesWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    events?: SofPortLogEventsListRelationFilter
  }

  export type SofPortLogEventCategoriesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    events?: SofPortLogEventsOrderByRelationAggregateInput
  }

  export type SofPortLogEventCategoriesWhereUniqueInput = {
    id?: number
  }

  export type SofPortLogEventCategoriesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: SofPortLogEventCategoriesCountOrderByAggregateInput
    _avg?: SofPortLogEventCategoriesAvgOrderByAggregateInput
    _max?: SofPortLogEventCategoriesMaxOrderByAggregateInput
    _min?: SofPortLogEventCategoriesMinOrderByAggregateInput
    _sum?: SofPortLogEventCategoriesSumOrderByAggregateInput
  }

  export type SofPortLogEventCategoriesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<SofPortLogEventCategoriesScalarWhereWithAggregatesInput>
    OR?: Enumerable<SofPortLogEventCategoriesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<SofPortLogEventCategoriesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type SofPortLogEventsWhereInput = {
    AND?: Enumerable<SofPortLogEventsWhereInput>
    OR?: Enumerable<SofPortLogEventsWhereInput>
    NOT?: Enumerable<SofPortLogEventsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    category?: XOR<SofPortLogEventCategoriesRelationFilter, SofPortLogEventCategoriesWhereInput> | null
    category_id?: IntNullableFilter | number | null
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsListRelationFilter
  }

  export type SofPortLogEventsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    category?: SofPortLogEventCategoriesOrderByWithRelationInput
    category_id?: SortOrder
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsOrderByRelationAggregateInput
  }

  export type SofPortLogEventsWhereUniqueInput = {
    id?: number
  }

  export type SofPortLogEventsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    category_id?: SortOrder
    _count?: SofPortLogEventsCountOrderByAggregateInput
    _avg?: SofPortLogEventsAvgOrderByAggregateInput
    _max?: SofPortLogEventsMaxOrderByAggregateInput
    _min?: SofPortLogEventsMinOrderByAggregateInput
    _sum?: SofPortLogEventsSumOrderByAggregateInput
  }

  export type SofPortLogEventsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<SofPortLogEventsScalarWhereWithAggregatesInput>
    OR?: Enumerable<SofPortLogEventsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<SofPortLogEventsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    description?: StringNullableWithAggregatesFilter | string | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    category_id?: IntNullableWithAggregatesFilter | number | null
  }

  export type ShippingSofPortLogEventsWhereInput = {
    AND?: Enumerable<ShippingSofPortLogEventsWhereInput>
    OR?: Enumerable<ShippingSofPortLogEventsWhereInput>
    NOT?: Enumerable<ShippingSofPortLogEventsWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    commentary?: StringNullableFilter | string | null
    is_important?: BoolNullableFilter | boolean | null
    is_highlighted?: BoolNullableFilter | boolean | null
    start_date?: DateTimeNullableFilter | Date | string | null
    end_date?: DateTimeNullableFilter | Date | string | null
    sof_port_log_event_id?: IntFilter | number
    shipping_sof_id?: IntFilter | number
    created_by_user_id?: IntFilter | number
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    sof_port_log_event?: XOR<SofPortLogEventsRelationFilter, SofPortLogEventsWhereInput> | null
    shipping_sof?: XOR<SofRelationFilter, sofWhereInput> | null
    created_by_user?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type ShippingSofPortLogEventsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    commentary?: SortOrder
    is_important?: SortOrder
    is_highlighted?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    sof_port_log_event_id?: SortOrder
    shipping_sof_id?: SortOrder
    created_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    sof_port_log_event?: SofPortLogEventsOrderByWithRelationInput
    shipping_sof?: sofOrderByWithRelationInput
    created_by_user?: usersOrderByWithRelationInput
  }

  export type ShippingSofPortLogEventsWhereUniqueInput = {
    id?: number
  }

  export type ShippingSofPortLogEventsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    commentary?: SortOrder
    is_important?: SortOrder
    is_highlighted?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    sof_port_log_event_id?: SortOrder
    shipping_sof_id?: SortOrder
    created_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: ShippingSofPortLogEventsCountOrderByAggregateInput
    _avg?: ShippingSofPortLogEventsAvgOrderByAggregateInput
    _max?: ShippingSofPortLogEventsMaxOrderByAggregateInput
    _min?: ShippingSofPortLogEventsMinOrderByAggregateInput
    _sum?: ShippingSofPortLogEventsSumOrderByAggregateInput
  }

  export type ShippingSofPortLogEventsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ShippingSofPortLogEventsScalarWhereWithAggregatesInput>
    OR?: Enumerable<ShippingSofPortLogEventsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ShippingSofPortLogEventsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    commentary?: StringNullableWithAggregatesFilter | string | null
    is_important?: BoolNullableWithAggregatesFilter | boolean | null
    is_highlighted?: BoolNullableWithAggregatesFilter | boolean | null
    start_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    end_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    sof_port_log_event_id?: IntWithAggregatesFilter | number
    shipping_sof_id?: IntWithAggregatesFilter | number
    created_by_user_id?: IntWithAggregatesFilter | number
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type sof_shipper_cargoWhereInput = {
    AND?: Enumerable<sof_shipper_cargoWhereInput>
    OR?: Enumerable<sof_shipper_cargoWhereInput>
    NOT?: Enumerable<sof_shipper_cargoWhereInput>
    id?: IntFilter | number
    berth?: StringNullableFilter | string | null
    cargo?: StringNullableFilter | string | null
    sof_id?: IntNullableFilter | number | null
    sof?: XOR<SofRelationFilter, sofWhereInput> | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    sof_shipper?: Sof_shipperListRelationFilter
    sof_shipper_value?: Sof_shipper_valueListRelationFilter
  }

  export type sof_shipper_cargoOrderByWithRelationInput = {
    id?: SortOrder
    berth?: SortOrder
    cargo?: SortOrder
    sof_id?: SortOrder
    sof?: sofOrderByWithRelationInput
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    sof_shipper?: sof_shipperOrderByRelationAggregateInput
    sof_shipper_value?: sof_shipper_valueOrderByRelationAggregateInput
  }

  export type sof_shipper_cargoWhereUniqueInput = {
    id?: number
  }

  export type sof_shipper_cargoOrderByWithAggregationInput = {
    id?: SortOrder
    berth?: SortOrder
    cargo?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    _count?: sof_shipper_cargoCountOrderByAggregateInput
    _avg?: sof_shipper_cargoAvgOrderByAggregateInput
    _max?: sof_shipper_cargoMaxOrderByAggregateInput
    _min?: sof_shipper_cargoMinOrderByAggregateInput
    _sum?: sof_shipper_cargoSumOrderByAggregateInput
  }

  export type sof_shipper_cargoScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sof_shipper_cargoScalarWhereWithAggregatesInput>
    OR?: Enumerable<sof_shipper_cargoScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sof_shipper_cargoScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    berth?: StringNullableWithAggregatesFilter | string | null
    cargo?: StringNullableWithAggregatesFilter | string | null
    sof_id?: IntNullableWithAggregatesFilter | number | null
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeWithAggregatesFilter | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type sof_shipperWhereInput = {
    AND?: Enumerable<sof_shipperWhereInput>
    OR?: Enumerable<sof_shipperWhereInput>
    NOT?: Enumerable<sof_shipperWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    quantity?: FloatNullableFilter | number | null
    sof_shipper_cargo_id?: IntNullableFilter | number | null
    sof_shipper_cargo?: XOR<Sof_shipper_cargoRelationFilter, sof_shipper_cargoWhereInput> | null
  }

  export type sof_shipperOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    quantity?: SortOrder
    sof_shipper_cargo_id?: SortOrder
    sof_shipper_cargo?: sof_shipper_cargoOrderByWithRelationInput
  }

  export type sof_shipperWhereUniqueInput = {
    id?: number
  }

  export type sof_shipperOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    quantity?: SortOrder
    sof_shipper_cargo_id?: SortOrder
    _count?: sof_shipperCountOrderByAggregateInput
    _avg?: sof_shipperAvgOrderByAggregateInput
    _max?: sof_shipperMaxOrderByAggregateInput
    _min?: sof_shipperMinOrderByAggregateInput
    _sum?: sof_shipperSumOrderByAggregateInput
  }

  export type sof_shipperScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sof_shipperScalarWhereWithAggregatesInput>
    OR?: Enumerable<sof_shipperScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sof_shipperScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringNullableWithAggregatesFilter | string | null
    quantity?: FloatNullableWithAggregatesFilter | number | null
    sof_shipper_cargo_id?: IntNullableWithAggregatesFilter | number | null
  }

  export type sof_shipper_valueWhereInput = {
    AND?: Enumerable<sof_shipper_valueWhereInput>
    OR?: Enumerable<sof_shipper_valueWhereInput>
    NOT?: Enumerable<sof_shipper_valueWhereInput>
    id?: IntFilter | number
    value?: FloatNullableFilter | number | null
    sof_shipper_cargo_id?: IntNullableFilter | number | null
    sof_shipper_cargo?: XOR<Sof_shipper_cargoRelationFilter, sof_shipper_cargoWhereInput> | null
  }

  export type sof_shipper_valueOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    sof_shipper_cargo_id?: SortOrder
    sof_shipper_cargo?: sof_shipper_cargoOrderByWithRelationInput
  }

  export type sof_shipper_valueWhereUniqueInput = {
    id?: number
  }

  export type sof_shipper_valueOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    sof_shipper_cargo_id?: SortOrder
    _count?: sof_shipper_valueCountOrderByAggregateInput
    _avg?: sof_shipper_valueAvgOrderByAggregateInput
    _max?: sof_shipper_valueMaxOrderByAggregateInput
    _min?: sof_shipper_valueMinOrderByAggregateInput
    _sum?: sof_shipper_valueSumOrderByAggregateInput
  }

  export type sof_shipper_valueScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sof_shipper_valueScalarWhereWithAggregatesInput>
    OR?: Enumerable<sof_shipper_valueScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sof_shipper_valueScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    value?: FloatNullableWithAggregatesFilter | number | null
    sof_shipper_cargo_id?: IntNullableWithAggregatesFilter | number | null
  }

  export type AgencyCreateInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country?: CountryCreateNestedOneWithoutAgencyInput
    users?: usersCreateNestedManyWithoutAgencyInput
    ChecklistTemplate?: ChecklistTemplateCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateInput = {
    id?: number
    name: string
    country_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutAgencyInput
    ChecklistTemplate?: ChecklistTemplateUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country?: CountryUpdateOneWithoutAgencyNestedInput
    users?: usersUpdateManyWithoutAgencyNestedInput
    ChecklistTemplate?: ChecklistTemplateUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutAgencyNestedInput
    ChecklistTemplate?: ChecklistTemplateUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyCreateManyInput = {
    id?: number
    name: string
    country_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type AgencyUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type berth_productsCreateInput = {
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berths: berthsCreateNestedOneWithoutBerth_productsInput
    products: productsCreateNestedOneWithoutBerth_productsInput
    proformas?: proformasCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedCreateInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    proformas?: proformasUncheckedCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsUpdateInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneRequiredWithoutBerth_productsNestedInput
    products?: productsUpdateOneRequiredWithoutBerth_productsNestedInput
    proformas?: proformasUpdateManyWithoutBerth_productsNestedInput
  }

  export type berth_productsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    berthId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proformas?: proformasUncheckedUpdateManyWithoutBerth_productsNestedInput
  }

  export type berth_productsCreateManyInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type berth_productsUpdateManyMutationInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type berth_productsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    berthId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type berthsCreateInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    ports?: portsCreateNestedOneWithoutBerthsInput
    berth_products?: berth_productsCreateNestedManyWithoutBerthsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutBerthsInput
  }

  export type berthsUncheckedCreateInput = {
    id?: number
    name?: string | null
    description?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutBerthsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutBerthsInput
  }

  export type berthsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    ports?: portsUpdateOneWithoutBerthsNestedInput
    berth_products?: berth_productsUpdateManyWithoutBerthsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutBerthsNestedInput
  }

  export type berthsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutBerthsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutBerthsNestedInput
  }

  export type berthsCreateManyInput = {
    id?: number
    name?: string | null
    description?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
  }

  export type berthsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type berthsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ChecklistTemplateCreateInput = {
    name: string
    operation_type?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    items?: ChecklistTemplateItemCreateNestedManyWithoutChecklistTemplateInput
    agency?: AgencyCreateNestedOneWithoutChecklistTemplateInput
  }

  export type ChecklistTemplateUncheckedCreateInput = {
    id?: number
    name: string
    operation_type?: string | null
    agency_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    items?: ChecklistTemplateItemUncheckedCreateNestedManyWithoutChecklistTemplateInput
  }

  export type ChecklistTemplateUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: ChecklistTemplateItemUpdateManyWithoutChecklistTemplateNestedInput
    agency?: AgencyUpdateOneWithoutChecklistTemplateNestedInput
  }

  export type ChecklistTemplateUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: ChecklistTemplateItemUncheckedUpdateManyWithoutChecklistTemplateNestedInput
  }

  export type ChecklistTemplateCreateManyInput = {
    id?: number
    name: string
    operation_type?: string | null
    agency_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ChecklistTemplateUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemCreateInput = {
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    checklistTemplate?: ChecklistTemplateCreateNestedOneWithoutItemsInput
  }

  export type ChecklistTemplateItemUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    checklist_template_id: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checklistTemplate?: ChecklistTemplateUpdateOneWithoutItemsNestedInput
  }

  export type ChecklistTemplateItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    checklist_template_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    checklist_template_id: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    checklist_template_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemCreateInput = {
    name: string
    description?: string | null
    type: string
    deadline_date?: Date | string | null
    commentary?: string | null
    is_done: boolean
    created_at?: Date | string
    updated_ut?: Date | string
    deleted_at?: Date | string | null
    shipping?: ShippingCreateNestedOneWithoutShippingChecklistItemInput
    user?: usersCreateNestedOneWithoutShippingChecklistItemInput
  }

  export type ShippingChecklistItemUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: Date | string | null
    commentary?: string | null
    is_done: boolean
    shipping_id: number
    updated_by_user_id?: number | null
    created_at?: Date | string
    updated_ut?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingChecklistItemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_ut?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping?: ShippingUpdateOneWithoutShippingChecklistItemNestedInput
    user?: usersUpdateOneWithoutShippingChecklistItemNestedInput
  }

  export type ShippingChecklistItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    shipping_id?: IntFieldUpdateOperationsInput | number
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_ut?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: Date | string | null
    commentary?: string | null
    is_done: boolean
    shipping_id: number
    updated_by_user_id?: number | null
    created_at?: Date | string
    updated_ut?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingChecklistItemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_ut?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    shipping_id?: IntFieldUpdateOperationsInput | number
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_ut?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CountryCreateInput = {
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsCreateNestedManyWithoutCountryInput
    vessels?: VesselCreateNestedManyWithoutCountryInput
    agency?: AgencyCreateNestedManyWithoutCountryInput
  }

  export type CountryUncheckedCreateInput = {
    id?: number
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsUncheckedCreateNestedManyWithoutCountryInput
    vessels?: VesselUncheckedCreateNestedManyWithoutCountryInput
    agency?: AgencyUncheckedCreateNestedManyWithoutCountryInput
  }

  export type CountryUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUpdateManyWithoutCountryNestedInput
    vessels?: VesselUpdateManyWithoutCountryNestedInput
    agency?: AgencyUpdateManyWithoutCountryNestedInput
  }

  export type CountryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUncheckedUpdateManyWithoutCountryNestedInput
    vessels?: VesselUncheckedUpdateManyWithoutCountryNestedInput
    agency?: AgencyUncheckedUpdateManyWithoutCountryNestedInput
  }

  export type CountryCreateManyInput = {
    id?: number
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type CountryUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CountryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type migrationsCreateInput = {
    timestamp: number
    name: string
  }

  export type migrationsUncheckedCreateInput = {
    id?: number
    timestamp: number
    name: string
  }

  export type migrationsUpdateInput = {
    timestamp?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type migrationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    timestamp?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type migrationsCreateManyInput = {
    id?: number
    timestamp: number
    name: string
  }

  export type migrationsUpdateManyMutationInput = {
    timestamp?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type migrationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    timestamp?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type port_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutPort_filesInput
    ports?: portsCreateNestedOneWithoutPort_filesInput
  }

  export type port_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type port_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutPort_filesNestedInput
    ports?: portsUpdateOneWithoutPort_filesNestedInput
  }

  export type port_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type port_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type port_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type port_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type portsCreateInput = {
    name?: string | null
    time_zone?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    country?: CountryCreateNestedOneWithoutPortsInput
    berths?: berthsCreateNestedManyWithoutPortsInput
    port_files?: port_filesCreateNestedManyWithoutPortsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateInput = {
    id?: number
    name?: string | null
    time_zone?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsUncheckedCreateNestedManyWithoutPortsInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutPortsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    country?: CountryUpdateOneWithoutPortsNestedInput
    berths?: berthsUpdateManyWithoutPortsNestedInput
    port_files?: port_filesUpdateManyWithoutPortsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutPortsNestedInput
  }

  export type portsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUncheckedUpdateManyWithoutPortsNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutPortsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutPortsNestedInput
  }

  export type portsCreateManyInput = {
    id?: number
    name?: string | null
    time_zone?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
  }

  export type portsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type portsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productsCreateInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berth_products?: berth_productsCreateNestedManyWithoutProductsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutProductsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berth_products?: berth_productsUpdateManyWithoutProductsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutProductsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productsCreateManyInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type productsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    proformas?: proformasCreateNestedOneWithoutProforma_filesInput
  }

  export type proforma_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    proformaId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proformas?: proformasUpdateOneWithoutProforma_filesNestedInput
  }

  export type proforma_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    proformaId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    proformaId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    proformaId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proformasCreateInput = {
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    berth_products: berth_productsCreateNestedOneWithoutProformasInput
    proforma_files?: proforma_filesCreateNestedManyWithoutProformasInput
  }

  export type proformasUncheckedCreateInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    berthProductId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    proforma_files?: proforma_filesUncheckedCreateNestedManyWithoutProformasInput
  }

  export type proformasUpdateInput = {
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    berth_products?: berth_productsUpdateOneRequiredWithoutProformasNestedInput
    proforma_files?: proforma_filesUpdateManyWithoutProformasNestedInput
  }

  export type proformasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    berthProductId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    proforma_files?: proforma_filesUncheckedUpdateManyWithoutProformasNestedInput
  }

  export type proformasCreateManyInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    berthProductId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
  }

  export type proformasUpdateManyMutationInput = {
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type proformasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    berthProductId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_documentsCreateInput = {
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    master_name?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_documentsInput
    subsets?: subsetsCreateNestedOneWithoutShipping_documentsInput
    users?: usersCreateNestedOneWithoutShipping_documentsInput
    document_shipper?: document_shipperCreateNestedOneWithoutShipping_documentsInput
    document_product?: document_productCreateNestedOneWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsUpdateInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
    shippings?: ShippingUpdateOneWithoutShipping_documentsNestedInput
    subsets?: subsetsUpdateOneWithoutShipping_documentsNestedInput
    users?: usersUpdateOneWithoutShipping_documentsNestedInput
    document_shipper?: document_shipperUpdateOneWithoutShipping_documentsNestedInput
    document_product?: document_productUpdateOneWithoutShipping_documentsNestedInput
  }

  export type shipping_documentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subset_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_documentsCreateManyInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsUpdateManyMutationInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_documentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subset_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_shipperCreateInput = {
    name?: string | null
    cnpj?: string | null
    complement?: string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutDocument_shipperInput
  }

  export type document_shipperUncheckedCreateInput = {
    id?: number
    name?: string | null
    cnpj?: string | null
    complement?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutDocument_shipperInput
  }

  export type document_shipperUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutDocument_shipperNestedInput
  }

  export type document_shipperUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutDocument_shipperNestedInput
  }

  export type document_shipperCreateManyInput = {
    id?: number
    name?: string | null
    cnpj?: string | null
    complement?: string | null
  }

  export type document_shipperUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_shipperUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_productCreateInput = {
    name?: string | null
    abbreviation?: string | null
    description?: string | null
    packing_type?: string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutDocument_productInput
  }

  export type document_productUncheckedCreateInput = {
    id?: number
    name?: string | null
    abbreviation?: string | null
    description?: string | null
    packing_type?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutDocument_productInput
  }

  export type document_productUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    packing_type?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutDocument_productNestedInput
  }

  export type document_productUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    packing_type?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutDocument_productNestedInput
  }

  export type document_productCreateManyInput = {
    id?: number
    name?: string | null
    abbreviation?: string | null
    description?: string | null
    packing_type?: string | null
  }

  export type document_productUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    packing_type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_productUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    packing_type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_filesInput
    users?: usersCreateNestedOneWithoutShipping_filesInput
  }

  export type shipping_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type shipping_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippings?: ShippingUpdateOneWithoutShipping_filesNestedInput
    users?: usersUpdateOneWithoutShipping_filesNestedInput
  }

  export type shipping_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type shipping_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type shipping_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShippingPortCreateInput = {
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    berths?: berthsCreateNestedOneWithoutShipping_portsInput
    ports?: portsCreateNestedOneWithoutShipping_portsInput
    shippings?: ShippingCreateNestedOneWithoutShipping_portsInput
  }

  export type ShippingPortUncheckedCreateInput = {
    id?: number
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    shipping_id?: number | null
    port_id?: number | null
    berth_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingPortUpdateInput = {
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneWithoutShipping_portsNestedInput
    ports?: portsUpdateOneWithoutShipping_portsNestedInput
    shippings?: ShippingUpdateOneWithoutShipping_portsNestedInput
  }

  export type ShippingPortUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    port_id?: NullableIntFieldUpdateOperationsInput | number | null
    berth_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingPortCreateManyInput = {
    id?: number
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    shipping_id?: number | null
    port_id?: number | null
    berth_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingPortUpdateManyMutationInput = {
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingPortUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    port_id?: NullableIntFieldUpdateOperationsInput | number | null
    berth_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingProductCreateInput = {
    weight?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    product?: productsCreateNestedOneWithoutShipping_productsInput
    shipping?: ShippingCreateNestedOneWithoutShipping_productsInput
  }

  export type ShippingProductUncheckedCreateInput = {
    id?: number
    weight?: number | null
    shipping_id?: number | null
    product_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingProductUpdateInput = {
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product?: productsUpdateOneWithoutShipping_productsNestedInput
    shipping?: ShippingUpdateOneWithoutShipping_productsNestedInput
  }

  export type ShippingProductUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingProductCreateManyInput = {
    id?: number
    weight?: number | null
    shipping_id?: number | null
    product_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingProductUpdateManyMutationInput = {
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingProductUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingCreateInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingUpdateInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type ShippingCreateManyInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
  }

  export type ShippingUpdateManyMutationInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShippingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type subsetsCreateInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shippings?: ShippingCreateNestedOneWithoutSubsetsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutSubsetsInput
  }

  export type subsetsUncheckedCreateInput = {
    id?: number
    name?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutSubsetsInput
  }

  export type subsetsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippings?: ShippingUpdateOneWithoutSubsetsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutSubsetsNestedInput
  }

  export type subsetsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutSubsetsNestedInput
  }

  export type subsetsCreateManyInput = {
    id?: number
    name?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type subsetsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subsetsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutUser_filesInput
  }

  export type user_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type user_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutUser_filesNestedInput
  }

  export type user_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type user_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersCreateManyInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type users_preferenceCreateInput = {
    team?: string | null
    ports?: string | null
    initial_page?: string | null
    users?: usersCreateNestedOneWithoutUsers_preferenceInput
  }

  export type users_preferenceUncheckedCreateInput = {
    id?: number
    team?: string | null
    ports?: string | null
    initial_page?: string | null
    user_id?: number | null
  }

  export type users_preferenceUpdateInput = {
    team?: NullableStringFieldUpdateOperationsInput | string | null
    ports?: NullableStringFieldUpdateOperationsInput | string | null
    initial_page?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutUsers_preferenceNestedInput
  }

  export type users_preferenceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    team?: NullableStringFieldUpdateOperationsInput | string | null
    ports?: NullableStringFieldUpdateOperationsInput | string | null
    initial_page?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type users_preferenceCreateManyInput = {
    id?: number
    team?: string | null
    ports?: string | null
    initial_page?: string | null
    user_id?: number | null
  }

  export type users_preferenceUpdateManyMutationInput = {
    team?: NullableStringFieldUpdateOperationsInput | string | null
    ports?: NullableStringFieldUpdateOperationsInput | string | null
    initial_page?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type users_preferenceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    team?: NullableStringFieldUpdateOperationsInput | string | null
    ports?: NullableStringFieldUpdateOperationsInput | string | null
    initial_page?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type vessel_filesCreateInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutVessel_filesInput
    vessels?: VesselCreateNestedOneWithoutVessel_filesInput
  }

  export type vessel_filesUncheckedCreateInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    vessel_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type vessel_filesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutVessel_filesNestedInput
    vessels?: VesselUpdateOneWithoutVessel_filesNestedInput
  }

  export type vessel_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type vessel_filesCreateManyInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    vessel_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type vessel_filesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vessel_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VesselCreateInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    country?: CountryCreateNestedOneWithoutVesselsInput
    shippings?: ShippingCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsCreateNestedManyWithoutVesselInput
  }

  export type VesselUncheckedCreateInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingUncheckedCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutVesselInput
  }

  export type VesselUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    country?: CountryUpdateOneWithoutVesselsNestedInput
    shippings?: ShippingUpdateManyWithoutVesselNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutVesselsNestedInput
    group_emails?: group_emailsUpdateManyWithoutVesselNestedInput
  }

  export type VesselUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUncheckedUpdateManyWithoutVesselNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutVesselsNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutVesselNestedInput
  }

  export type VesselCreateManyInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
  }

  export type VesselUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VesselUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type inquiresCreateInput = {
    title?: string | null
    group?: string | null
    shippings?: ShippingCreateNestedOneWithoutInquiresInput
    users?: usersCreateNestedOneWithoutInquiresInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutInquiresInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquiresUncheckedCreateInput = {
    id?: number
    title?: string | null
    group?: string | null
    shipping_id?: number | null
    updated_by_user_id?: number | null
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutInquiresInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquiresUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    shippings?: ShippingUpdateOneWithoutInquiresNestedInput
    users?: usersUpdateOneWithoutInquiresNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutInquiresNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutInquiresNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresCreateManyInput = {
    id?: number
    title?: string | null
    group?: string | null
    shipping_id?: number | null
    updated_by_user_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquiresUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquires_commentsCreateInput = {
    body?: string | null
    type?: string | null
    is_done: boolean
    deadline_date?: Date | string | null
    inquires?: inquiresCreateNestedOneWithoutInquires_commentsInput
    users?: usersCreateNestedOneWithoutInquires_commentsInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquires_commentsUncheckedCreateInput = {
    id?: number
    body?: string | null
    type?: string | null
    is_done: boolean
    deadline_date?: Date | string | null
    inquire_id?: number | null
    user_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquires_commentsUpdateInput = {
    body?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inquires?: inquiresUpdateOneWithoutInquires_commentsNestedInput
    users?: usersUpdateOneWithoutInquires_commentsNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquires_commentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inquire_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquires_commentsCreateManyInput = {
    id?: number
    body?: string | null
    type?: string | null
    is_done: boolean
    deadline_date?: Date | string | null
    inquire_id?: number | null
    user_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquires_commentsUpdateManyMutationInput = {
    body?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquires_commentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inquire_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_emailsCreateInput = {
    name?: string | null
    emails?: string | null
    vessel?: VesselCreateNestedOneWithoutGroup_emailsInput
    users?: usersCreateNestedOneWithoutGroup_emailsInput
  }

  export type group_emailsUncheckedCreateInput = {
    id?: number
    name?: string | null
    emails?: string | null
    vessel_id?: number | null
    updated_by_user_id?: number | null
  }

  export type group_emailsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel?: VesselUpdateOneWithoutGroup_emailsNestedInput
    users?: usersUpdateOneWithoutGroup_emailsNestedInput
  }

  export type group_emailsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type group_emailsCreateManyInput = {
    id?: number
    name?: string | null
    emails?: string | null
    vessel_id?: number | null
    updated_by_user_id?: number | null
  }

  export type group_emailsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type group_emailsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sofCreateInput = {
    hidden_attributes?: string | null
    shipping?: ShippingCreateNestedOneWithoutSofInput
    sof_holidays?: sof_holidaysCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoCreateNestedManyWithoutSofInput
  }

  export type sofUncheckedCreateInput = {
    id?: number
    hidden_attributes?: string | null
    shipping_id?: number | null
    sof_holidays?: sof_holidaysUncheckedCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksUncheckedCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftUncheckedCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedCreateNestedManyWithoutSofInput
  }

  export type sofUpdateInput = {
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping?: ShippingUpdateOneWithoutSofNestedInput
    sof_holidays?: sof_holidaysUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUpdateManyWithoutSofNestedInput
  }

  export type sofUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    sof_holidays?: sof_holidaysUncheckedUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUncheckedUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUncheckedUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedUpdateManyWithoutSofNestedInput
  }

  export type sofCreateManyInput = {
    id?: number
    hidden_attributes?: string | null
    shipping_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sofUpdateManyMutationInput = {
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sofUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_holidaysCreateInput = {
    name?: string | null
    date?: Date | string | null
    sof?: sofCreateNestedOneWithoutSof_holidaysInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_holidaysUncheckedCreateInput = {
    id?: number
    name?: string | null
    date?: Date | string | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_holidaysUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof?: sofUpdateOneWithoutSof_holidaysNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_holidaysUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_holidaysCreateManyInput = {
    id?: number
    name?: string | null
    date?: Date | string | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_holidaysUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_holidaysUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarksCreateInput = {
    title?: string | null
    sof?: sofCreateNestedOneWithoutSof_remarksInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_remarks_itens?: sof_remarks_itemsCreateNestedManyWithoutSof_remarksInput
  }

  export type sof_remarksUncheckedCreateInput = {
    id?: number
    title?: string | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_remarks_itens?: sof_remarks_itemsUncheckedCreateNestedManyWithoutSof_remarksInput
  }

  export type sof_remarksUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    sof?: sofUpdateOneWithoutSof_remarksNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_remarks_itens?: sof_remarks_itemsUpdateManyWithoutSof_remarksNestedInput
  }

  export type sof_remarksUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_remarks_itens?: sof_remarks_itemsUncheckedUpdateManyWithoutSof_remarksNestedInput
  }

  export type sof_remarksCreateManyInput = {
    id?: number
    title?: string | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarksUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarksUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarks_itemsCreateInput = {
    title?: string | null
    value?: string | null
    is_single?: boolean
    sof_remarks?: sof_remarksCreateNestedOneWithoutSof_remarks_itensInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarks_itemsUncheckedCreateInput = {
    id?: number
    title?: string | null
    value?: string | null
    is_single?: boolean
    sof_remark_id: number
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarks_itemsUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_single?: BoolFieldUpdateOperationsInput | boolean
    sof_remarks?: sof_remarksUpdateOneWithoutSof_remarks_itensNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarks_itemsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_single?: BoolFieldUpdateOperationsInput | boolean
    sof_remark_id?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarks_itemsCreateManyInput = {
    id?: number
    title?: string | null
    value?: string | null
    is_single?: boolean
    sof_remark_id: number
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarks_itemsUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_single?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarks_itemsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_single?: BoolFieldUpdateOperationsInput | boolean
    sof_remark_id?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_draftCreateInput = {
    title?: string | null
    fwd?: number | null
    mid?: number | null
    aft?: number | null
    sof?: sofCreateNestedOneWithoutSof_draftInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_draftUncheckedCreateInput = {
    id?: number
    title?: string | null
    fwd?: number | null
    mid?: number | null
    aft?: number | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_draftUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    fwd?: NullableFloatFieldUpdateOperationsInput | number | null
    mid?: NullableFloatFieldUpdateOperationsInput | number | null
    aft?: NullableFloatFieldUpdateOperationsInput | number | null
    sof?: sofUpdateOneWithoutSof_draftNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_draftUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    fwd?: NullableFloatFieldUpdateOperationsInput | number | null
    mid?: NullableFloatFieldUpdateOperationsInput | number | null
    aft?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_draftCreateManyInput = {
    id?: number
    title?: string | null
    fwd?: number | null
    mid?: number | null
    aft?: number | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_draftUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    fwd?: NullableFloatFieldUpdateOperationsInput | number | null
    mid?: NullableFloatFieldUpdateOperationsInput | number | null
    aft?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_draftUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    fwd?: NullableFloatFieldUpdateOperationsInput | number | null
    mid?: NullableFloatFieldUpdateOperationsInput | number | null
    aft?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_bunker_figuresCreateInput = {
    title?: string | null
    ifo?: number | null
    mdo?: number | null
    fw?: number | null
    sof?: sofCreateNestedOneWithoutSof_bunker_figuresInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_bunker_figuresUncheckedCreateInput = {
    id?: number
    title?: string | null
    ifo?: number | null
    mdo?: number | null
    fw?: number | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_bunker_figuresUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ifo?: NullableFloatFieldUpdateOperationsInput | number | null
    mdo?: NullableFloatFieldUpdateOperationsInput | number | null
    fw?: NullableFloatFieldUpdateOperationsInput | number | null
    sof?: sofUpdateOneWithoutSof_bunker_figuresNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_bunker_figuresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ifo?: NullableFloatFieldUpdateOperationsInput | number | null
    mdo?: NullableFloatFieldUpdateOperationsInput | number | null
    fw?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_bunker_figuresCreateManyInput = {
    id?: number
    title?: string | null
    ifo?: number | null
    mdo?: number | null
    fw?: number | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_bunker_figuresUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ifo?: NullableFloatFieldUpdateOperationsInput | number | null
    mdo?: NullableFloatFieldUpdateOperationsInput | number | null
    fw?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_bunker_figuresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ifo?: NullableFloatFieldUpdateOperationsInput | number | null
    mdo?: NullableFloatFieldUpdateOperationsInput | number | null
    fw?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SofPortLogEventCategoriesCreateInput = {
    name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    events?: SofPortLogEventsCreateNestedManyWithoutCategoryInput
  }

  export type SofPortLogEventCategoriesUncheckedCreateInput = {
    id?: number
    name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    events?: SofPortLogEventsUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type SofPortLogEventCategoriesUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: SofPortLogEventsUpdateManyWithoutCategoryNestedInput
  }

  export type SofPortLogEventCategoriesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: SofPortLogEventsUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type SofPortLogEventCategoriesCreateManyInput = {
    id?: number
    name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type SofPortLogEventCategoriesUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SofPortLogEventCategoriesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SofPortLogEventsCreateInput = {
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    category?: SofPortLogEventCategoriesCreateNestedOneWithoutEventsInput
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsCreateNestedManyWithoutSof_port_log_eventInput
  }

  export type SofPortLogEventsUncheckedCreateInput = {
    id?: number
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    category_id?: number | null
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutSof_port_log_eventInput
  }

  export type SofPortLogEventsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: SofPortLogEventCategoriesUpdateOneWithoutEventsNestedInput
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsUpdateManyWithoutSof_port_log_eventNestedInput
  }

  export type SofPortLogEventsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutSof_port_log_eventNestedInput
  }

  export type SofPortLogEventsCreateManyInput = {
    id?: number
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    category_id?: number | null
  }

  export type SofPortLogEventsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SofPortLogEventsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShippingSofPortLogEventsCreateInput = {
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_event?: SofPortLogEventsCreateNestedOneWithoutShippingSofPortLogEventsInput
    shipping_sof?: sofCreateNestedOneWithoutSof_port_log_eventsInput
    created_by_user?: usersCreateNestedOneWithoutShipping_sof_port_log_eventsInput
  }

  export type ShippingSofPortLogEventsUncheckedCreateInput = {
    id?: number
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    sof_port_log_event_id: number
    shipping_sof_id: number
    created_by_user_id: number
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingSofPortLogEventsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_event?: SofPortLogEventsUpdateOneWithoutShippingSofPortLogEventsNestedInput
    shipping_sof?: sofUpdateOneWithoutSof_port_log_eventsNestedInput
    created_by_user?: usersUpdateOneWithoutShipping_sof_port_log_eventsNestedInput
  }

  export type ShippingSofPortLogEventsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_event_id?: IntFieldUpdateOperationsInput | number
    shipping_sof_id?: IntFieldUpdateOperationsInput | number
    created_by_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingSofPortLogEventsCreateManyInput = {
    id?: number
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    sof_port_log_event_id: number
    shipping_sof_id: number
    created_by_user_id: number
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingSofPortLogEventsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingSofPortLogEventsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_event_id?: IntFieldUpdateOperationsInput | number
    shipping_sof_id?: IntFieldUpdateOperationsInput | number
    created_by_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_shipper_cargoCreateInput = {
    berth?: string | null
    cargo?: string | null
    sof?: sofCreateNestedOneWithoutSof_shipper_cargoInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper?: sof_shipperCreateNestedManyWithoutSof_shipper_cargoInput
    sof_shipper_value?: sof_shipper_valueCreateNestedManyWithoutSof_shipper_cargoInput
  }

  export type sof_shipper_cargoUncheckedCreateInput = {
    id?: number
    berth?: string | null
    cargo?: string | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper?: sof_shipperUncheckedCreateNestedManyWithoutSof_shipper_cargoInput
    sof_shipper_value?: sof_shipper_valueUncheckedCreateNestedManyWithoutSof_shipper_cargoInput
  }

  export type sof_shipper_cargoUpdateInput = {
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    sof?: sofUpdateOneWithoutSof_shipper_cargoNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper?: sof_shipperUpdateManyWithoutSof_shipper_cargoNestedInput
    sof_shipper_value?: sof_shipper_valueUpdateManyWithoutSof_shipper_cargoNestedInput
  }

  export type sof_shipper_cargoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper?: sof_shipperUncheckedUpdateManyWithoutSof_shipper_cargoNestedInput
    sof_shipper_value?: sof_shipper_valueUncheckedUpdateManyWithoutSof_shipper_cargoNestedInput
  }

  export type sof_shipper_cargoCreateManyInput = {
    id?: number
    berth?: string | null
    cargo?: string | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_shipper_cargoUpdateManyMutationInput = {
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_shipper_cargoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_shipperCreateInput = {
    name?: string | null
    quantity?: number | null
    sof_shipper_cargo?: sof_shipper_cargoCreateNestedOneWithoutSof_shipperInput
  }

  export type sof_shipperUncheckedCreateInput = {
    id?: number
    name?: string | null
    quantity?: number | null
    sof_shipper_cargo_id?: number | null
  }

  export type sof_shipperUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_shipper_cargo?: sof_shipper_cargoUpdateOneWithoutSof_shipperNestedInput
  }

  export type sof_shipperUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_shipper_cargo_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sof_shipperCreateManyInput = {
    id?: number
    name?: string | null
    quantity?: number | null
    sof_shipper_cargo_id?: number | null
  }

  export type sof_shipperUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type sof_shipperUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_shipper_cargo_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sof_shipper_valueCreateInput = {
    value?: number | null
    sof_shipper_cargo?: sof_shipper_cargoCreateNestedOneWithoutSof_shipper_valueInput
  }

  export type sof_shipper_valueUncheckedCreateInput = {
    id?: number
    value?: number | null
    sof_shipper_cargo_id?: number | null
  }

  export type sof_shipper_valueUpdateInput = {
    value?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_shipper_cargo?: sof_shipper_cargoUpdateOneWithoutSof_shipper_valueNestedInput
  }

  export type sof_shipper_valueUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_shipper_cargo_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sof_shipper_valueCreateManyInput = {
    id?: number
    value?: number | null
    sof_shipper_cargo_id?: number | null
  }

  export type sof_shipper_valueUpdateManyMutationInput = {
    value?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type sof_shipper_valueUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableFloatFieldUpdateOperationsInput | number | null
    sof_shipper_cargo_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type DateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type CountryRelationFilter = {
    is?: CountryWhereInput | null
    isNot?: CountryWhereInput | null
  }

  export type UsersListRelationFilter = {
    every?: usersWhereInput
    some?: usersWhereInput
    none?: usersWhereInput
  }

  export type ChecklistTemplateListRelationFilter = {
    every?: ChecklistTemplateWhereInput
    some?: ChecklistTemplateWhereInput
    none?: ChecklistTemplateWhereInput
  }

  export type usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChecklistTemplateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgencyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    country_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type AgencyAvgOrderByAggregateInput = {
    id?: SortOrder
    country_id?: SortOrder
  }

  export type AgencyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    country_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type AgencyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    country_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type AgencySumOrderByAggregateInput = {
    id?: SortOrder
    country_id?: SortOrder
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type DateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type FloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type BerthsRelationFilter = {
    is?: berthsWhereInput
    isNot?: berthsWhereInput
  }

  export type ProductsRelationFilter = {
    is?: productsWhereInput | null
    isNot?: productsWhereInput | null
  }

  export type ProformasListRelationFilter = {
    every?: proformasWhereInput
    some?: proformasWhereInput
    none?: proformasWhereInput
  }

  export type proformasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type berth_productsCountOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type berth_productsAvgOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
  }

  export type berth_productsMaxOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type berth_productsMinOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type berth_productsSumOrderByAggregateInput = {
    id?: SortOrder
    loadingCapacity?: SortOrder
    unloadingCapacity?: SortOrder
    berthId?: SortOrder
    productId?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type PortsRelationFilter = {
    is?: portsWhereInput | null
    isNot?: portsWhereInput | null
  }

  export type Berth_productsListRelationFilter = {
    every?: berth_productsWhereInput
    some?: berth_productsWhereInput
    none?: berth_productsWhereInput
  }

  export type ShippingPortListRelationFilter = {
    every?: ShippingPortWhereInput
    some?: ShippingPortWhereInput
    none?: ShippingPortWhereInput
  }

  export type berth_productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShippingPortOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type berthsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type berthsAvgOrderByAggregateInput = {
    id?: SortOrder
    portId?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type berthsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type berthsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type berthsSumOrderByAggregateInput = {
    id?: SortOrder
    portId?: SortOrder
    maxDraft?: SortOrder
    airDraft?: SortOrder
    maxLengthOverall?: SortOrder
    maxDeadWeightTonnage?: SortOrder
    maxBeam?: SortOrder
    waterDensity?: SortOrder
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type ChecklistTemplateItemListRelationFilter = {
    every?: ChecklistTemplateItemWhereInput
    some?: ChecklistTemplateItemWhereInput
    none?: ChecklistTemplateItemWhereInput
  }

  export type AgencyRelationFilter = {
    is?: AgencyWhereInput | null
    isNot?: AgencyWhereInput | null
  }

  export type ChecklistTemplateItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChecklistTemplateCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    operation_type?: SortOrder
    agency_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ChecklistTemplateAvgOrderByAggregateInput = {
    id?: SortOrder
    agency_id?: SortOrder
  }

  export type ChecklistTemplateMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    operation_type?: SortOrder
    agency_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ChecklistTemplateMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    operation_type?: SortOrder
    agency_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ChecklistTemplateSumOrderByAggregateInput = {
    id?: SortOrder
    agency_id?: SortOrder
  }

  export type ChecklistTemplateRelationFilter = {
    is?: ChecklistTemplateWhereInput | null
    isNot?: ChecklistTemplateWhereInput | null
  }

  export type ChecklistTemplateItemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ChecklistTemplateItemAvgOrderByAggregateInput = {
    id?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
  }

  export type ChecklistTemplateItemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ChecklistTemplateItemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ChecklistTemplateItemSumOrderByAggregateInput = {
    id?: SortOrder
    working_days?: SortOrder
    checklist_template_id?: SortOrder
  }

  export type BoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type ShippingRelationFilter = {
    is?: ShippingWhereInput | null
    isNot?: ShippingWhereInput | null
  }

  export type UsersRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type ShippingChecklistItemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_ut?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingChecklistItemAvgOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type ShippingChecklistItemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_ut?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingChecklistItemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    deadline_date?: SortOrder
    commentary?: SortOrder
    is_done?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_ut?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingChecklistItemSumOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type BoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type PortsListRelationFilter = {
    every?: portsWhereInput
    some?: portsWhereInput
    none?: portsWhereInput
  }

  export type VesselListRelationFilter = {
    every?: VesselWhereInput
    some?: VesselWhereInput
    none?: VesselWhereInput
  }

  export type AgencyListRelationFilter = {
    every?: AgencyWhereInput
    some?: AgencyWhereInput
    none?: AgencyWhereInput
  }

  export type portsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VesselOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgencyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CountryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type CountryAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CountryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type CountryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    flag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type CountrySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type migrationsCountOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
  }

  export type migrationsAvgOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
  }

  export type migrationsMaxOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
  }

  export type migrationsMinOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    name?: SortOrder
  }

  export type migrationsSumOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
  }

  export type port_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type port_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    portId?: SortOrder
    userId?: SortOrder
  }

  export type port_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type port_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    portId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type port_filesSumOrderByAggregateInput = {
    id?: SortOrder
    portId?: SortOrder
    userId?: SortOrder
  }

  export type BerthsListRelationFilter = {
    every?: berthsWhereInput
    some?: berthsWhereInput
    none?: berthsWhereInput
  }

  export type Port_filesListRelationFilter = {
    every?: port_filesWhereInput
    some?: port_filesWhereInput
    none?: port_filesWhereInput
  }

  export type berthsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type port_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type portsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    time_zone?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
  }

  export type portsAvgOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
  }

  export type portsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    time_zone?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
  }

  export type portsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    time_zone?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    slug?: SortOrder
  }

  export type portsSumOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
  }

  export type ShippingProductListRelationFilter = {
    every?: ShippingProductWhereInput
    some?: ShippingProductWhereInput
    none?: ShippingProductWhereInput
  }

  export type ShippingProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type productsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type productsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type productsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type productsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ProformasRelationFilter = {
    is?: proformasWhereInput | null
    isNot?: proformasWhereInput | null
  }

  export type proforma_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type proforma_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    proformaId?: SortOrder
  }

  export type proforma_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type proforma_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    proformaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type proforma_filesSumOrderByAggregateInput = {
    id?: SortOrder
    proformaId?: SortOrder
  }

  export type BoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type Berth_productsRelationFilter = {
    is?: berth_productsWhereInput
    isNot?: berth_productsWhereInput
  }

  export type Proforma_filesListRelationFilter = {
    every?: proforma_filesWhereInput
    some?: proforma_filesWhereInput
    none?: proforma_filesWhereInput
  }

  export type proforma_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type proformasCountOrderByAggregateInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
  }

  export type proformasAvgOrderByAggregateInput = {
    id?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    builtYear?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    beam?: SortOrder
    draft?: SortOrder
  }

  export type proformasMaxOrderByAggregateInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
  }

  export type proformasMinOrderByAggregateInput = {
    id?: SortOrder
    taxes?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    idHash?: SortOrder
    applicantName?: SortOrder
    applicantEmail?: SortOrder
    vesselName?: SortOrder
    imo?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    package?: SortOrder
    builtYear?: SortOrder
    agencyType?: SortOrder
    operationType?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    isCargillInternational?: SortOrder
    beam?: SortOrder
    etb?: SortOrder
    draft?: SortOrder
    requestingCustomer?: SortOrder
    vesselType?: SortOrder
  }

  export type proformasSumOrderByAggregateInput = {
    id?: SortOrder
    totalValue?: SortOrder
    berthedHours?: SortOrder
    berthProductId?: SortOrder
    deadWeightTonnage?: SortOrder
    lengthOverall?: SortOrder
    grossTonnage?: SortOrder
    builtYear?: SortOrder
    productTonnage?: SortOrder
    usd?: SortOrder
    beam?: SortOrder
    draft?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }

  export type SubsetsRelationFilter = {
    is?: subsetsWhereInput | null
    isNot?: subsetsWhereInput | null
  }

  export type Document_shipperRelationFilter = {
    is?: document_shipperWhereInput | null
    isNot?: document_shipperWhereInput | null
  }

  export type Document_productRelationFilter = {
    is?: document_productWhereInput | null
    isNot?: document_productWhereInput | null
  }

  export type shipping_documentsCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    document_number?: SortOrder
    consignee?: SortOrder
    vessel_name?: SortOrder
    port_of_loading?: SortOrder
    port_of_discharge?: SortOrder
    notify?: SortOrder
    product_name_extra_info?: SortOrder
    product_weight_extra_info?: SortOrder
    freight_type?: SortOrder
    charter_party_date?: SortOrder
    ship_boarded_date?: SortOrder
    issue_place_date?: SortOrder
    number_of_original_bill_of_landing?: SortOrder
    shipper_id?: SortOrder
    product_id?: SortOrder
    master_name?: SortOrder
    signature?: SortOrder
    shipping_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subset_id?: SortOrder
    product_gross_weight?: SortOrder
    product_net_weight?: SortOrder
    product_quantity?: SortOrder
    product_packing?: SortOrder
  }

  export type shipping_documentsAvgOrderByAggregateInput = {
    id?: SortOrder
    number_of_original_bill_of_landing?: SortOrder
    shipper_id?: SortOrder
    product_id?: SortOrder
    shipping_id?: SortOrder
    user_id?: SortOrder
    order?: SortOrder
    subset_id?: SortOrder
    product_gross_weight?: SortOrder
    product_net_weight?: SortOrder
    product_quantity?: SortOrder
  }

  export type shipping_documentsMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    document_number?: SortOrder
    consignee?: SortOrder
    vessel_name?: SortOrder
    port_of_loading?: SortOrder
    port_of_discharge?: SortOrder
    notify?: SortOrder
    product_name_extra_info?: SortOrder
    product_weight_extra_info?: SortOrder
    freight_type?: SortOrder
    charter_party_date?: SortOrder
    ship_boarded_date?: SortOrder
    issue_place_date?: SortOrder
    number_of_original_bill_of_landing?: SortOrder
    shipper_id?: SortOrder
    product_id?: SortOrder
    master_name?: SortOrder
    signature?: SortOrder
    shipping_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subset_id?: SortOrder
    product_gross_weight?: SortOrder
    product_net_weight?: SortOrder
    product_quantity?: SortOrder
    product_packing?: SortOrder
  }

  export type shipping_documentsMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    document_number?: SortOrder
    consignee?: SortOrder
    vessel_name?: SortOrder
    port_of_loading?: SortOrder
    port_of_discharge?: SortOrder
    notify?: SortOrder
    product_name_extra_info?: SortOrder
    product_weight_extra_info?: SortOrder
    freight_type?: SortOrder
    charter_party_date?: SortOrder
    ship_boarded_date?: SortOrder
    issue_place_date?: SortOrder
    number_of_original_bill_of_landing?: SortOrder
    shipper_id?: SortOrder
    product_id?: SortOrder
    master_name?: SortOrder
    signature?: SortOrder
    shipping_id?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    order?: SortOrder
    subset_id?: SortOrder
    product_gross_weight?: SortOrder
    product_net_weight?: SortOrder
    product_quantity?: SortOrder
    product_packing?: SortOrder
  }

  export type shipping_documentsSumOrderByAggregateInput = {
    id?: SortOrder
    number_of_original_bill_of_landing?: SortOrder
    shipper_id?: SortOrder
    product_id?: SortOrder
    shipping_id?: SortOrder
    user_id?: SortOrder
    order?: SortOrder
    subset_id?: SortOrder
    product_gross_weight?: SortOrder
    product_net_weight?: SortOrder
    product_quantity?: SortOrder
  }

  export type Shipping_documentsListRelationFilter = {
    every?: shipping_documentsWhereInput
    some?: shipping_documentsWhereInput
    none?: shipping_documentsWhereInput
  }

  export type shipping_documentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type document_shipperCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    complement?: SortOrder
  }

  export type document_shipperAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type document_shipperMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    complement?: SortOrder
  }

  export type document_shipperMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    complement?: SortOrder
  }

  export type document_shipperSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type document_productCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    abbreviation?: SortOrder
    description?: SortOrder
    packing_type?: SortOrder
  }

  export type document_productAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type document_productMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    abbreviation?: SortOrder
    description?: SortOrder
    packing_type?: SortOrder
  }

  export type document_productMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    abbreviation?: SortOrder
    description?: SortOrder
    packing_type?: SortOrder
  }

  export type document_productSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type shipping_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type shipping_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
  }

  export type shipping_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type shipping_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type shipping_filesSumOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
    userId?: SortOrder
  }

  export type ShippingPortCountOrderByAggregateInput = {
    id?: SortOrder
    estimated_time_of_arrival?: SortOrder
    estimated_time_of_berthing?: SortOrder
    estimated_time_of_sailing?: SortOrder
    time_of_arrival?: SortOrder
    time_of_berthing?: SortOrder
    time_of_sailing?: SortOrder
    shipping_id?: SortOrder
    port_id?: SortOrder
    berth_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingPortAvgOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    port_id?: SortOrder
    berth_id?: SortOrder
  }

  export type ShippingPortMaxOrderByAggregateInput = {
    id?: SortOrder
    estimated_time_of_arrival?: SortOrder
    estimated_time_of_berthing?: SortOrder
    estimated_time_of_sailing?: SortOrder
    time_of_arrival?: SortOrder
    time_of_berthing?: SortOrder
    time_of_sailing?: SortOrder
    shipping_id?: SortOrder
    port_id?: SortOrder
    berth_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingPortMinOrderByAggregateInput = {
    id?: SortOrder
    estimated_time_of_arrival?: SortOrder
    estimated_time_of_berthing?: SortOrder
    estimated_time_of_sailing?: SortOrder
    time_of_arrival?: SortOrder
    time_of_berthing?: SortOrder
    time_of_sailing?: SortOrder
    shipping_id?: SortOrder
    port_id?: SortOrder
    berth_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingPortSumOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    port_id?: SortOrder
    berth_id?: SortOrder
  }

  export type ShippingProductCountOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shipping_id?: SortOrder
    product_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingProductAvgOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shipping_id?: SortOrder
    product_id?: SortOrder
  }

  export type ShippingProductMaxOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shipping_id?: SortOrder
    product_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingProductMinOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shipping_id?: SortOrder
    product_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingProductSumOrderByAggregateInput = {
    id?: SortOrder
    weight?: SortOrder
    shipping_id?: SortOrder
    product_id?: SortOrder
  }

  export type VesselRelationFilter = {
    is?: VesselWhereInput | null
    isNot?: VesselWhereInput | null
  }

  export type Shipping_filesListRelationFilter = {
    every?: shipping_filesWhereInput
    some?: shipping_filesWhereInput
    none?: shipping_filesWhereInput
  }

  export type SubsetsListRelationFilter = {
    every?: subsetsWhereInput
    some?: subsetsWhereInput
    none?: subsetsWhereInput
  }

  export type InquiresListRelationFilter = {
    every?: inquiresWhereInput
    some?: inquiresWhereInput
    none?: inquiresWhereInput
  }

  export type ShippingChecklistItemListRelationFilter = {
    every?: ShippingChecklistItemWhereInput
    some?: ShippingChecklistItemWhereInput
    none?: ShippingChecklistItemWhereInput
  }

  export type SofRelationFilter = {
    is?: sofWhereInput | null
    isNot?: sofWhereInput | null
  }

  export type shipping_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type subsetsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type inquiresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShippingChecklistItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShippingCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
    port_operator?: SortOrder
  }

  export type ShippingAvgOrderByAggregateInput = {
    id?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
  }

  export type ShippingMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
    port_operator?: SortOrder
  }

  export type ShippingMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    owner_head_name?: SortOrder
    owner_head_address?: SortOrder
    disponent_owner?: SortOrder
    charter_name?: SortOrder
    master_name?: SortOrder
    master_email?: SortOrder
    estimated_draft_arrival?: SortOrder
    estimated_draft_departure?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_operator?: SortOrder
    vessel_operator_email?: SortOrder
    operation_type?: SortOrder
    agency_type?: SortOrder
    voyage_number?: SortOrder
    external_code?: SortOrder
    comments?: SortOrder
    last_port?: SortOrder
    next_port?: SortOrder
    broker?: SortOrder
    boat?: SortOrder
    tugs?: SortOrder
    garbage?: SortOrder
    last_cargoes?: SortOrder
    sscec_port?: SortOrder
    sscec_exp?: SortOrder
    in_marsat_c_number?: SortOrder
    master_phone_01?: SortOrder
    master_phone_02?: SortOrder
    vessel_expert?: SortOrder
    vessel_expert_phone01?: SortOrder
    vessel_expert_phone02?: SortOrder
    vessel_expert_alternate?: SortOrder
    vessel_expert_alternate_phone01?: SortOrder
    vessel_expert_alternate_phone02?: SortOrder
    vessel_operator_phone01?: SortOrder
    vessel_operator_phone02?: SortOrder
    vessel_operator_city_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
    port_operator?: SortOrder
  }

  export type ShippingSumOrderByAggregateInput = {
    id?: SortOrder
    arrival_draft?: SortOrder
    depart_draft?: SortOrder
    vessel_id?: SortOrder
    user_id?: SortOrder
    total_load_expected?: SortOrder
    total_load_actual?: SortOrder
  }

  export type subsetsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type subsetsAvgOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
  }

  export type subsetsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type subsetsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    shippingId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type subsetsSumOrderByAggregateInput = {
    id?: SortOrder
    shippingId?: SortOrder
  }

  export type user_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type user_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type user_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type user_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type user_filesSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type ShippingListRelationFilter = {
    every?: ShippingWhereInput
    some?: ShippingWhereInput
    none?: ShippingWhereInput
  }

  export type User_filesListRelationFilter = {
    every?: user_filesWhereInput
    some?: user_filesWhereInput
    none?: user_filesWhereInput
  }

  export type Inquires_commentsListRelationFilter = {
    every?: inquires_commentsWhereInput
    some?: inquires_commentsWhereInput
    none?: inquires_commentsWhereInput
  }

  export type Group_emailsListRelationFilter = {
    every?: group_emailsWhereInput
    some?: group_emailsWhereInput
    none?: group_emailsWhereInput
  }

  export type Vessel_filesListRelationFilter = {
    every?: vessel_filesWhereInput
    some?: vessel_filesWhereInput
    none?: vessel_filesWhereInput
  }

  export type Users_preferenceListRelationFilter = {
    every?: users_preferenceWhereInput
    some?: users_preferenceWhereInput
    none?: users_preferenceWhereInput
  }

  export type ShippingSofPortLogEventsListRelationFilter = {
    every?: ShippingSofPortLogEventsWhereInput
    some?: ShippingSofPortLogEventsWhereInput
    none?: ShippingSofPortLogEventsWhereInput
  }

  export type ShippingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type inquires_commentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type group_emailsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type vessel_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type users_preferenceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShippingSofPortLogEventsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    agencyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    agencyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    agencyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
  }

  export type users_preferenceCountOrderByAggregateInput = {
    id?: SortOrder
    team?: SortOrder
    ports?: SortOrder
    initial_page?: SortOrder
    user_id?: SortOrder
  }

  export type users_preferenceAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type users_preferenceMaxOrderByAggregateInput = {
    id?: SortOrder
    team?: SortOrder
    ports?: SortOrder
    initial_page?: SortOrder
    user_id?: SortOrder
  }

  export type users_preferenceMinOrderByAggregateInput = {
    id?: SortOrder
    team?: SortOrder
    ports?: SortOrder
    initial_page?: SortOrder
    user_id?: SortOrder
  }

  export type users_preferenceSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type vessel_filesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vessel_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type vessel_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    vessel_id?: SortOrder
    userId?: SortOrder
  }

  export type vessel_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vessel_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type vessel_filesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    vessel_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    userId?: SortOrder
  }

  export type vessel_filesSumOrderByAggregateInput = {
    id?: SortOrder
    vessel_id?: SortOrder
    userId?: SortOrder
  }

  export type VesselCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
  }

  export type VesselAvgOrderByAggregateInput = {
    id?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    country_id?: SortOrder
    built_year?: SortOrder
  }

  export type VesselMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
  }

  export type VesselMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    imo?: SortOrder
    call_sign?: SortOrder
    satellite_telephone?: SortOrder
    classification_society?: SortOrder
    type?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    country_id?: SortOrder
    draft_sw?: SortOrder
    built_year?: SortOrder
  }

  export type VesselSumOrderByAggregateInput = {
    id?: SortOrder
    length_overall?: SortOrder
    dead_weight_tonnage?: SortOrder
    beam?: SortOrder
    cubic_meters?: SortOrder
    gross_tonnage?: SortOrder
    net_tonnage?: SortOrder
    panama_gross_tonnage?: SortOrder
    panama_net_tonnage?: SortOrder
    suez_gross_tonnage?: SortOrder
    suez_net_tonnage?: SortOrder
    reduced_gross_tonnage?: SortOrder
    length_between_perpendiculars?: SortOrder
    molded_depth?: SortOrder
    number_of_holds?: SortOrder
    number_of_tanks?: SortOrder
    country_id?: SortOrder
    built_year?: SortOrder
  }

  export type inquiresCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    group?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type inquiresAvgOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type inquiresMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    group?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type inquiresMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    group?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type inquiresSumOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type InquiresRelationFilter = {
    is?: inquiresWhereInput | null
    isNot?: inquiresWhereInput | null
  }

  export type inquires_commentsCountOrderByAggregateInput = {
    id?: SortOrder
    body?: SortOrder
    type?: SortOrder
    is_done?: SortOrder
    deadline_date?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type inquires_commentsAvgOrderByAggregateInput = {
    id?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
  }

  export type inquires_commentsMaxOrderByAggregateInput = {
    id?: SortOrder
    body?: SortOrder
    type?: SortOrder
    is_done?: SortOrder
    deadline_date?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type inquires_commentsMinOrderByAggregateInput = {
    id?: SortOrder
    body?: SortOrder
    type?: SortOrder
    is_done?: SortOrder
    deadline_date?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type inquires_commentsSumOrderByAggregateInput = {
    id?: SortOrder
    inquire_id?: SortOrder
    user_id?: SortOrder
  }

  export type group_emailsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type group_emailsAvgOrderByAggregateInput = {
    id?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type group_emailsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type group_emailsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    emails?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type group_emailsSumOrderByAggregateInput = {
    id?: SortOrder
    vessel_id?: SortOrder
    updated_by_user_id?: SortOrder
  }

  export type Sof_holidaysListRelationFilter = {
    every?: sof_holidaysWhereInput
    some?: sof_holidaysWhereInput
    none?: sof_holidaysWhereInput
  }

  export type Sof_remarksListRelationFilter = {
    every?: sof_remarksWhereInput
    some?: sof_remarksWhereInput
    none?: sof_remarksWhereInput
  }

  export type Sof_draftListRelationFilter = {
    every?: sof_draftWhereInput
    some?: sof_draftWhereInput
    none?: sof_draftWhereInput
  }

  export type Sof_bunker_figuresListRelationFilter = {
    every?: sof_bunker_figuresWhereInput
    some?: sof_bunker_figuresWhereInput
    none?: sof_bunker_figuresWhereInput
  }

  export type Sof_shipper_cargoListRelationFilter = {
    every?: sof_shipper_cargoWhereInput
    some?: sof_shipper_cargoWhereInput
    none?: sof_shipper_cargoWhereInput
  }

  export type sof_holidaysOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sof_remarksOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sof_draftOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sof_bunker_figuresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sof_shipper_cargoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sofCountOrderByAggregateInput = {
    id?: SortOrder
    hidden_attributes?: SortOrder
    shipping_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sofAvgOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
  }

  export type sofMaxOrderByAggregateInput = {
    id?: SortOrder
    hidden_attributes?: SortOrder
    shipping_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sofMinOrderByAggregateInput = {
    id?: SortOrder
    hidden_attributes?: SortOrder
    shipping_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sofSumOrderByAggregateInput = {
    id?: SortOrder
    shipping_id?: SortOrder
  }

  export type sof_holidaysCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    date?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_holidaysAvgOrderByAggregateInput = {
    id?: SortOrder
    sof_id?: SortOrder
  }

  export type sof_holidaysMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    date?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_holidaysMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    date?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_holidaysSumOrderByAggregateInput = {
    id?: SortOrder
    sof_id?: SortOrder
  }

  export type Sof_remarks_itemsListRelationFilter = {
    every?: sof_remarks_itemsWhereInput
    some?: sof_remarks_itemsWhereInput
    none?: sof_remarks_itemsWhereInput
  }

  export type sof_remarks_itemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sof_remarksCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_remarksAvgOrderByAggregateInput = {
    id?: SortOrder
    sof_id?: SortOrder
  }

  export type sof_remarksMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_remarksMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_remarksSumOrderByAggregateInput = {
    id?: SortOrder
    sof_id?: SortOrder
  }

  export type Sof_remarksRelationFilter = {
    is?: sof_remarksWhereInput | null
    isNot?: sof_remarksWhereInput | null
  }

  export type sof_remarks_itemsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    value?: SortOrder
    is_single?: SortOrder
    sof_remark_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_remarks_itemsAvgOrderByAggregateInput = {
    id?: SortOrder
    sof_remark_id?: SortOrder
  }

  export type sof_remarks_itemsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    value?: SortOrder
    is_single?: SortOrder
    sof_remark_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_remarks_itemsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    value?: SortOrder
    is_single?: SortOrder
    sof_remark_id?: SortOrder
    deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_remarks_itemsSumOrderByAggregateInput = {
    id?: SortOrder
    sof_remark_id?: SortOrder
  }

  export type sof_draftCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    fwd?: SortOrder
    mid?: SortOrder
    aft?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_draftAvgOrderByAggregateInput = {
    id?: SortOrder
    fwd?: SortOrder
    mid?: SortOrder
    aft?: SortOrder
    sof_id?: SortOrder
  }

  export type sof_draftMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    fwd?: SortOrder
    mid?: SortOrder
    aft?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_draftMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    fwd?: SortOrder
    mid?: SortOrder
    aft?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_draftSumOrderByAggregateInput = {
    id?: SortOrder
    fwd?: SortOrder
    mid?: SortOrder
    aft?: SortOrder
    sof_id?: SortOrder
  }

  export type sof_bunker_figuresCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    ifo?: SortOrder
    mdo?: SortOrder
    fw?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_bunker_figuresAvgOrderByAggregateInput = {
    id?: SortOrder
    ifo?: SortOrder
    mdo?: SortOrder
    fw?: SortOrder
    sof_id?: SortOrder
  }

  export type sof_bunker_figuresMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    ifo?: SortOrder
    mdo?: SortOrder
    fw?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_bunker_figuresMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    ifo?: SortOrder
    mdo?: SortOrder
    fw?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_bunker_figuresSumOrderByAggregateInput = {
    id?: SortOrder
    ifo?: SortOrder
    mdo?: SortOrder
    fw?: SortOrder
    sof_id?: SortOrder
  }

  export type SofPortLogEventsListRelationFilter = {
    every?: SofPortLogEventsWhereInput
    some?: SofPortLogEventsWhereInput
    none?: SofPortLogEventsWhereInput
  }

  export type SofPortLogEventsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SofPortLogEventCategoriesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type SofPortLogEventCategoriesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SofPortLogEventCategoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type SofPortLogEventCategoriesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type SofPortLogEventCategoriesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SofPortLogEventCategoriesRelationFilter = {
    is?: SofPortLogEventCategoriesWhereInput | null
    isNot?: SofPortLogEventCategoriesWhereInput | null
  }

  export type SofPortLogEventsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    category_id?: SortOrder
  }

  export type SofPortLogEventsAvgOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
  }

  export type SofPortLogEventsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    category_id?: SortOrder
  }

  export type SofPortLogEventsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    category_id?: SortOrder
  }

  export type SofPortLogEventsSumOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
  }

  export type SofPortLogEventsRelationFilter = {
    is?: SofPortLogEventsWhereInput | null
    isNot?: SofPortLogEventsWhereInput | null
  }

  export type ShippingSofPortLogEventsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    commentary?: SortOrder
    is_important?: SortOrder
    is_highlighted?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    sof_port_log_event_id?: SortOrder
    shipping_sof_id?: SortOrder
    created_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingSofPortLogEventsAvgOrderByAggregateInput = {
    id?: SortOrder
    sof_port_log_event_id?: SortOrder
    shipping_sof_id?: SortOrder
    created_by_user_id?: SortOrder
  }

  export type ShippingSofPortLogEventsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    commentary?: SortOrder
    is_important?: SortOrder
    is_highlighted?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    sof_port_log_event_id?: SortOrder
    shipping_sof_id?: SortOrder
    created_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingSofPortLogEventsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    commentary?: SortOrder
    is_important?: SortOrder
    is_highlighted?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    sof_port_log_event_id?: SortOrder
    shipping_sof_id?: SortOrder
    created_by_user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type ShippingSofPortLogEventsSumOrderByAggregateInput = {
    id?: SortOrder
    sof_port_log_event_id?: SortOrder
    shipping_sof_id?: SortOrder
    created_by_user_id?: SortOrder
  }

  export type Sof_shipperListRelationFilter = {
    every?: sof_shipperWhereInput
    some?: sof_shipperWhereInput
    none?: sof_shipperWhereInput
  }

  export type Sof_shipper_valueListRelationFilter = {
    every?: sof_shipper_valueWhereInput
    some?: sof_shipper_valueWhereInput
    none?: sof_shipper_valueWhereInput
  }

  export type sof_shipperOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sof_shipper_valueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sof_shipper_cargoCountOrderByAggregateInput = {
    id?: SortOrder
    berth?: SortOrder
    cargo?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_shipper_cargoAvgOrderByAggregateInput = {
    id?: SortOrder
    sof_id?: SortOrder
  }

  export type sof_shipper_cargoMaxOrderByAggregateInput = {
    id?: SortOrder
    berth?: SortOrder
    cargo?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_shipper_cargoMinOrderByAggregateInput = {
    id?: SortOrder
    berth?: SortOrder
    cargo?: SortOrder
    sof_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sof_shipper_cargoSumOrderByAggregateInput = {
    id?: SortOrder
    sof_id?: SortOrder
  }

  export type Sof_shipper_cargoRelationFilter = {
    is?: sof_shipper_cargoWhereInput | null
    isNot?: sof_shipper_cargoWhereInput | null
  }

  export type sof_shipperCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    quantity?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type sof_shipperAvgOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type sof_shipperMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    quantity?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type sof_shipperMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    quantity?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type sof_shipperSumOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type sof_shipper_valueCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type sof_shipper_valueAvgOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type sof_shipper_valueMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type sof_shipper_valueMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type sof_shipper_valueSumOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    sof_shipper_cargo_id?: SortOrder
  }

  export type CountryCreateNestedOneWithoutAgencyInput = {
    create?: XOR<CountryCreateWithoutAgencyInput, CountryUncheckedCreateWithoutAgencyInput>
    connectOrCreate?: CountryCreateOrConnectWithoutAgencyInput
    connect?: CountryWhereUniqueInput
  }

  export type usersCreateNestedManyWithoutAgencyInput = {
    create?: XOR<Enumerable<usersCreateWithoutAgencyInput>, Enumerable<usersUncheckedCreateWithoutAgencyInput>>
    connectOrCreate?: Enumerable<usersCreateOrConnectWithoutAgencyInput>
    createMany?: usersCreateManyAgencyInputEnvelope
    connect?: Enumerable<usersWhereUniqueInput>
  }

  export type ChecklistTemplateCreateNestedManyWithoutAgencyInput = {
    create?: XOR<Enumerable<ChecklistTemplateCreateWithoutAgencyInput>, Enumerable<ChecklistTemplateUncheckedCreateWithoutAgencyInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateCreateOrConnectWithoutAgencyInput>
    createMany?: ChecklistTemplateCreateManyAgencyInputEnvelope
    connect?: Enumerable<ChecklistTemplateWhereUniqueInput>
  }

  export type usersUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<Enumerable<usersCreateWithoutAgencyInput>, Enumerable<usersUncheckedCreateWithoutAgencyInput>>
    connectOrCreate?: Enumerable<usersCreateOrConnectWithoutAgencyInput>
    createMany?: usersCreateManyAgencyInputEnvelope
    connect?: Enumerable<usersWhereUniqueInput>
  }

  export type ChecklistTemplateUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<Enumerable<ChecklistTemplateCreateWithoutAgencyInput>, Enumerable<ChecklistTemplateUncheckedCreateWithoutAgencyInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateCreateOrConnectWithoutAgencyInput>
    createMany?: ChecklistTemplateCreateManyAgencyInputEnvelope
    connect?: Enumerable<ChecklistTemplateWhereUniqueInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type CountryUpdateOneWithoutAgencyNestedInput = {
    create?: XOR<CountryCreateWithoutAgencyInput, CountryUncheckedCreateWithoutAgencyInput>
    connectOrCreate?: CountryCreateOrConnectWithoutAgencyInput
    upsert?: CountryUpsertWithoutAgencyInput
    disconnect?: boolean
    delete?: boolean
    connect?: CountryWhereUniqueInput
    update?: XOR<CountryUpdateWithoutAgencyInput, CountryUncheckedUpdateWithoutAgencyInput>
  }

  export type usersUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<Enumerable<usersCreateWithoutAgencyInput>, Enumerable<usersUncheckedCreateWithoutAgencyInput>>
    connectOrCreate?: Enumerable<usersCreateOrConnectWithoutAgencyInput>
    upsert?: Enumerable<usersUpsertWithWhereUniqueWithoutAgencyInput>
    createMany?: usersCreateManyAgencyInputEnvelope
    set?: Enumerable<usersWhereUniqueInput>
    disconnect?: Enumerable<usersWhereUniqueInput>
    delete?: Enumerable<usersWhereUniqueInput>
    connect?: Enumerable<usersWhereUniqueInput>
    update?: Enumerable<usersUpdateWithWhereUniqueWithoutAgencyInput>
    updateMany?: Enumerable<usersUpdateManyWithWhereWithoutAgencyInput>
    deleteMany?: Enumerable<usersScalarWhereInput>
  }

  export type ChecklistTemplateUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<Enumerable<ChecklistTemplateCreateWithoutAgencyInput>, Enumerable<ChecklistTemplateUncheckedCreateWithoutAgencyInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateCreateOrConnectWithoutAgencyInput>
    upsert?: Enumerable<ChecklistTemplateUpsertWithWhereUniqueWithoutAgencyInput>
    createMany?: ChecklistTemplateCreateManyAgencyInputEnvelope
    set?: Enumerable<ChecklistTemplateWhereUniqueInput>
    disconnect?: Enumerable<ChecklistTemplateWhereUniqueInput>
    delete?: Enumerable<ChecklistTemplateWhereUniqueInput>
    connect?: Enumerable<ChecklistTemplateWhereUniqueInput>
    update?: Enumerable<ChecklistTemplateUpdateWithWhereUniqueWithoutAgencyInput>
    updateMany?: Enumerable<ChecklistTemplateUpdateManyWithWhereWithoutAgencyInput>
    deleteMany?: Enumerable<ChecklistTemplateScalarWhereInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type usersUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<Enumerable<usersCreateWithoutAgencyInput>, Enumerable<usersUncheckedCreateWithoutAgencyInput>>
    connectOrCreate?: Enumerable<usersCreateOrConnectWithoutAgencyInput>
    upsert?: Enumerable<usersUpsertWithWhereUniqueWithoutAgencyInput>
    createMany?: usersCreateManyAgencyInputEnvelope
    set?: Enumerable<usersWhereUniqueInput>
    disconnect?: Enumerable<usersWhereUniqueInput>
    delete?: Enumerable<usersWhereUniqueInput>
    connect?: Enumerable<usersWhereUniqueInput>
    update?: Enumerable<usersUpdateWithWhereUniqueWithoutAgencyInput>
    updateMany?: Enumerable<usersUpdateManyWithWhereWithoutAgencyInput>
    deleteMany?: Enumerable<usersScalarWhereInput>
  }

  export type ChecklistTemplateUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<Enumerable<ChecklistTemplateCreateWithoutAgencyInput>, Enumerable<ChecklistTemplateUncheckedCreateWithoutAgencyInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateCreateOrConnectWithoutAgencyInput>
    upsert?: Enumerable<ChecklistTemplateUpsertWithWhereUniqueWithoutAgencyInput>
    createMany?: ChecklistTemplateCreateManyAgencyInputEnvelope
    set?: Enumerable<ChecklistTemplateWhereUniqueInput>
    disconnect?: Enumerable<ChecklistTemplateWhereUniqueInput>
    delete?: Enumerable<ChecklistTemplateWhereUniqueInput>
    connect?: Enumerable<ChecklistTemplateWhereUniqueInput>
    update?: Enumerable<ChecklistTemplateUpdateWithWhereUniqueWithoutAgencyInput>
    updateMany?: Enumerable<ChecklistTemplateUpdateManyWithWhereWithoutAgencyInput>
    deleteMany?: Enumerable<ChecklistTemplateScalarWhereInput>
  }

  export type berthsCreateNestedOneWithoutBerth_productsInput = {
    create?: XOR<berthsCreateWithoutBerth_productsInput, berthsUncheckedCreateWithoutBerth_productsInput>
    connectOrCreate?: berthsCreateOrConnectWithoutBerth_productsInput
    connect?: berthsWhereUniqueInput
  }

  export type productsCreateNestedOneWithoutBerth_productsInput = {
    create?: XOR<productsCreateWithoutBerth_productsInput, productsUncheckedCreateWithoutBerth_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutBerth_productsInput
    connect?: productsWhereUniqueInput
  }

  export type proformasCreateNestedManyWithoutBerth_productsInput = {
    create?: XOR<Enumerable<proformasCreateWithoutBerth_productsInput>, Enumerable<proformasUncheckedCreateWithoutBerth_productsInput>>
    connectOrCreate?: Enumerable<proformasCreateOrConnectWithoutBerth_productsInput>
    createMany?: proformasCreateManyBerth_productsInputEnvelope
    connect?: Enumerable<proformasWhereUniqueInput>
  }

  export type proformasUncheckedCreateNestedManyWithoutBerth_productsInput = {
    create?: XOR<Enumerable<proformasCreateWithoutBerth_productsInput>, Enumerable<proformasUncheckedCreateWithoutBerth_productsInput>>
    connectOrCreate?: Enumerable<proformasCreateOrConnectWithoutBerth_productsInput>
    createMany?: proformasCreateManyBerth_productsInputEnvelope
    connect?: Enumerable<proformasWhereUniqueInput>
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type berthsUpdateOneRequiredWithoutBerth_productsNestedInput = {
    create?: XOR<berthsCreateWithoutBerth_productsInput, berthsUncheckedCreateWithoutBerth_productsInput>
    connectOrCreate?: berthsCreateOrConnectWithoutBerth_productsInput
    upsert?: berthsUpsertWithoutBerth_productsInput
    connect?: berthsWhereUniqueInput
    update?: XOR<berthsUpdateWithoutBerth_productsInput, berthsUncheckedUpdateWithoutBerth_productsInput>
  }

  export type productsUpdateOneRequiredWithoutBerth_productsNestedInput = {
    create?: XOR<productsCreateWithoutBerth_productsInput, productsUncheckedCreateWithoutBerth_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutBerth_productsInput
    upsert?: productsUpsertWithoutBerth_productsInput
    connect?: productsWhereUniqueInput
    update?: XOR<productsUpdateWithoutBerth_productsInput, productsUncheckedUpdateWithoutBerth_productsInput>
  }

  export type proformasUpdateManyWithoutBerth_productsNestedInput = {
    create?: XOR<Enumerable<proformasCreateWithoutBerth_productsInput>, Enumerable<proformasUncheckedCreateWithoutBerth_productsInput>>
    connectOrCreate?: Enumerable<proformasCreateOrConnectWithoutBerth_productsInput>
    upsert?: Enumerable<proformasUpsertWithWhereUniqueWithoutBerth_productsInput>
    createMany?: proformasCreateManyBerth_productsInputEnvelope
    set?: Enumerable<proformasWhereUniqueInput>
    disconnect?: Enumerable<proformasWhereUniqueInput>
    delete?: Enumerable<proformasWhereUniqueInput>
    connect?: Enumerable<proformasWhereUniqueInput>
    update?: Enumerable<proformasUpdateWithWhereUniqueWithoutBerth_productsInput>
    updateMany?: Enumerable<proformasUpdateManyWithWhereWithoutBerth_productsInput>
    deleteMany?: Enumerable<proformasScalarWhereInput>
  }

  export type proformasUncheckedUpdateManyWithoutBerth_productsNestedInput = {
    create?: XOR<Enumerable<proformasCreateWithoutBerth_productsInput>, Enumerable<proformasUncheckedCreateWithoutBerth_productsInput>>
    connectOrCreate?: Enumerable<proformasCreateOrConnectWithoutBerth_productsInput>
    upsert?: Enumerable<proformasUpsertWithWhereUniqueWithoutBerth_productsInput>
    createMany?: proformasCreateManyBerth_productsInputEnvelope
    set?: Enumerable<proformasWhereUniqueInput>
    disconnect?: Enumerable<proformasWhereUniqueInput>
    delete?: Enumerable<proformasWhereUniqueInput>
    connect?: Enumerable<proformasWhereUniqueInput>
    update?: Enumerable<proformasUpdateWithWhereUniqueWithoutBerth_productsInput>
    updateMany?: Enumerable<proformasUpdateManyWithWhereWithoutBerth_productsInput>
    deleteMany?: Enumerable<proformasScalarWhereInput>
  }

  export type portsCreateNestedOneWithoutBerthsInput = {
    create?: XOR<portsCreateWithoutBerthsInput, portsUncheckedCreateWithoutBerthsInput>
    connectOrCreate?: portsCreateOrConnectWithoutBerthsInput
    connect?: portsWhereUniqueInput
  }

  export type berth_productsCreateNestedManyWithoutBerthsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutBerthsInput>, Enumerable<berth_productsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutBerthsInput>
    createMany?: berth_productsCreateManyBerthsInputEnvelope
    connect?: Enumerable<berth_productsWhereUniqueInput>
  }

  export type ShippingPortCreateNestedManyWithoutBerthsInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutBerthsInput>, Enumerable<ShippingPortUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutBerthsInput>
    createMany?: ShippingPortCreateManyBerthsInputEnvelope
    connect?: Enumerable<ShippingPortWhereUniqueInput>
  }

  export type berth_productsUncheckedCreateNestedManyWithoutBerthsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutBerthsInput>, Enumerable<berth_productsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutBerthsInput>
    createMany?: berth_productsCreateManyBerthsInputEnvelope
    connect?: Enumerable<berth_productsWhereUniqueInput>
  }

  export type ShippingPortUncheckedCreateNestedManyWithoutBerthsInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutBerthsInput>, Enumerable<ShippingPortUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutBerthsInput>
    createMany?: ShippingPortCreateManyBerthsInputEnvelope
    connect?: Enumerable<ShippingPortWhereUniqueInput>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type portsUpdateOneWithoutBerthsNestedInput = {
    create?: XOR<portsCreateWithoutBerthsInput, portsUncheckedCreateWithoutBerthsInput>
    connectOrCreate?: portsCreateOrConnectWithoutBerthsInput
    upsert?: portsUpsertWithoutBerthsInput
    disconnect?: boolean
    delete?: boolean
    connect?: portsWhereUniqueInput
    update?: XOR<portsUpdateWithoutBerthsInput, portsUncheckedUpdateWithoutBerthsInput>
  }

  export type berth_productsUpdateManyWithoutBerthsNestedInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutBerthsInput>, Enumerable<berth_productsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutBerthsInput>
    upsert?: Enumerable<berth_productsUpsertWithWhereUniqueWithoutBerthsInput>
    createMany?: berth_productsCreateManyBerthsInputEnvelope
    set?: Enumerable<berth_productsWhereUniqueInput>
    disconnect?: Enumerable<berth_productsWhereUniqueInput>
    delete?: Enumerable<berth_productsWhereUniqueInput>
    connect?: Enumerable<berth_productsWhereUniqueInput>
    update?: Enumerable<berth_productsUpdateWithWhereUniqueWithoutBerthsInput>
    updateMany?: Enumerable<berth_productsUpdateManyWithWhereWithoutBerthsInput>
    deleteMany?: Enumerable<berth_productsScalarWhereInput>
  }

  export type ShippingPortUpdateManyWithoutBerthsNestedInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutBerthsInput>, Enumerable<ShippingPortUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutBerthsInput>
    upsert?: Enumerable<ShippingPortUpsertWithWhereUniqueWithoutBerthsInput>
    createMany?: ShippingPortCreateManyBerthsInputEnvelope
    set?: Enumerable<ShippingPortWhereUniqueInput>
    disconnect?: Enumerable<ShippingPortWhereUniqueInput>
    delete?: Enumerable<ShippingPortWhereUniqueInput>
    connect?: Enumerable<ShippingPortWhereUniqueInput>
    update?: Enumerable<ShippingPortUpdateWithWhereUniqueWithoutBerthsInput>
    updateMany?: Enumerable<ShippingPortUpdateManyWithWhereWithoutBerthsInput>
    deleteMany?: Enumerable<ShippingPortScalarWhereInput>
  }

  export type berth_productsUncheckedUpdateManyWithoutBerthsNestedInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutBerthsInput>, Enumerable<berth_productsUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutBerthsInput>
    upsert?: Enumerable<berth_productsUpsertWithWhereUniqueWithoutBerthsInput>
    createMany?: berth_productsCreateManyBerthsInputEnvelope
    set?: Enumerable<berth_productsWhereUniqueInput>
    disconnect?: Enumerable<berth_productsWhereUniqueInput>
    delete?: Enumerable<berth_productsWhereUniqueInput>
    connect?: Enumerable<berth_productsWhereUniqueInput>
    update?: Enumerable<berth_productsUpdateWithWhereUniqueWithoutBerthsInput>
    updateMany?: Enumerable<berth_productsUpdateManyWithWhereWithoutBerthsInput>
    deleteMany?: Enumerable<berth_productsScalarWhereInput>
  }

  export type ShippingPortUncheckedUpdateManyWithoutBerthsNestedInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutBerthsInput>, Enumerable<ShippingPortUncheckedCreateWithoutBerthsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutBerthsInput>
    upsert?: Enumerable<ShippingPortUpsertWithWhereUniqueWithoutBerthsInput>
    createMany?: ShippingPortCreateManyBerthsInputEnvelope
    set?: Enumerable<ShippingPortWhereUniqueInput>
    disconnect?: Enumerable<ShippingPortWhereUniqueInput>
    delete?: Enumerable<ShippingPortWhereUniqueInput>
    connect?: Enumerable<ShippingPortWhereUniqueInput>
    update?: Enumerable<ShippingPortUpdateWithWhereUniqueWithoutBerthsInput>
    updateMany?: Enumerable<ShippingPortUpdateManyWithWhereWithoutBerthsInput>
    deleteMany?: Enumerable<ShippingPortScalarWhereInput>
  }

  export type ChecklistTemplateItemCreateNestedManyWithoutChecklistTemplateInput = {
    create?: XOR<Enumerable<ChecklistTemplateItemCreateWithoutChecklistTemplateInput>, Enumerable<ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput>
    createMany?: ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope
    connect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
  }

  export type AgencyCreateNestedOneWithoutChecklistTemplateInput = {
    create?: XOR<AgencyCreateWithoutChecklistTemplateInput, AgencyUncheckedCreateWithoutChecklistTemplateInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutChecklistTemplateInput
    connect?: AgencyWhereUniqueInput
  }

  export type ChecklistTemplateItemUncheckedCreateNestedManyWithoutChecklistTemplateInput = {
    create?: XOR<Enumerable<ChecklistTemplateItemCreateWithoutChecklistTemplateInput>, Enumerable<ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput>
    createMany?: ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope
    connect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
  }

  export type ChecklistTemplateItemUpdateManyWithoutChecklistTemplateNestedInput = {
    create?: XOR<Enumerable<ChecklistTemplateItemCreateWithoutChecklistTemplateInput>, Enumerable<ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput>
    upsert?: Enumerable<ChecklistTemplateItemUpsertWithWhereUniqueWithoutChecklistTemplateInput>
    createMany?: ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope
    set?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    disconnect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    delete?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    connect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    update?: Enumerable<ChecklistTemplateItemUpdateWithWhereUniqueWithoutChecklistTemplateInput>
    updateMany?: Enumerable<ChecklistTemplateItemUpdateManyWithWhereWithoutChecklistTemplateInput>
    deleteMany?: Enumerable<ChecklistTemplateItemScalarWhereInput>
  }

  export type AgencyUpdateOneWithoutChecklistTemplateNestedInput = {
    create?: XOR<AgencyCreateWithoutChecklistTemplateInput, AgencyUncheckedCreateWithoutChecklistTemplateInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutChecklistTemplateInput
    upsert?: AgencyUpsertWithoutChecklistTemplateInput
    disconnect?: boolean
    delete?: boolean
    connect?: AgencyWhereUniqueInput
    update?: XOR<AgencyUpdateWithoutChecklistTemplateInput, AgencyUncheckedUpdateWithoutChecklistTemplateInput>
  }

  export type ChecklistTemplateItemUncheckedUpdateManyWithoutChecklistTemplateNestedInput = {
    create?: XOR<Enumerable<ChecklistTemplateItemCreateWithoutChecklistTemplateInput>, Enumerable<ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>>
    connectOrCreate?: Enumerable<ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput>
    upsert?: Enumerable<ChecklistTemplateItemUpsertWithWhereUniqueWithoutChecklistTemplateInput>
    createMany?: ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope
    set?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    disconnect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    delete?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    connect?: Enumerable<ChecklistTemplateItemWhereUniqueInput>
    update?: Enumerable<ChecklistTemplateItemUpdateWithWhereUniqueWithoutChecklistTemplateInput>
    updateMany?: Enumerable<ChecklistTemplateItemUpdateManyWithWhereWithoutChecklistTemplateInput>
    deleteMany?: Enumerable<ChecklistTemplateItemScalarWhereInput>
  }

  export type ChecklistTemplateCreateNestedOneWithoutItemsInput = {
    create?: XOR<ChecklistTemplateCreateWithoutItemsInput, ChecklistTemplateUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ChecklistTemplateCreateOrConnectWithoutItemsInput
    connect?: ChecklistTemplateWhereUniqueInput
  }

  export type ChecklistTemplateUpdateOneWithoutItemsNestedInput = {
    create?: XOR<ChecklistTemplateCreateWithoutItemsInput, ChecklistTemplateUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ChecklistTemplateCreateOrConnectWithoutItemsInput
    upsert?: ChecklistTemplateUpsertWithoutItemsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ChecklistTemplateWhereUniqueInput
    update?: XOR<ChecklistTemplateUpdateWithoutItemsInput, ChecklistTemplateUncheckedUpdateWithoutItemsInput>
  }

  export type ShippingCreateNestedOneWithoutShippingChecklistItemInput = {
    create?: XOR<ShippingCreateWithoutShippingChecklistItemInput, ShippingUncheckedCreateWithoutShippingChecklistItemInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShippingChecklistItemInput
    connect?: ShippingWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutShippingChecklistItemInput = {
    create?: XOR<usersCreateWithoutShippingChecklistItemInput, usersUncheckedCreateWithoutShippingChecklistItemInput>
    connectOrCreate?: usersCreateOrConnectWithoutShippingChecklistItemInput
    connect?: usersWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ShippingUpdateOneWithoutShippingChecklistItemNestedInput = {
    create?: XOR<ShippingCreateWithoutShippingChecklistItemInput, ShippingUncheckedCreateWithoutShippingChecklistItemInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShippingChecklistItemInput
    upsert?: ShippingUpsertWithoutShippingChecklistItemInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShippingChecklistItemInput, ShippingUncheckedUpdateWithoutShippingChecklistItemInput>
  }

  export type usersUpdateOneWithoutShippingChecklistItemNestedInput = {
    create?: XOR<usersCreateWithoutShippingChecklistItemInput, usersUncheckedCreateWithoutShippingChecklistItemInput>
    connectOrCreate?: usersCreateOrConnectWithoutShippingChecklistItemInput
    upsert?: usersUpsertWithoutShippingChecklistItemInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutShippingChecklistItemInput, usersUncheckedUpdateWithoutShippingChecklistItemInput>
  }

  export type portsCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<portsCreateWithoutCountryInput>, Enumerable<portsUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<portsCreateOrConnectWithoutCountryInput>
    createMany?: portsCreateManyCountryInputEnvelope
    connect?: Enumerable<portsWhereUniqueInput>
  }

  export type VesselCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<VesselCreateWithoutCountryInput>, Enumerable<VesselUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<VesselCreateOrConnectWithoutCountryInput>
    createMany?: VesselCreateManyCountryInputEnvelope
    connect?: Enumerable<VesselWhereUniqueInput>
  }

  export type AgencyCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<AgencyCreateWithoutCountryInput>, Enumerable<AgencyUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<AgencyCreateOrConnectWithoutCountryInput>
    createMany?: AgencyCreateManyCountryInputEnvelope
    connect?: Enumerable<AgencyWhereUniqueInput>
  }

  export type portsUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<portsCreateWithoutCountryInput>, Enumerable<portsUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<portsCreateOrConnectWithoutCountryInput>
    createMany?: portsCreateManyCountryInputEnvelope
    connect?: Enumerable<portsWhereUniqueInput>
  }

  export type VesselUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<VesselCreateWithoutCountryInput>, Enumerable<VesselUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<VesselCreateOrConnectWithoutCountryInput>
    createMany?: VesselCreateManyCountryInputEnvelope
    connect?: Enumerable<VesselWhereUniqueInput>
  }

  export type AgencyUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<Enumerable<AgencyCreateWithoutCountryInput>, Enumerable<AgencyUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<AgencyCreateOrConnectWithoutCountryInput>
    createMany?: AgencyCreateManyCountryInputEnvelope
    connect?: Enumerable<AgencyWhereUniqueInput>
  }

  export type portsUpdateManyWithoutCountryNestedInput = {
    create?: XOR<Enumerable<portsCreateWithoutCountryInput>, Enumerable<portsUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<portsCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<portsUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: portsCreateManyCountryInputEnvelope
    set?: Enumerable<portsWhereUniqueInput>
    disconnect?: Enumerable<portsWhereUniqueInput>
    delete?: Enumerable<portsWhereUniqueInput>
    connect?: Enumerable<portsWhereUniqueInput>
    update?: Enumerable<portsUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<portsUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<portsScalarWhereInput>
  }

  export type VesselUpdateManyWithoutCountryNestedInput = {
    create?: XOR<Enumerable<VesselCreateWithoutCountryInput>, Enumerable<VesselUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<VesselCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<VesselUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: VesselCreateManyCountryInputEnvelope
    set?: Enumerable<VesselWhereUniqueInput>
    disconnect?: Enumerable<VesselWhereUniqueInput>
    delete?: Enumerable<VesselWhereUniqueInput>
    connect?: Enumerable<VesselWhereUniqueInput>
    update?: Enumerable<VesselUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<VesselUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<VesselScalarWhereInput>
  }

  export type AgencyUpdateManyWithoutCountryNestedInput = {
    create?: XOR<Enumerable<AgencyCreateWithoutCountryInput>, Enumerable<AgencyUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<AgencyCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<AgencyUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: AgencyCreateManyCountryInputEnvelope
    set?: Enumerable<AgencyWhereUniqueInput>
    disconnect?: Enumerable<AgencyWhereUniqueInput>
    delete?: Enumerable<AgencyWhereUniqueInput>
    connect?: Enumerable<AgencyWhereUniqueInput>
    update?: Enumerable<AgencyUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<AgencyUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<AgencyScalarWhereInput>
  }

  export type portsUncheckedUpdateManyWithoutCountryNestedInput = {
    create?: XOR<Enumerable<portsCreateWithoutCountryInput>, Enumerable<portsUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<portsCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<portsUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: portsCreateManyCountryInputEnvelope
    set?: Enumerable<portsWhereUniqueInput>
    disconnect?: Enumerable<portsWhereUniqueInput>
    delete?: Enumerable<portsWhereUniqueInput>
    connect?: Enumerable<portsWhereUniqueInput>
    update?: Enumerable<portsUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<portsUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<portsScalarWhereInput>
  }

  export type VesselUncheckedUpdateManyWithoutCountryNestedInput = {
    create?: XOR<Enumerable<VesselCreateWithoutCountryInput>, Enumerable<VesselUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<VesselCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<VesselUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: VesselCreateManyCountryInputEnvelope
    set?: Enumerable<VesselWhereUniqueInput>
    disconnect?: Enumerable<VesselWhereUniqueInput>
    delete?: Enumerable<VesselWhereUniqueInput>
    connect?: Enumerable<VesselWhereUniqueInput>
    update?: Enumerable<VesselUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<VesselUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<VesselScalarWhereInput>
  }

  export type AgencyUncheckedUpdateManyWithoutCountryNestedInput = {
    create?: XOR<Enumerable<AgencyCreateWithoutCountryInput>, Enumerable<AgencyUncheckedCreateWithoutCountryInput>>
    connectOrCreate?: Enumerable<AgencyCreateOrConnectWithoutCountryInput>
    upsert?: Enumerable<AgencyUpsertWithWhereUniqueWithoutCountryInput>
    createMany?: AgencyCreateManyCountryInputEnvelope
    set?: Enumerable<AgencyWhereUniqueInput>
    disconnect?: Enumerable<AgencyWhereUniqueInput>
    delete?: Enumerable<AgencyWhereUniqueInput>
    connect?: Enumerable<AgencyWhereUniqueInput>
    update?: Enumerable<AgencyUpdateWithWhereUniqueWithoutCountryInput>
    updateMany?: Enumerable<AgencyUpdateManyWithWhereWithoutCountryInput>
    deleteMany?: Enumerable<AgencyScalarWhereInput>
  }

  export type usersCreateNestedOneWithoutPort_filesInput = {
    create?: XOR<usersCreateWithoutPort_filesInput, usersUncheckedCreateWithoutPort_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutPort_filesInput
    connect?: usersWhereUniqueInput
  }

  export type portsCreateNestedOneWithoutPort_filesInput = {
    create?: XOR<portsCreateWithoutPort_filesInput, portsUncheckedCreateWithoutPort_filesInput>
    connectOrCreate?: portsCreateOrConnectWithoutPort_filesInput
    connect?: portsWhereUniqueInput
  }

  export type usersUpdateOneWithoutPort_filesNestedInput = {
    create?: XOR<usersCreateWithoutPort_filesInput, usersUncheckedCreateWithoutPort_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutPort_filesInput
    upsert?: usersUpsertWithoutPort_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutPort_filesInput, usersUncheckedUpdateWithoutPort_filesInput>
  }

  export type portsUpdateOneWithoutPort_filesNestedInput = {
    create?: XOR<portsCreateWithoutPort_filesInput, portsUncheckedCreateWithoutPort_filesInput>
    connectOrCreate?: portsCreateOrConnectWithoutPort_filesInput
    upsert?: portsUpsertWithoutPort_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: portsWhereUniqueInput
    update?: XOR<portsUpdateWithoutPort_filesInput, portsUncheckedUpdateWithoutPort_filesInput>
  }

  export type CountryCreateNestedOneWithoutPortsInput = {
    create?: XOR<CountryCreateWithoutPortsInput, CountryUncheckedCreateWithoutPortsInput>
    connectOrCreate?: CountryCreateOrConnectWithoutPortsInput
    connect?: CountryWhereUniqueInput
  }

  export type berthsCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<berthsCreateWithoutPortsInput>, Enumerable<berthsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<berthsCreateOrConnectWithoutPortsInput>
    createMany?: berthsCreateManyPortsInputEnvelope
    connect?: Enumerable<berthsWhereUniqueInput>
  }

  export type port_filesCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutPortsInput>, Enumerable<port_filesUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutPortsInput>
    createMany?: port_filesCreateManyPortsInputEnvelope
    connect?: Enumerable<port_filesWhereUniqueInput>
  }

  export type ShippingPortCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutPortsInput>, Enumerable<ShippingPortUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutPortsInput>
    createMany?: ShippingPortCreateManyPortsInputEnvelope
    connect?: Enumerable<ShippingPortWhereUniqueInput>
  }

  export type berthsUncheckedCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<berthsCreateWithoutPortsInput>, Enumerable<berthsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<berthsCreateOrConnectWithoutPortsInput>
    createMany?: berthsCreateManyPortsInputEnvelope
    connect?: Enumerable<berthsWhereUniqueInput>
  }

  export type port_filesUncheckedCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutPortsInput>, Enumerable<port_filesUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutPortsInput>
    createMany?: port_filesCreateManyPortsInputEnvelope
    connect?: Enumerable<port_filesWhereUniqueInput>
  }

  export type ShippingPortUncheckedCreateNestedManyWithoutPortsInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutPortsInput>, Enumerable<ShippingPortUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutPortsInput>
    createMany?: ShippingPortCreateManyPortsInputEnvelope
    connect?: Enumerable<ShippingPortWhereUniqueInput>
  }

  export type CountryUpdateOneWithoutPortsNestedInput = {
    create?: XOR<CountryCreateWithoutPortsInput, CountryUncheckedCreateWithoutPortsInput>
    connectOrCreate?: CountryCreateOrConnectWithoutPortsInput
    upsert?: CountryUpsertWithoutPortsInput
    disconnect?: boolean
    delete?: boolean
    connect?: CountryWhereUniqueInput
    update?: XOR<CountryUpdateWithoutPortsInput, CountryUncheckedUpdateWithoutPortsInput>
  }

  export type berthsUpdateManyWithoutPortsNestedInput = {
    create?: XOR<Enumerable<berthsCreateWithoutPortsInput>, Enumerable<berthsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<berthsCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<berthsUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: berthsCreateManyPortsInputEnvelope
    set?: Enumerable<berthsWhereUniqueInput>
    disconnect?: Enumerable<berthsWhereUniqueInput>
    delete?: Enumerable<berthsWhereUniqueInput>
    connect?: Enumerable<berthsWhereUniqueInput>
    update?: Enumerable<berthsUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<berthsUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<berthsScalarWhereInput>
  }

  export type port_filesUpdateManyWithoutPortsNestedInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutPortsInput>, Enumerable<port_filesUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<port_filesUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: port_filesCreateManyPortsInputEnvelope
    set?: Enumerable<port_filesWhereUniqueInput>
    disconnect?: Enumerable<port_filesWhereUniqueInput>
    delete?: Enumerable<port_filesWhereUniqueInput>
    connect?: Enumerable<port_filesWhereUniqueInput>
    update?: Enumerable<port_filesUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<port_filesUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<port_filesScalarWhereInput>
  }

  export type ShippingPortUpdateManyWithoutPortsNestedInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutPortsInput>, Enumerable<ShippingPortUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<ShippingPortUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: ShippingPortCreateManyPortsInputEnvelope
    set?: Enumerable<ShippingPortWhereUniqueInput>
    disconnect?: Enumerable<ShippingPortWhereUniqueInput>
    delete?: Enumerable<ShippingPortWhereUniqueInput>
    connect?: Enumerable<ShippingPortWhereUniqueInput>
    update?: Enumerable<ShippingPortUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<ShippingPortUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<ShippingPortScalarWhereInput>
  }

  export type berthsUncheckedUpdateManyWithoutPortsNestedInput = {
    create?: XOR<Enumerable<berthsCreateWithoutPortsInput>, Enumerable<berthsUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<berthsCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<berthsUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: berthsCreateManyPortsInputEnvelope
    set?: Enumerable<berthsWhereUniqueInput>
    disconnect?: Enumerable<berthsWhereUniqueInput>
    delete?: Enumerable<berthsWhereUniqueInput>
    connect?: Enumerable<berthsWhereUniqueInput>
    update?: Enumerable<berthsUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<berthsUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<berthsScalarWhereInput>
  }

  export type port_filesUncheckedUpdateManyWithoutPortsNestedInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutPortsInput>, Enumerable<port_filesUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<port_filesUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: port_filesCreateManyPortsInputEnvelope
    set?: Enumerable<port_filesWhereUniqueInput>
    disconnect?: Enumerable<port_filesWhereUniqueInput>
    delete?: Enumerable<port_filesWhereUniqueInput>
    connect?: Enumerable<port_filesWhereUniqueInput>
    update?: Enumerable<port_filesUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<port_filesUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<port_filesScalarWhereInput>
  }

  export type ShippingPortUncheckedUpdateManyWithoutPortsNestedInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutPortsInput>, Enumerable<ShippingPortUncheckedCreateWithoutPortsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutPortsInput>
    upsert?: Enumerable<ShippingPortUpsertWithWhereUniqueWithoutPortsInput>
    createMany?: ShippingPortCreateManyPortsInputEnvelope
    set?: Enumerable<ShippingPortWhereUniqueInput>
    disconnect?: Enumerable<ShippingPortWhereUniqueInput>
    delete?: Enumerable<ShippingPortWhereUniqueInput>
    connect?: Enumerable<ShippingPortWhereUniqueInput>
    update?: Enumerable<ShippingPortUpdateWithWhereUniqueWithoutPortsInput>
    updateMany?: Enumerable<ShippingPortUpdateManyWithWhereWithoutPortsInput>
    deleteMany?: Enumerable<ShippingPortScalarWhereInput>
  }

  export type berth_productsCreateNestedManyWithoutProductsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutProductsInput>, Enumerable<berth_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutProductsInput>
    createMany?: berth_productsCreateManyProductsInputEnvelope
    connect?: Enumerable<berth_productsWhereUniqueInput>
  }

  export type ShippingProductCreateNestedManyWithoutProductInput = {
    create?: XOR<Enumerable<ShippingProductCreateWithoutProductInput>, Enumerable<ShippingProductUncheckedCreateWithoutProductInput>>
    connectOrCreate?: Enumerable<ShippingProductCreateOrConnectWithoutProductInput>
    createMany?: ShippingProductCreateManyProductInputEnvelope
    connect?: Enumerable<ShippingProductWhereUniqueInput>
  }

  export type berth_productsUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutProductsInput>, Enumerable<berth_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutProductsInput>
    createMany?: berth_productsCreateManyProductsInputEnvelope
    connect?: Enumerable<berth_productsWhereUniqueInput>
  }

  export type ShippingProductUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<Enumerable<ShippingProductCreateWithoutProductInput>, Enumerable<ShippingProductUncheckedCreateWithoutProductInput>>
    connectOrCreate?: Enumerable<ShippingProductCreateOrConnectWithoutProductInput>
    createMany?: ShippingProductCreateManyProductInputEnvelope
    connect?: Enumerable<ShippingProductWhereUniqueInput>
  }

  export type berth_productsUpdateManyWithoutProductsNestedInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutProductsInput>, Enumerable<berth_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutProductsInput>
    upsert?: Enumerable<berth_productsUpsertWithWhereUniqueWithoutProductsInput>
    createMany?: berth_productsCreateManyProductsInputEnvelope
    set?: Enumerable<berth_productsWhereUniqueInput>
    disconnect?: Enumerable<berth_productsWhereUniqueInput>
    delete?: Enumerable<berth_productsWhereUniqueInput>
    connect?: Enumerable<berth_productsWhereUniqueInput>
    update?: Enumerable<berth_productsUpdateWithWhereUniqueWithoutProductsInput>
    updateMany?: Enumerable<berth_productsUpdateManyWithWhereWithoutProductsInput>
    deleteMany?: Enumerable<berth_productsScalarWhereInput>
  }

  export type ShippingProductUpdateManyWithoutProductNestedInput = {
    create?: XOR<Enumerable<ShippingProductCreateWithoutProductInput>, Enumerable<ShippingProductUncheckedCreateWithoutProductInput>>
    connectOrCreate?: Enumerable<ShippingProductCreateOrConnectWithoutProductInput>
    upsert?: Enumerable<ShippingProductUpsertWithWhereUniqueWithoutProductInput>
    createMany?: ShippingProductCreateManyProductInputEnvelope
    set?: Enumerable<ShippingProductWhereUniqueInput>
    disconnect?: Enumerable<ShippingProductWhereUniqueInput>
    delete?: Enumerable<ShippingProductWhereUniqueInput>
    connect?: Enumerable<ShippingProductWhereUniqueInput>
    update?: Enumerable<ShippingProductUpdateWithWhereUniqueWithoutProductInput>
    updateMany?: Enumerable<ShippingProductUpdateManyWithWhereWithoutProductInput>
    deleteMany?: Enumerable<ShippingProductScalarWhereInput>
  }

  export type berth_productsUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<Enumerable<berth_productsCreateWithoutProductsInput>, Enumerable<berth_productsUncheckedCreateWithoutProductsInput>>
    connectOrCreate?: Enumerable<berth_productsCreateOrConnectWithoutProductsInput>
    upsert?: Enumerable<berth_productsUpsertWithWhereUniqueWithoutProductsInput>
    createMany?: berth_productsCreateManyProductsInputEnvelope
    set?: Enumerable<berth_productsWhereUniqueInput>
    disconnect?: Enumerable<berth_productsWhereUniqueInput>
    delete?: Enumerable<berth_productsWhereUniqueInput>
    connect?: Enumerable<berth_productsWhereUniqueInput>
    update?: Enumerable<berth_productsUpdateWithWhereUniqueWithoutProductsInput>
    updateMany?: Enumerable<berth_productsUpdateManyWithWhereWithoutProductsInput>
    deleteMany?: Enumerable<berth_productsScalarWhereInput>
  }

  export type ShippingProductUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<Enumerable<ShippingProductCreateWithoutProductInput>, Enumerable<ShippingProductUncheckedCreateWithoutProductInput>>
    connectOrCreate?: Enumerable<ShippingProductCreateOrConnectWithoutProductInput>
    upsert?: Enumerable<ShippingProductUpsertWithWhereUniqueWithoutProductInput>
    createMany?: ShippingProductCreateManyProductInputEnvelope
    set?: Enumerable<ShippingProductWhereUniqueInput>
    disconnect?: Enumerable<ShippingProductWhereUniqueInput>
    delete?: Enumerable<ShippingProductWhereUniqueInput>
    connect?: Enumerable<ShippingProductWhereUniqueInput>
    update?: Enumerable<ShippingProductUpdateWithWhereUniqueWithoutProductInput>
    updateMany?: Enumerable<ShippingProductUpdateManyWithWhereWithoutProductInput>
    deleteMany?: Enumerable<ShippingProductScalarWhereInput>
  }

  export type proformasCreateNestedOneWithoutProforma_filesInput = {
    create?: XOR<proformasCreateWithoutProforma_filesInput, proformasUncheckedCreateWithoutProforma_filesInput>
    connectOrCreate?: proformasCreateOrConnectWithoutProforma_filesInput
    connect?: proformasWhereUniqueInput
  }

  export type proformasUpdateOneWithoutProforma_filesNestedInput = {
    create?: XOR<proformasCreateWithoutProforma_filesInput, proformasUncheckedCreateWithoutProforma_filesInput>
    connectOrCreate?: proformasCreateOrConnectWithoutProforma_filesInput
    upsert?: proformasUpsertWithoutProforma_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: proformasWhereUniqueInput
    update?: XOR<proformasUpdateWithoutProforma_filesInput, proformasUncheckedUpdateWithoutProforma_filesInput>
  }

  export type berth_productsCreateNestedOneWithoutProformasInput = {
    create?: XOR<berth_productsCreateWithoutProformasInput, berth_productsUncheckedCreateWithoutProformasInput>
    connectOrCreate?: berth_productsCreateOrConnectWithoutProformasInput
    connect?: berth_productsWhereUniqueInput
  }

  export type proforma_filesCreateNestedManyWithoutProformasInput = {
    create?: XOR<Enumerable<proforma_filesCreateWithoutProformasInput>, Enumerable<proforma_filesUncheckedCreateWithoutProformasInput>>
    connectOrCreate?: Enumerable<proforma_filesCreateOrConnectWithoutProformasInput>
    createMany?: proforma_filesCreateManyProformasInputEnvelope
    connect?: Enumerable<proforma_filesWhereUniqueInput>
  }

  export type proforma_filesUncheckedCreateNestedManyWithoutProformasInput = {
    create?: XOR<Enumerable<proforma_filesCreateWithoutProformasInput>, Enumerable<proforma_filesUncheckedCreateWithoutProformasInput>>
    connectOrCreate?: Enumerable<proforma_filesCreateOrConnectWithoutProformasInput>
    createMany?: proforma_filesCreateManyProformasInputEnvelope
    connect?: Enumerable<proforma_filesWhereUniqueInput>
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type berth_productsUpdateOneRequiredWithoutProformasNestedInput = {
    create?: XOR<berth_productsCreateWithoutProformasInput, berth_productsUncheckedCreateWithoutProformasInput>
    connectOrCreate?: berth_productsCreateOrConnectWithoutProformasInput
    upsert?: berth_productsUpsertWithoutProformasInput
    connect?: berth_productsWhereUniqueInput
    update?: XOR<berth_productsUpdateWithoutProformasInput, berth_productsUncheckedUpdateWithoutProformasInput>
  }

  export type proforma_filesUpdateManyWithoutProformasNestedInput = {
    create?: XOR<Enumerable<proforma_filesCreateWithoutProformasInput>, Enumerable<proforma_filesUncheckedCreateWithoutProformasInput>>
    connectOrCreate?: Enumerable<proforma_filesCreateOrConnectWithoutProformasInput>
    upsert?: Enumerable<proforma_filesUpsertWithWhereUniqueWithoutProformasInput>
    createMany?: proforma_filesCreateManyProformasInputEnvelope
    set?: Enumerable<proforma_filesWhereUniqueInput>
    disconnect?: Enumerable<proforma_filesWhereUniqueInput>
    delete?: Enumerable<proforma_filesWhereUniqueInput>
    connect?: Enumerable<proforma_filesWhereUniqueInput>
    update?: Enumerable<proforma_filesUpdateWithWhereUniqueWithoutProformasInput>
    updateMany?: Enumerable<proforma_filesUpdateManyWithWhereWithoutProformasInput>
    deleteMany?: Enumerable<proforma_filesScalarWhereInput>
  }

  export type proforma_filesUncheckedUpdateManyWithoutProformasNestedInput = {
    create?: XOR<Enumerable<proforma_filesCreateWithoutProformasInput>, Enumerable<proforma_filesUncheckedCreateWithoutProformasInput>>
    connectOrCreate?: Enumerable<proforma_filesCreateOrConnectWithoutProformasInput>
    upsert?: Enumerable<proforma_filesUpsertWithWhereUniqueWithoutProformasInput>
    createMany?: proforma_filesCreateManyProformasInputEnvelope
    set?: Enumerable<proforma_filesWhereUniqueInput>
    disconnect?: Enumerable<proforma_filesWhereUniqueInput>
    delete?: Enumerable<proforma_filesWhereUniqueInput>
    connect?: Enumerable<proforma_filesWhereUniqueInput>
    update?: Enumerable<proforma_filesUpdateWithWhereUniqueWithoutProformasInput>
    updateMany?: Enumerable<proforma_filesUpdateManyWithWhereWithoutProformasInput>
    deleteMany?: Enumerable<proforma_filesScalarWhereInput>
  }

  export type ShippingCreateNestedOneWithoutShipping_documentsInput = {
    create?: XOR<ShippingCreateWithoutShipping_documentsInput, ShippingUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_documentsInput
    connect?: ShippingWhereUniqueInput
  }

  export type subsetsCreateNestedOneWithoutShipping_documentsInput = {
    create?: XOR<subsetsCreateWithoutShipping_documentsInput, subsetsUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: subsetsCreateOrConnectWithoutShipping_documentsInput
    connect?: subsetsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutShipping_documentsInput = {
    create?: XOR<usersCreateWithoutShipping_documentsInput, usersUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_documentsInput
    connect?: usersWhereUniqueInput
  }

  export type document_shipperCreateNestedOneWithoutShipping_documentsInput = {
    create?: XOR<document_shipperCreateWithoutShipping_documentsInput, document_shipperUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: document_shipperCreateOrConnectWithoutShipping_documentsInput
    connect?: document_shipperWhereUniqueInput
  }

  export type document_productCreateNestedOneWithoutShipping_documentsInput = {
    create?: XOR<document_productCreateWithoutShipping_documentsInput, document_productUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: document_productCreateOrConnectWithoutShipping_documentsInput
    connect?: document_productWhereUniqueInput
  }

  export type ShippingUpdateOneWithoutShipping_documentsNestedInput = {
    create?: XOR<ShippingCreateWithoutShipping_documentsInput, ShippingUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_documentsInput
    upsert?: ShippingUpsertWithoutShipping_documentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShipping_documentsInput, ShippingUncheckedUpdateWithoutShipping_documentsInput>
  }

  export type subsetsUpdateOneWithoutShipping_documentsNestedInput = {
    create?: XOR<subsetsCreateWithoutShipping_documentsInput, subsetsUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: subsetsCreateOrConnectWithoutShipping_documentsInput
    upsert?: subsetsUpsertWithoutShipping_documentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: subsetsWhereUniqueInput
    update?: XOR<subsetsUpdateWithoutShipping_documentsInput, subsetsUncheckedUpdateWithoutShipping_documentsInput>
  }

  export type usersUpdateOneWithoutShipping_documentsNestedInput = {
    create?: XOR<usersCreateWithoutShipping_documentsInput, usersUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_documentsInput
    upsert?: usersUpsertWithoutShipping_documentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutShipping_documentsInput, usersUncheckedUpdateWithoutShipping_documentsInput>
  }

  export type document_shipperUpdateOneWithoutShipping_documentsNestedInput = {
    create?: XOR<document_shipperCreateWithoutShipping_documentsInput, document_shipperUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: document_shipperCreateOrConnectWithoutShipping_documentsInput
    upsert?: document_shipperUpsertWithoutShipping_documentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: document_shipperWhereUniqueInput
    update?: XOR<document_shipperUpdateWithoutShipping_documentsInput, document_shipperUncheckedUpdateWithoutShipping_documentsInput>
  }

  export type document_productUpdateOneWithoutShipping_documentsNestedInput = {
    create?: XOR<document_productCreateWithoutShipping_documentsInput, document_productUncheckedCreateWithoutShipping_documentsInput>
    connectOrCreate?: document_productCreateOrConnectWithoutShipping_documentsInput
    upsert?: document_productUpsertWithoutShipping_documentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: document_productWhereUniqueInput
    update?: XOR<document_productUpdateWithoutShipping_documentsInput, document_productUncheckedUpdateWithoutShipping_documentsInput>
  }

  export type shipping_documentsCreateNestedManyWithoutDocument_shipperInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutDocument_shipperInput>, Enumerable<shipping_documentsUncheckedCreateWithoutDocument_shipperInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutDocument_shipperInput>
    createMany?: shipping_documentsCreateManyDocument_shipperInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_documentsUncheckedCreateNestedManyWithoutDocument_shipperInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutDocument_shipperInput>, Enumerable<shipping_documentsUncheckedCreateWithoutDocument_shipperInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutDocument_shipperInput>
    createMany?: shipping_documentsCreateManyDocument_shipperInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_documentsUpdateManyWithoutDocument_shipperNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutDocument_shipperInput>, Enumerable<shipping_documentsUncheckedCreateWithoutDocument_shipperInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutDocument_shipperInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutDocument_shipperInput>
    createMany?: shipping_documentsCreateManyDocument_shipperInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutDocument_shipperInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutDocument_shipperInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_documentsUncheckedUpdateManyWithoutDocument_shipperNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutDocument_shipperInput>, Enumerable<shipping_documentsUncheckedCreateWithoutDocument_shipperInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutDocument_shipperInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutDocument_shipperInput>
    createMany?: shipping_documentsCreateManyDocument_shipperInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutDocument_shipperInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutDocument_shipperInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_documentsCreateNestedManyWithoutDocument_productInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutDocument_productInput>, Enumerable<shipping_documentsUncheckedCreateWithoutDocument_productInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutDocument_productInput>
    createMany?: shipping_documentsCreateManyDocument_productInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_documentsUncheckedCreateNestedManyWithoutDocument_productInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutDocument_productInput>, Enumerable<shipping_documentsUncheckedCreateWithoutDocument_productInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutDocument_productInput>
    createMany?: shipping_documentsCreateManyDocument_productInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_documentsUpdateManyWithoutDocument_productNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutDocument_productInput>, Enumerable<shipping_documentsUncheckedCreateWithoutDocument_productInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutDocument_productInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutDocument_productInput>
    createMany?: shipping_documentsCreateManyDocument_productInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutDocument_productInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutDocument_productInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_documentsUncheckedUpdateManyWithoutDocument_productNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutDocument_productInput>, Enumerable<shipping_documentsUncheckedCreateWithoutDocument_productInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutDocument_productInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutDocument_productInput>
    createMany?: shipping_documentsCreateManyDocument_productInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutDocument_productInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutDocument_productInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type ShippingCreateNestedOneWithoutShipping_filesInput = {
    create?: XOR<ShippingCreateWithoutShipping_filesInput, ShippingUncheckedCreateWithoutShipping_filesInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_filesInput
    connect?: ShippingWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutShipping_filesInput = {
    create?: XOR<usersCreateWithoutShipping_filesInput, usersUncheckedCreateWithoutShipping_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_filesInput
    connect?: usersWhereUniqueInput
  }

  export type ShippingUpdateOneWithoutShipping_filesNestedInput = {
    create?: XOR<ShippingCreateWithoutShipping_filesInput, ShippingUncheckedCreateWithoutShipping_filesInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_filesInput
    upsert?: ShippingUpsertWithoutShipping_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShipping_filesInput, ShippingUncheckedUpdateWithoutShipping_filesInput>
  }

  export type usersUpdateOneWithoutShipping_filesNestedInput = {
    create?: XOR<usersCreateWithoutShipping_filesInput, usersUncheckedCreateWithoutShipping_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_filesInput
    upsert?: usersUpsertWithoutShipping_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutShipping_filesInput, usersUncheckedUpdateWithoutShipping_filesInput>
  }

  export type berthsCreateNestedOneWithoutShipping_portsInput = {
    create?: XOR<berthsCreateWithoutShipping_portsInput, berthsUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: berthsCreateOrConnectWithoutShipping_portsInput
    connect?: berthsWhereUniqueInput
  }

  export type portsCreateNestedOneWithoutShipping_portsInput = {
    create?: XOR<portsCreateWithoutShipping_portsInput, portsUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: portsCreateOrConnectWithoutShipping_portsInput
    connect?: portsWhereUniqueInput
  }

  export type ShippingCreateNestedOneWithoutShipping_portsInput = {
    create?: XOR<ShippingCreateWithoutShipping_portsInput, ShippingUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_portsInput
    connect?: ShippingWhereUniqueInput
  }

  export type berthsUpdateOneWithoutShipping_portsNestedInput = {
    create?: XOR<berthsCreateWithoutShipping_portsInput, berthsUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: berthsCreateOrConnectWithoutShipping_portsInput
    upsert?: berthsUpsertWithoutShipping_portsInput
    disconnect?: boolean
    delete?: boolean
    connect?: berthsWhereUniqueInput
    update?: XOR<berthsUpdateWithoutShipping_portsInput, berthsUncheckedUpdateWithoutShipping_portsInput>
  }

  export type portsUpdateOneWithoutShipping_portsNestedInput = {
    create?: XOR<portsCreateWithoutShipping_portsInput, portsUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: portsCreateOrConnectWithoutShipping_portsInput
    upsert?: portsUpsertWithoutShipping_portsInput
    disconnect?: boolean
    delete?: boolean
    connect?: portsWhereUniqueInput
    update?: XOR<portsUpdateWithoutShipping_portsInput, portsUncheckedUpdateWithoutShipping_portsInput>
  }

  export type ShippingUpdateOneWithoutShipping_portsNestedInput = {
    create?: XOR<ShippingCreateWithoutShipping_portsInput, ShippingUncheckedCreateWithoutShipping_portsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_portsInput
    upsert?: ShippingUpsertWithoutShipping_portsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShipping_portsInput, ShippingUncheckedUpdateWithoutShipping_portsInput>
  }

  export type productsCreateNestedOneWithoutShipping_productsInput = {
    create?: XOR<productsCreateWithoutShipping_productsInput, productsUncheckedCreateWithoutShipping_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutShipping_productsInput
    connect?: productsWhereUniqueInput
  }

  export type ShippingCreateNestedOneWithoutShipping_productsInput = {
    create?: XOR<ShippingCreateWithoutShipping_productsInput, ShippingUncheckedCreateWithoutShipping_productsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_productsInput
    connect?: ShippingWhereUniqueInput
  }

  export type productsUpdateOneWithoutShipping_productsNestedInput = {
    create?: XOR<productsCreateWithoutShipping_productsInput, productsUncheckedCreateWithoutShipping_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutShipping_productsInput
    upsert?: productsUpsertWithoutShipping_productsInput
    disconnect?: boolean
    delete?: boolean
    connect?: productsWhereUniqueInput
    update?: XOR<productsUpdateWithoutShipping_productsInput, productsUncheckedUpdateWithoutShipping_productsInput>
  }

  export type ShippingUpdateOneWithoutShipping_productsNestedInput = {
    create?: XOR<ShippingCreateWithoutShipping_productsInput, ShippingUncheckedCreateWithoutShipping_productsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutShipping_productsInput
    upsert?: ShippingUpsertWithoutShipping_productsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutShipping_productsInput, ShippingUncheckedUpdateWithoutShipping_productsInput>
  }

  export type usersCreateNestedOneWithoutShippingsInput = {
    create?: XOR<usersCreateWithoutShippingsInput, usersUncheckedCreateWithoutShippingsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShippingsInput
    connect?: usersWhereUniqueInput
  }

  export type VesselCreateNestedOneWithoutShippingsInput = {
    create?: XOR<VesselCreateWithoutShippingsInput, VesselUncheckedCreateWithoutShippingsInput>
    connectOrCreate?: VesselCreateOrConnectWithoutShippingsInput
    connect?: VesselWhereUniqueInput
  }

  export type shipping_documentsCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShippingsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_documentsCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_filesCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutShippingsInput>, Enumerable<shipping_filesUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_filesCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_filesWhereUniqueInput>
  }

  export type ShippingPortCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutShippingsInput>, Enumerable<ShippingPortUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutShippingsInput>
    createMany?: ShippingPortCreateManyShippingsInputEnvelope
    connect?: Enumerable<ShippingPortWhereUniqueInput>
  }

  export type ShippingProductCreateNestedManyWithoutShippingInput = {
    create?: XOR<Enumerable<ShippingProductCreateWithoutShippingInput>, Enumerable<ShippingProductUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingProductCreateOrConnectWithoutShippingInput>
    createMany?: ShippingProductCreateManyShippingInputEnvelope
    connect?: Enumerable<ShippingProductWhereUniqueInput>
  }

  export type subsetsCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<subsetsCreateWithoutShippingsInput>, Enumerable<subsetsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<subsetsCreateOrConnectWithoutShippingsInput>
    createMany?: subsetsCreateManyShippingsInputEnvelope
    connect?: Enumerable<subsetsWhereUniqueInput>
  }

  export type inquiresCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutShippingsInput>, Enumerable<inquiresUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutShippingsInput>
    createMany?: inquiresCreateManyShippingsInputEnvelope
    connect?: Enumerable<inquiresWhereUniqueInput>
  }

  export type ShippingChecklistItemCreateNestedManyWithoutShippingInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutShippingInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutShippingInput>
    createMany?: ShippingChecklistItemCreateManyShippingInputEnvelope
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
  }

  export type sofCreateNestedOneWithoutShippingInput = {
    create?: XOR<sofCreateWithoutShippingInput, sofUncheckedCreateWithoutShippingInput>
    connectOrCreate?: sofCreateOrConnectWithoutShippingInput
    connect?: sofWhereUniqueInput
  }

  export type shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShippingsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_documentsCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_filesUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutShippingsInput>, Enumerable<shipping_filesUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutShippingsInput>
    createMany?: shipping_filesCreateManyShippingsInputEnvelope
    connect?: Enumerable<shipping_filesWhereUniqueInput>
  }

  export type ShippingPortUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutShippingsInput>, Enumerable<ShippingPortUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutShippingsInput>
    createMany?: ShippingPortCreateManyShippingsInputEnvelope
    connect?: Enumerable<ShippingPortWhereUniqueInput>
  }

  export type ShippingProductUncheckedCreateNestedManyWithoutShippingInput = {
    create?: XOR<Enumerable<ShippingProductCreateWithoutShippingInput>, Enumerable<ShippingProductUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingProductCreateOrConnectWithoutShippingInput>
    createMany?: ShippingProductCreateManyShippingInputEnvelope
    connect?: Enumerable<ShippingProductWhereUniqueInput>
  }

  export type subsetsUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<subsetsCreateWithoutShippingsInput>, Enumerable<subsetsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<subsetsCreateOrConnectWithoutShippingsInput>
    createMany?: subsetsCreateManyShippingsInputEnvelope
    connect?: Enumerable<subsetsWhereUniqueInput>
  }

  export type inquiresUncheckedCreateNestedManyWithoutShippingsInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutShippingsInput>, Enumerable<inquiresUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutShippingsInput>
    createMany?: inquiresCreateManyShippingsInputEnvelope
    connect?: Enumerable<inquiresWhereUniqueInput>
  }

  export type ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutShippingInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutShippingInput>
    createMany?: ShippingChecklistItemCreateManyShippingInputEnvelope
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
  }

  export type sofUncheckedCreateNestedOneWithoutShippingInput = {
    create?: XOR<sofCreateWithoutShippingInput, sofUncheckedCreateWithoutShippingInput>
    connectOrCreate?: sofCreateOrConnectWithoutShippingInput
    connect?: sofWhereUniqueInput
  }

  export type usersUpdateOneWithoutShippingsNestedInput = {
    create?: XOR<usersCreateWithoutShippingsInput, usersUncheckedCreateWithoutShippingsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShippingsInput
    upsert?: usersUpsertWithoutShippingsInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutShippingsInput, usersUncheckedUpdateWithoutShippingsInput>
  }

  export type VesselUpdateOneWithoutShippingsNestedInput = {
    create?: XOR<VesselCreateWithoutShippingsInput, VesselUncheckedCreateWithoutShippingsInput>
    connectOrCreate?: VesselCreateOrConnectWithoutShippingsInput
    upsert?: VesselUpsertWithoutShippingsInput
    disconnect?: boolean
    delete?: boolean
    connect?: VesselWhereUniqueInput
    update?: XOR<VesselUpdateWithoutShippingsInput, VesselUncheckedUpdateWithoutShippingsInput>
  }

  export type shipping_documentsUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShippingsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_documentsCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_filesUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutShippingsInput>, Enumerable<shipping_filesUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_filesUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_filesCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_filesWhereUniqueInput>
    disconnect?: Enumerable<shipping_filesWhereUniqueInput>
    delete?: Enumerable<shipping_filesWhereUniqueInput>
    connect?: Enumerable<shipping_filesWhereUniqueInput>
    update?: Enumerable<shipping_filesUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_filesUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_filesScalarWhereInput>
  }

  export type ShippingPortUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutShippingsInput>, Enumerable<ShippingPortUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<ShippingPortUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: ShippingPortCreateManyShippingsInputEnvelope
    set?: Enumerable<ShippingPortWhereUniqueInput>
    disconnect?: Enumerable<ShippingPortWhereUniqueInput>
    delete?: Enumerable<ShippingPortWhereUniqueInput>
    connect?: Enumerable<ShippingPortWhereUniqueInput>
    update?: Enumerable<ShippingPortUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<ShippingPortUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<ShippingPortScalarWhereInput>
  }

  export type ShippingProductUpdateManyWithoutShippingNestedInput = {
    create?: XOR<Enumerable<ShippingProductCreateWithoutShippingInput>, Enumerable<ShippingProductUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingProductCreateOrConnectWithoutShippingInput>
    upsert?: Enumerable<ShippingProductUpsertWithWhereUniqueWithoutShippingInput>
    createMany?: ShippingProductCreateManyShippingInputEnvelope
    set?: Enumerable<ShippingProductWhereUniqueInput>
    disconnect?: Enumerable<ShippingProductWhereUniqueInput>
    delete?: Enumerable<ShippingProductWhereUniqueInput>
    connect?: Enumerable<ShippingProductWhereUniqueInput>
    update?: Enumerable<ShippingProductUpdateWithWhereUniqueWithoutShippingInput>
    updateMany?: Enumerable<ShippingProductUpdateManyWithWhereWithoutShippingInput>
    deleteMany?: Enumerable<ShippingProductScalarWhereInput>
  }

  export type subsetsUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<subsetsCreateWithoutShippingsInput>, Enumerable<subsetsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<subsetsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<subsetsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: subsetsCreateManyShippingsInputEnvelope
    set?: Enumerable<subsetsWhereUniqueInput>
    disconnect?: Enumerable<subsetsWhereUniqueInput>
    delete?: Enumerable<subsetsWhereUniqueInput>
    connect?: Enumerable<subsetsWhereUniqueInput>
    update?: Enumerable<subsetsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<subsetsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<subsetsScalarWhereInput>
  }

  export type inquiresUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutShippingsInput>, Enumerable<inquiresUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<inquiresUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: inquiresCreateManyShippingsInputEnvelope
    set?: Enumerable<inquiresWhereUniqueInput>
    disconnect?: Enumerable<inquiresWhereUniqueInput>
    delete?: Enumerable<inquiresWhereUniqueInput>
    connect?: Enumerable<inquiresWhereUniqueInput>
    update?: Enumerable<inquiresUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<inquiresUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<inquiresScalarWhereInput>
  }

  export type ShippingChecklistItemUpdateManyWithoutShippingNestedInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutShippingInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutShippingInput>
    upsert?: Enumerable<ShippingChecklistItemUpsertWithWhereUniqueWithoutShippingInput>
    createMany?: ShippingChecklistItemCreateManyShippingInputEnvelope
    set?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    disconnect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    delete?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    update?: Enumerable<ShippingChecklistItemUpdateWithWhereUniqueWithoutShippingInput>
    updateMany?: Enumerable<ShippingChecklistItemUpdateManyWithWhereWithoutShippingInput>
    deleteMany?: Enumerable<ShippingChecklistItemScalarWhereInput>
  }

  export type sofUpdateOneWithoutShippingNestedInput = {
    create?: XOR<sofCreateWithoutShippingInput, sofUncheckedCreateWithoutShippingInput>
    connectOrCreate?: sofCreateOrConnectWithoutShippingInput
    upsert?: sofUpsertWithoutShippingInput
    disconnect?: boolean
    delete?: boolean
    connect?: sofWhereUniqueInput
    update?: XOR<sofUpdateWithoutShippingInput, sofUncheckedUpdateWithoutShippingInput>
  }

  export type shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutShippingsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_documentsCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutShippingsInput>, Enumerable<shipping_filesUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<shipping_filesUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: shipping_filesCreateManyShippingsInputEnvelope
    set?: Enumerable<shipping_filesWhereUniqueInput>
    disconnect?: Enumerable<shipping_filesWhereUniqueInput>
    delete?: Enumerable<shipping_filesWhereUniqueInput>
    connect?: Enumerable<shipping_filesWhereUniqueInput>
    update?: Enumerable<shipping_filesUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<shipping_filesUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<shipping_filesScalarWhereInput>
  }

  export type ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<ShippingPortCreateWithoutShippingsInput>, Enumerable<ShippingPortUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<ShippingPortCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<ShippingPortUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: ShippingPortCreateManyShippingsInputEnvelope
    set?: Enumerable<ShippingPortWhereUniqueInput>
    disconnect?: Enumerable<ShippingPortWhereUniqueInput>
    delete?: Enumerable<ShippingPortWhereUniqueInput>
    connect?: Enumerable<ShippingPortWhereUniqueInput>
    update?: Enumerable<ShippingPortUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<ShippingPortUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<ShippingPortScalarWhereInput>
  }

  export type ShippingProductUncheckedUpdateManyWithoutShippingNestedInput = {
    create?: XOR<Enumerable<ShippingProductCreateWithoutShippingInput>, Enumerable<ShippingProductUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingProductCreateOrConnectWithoutShippingInput>
    upsert?: Enumerable<ShippingProductUpsertWithWhereUniqueWithoutShippingInput>
    createMany?: ShippingProductCreateManyShippingInputEnvelope
    set?: Enumerable<ShippingProductWhereUniqueInput>
    disconnect?: Enumerable<ShippingProductWhereUniqueInput>
    delete?: Enumerable<ShippingProductWhereUniqueInput>
    connect?: Enumerable<ShippingProductWhereUniqueInput>
    update?: Enumerable<ShippingProductUpdateWithWhereUniqueWithoutShippingInput>
    updateMany?: Enumerable<ShippingProductUpdateManyWithWhereWithoutShippingInput>
    deleteMany?: Enumerable<ShippingProductScalarWhereInput>
  }

  export type subsetsUncheckedUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<subsetsCreateWithoutShippingsInput>, Enumerable<subsetsUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<subsetsCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<subsetsUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: subsetsCreateManyShippingsInputEnvelope
    set?: Enumerable<subsetsWhereUniqueInput>
    disconnect?: Enumerable<subsetsWhereUniqueInput>
    delete?: Enumerable<subsetsWhereUniqueInput>
    connect?: Enumerable<subsetsWhereUniqueInput>
    update?: Enumerable<subsetsUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<subsetsUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<subsetsScalarWhereInput>
  }

  export type inquiresUncheckedUpdateManyWithoutShippingsNestedInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutShippingsInput>, Enumerable<inquiresUncheckedCreateWithoutShippingsInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutShippingsInput>
    upsert?: Enumerable<inquiresUpsertWithWhereUniqueWithoutShippingsInput>
    createMany?: inquiresCreateManyShippingsInputEnvelope
    set?: Enumerable<inquiresWhereUniqueInput>
    disconnect?: Enumerable<inquiresWhereUniqueInput>
    delete?: Enumerable<inquiresWhereUniqueInput>
    connect?: Enumerable<inquiresWhereUniqueInput>
    update?: Enumerable<inquiresUpdateWithWhereUniqueWithoutShippingsInput>
    updateMany?: Enumerable<inquiresUpdateManyWithWhereWithoutShippingsInput>
    deleteMany?: Enumerable<inquiresScalarWhereInput>
  }

  export type ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutShippingInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutShippingInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutShippingInput>
    upsert?: Enumerable<ShippingChecklistItemUpsertWithWhereUniqueWithoutShippingInput>
    createMany?: ShippingChecklistItemCreateManyShippingInputEnvelope
    set?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    disconnect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    delete?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    update?: Enumerable<ShippingChecklistItemUpdateWithWhereUniqueWithoutShippingInput>
    updateMany?: Enumerable<ShippingChecklistItemUpdateManyWithWhereWithoutShippingInput>
    deleteMany?: Enumerable<ShippingChecklistItemScalarWhereInput>
  }

  export type sofUncheckedUpdateOneWithoutShippingNestedInput = {
    create?: XOR<sofCreateWithoutShippingInput, sofUncheckedCreateWithoutShippingInput>
    connectOrCreate?: sofCreateOrConnectWithoutShippingInput
    upsert?: sofUpsertWithoutShippingInput
    disconnect?: boolean
    delete?: boolean
    connect?: sofWhereUniqueInput
    update?: XOR<sofUpdateWithoutShippingInput, sofUncheckedUpdateWithoutShippingInput>
  }

  export type ShippingCreateNestedOneWithoutSubsetsInput = {
    create?: XOR<ShippingCreateWithoutSubsetsInput, ShippingUncheckedCreateWithoutSubsetsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutSubsetsInput
    connect?: ShippingWhereUniqueInput
  }

  export type shipping_documentsCreateNestedManyWithoutSubsetsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutSubsetsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutSubsetsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutSubsetsInput>
    createMany?: shipping_documentsCreateManySubsetsInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_documentsUncheckedCreateNestedManyWithoutSubsetsInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutSubsetsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutSubsetsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutSubsetsInput>
    createMany?: shipping_documentsCreateManySubsetsInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type ShippingUpdateOneWithoutSubsetsNestedInput = {
    create?: XOR<ShippingCreateWithoutSubsetsInput, ShippingUncheckedCreateWithoutSubsetsInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutSubsetsInput
    upsert?: ShippingUpsertWithoutSubsetsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutSubsetsInput, ShippingUncheckedUpdateWithoutSubsetsInput>
  }

  export type shipping_documentsUpdateManyWithoutSubsetsNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutSubsetsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutSubsetsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutSubsetsInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutSubsetsInput>
    createMany?: shipping_documentsCreateManySubsetsInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutSubsetsInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutSubsetsInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_documentsUncheckedUpdateManyWithoutSubsetsNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutSubsetsInput>, Enumerable<shipping_documentsUncheckedCreateWithoutSubsetsInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutSubsetsInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutSubsetsInput>
    createMany?: shipping_documentsCreateManySubsetsInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutSubsetsInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutSubsetsInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type usersCreateNestedOneWithoutUser_filesInput = {
    create?: XOR<usersCreateWithoutUser_filesInput, usersUncheckedCreateWithoutUser_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_filesInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutUser_filesNestedInput = {
    create?: XOR<usersCreateWithoutUser_filesInput, usersUncheckedCreateWithoutUser_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_filesInput
    upsert?: usersUpsertWithoutUser_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutUser_filesInput, usersUncheckedUpdateWithoutUser_filesInput>
  }

  export type shipping_documentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutUsersInput>, Enumerable<shipping_documentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutUsersInput>
    createMany?: shipping_documentsCreateManyUsersInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_filesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutUsersInput>, Enumerable<shipping_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutUsersInput>
    createMany?: shipping_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<shipping_filesWhereUniqueInput>
  }

  export type ShippingCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutUsersInput>, Enumerable<ShippingUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutUsersInput>
    createMany?: ShippingCreateManyUsersInputEnvelope
    connect?: Enumerable<ShippingWhereUniqueInput>
  }

  export type user_filesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<user_filesCreateWithoutUsersInput>, Enumerable<user_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<user_filesCreateOrConnectWithoutUsersInput>
    createMany?: user_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<user_filesWhereUniqueInput>
  }

  export type inquiresCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutUsersInput>, Enumerable<inquiresUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutUsersInput>
    createMany?: inquiresCreateManyUsersInputEnvelope
    connect?: Enumerable<inquiresWhereUniqueInput>
  }

  export type inquires_commentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutUsersInput>, Enumerable<inquires_commentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutUsersInput>
    createMany?: inquires_commentsCreateManyUsersInputEnvelope
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
  }

  export type ShippingChecklistItemCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutUserInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutUserInput>
    createMany?: ShippingChecklistItemCreateManyUserInputEnvelope
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
  }

  export type group_emailsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutUsersInput>, Enumerable<group_emailsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutUsersInput>
    createMany?: group_emailsCreateManyUsersInputEnvelope
    connect?: Enumerable<group_emailsWhereUniqueInput>
  }

  export type port_filesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutUsersInput>, Enumerable<port_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutUsersInput>
    createMany?: port_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<port_filesWhereUniqueInput>
  }

  export type vessel_filesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutUsersInput>, Enumerable<vessel_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutUsersInput>
    createMany?: vessel_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<vessel_filesWhereUniqueInput>
  }

  export type AgencyCreateNestedOneWithoutUsersInput = {
    create?: XOR<AgencyCreateWithoutUsersInput, AgencyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUsersInput
    connect?: AgencyWhereUniqueInput
  }

  export type users_preferenceCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<users_preferenceCreateWithoutUsersInput>, Enumerable<users_preferenceUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<users_preferenceCreateOrConnectWithoutUsersInput>
    createMany?: users_preferenceCreateManyUsersInputEnvelope
    connect?: Enumerable<users_preferenceWhereUniqueInput>
  }

  export type ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutCreated_by_userInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutCreated_by_userInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutCreated_by_userInput>
    createMany?: ShippingSofPortLogEventsCreateManyCreated_by_userInputEnvelope
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
  }

  export type shipping_documentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutUsersInput>, Enumerable<shipping_documentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutUsersInput>
    createMany?: shipping_documentsCreateManyUsersInputEnvelope
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
  }

  export type shipping_filesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutUsersInput>, Enumerable<shipping_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutUsersInput>
    createMany?: shipping_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<shipping_filesWhereUniqueInput>
  }

  export type ShippingUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutUsersInput>, Enumerable<ShippingUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutUsersInput>
    createMany?: ShippingCreateManyUsersInputEnvelope
    connect?: Enumerable<ShippingWhereUniqueInput>
  }

  export type user_filesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<user_filesCreateWithoutUsersInput>, Enumerable<user_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<user_filesCreateOrConnectWithoutUsersInput>
    createMany?: user_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<user_filesWhereUniqueInput>
  }

  export type inquiresUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutUsersInput>, Enumerable<inquiresUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutUsersInput>
    createMany?: inquiresCreateManyUsersInputEnvelope
    connect?: Enumerable<inquiresWhereUniqueInput>
  }

  export type inquires_commentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutUsersInput>, Enumerable<inquires_commentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutUsersInput>
    createMany?: inquires_commentsCreateManyUsersInputEnvelope
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
  }

  export type ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutUserInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutUserInput>
    createMany?: ShippingChecklistItemCreateManyUserInputEnvelope
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
  }

  export type group_emailsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutUsersInput>, Enumerable<group_emailsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutUsersInput>
    createMany?: group_emailsCreateManyUsersInputEnvelope
    connect?: Enumerable<group_emailsWhereUniqueInput>
  }

  export type port_filesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutUsersInput>, Enumerable<port_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutUsersInput>
    createMany?: port_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<port_filesWhereUniqueInput>
  }

  export type vessel_filesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutUsersInput>, Enumerable<vessel_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutUsersInput>
    createMany?: vessel_filesCreateManyUsersInputEnvelope
    connect?: Enumerable<vessel_filesWhereUniqueInput>
  }

  export type users_preferenceUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<users_preferenceCreateWithoutUsersInput>, Enumerable<users_preferenceUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<users_preferenceCreateOrConnectWithoutUsersInput>
    createMany?: users_preferenceCreateManyUsersInputEnvelope
    connect?: Enumerable<users_preferenceWhereUniqueInput>
  }

  export type ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutCreated_by_userInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutCreated_by_userInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutCreated_by_userInput>
    createMany?: ShippingSofPortLogEventsCreateManyCreated_by_userInputEnvelope
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
  }

  export type shipping_documentsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutUsersInput>, Enumerable<shipping_documentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: shipping_documentsCreateManyUsersInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_filesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutUsersInput>, Enumerable<shipping_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<shipping_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: shipping_filesCreateManyUsersInputEnvelope
    set?: Enumerable<shipping_filesWhereUniqueInput>
    disconnect?: Enumerable<shipping_filesWhereUniqueInput>
    delete?: Enumerable<shipping_filesWhereUniqueInput>
    connect?: Enumerable<shipping_filesWhereUniqueInput>
    update?: Enumerable<shipping_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<shipping_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<shipping_filesScalarWhereInput>
  }

  export type ShippingUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutUsersInput>, Enumerable<ShippingUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<ShippingUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: ShippingCreateManyUsersInputEnvelope
    set?: Enumerable<ShippingWhereUniqueInput>
    disconnect?: Enumerable<ShippingWhereUniqueInput>
    delete?: Enumerable<ShippingWhereUniqueInput>
    connect?: Enumerable<ShippingWhereUniqueInput>
    update?: Enumerable<ShippingUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<ShippingUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<ShippingScalarWhereInput>
  }

  export type user_filesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<user_filesCreateWithoutUsersInput>, Enumerable<user_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<user_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<user_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: user_filesCreateManyUsersInputEnvelope
    set?: Enumerable<user_filesWhereUniqueInput>
    disconnect?: Enumerable<user_filesWhereUniqueInput>
    delete?: Enumerable<user_filesWhereUniqueInput>
    connect?: Enumerable<user_filesWhereUniqueInput>
    update?: Enumerable<user_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<user_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<user_filesScalarWhereInput>
  }

  export type inquiresUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutUsersInput>, Enumerable<inquiresUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<inquiresUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: inquiresCreateManyUsersInputEnvelope
    set?: Enumerable<inquiresWhereUniqueInput>
    disconnect?: Enumerable<inquiresWhereUniqueInput>
    delete?: Enumerable<inquiresWhereUniqueInput>
    connect?: Enumerable<inquiresWhereUniqueInput>
    update?: Enumerable<inquiresUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<inquiresUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<inquiresScalarWhereInput>
  }

  export type inquires_commentsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutUsersInput>, Enumerable<inquires_commentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<inquires_commentsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: inquires_commentsCreateManyUsersInputEnvelope
    set?: Enumerable<inquires_commentsWhereUniqueInput>
    disconnect?: Enumerable<inquires_commentsWhereUniqueInput>
    delete?: Enumerable<inquires_commentsWhereUniqueInput>
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
    update?: Enumerable<inquires_commentsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<inquires_commentsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<inquires_commentsScalarWhereInput>
  }

  export type ShippingChecklistItemUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutUserInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ShippingChecklistItemUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ShippingChecklistItemCreateManyUserInputEnvelope
    set?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    disconnect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    delete?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    update?: Enumerable<ShippingChecklistItemUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ShippingChecklistItemUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ShippingChecklistItemScalarWhereInput>
  }

  export type group_emailsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutUsersInput>, Enumerable<group_emailsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<group_emailsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: group_emailsCreateManyUsersInputEnvelope
    set?: Enumerable<group_emailsWhereUniqueInput>
    disconnect?: Enumerable<group_emailsWhereUniqueInput>
    delete?: Enumerable<group_emailsWhereUniqueInput>
    connect?: Enumerable<group_emailsWhereUniqueInput>
    update?: Enumerable<group_emailsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<group_emailsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<group_emailsScalarWhereInput>
  }

  export type port_filesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutUsersInput>, Enumerable<port_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<port_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: port_filesCreateManyUsersInputEnvelope
    set?: Enumerable<port_filesWhereUniqueInput>
    disconnect?: Enumerable<port_filesWhereUniqueInput>
    delete?: Enumerable<port_filesWhereUniqueInput>
    connect?: Enumerable<port_filesWhereUniqueInput>
    update?: Enumerable<port_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<port_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<port_filesScalarWhereInput>
  }

  export type vessel_filesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutUsersInput>, Enumerable<vessel_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<vessel_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: vessel_filesCreateManyUsersInputEnvelope
    set?: Enumerable<vessel_filesWhereUniqueInput>
    disconnect?: Enumerable<vessel_filesWhereUniqueInput>
    delete?: Enumerable<vessel_filesWhereUniqueInput>
    connect?: Enumerable<vessel_filesWhereUniqueInput>
    update?: Enumerable<vessel_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<vessel_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<vessel_filesScalarWhereInput>
  }

  export type AgencyUpdateOneWithoutUsersNestedInput = {
    create?: XOR<AgencyCreateWithoutUsersInput, AgencyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUsersInput
    upsert?: AgencyUpsertWithoutUsersInput
    disconnect?: boolean
    delete?: boolean
    connect?: AgencyWhereUniqueInput
    update?: XOR<AgencyUpdateWithoutUsersInput, AgencyUncheckedUpdateWithoutUsersInput>
  }

  export type users_preferenceUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<users_preferenceCreateWithoutUsersInput>, Enumerable<users_preferenceUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<users_preferenceCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<users_preferenceUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: users_preferenceCreateManyUsersInputEnvelope
    set?: Enumerable<users_preferenceWhereUniqueInput>
    disconnect?: Enumerable<users_preferenceWhereUniqueInput>
    delete?: Enumerable<users_preferenceWhereUniqueInput>
    connect?: Enumerable<users_preferenceWhereUniqueInput>
    update?: Enumerable<users_preferenceUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<users_preferenceUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<users_preferenceScalarWhereInput>
  }

  export type ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutCreated_by_userInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutCreated_by_userInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutCreated_by_userInput>
    upsert?: Enumerable<ShippingSofPortLogEventsUpsertWithWhereUniqueWithoutCreated_by_userInput>
    createMany?: ShippingSofPortLogEventsCreateManyCreated_by_userInputEnvelope
    set?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    disconnect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    delete?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    update?: Enumerable<ShippingSofPortLogEventsUpdateWithWhereUniqueWithoutCreated_by_userInput>
    updateMany?: Enumerable<ShippingSofPortLogEventsUpdateManyWithWhereWithoutCreated_by_userInput>
    deleteMany?: Enumerable<ShippingSofPortLogEventsScalarWhereInput>
  }

  export type shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<shipping_documentsCreateWithoutUsersInput>, Enumerable<shipping_documentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_documentsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<shipping_documentsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: shipping_documentsCreateManyUsersInputEnvelope
    set?: Enumerable<shipping_documentsWhereUniqueInput>
    disconnect?: Enumerable<shipping_documentsWhereUniqueInput>
    delete?: Enumerable<shipping_documentsWhereUniqueInput>
    connect?: Enumerable<shipping_documentsWhereUniqueInput>
    update?: Enumerable<shipping_documentsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<shipping_documentsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<shipping_documentsScalarWhereInput>
  }

  export type shipping_filesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<shipping_filesCreateWithoutUsersInput>, Enumerable<shipping_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<shipping_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<shipping_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: shipping_filesCreateManyUsersInputEnvelope
    set?: Enumerable<shipping_filesWhereUniqueInput>
    disconnect?: Enumerable<shipping_filesWhereUniqueInput>
    delete?: Enumerable<shipping_filesWhereUniqueInput>
    connect?: Enumerable<shipping_filesWhereUniqueInput>
    update?: Enumerable<shipping_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<shipping_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<shipping_filesScalarWhereInput>
  }

  export type ShippingUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutUsersInput>, Enumerable<ShippingUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<ShippingUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: ShippingCreateManyUsersInputEnvelope
    set?: Enumerable<ShippingWhereUniqueInput>
    disconnect?: Enumerable<ShippingWhereUniqueInput>
    delete?: Enumerable<ShippingWhereUniqueInput>
    connect?: Enumerable<ShippingWhereUniqueInput>
    update?: Enumerable<ShippingUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<ShippingUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<ShippingScalarWhereInput>
  }

  export type user_filesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<user_filesCreateWithoutUsersInput>, Enumerable<user_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<user_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<user_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: user_filesCreateManyUsersInputEnvelope
    set?: Enumerable<user_filesWhereUniqueInput>
    disconnect?: Enumerable<user_filesWhereUniqueInput>
    delete?: Enumerable<user_filesWhereUniqueInput>
    connect?: Enumerable<user_filesWhereUniqueInput>
    update?: Enumerable<user_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<user_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<user_filesScalarWhereInput>
  }

  export type inquiresUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<inquiresCreateWithoutUsersInput>, Enumerable<inquiresUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquiresCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<inquiresUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: inquiresCreateManyUsersInputEnvelope
    set?: Enumerable<inquiresWhereUniqueInput>
    disconnect?: Enumerable<inquiresWhereUniqueInput>
    delete?: Enumerable<inquiresWhereUniqueInput>
    connect?: Enumerable<inquiresWhereUniqueInput>
    update?: Enumerable<inquiresUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<inquiresUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<inquiresScalarWhereInput>
  }

  export type inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutUsersInput>, Enumerable<inquires_commentsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<inquires_commentsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: inquires_commentsCreateManyUsersInputEnvelope
    set?: Enumerable<inquires_commentsWhereUniqueInput>
    disconnect?: Enumerable<inquires_commentsWhereUniqueInput>
    delete?: Enumerable<inquires_commentsWhereUniqueInput>
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
    update?: Enumerable<inquires_commentsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<inquires_commentsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<inquires_commentsScalarWhereInput>
  }

  export type ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ShippingChecklistItemCreateWithoutUserInput>, Enumerable<ShippingChecklistItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShippingChecklistItemCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ShippingChecklistItemUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ShippingChecklistItemCreateManyUserInputEnvelope
    set?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    disconnect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    delete?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    connect?: Enumerable<ShippingChecklistItemWhereUniqueInput>
    update?: Enumerable<ShippingChecklistItemUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ShippingChecklistItemUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ShippingChecklistItemScalarWhereInput>
  }

  export type group_emailsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutUsersInput>, Enumerable<group_emailsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<group_emailsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: group_emailsCreateManyUsersInputEnvelope
    set?: Enumerable<group_emailsWhereUniqueInput>
    disconnect?: Enumerable<group_emailsWhereUniqueInput>
    delete?: Enumerable<group_emailsWhereUniqueInput>
    connect?: Enumerable<group_emailsWhereUniqueInput>
    update?: Enumerable<group_emailsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<group_emailsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<group_emailsScalarWhereInput>
  }

  export type port_filesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<port_filesCreateWithoutUsersInput>, Enumerable<port_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<port_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<port_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: port_filesCreateManyUsersInputEnvelope
    set?: Enumerable<port_filesWhereUniqueInput>
    disconnect?: Enumerable<port_filesWhereUniqueInput>
    delete?: Enumerable<port_filesWhereUniqueInput>
    connect?: Enumerable<port_filesWhereUniqueInput>
    update?: Enumerable<port_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<port_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<port_filesScalarWhereInput>
  }

  export type vessel_filesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutUsersInput>, Enumerable<vessel_filesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<vessel_filesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: vessel_filesCreateManyUsersInputEnvelope
    set?: Enumerable<vessel_filesWhereUniqueInput>
    disconnect?: Enumerable<vessel_filesWhereUniqueInput>
    delete?: Enumerable<vessel_filesWhereUniqueInput>
    connect?: Enumerable<vessel_filesWhereUniqueInput>
    update?: Enumerable<vessel_filesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<vessel_filesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<vessel_filesScalarWhereInput>
  }

  export type users_preferenceUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<users_preferenceCreateWithoutUsersInput>, Enumerable<users_preferenceUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<users_preferenceCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<users_preferenceUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: users_preferenceCreateManyUsersInputEnvelope
    set?: Enumerable<users_preferenceWhereUniqueInput>
    disconnect?: Enumerable<users_preferenceWhereUniqueInput>
    delete?: Enumerable<users_preferenceWhereUniqueInput>
    connect?: Enumerable<users_preferenceWhereUniqueInput>
    update?: Enumerable<users_preferenceUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<users_preferenceUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<users_preferenceScalarWhereInput>
  }

  export type ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutCreated_by_userInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutCreated_by_userInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutCreated_by_userInput>
    upsert?: Enumerable<ShippingSofPortLogEventsUpsertWithWhereUniqueWithoutCreated_by_userInput>
    createMany?: ShippingSofPortLogEventsCreateManyCreated_by_userInputEnvelope
    set?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    disconnect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    delete?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    update?: Enumerable<ShippingSofPortLogEventsUpdateWithWhereUniqueWithoutCreated_by_userInput>
    updateMany?: Enumerable<ShippingSofPortLogEventsUpdateManyWithWhereWithoutCreated_by_userInput>
    deleteMany?: Enumerable<ShippingSofPortLogEventsScalarWhereInput>
  }

  export type usersCreateNestedOneWithoutUsers_preferenceInput = {
    create?: XOR<usersCreateWithoutUsers_preferenceInput, usersUncheckedCreateWithoutUsers_preferenceInput>
    connectOrCreate?: usersCreateOrConnectWithoutUsers_preferenceInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutUsers_preferenceNestedInput = {
    create?: XOR<usersCreateWithoutUsers_preferenceInput, usersUncheckedCreateWithoutUsers_preferenceInput>
    connectOrCreate?: usersCreateOrConnectWithoutUsers_preferenceInput
    upsert?: usersUpsertWithoutUsers_preferenceInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutUsers_preferenceInput, usersUncheckedUpdateWithoutUsers_preferenceInput>
  }

  export type usersCreateNestedOneWithoutVessel_filesInput = {
    create?: XOR<usersCreateWithoutVessel_filesInput, usersUncheckedCreateWithoutVessel_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutVessel_filesInput
    connect?: usersWhereUniqueInput
  }

  export type VesselCreateNestedOneWithoutVessel_filesInput = {
    create?: XOR<VesselCreateWithoutVessel_filesInput, VesselUncheckedCreateWithoutVessel_filesInput>
    connectOrCreate?: VesselCreateOrConnectWithoutVessel_filesInput
    connect?: VesselWhereUniqueInput
  }

  export type usersUpdateOneWithoutVessel_filesNestedInput = {
    create?: XOR<usersCreateWithoutVessel_filesInput, usersUncheckedCreateWithoutVessel_filesInput>
    connectOrCreate?: usersCreateOrConnectWithoutVessel_filesInput
    upsert?: usersUpsertWithoutVessel_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutVessel_filesInput, usersUncheckedUpdateWithoutVessel_filesInput>
  }

  export type VesselUpdateOneWithoutVessel_filesNestedInput = {
    create?: XOR<VesselCreateWithoutVessel_filesInput, VesselUncheckedCreateWithoutVessel_filesInput>
    connectOrCreate?: VesselCreateOrConnectWithoutVessel_filesInput
    upsert?: VesselUpsertWithoutVessel_filesInput
    disconnect?: boolean
    delete?: boolean
    connect?: VesselWhereUniqueInput
    update?: XOR<VesselUpdateWithoutVessel_filesInput, VesselUncheckedUpdateWithoutVessel_filesInput>
  }

  export type CountryCreateNestedOneWithoutVesselsInput = {
    create?: XOR<CountryCreateWithoutVesselsInput, CountryUncheckedCreateWithoutVesselsInput>
    connectOrCreate?: CountryCreateOrConnectWithoutVesselsInput
    connect?: CountryWhereUniqueInput
  }

  export type ShippingCreateNestedManyWithoutVesselInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutVesselInput>, Enumerable<ShippingUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutVesselInput>
    createMany?: ShippingCreateManyVesselInputEnvelope
    connect?: Enumerable<ShippingWhereUniqueInput>
  }

  export type vessel_filesCreateNestedManyWithoutVesselsInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutVesselsInput>, Enumerable<vessel_filesUncheckedCreateWithoutVesselsInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutVesselsInput>
    createMany?: vessel_filesCreateManyVesselsInputEnvelope
    connect?: Enumerable<vessel_filesWhereUniqueInput>
  }

  export type group_emailsCreateNestedManyWithoutVesselInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutVesselInput>, Enumerable<group_emailsUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutVesselInput>
    createMany?: group_emailsCreateManyVesselInputEnvelope
    connect?: Enumerable<group_emailsWhereUniqueInput>
  }

  export type ShippingUncheckedCreateNestedManyWithoutVesselInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutVesselInput>, Enumerable<ShippingUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutVesselInput>
    createMany?: ShippingCreateManyVesselInputEnvelope
    connect?: Enumerable<ShippingWhereUniqueInput>
  }

  export type vessel_filesUncheckedCreateNestedManyWithoutVesselsInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutVesselsInput>, Enumerable<vessel_filesUncheckedCreateWithoutVesselsInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutVesselsInput>
    createMany?: vessel_filesCreateManyVesselsInputEnvelope
    connect?: Enumerable<vessel_filesWhereUniqueInput>
  }

  export type group_emailsUncheckedCreateNestedManyWithoutVesselInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutVesselInput>, Enumerable<group_emailsUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutVesselInput>
    createMany?: group_emailsCreateManyVesselInputEnvelope
    connect?: Enumerable<group_emailsWhereUniqueInput>
  }

  export type CountryUpdateOneWithoutVesselsNestedInput = {
    create?: XOR<CountryCreateWithoutVesselsInput, CountryUncheckedCreateWithoutVesselsInput>
    connectOrCreate?: CountryCreateOrConnectWithoutVesselsInput
    upsert?: CountryUpsertWithoutVesselsInput
    disconnect?: boolean
    delete?: boolean
    connect?: CountryWhereUniqueInput
    update?: XOR<CountryUpdateWithoutVesselsInput, CountryUncheckedUpdateWithoutVesselsInput>
  }

  export type ShippingUpdateManyWithoutVesselNestedInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutVesselInput>, Enumerable<ShippingUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutVesselInput>
    upsert?: Enumerable<ShippingUpsertWithWhereUniqueWithoutVesselInput>
    createMany?: ShippingCreateManyVesselInputEnvelope
    set?: Enumerable<ShippingWhereUniqueInput>
    disconnect?: Enumerable<ShippingWhereUniqueInput>
    delete?: Enumerable<ShippingWhereUniqueInput>
    connect?: Enumerable<ShippingWhereUniqueInput>
    update?: Enumerable<ShippingUpdateWithWhereUniqueWithoutVesselInput>
    updateMany?: Enumerable<ShippingUpdateManyWithWhereWithoutVesselInput>
    deleteMany?: Enumerable<ShippingScalarWhereInput>
  }

  export type vessel_filesUpdateManyWithoutVesselsNestedInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutVesselsInput>, Enumerable<vessel_filesUncheckedCreateWithoutVesselsInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutVesselsInput>
    upsert?: Enumerable<vessel_filesUpsertWithWhereUniqueWithoutVesselsInput>
    createMany?: vessel_filesCreateManyVesselsInputEnvelope
    set?: Enumerable<vessel_filesWhereUniqueInput>
    disconnect?: Enumerable<vessel_filesWhereUniqueInput>
    delete?: Enumerable<vessel_filesWhereUniqueInput>
    connect?: Enumerable<vessel_filesWhereUniqueInput>
    update?: Enumerable<vessel_filesUpdateWithWhereUniqueWithoutVesselsInput>
    updateMany?: Enumerable<vessel_filesUpdateManyWithWhereWithoutVesselsInput>
    deleteMany?: Enumerable<vessel_filesScalarWhereInput>
  }

  export type group_emailsUpdateManyWithoutVesselNestedInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutVesselInput>, Enumerable<group_emailsUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutVesselInput>
    upsert?: Enumerable<group_emailsUpsertWithWhereUniqueWithoutVesselInput>
    createMany?: group_emailsCreateManyVesselInputEnvelope
    set?: Enumerable<group_emailsWhereUniqueInput>
    disconnect?: Enumerable<group_emailsWhereUniqueInput>
    delete?: Enumerable<group_emailsWhereUniqueInput>
    connect?: Enumerable<group_emailsWhereUniqueInput>
    update?: Enumerable<group_emailsUpdateWithWhereUniqueWithoutVesselInput>
    updateMany?: Enumerable<group_emailsUpdateManyWithWhereWithoutVesselInput>
    deleteMany?: Enumerable<group_emailsScalarWhereInput>
  }

  export type ShippingUncheckedUpdateManyWithoutVesselNestedInput = {
    create?: XOR<Enumerable<ShippingCreateWithoutVesselInput>, Enumerable<ShippingUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<ShippingCreateOrConnectWithoutVesselInput>
    upsert?: Enumerable<ShippingUpsertWithWhereUniqueWithoutVesselInput>
    createMany?: ShippingCreateManyVesselInputEnvelope
    set?: Enumerable<ShippingWhereUniqueInput>
    disconnect?: Enumerable<ShippingWhereUniqueInput>
    delete?: Enumerable<ShippingWhereUniqueInput>
    connect?: Enumerable<ShippingWhereUniqueInput>
    update?: Enumerable<ShippingUpdateWithWhereUniqueWithoutVesselInput>
    updateMany?: Enumerable<ShippingUpdateManyWithWhereWithoutVesselInput>
    deleteMany?: Enumerable<ShippingScalarWhereInput>
  }

  export type vessel_filesUncheckedUpdateManyWithoutVesselsNestedInput = {
    create?: XOR<Enumerable<vessel_filesCreateWithoutVesselsInput>, Enumerable<vessel_filesUncheckedCreateWithoutVesselsInput>>
    connectOrCreate?: Enumerable<vessel_filesCreateOrConnectWithoutVesselsInput>
    upsert?: Enumerable<vessel_filesUpsertWithWhereUniqueWithoutVesselsInput>
    createMany?: vessel_filesCreateManyVesselsInputEnvelope
    set?: Enumerable<vessel_filesWhereUniqueInput>
    disconnect?: Enumerable<vessel_filesWhereUniqueInput>
    delete?: Enumerable<vessel_filesWhereUniqueInput>
    connect?: Enumerable<vessel_filesWhereUniqueInput>
    update?: Enumerable<vessel_filesUpdateWithWhereUniqueWithoutVesselsInput>
    updateMany?: Enumerable<vessel_filesUpdateManyWithWhereWithoutVesselsInput>
    deleteMany?: Enumerable<vessel_filesScalarWhereInput>
  }

  export type group_emailsUncheckedUpdateManyWithoutVesselNestedInput = {
    create?: XOR<Enumerable<group_emailsCreateWithoutVesselInput>, Enumerable<group_emailsUncheckedCreateWithoutVesselInput>>
    connectOrCreate?: Enumerable<group_emailsCreateOrConnectWithoutVesselInput>
    upsert?: Enumerable<group_emailsUpsertWithWhereUniqueWithoutVesselInput>
    createMany?: group_emailsCreateManyVesselInputEnvelope
    set?: Enumerable<group_emailsWhereUniqueInput>
    disconnect?: Enumerable<group_emailsWhereUniqueInput>
    delete?: Enumerable<group_emailsWhereUniqueInput>
    connect?: Enumerable<group_emailsWhereUniqueInput>
    update?: Enumerable<group_emailsUpdateWithWhereUniqueWithoutVesselInput>
    updateMany?: Enumerable<group_emailsUpdateManyWithWhereWithoutVesselInput>
    deleteMany?: Enumerable<group_emailsScalarWhereInput>
  }

  export type ShippingCreateNestedOneWithoutInquiresInput = {
    create?: XOR<ShippingCreateWithoutInquiresInput, ShippingUncheckedCreateWithoutInquiresInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutInquiresInput
    connect?: ShippingWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutInquiresInput = {
    create?: XOR<usersCreateWithoutInquiresInput, usersUncheckedCreateWithoutInquiresInput>
    connectOrCreate?: usersCreateOrConnectWithoutInquiresInput
    connect?: usersWhereUniqueInput
  }

  export type inquires_commentsCreateNestedManyWithoutInquiresInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutInquiresInput>, Enumerable<inquires_commentsUncheckedCreateWithoutInquiresInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutInquiresInput>
    createMany?: inquires_commentsCreateManyInquiresInputEnvelope
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
  }

  export type inquires_commentsUncheckedCreateNestedManyWithoutInquiresInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutInquiresInput>, Enumerable<inquires_commentsUncheckedCreateWithoutInquiresInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutInquiresInput>
    createMany?: inquires_commentsCreateManyInquiresInputEnvelope
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
  }

  export type ShippingUpdateOneWithoutInquiresNestedInput = {
    create?: XOR<ShippingCreateWithoutInquiresInput, ShippingUncheckedCreateWithoutInquiresInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutInquiresInput
    upsert?: ShippingUpsertWithoutInquiresInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutInquiresInput, ShippingUncheckedUpdateWithoutInquiresInput>
  }

  export type usersUpdateOneWithoutInquiresNestedInput = {
    create?: XOR<usersCreateWithoutInquiresInput, usersUncheckedCreateWithoutInquiresInput>
    connectOrCreate?: usersCreateOrConnectWithoutInquiresInput
    upsert?: usersUpsertWithoutInquiresInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutInquiresInput, usersUncheckedUpdateWithoutInquiresInput>
  }

  export type inquires_commentsUpdateManyWithoutInquiresNestedInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutInquiresInput>, Enumerable<inquires_commentsUncheckedCreateWithoutInquiresInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutInquiresInput>
    upsert?: Enumerable<inquires_commentsUpsertWithWhereUniqueWithoutInquiresInput>
    createMany?: inquires_commentsCreateManyInquiresInputEnvelope
    set?: Enumerable<inquires_commentsWhereUniqueInput>
    disconnect?: Enumerable<inquires_commentsWhereUniqueInput>
    delete?: Enumerable<inquires_commentsWhereUniqueInput>
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
    update?: Enumerable<inquires_commentsUpdateWithWhereUniqueWithoutInquiresInput>
    updateMany?: Enumerable<inquires_commentsUpdateManyWithWhereWithoutInquiresInput>
    deleteMany?: Enumerable<inquires_commentsScalarWhereInput>
  }

  export type inquires_commentsUncheckedUpdateManyWithoutInquiresNestedInput = {
    create?: XOR<Enumerable<inquires_commentsCreateWithoutInquiresInput>, Enumerable<inquires_commentsUncheckedCreateWithoutInquiresInput>>
    connectOrCreate?: Enumerable<inquires_commentsCreateOrConnectWithoutInquiresInput>
    upsert?: Enumerable<inquires_commentsUpsertWithWhereUniqueWithoutInquiresInput>
    createMany?: inquires_commentsCreateManyInquiresInputEnvelope
    set?: Enumerable<inquires_commentsWhereUniqueInput>
    disconnect?: Enumerable<inquires_commentsWhereUniqueInput>
    delete?: Enumerable<inquires_commentsWhereUniqueInput>
    connect?: Enumerable<inquires_commentsWhereUniqueInput>
    update?: Enumerable<inquires_commentsUpdateWithWhereUniqueWithoutInquiresInput>
    updateMany?: Enumerable<inquires_commentsUpdateManyWithWhereWithoutInquiresInput>
    deleteMany?: Enumerable<inquires_commentsScalarWhereInput>
  }

  export type inquiresCreateNestedOneWithoutInquires_commentsInput = {
    create?: XOR<inquiresCreateWithoutInquires_commentsInput, inquiresUncheckedCreateWithoutInquires_commentsInput>
    connectOrCreate?: inquiresCreateOrConnectWithoutInquires_commentsInput
    connect?: inquiresWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutInquires_commentsInput = {
    create?: XOR<usersCreateWithoutInquires_commentsInput, usersUncheckedCreateWithoutInquires_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutInquires_commentsInput
    connect?: usersWhereUniqueInput
  }

  export type inquiresUpdateOneWithoutInquires_commentsNestedInput = {
    create?: XOR<inquiresCreateWithoutInquires_commentsInput, inquiresUncheckedCreateWithoutInquires_commentsInput>
    connectOrCreate?: inquiresCreateOrConnectWithoutInquires_commentsInput
    upsert?: inquiresUpsertWithoutInquires_commentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: inquiresWhereUniqueInput
    update?: XOR<inquiresUpdateWithoutInquires_commentsInput, inquiresUncheckedUpdateWithoutInquires_commentsInput>
  }

  export type usersUpdateOneWithoutInquires_commentsNestedInput = {
    create?: XOR<usersCreateWithoutInquires_commentsInput, usersUncheckedCreateWithoutInquires_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutInquires_commentsInput
    upsert?: usersUpsertWithoutInquires_commentsInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutInquires_commentsInput, usersUncheckedUpdateWithoutInquires_commentsInput>
  }

  export type VesselCreateNestedOneWithoutGroup_emailsInput = {
    create?: XOR<VesselCreateWithoutGroup_emailsInput, VesselUncheckedCreateWithoutGroup_emailsInput>
    connectOrCreate?: VesselCreateOrConnectWithoutGroup_emailsInput
    connect?: VesselWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutGroup_emailsInput = {
    create?: XOR<usersCreateWithoutGroup_emailsInput, usersUncheckedCreateWithoutGroup_emailsInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_emailsInput
    connect?: usersWhereUniqueInput
  }

  export type VesselUpdateOneWithoutGroup_emailsNestedInput = {
    create?: XOR<VesselCreateWithoutGroup_emailsInput, VesselUncheckedCreateWithoutGroup_emailsInput>
    connectOrCreate?: VesselCreateOrConnectWithoutGroup_emailsInput
    upsert?: VesselUpsertWithoutGroup_emailsInput
    disconnect?: boolean
    delete?: boolean
    connect?: VesselWhereUniqueInput
    update?: XOR<VesselUpdateWithoutGroup_emailsInput, VesselUncheckedUpdateWithoutGroup_emailsInput>
  }

  export type usersUpdateOneWithoutGroup_emailsNestedInput = {
    create?: XOR<usersCreateWithoutGroup_emailsInput, usersUncheckedCreateWithoutGroup_emailsInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_emailsInput
    upsert?: usersUpsertWithoutGroup_emailsInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutGroup_emailsInput, usersUncheckedUpdateWithoutGroup_emailsInput>
  }

  export type ShippingCreateNestedOneWithoutSofInput = {
    create?: XOR<ShippingCreateWithoutSofInput, ShippingUncheckedCreateWithoutSofInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutSofInput
    connect?: ShippingWhereUniqueInput
  }

  export type sof_holidaysCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_holidaysCreateWithoutSofInput>, Enumerable<sof_holidaysUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_holidaysCreateOrConnectWithoutSofInput>
    createMany?: sof_holidaysCreateManySofInputEnvelope
    connect?: Enumerable<sof_holidaysWhereUniqueInput>
  }

  export type sof_remarksCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_remarksCreateWithoutSofInput>, Enumerable<sof_remarksUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_remarksCreateOrConnectWithoutSofInput>
    createMany?: sof_remarksCreateManySofInputEnvelope
    connect?: Enumerable<sof_remarksWhereUniqueInput>
  }

  export type sof_draftCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_draftCreateWithoutSofInput>, Enumerable<sof_draftUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_draftCreateOrConnectWithoutSofInput>
    createMany?: sof_draftCreateManySofInputEnvelope
    connect?: Enumerable<sof_draftWhereUniqueInput>
  }

  export type sof_bunker_figuresCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_bunker_figuresCreateWithoutSofInput>, Enumerable<sof_bunker_figuresUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_bunker_figuresCreateOrConnectWithoutSofInput>
    createMany?: sof_bunker_figuresCreateManySofInputEnvelope
    connect?: Enumerable<sof_bunker_figuresWhereUniqueInput>
  }

  export type ShippingSofPortLogEventsCreateNestedManyWithoutShipping_sofInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutShipping_sofInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutShipping_sofInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutShipping_sofInput>
    createMany?: ShippingSofPortLogEventsCreateManyShipping_sofInputEnvelope
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
  }

  export type sof_shipper_cargoCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_shipper_cargoCreateWithoutSofInput>, Enumerable<sof_shipper_cargoUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_shipper_cargoCreateOrConnectWithoutSofInput>
    createMany?: sof_shipper_cargoCreateManySofInputEnvelope
    connect?: Enumerable<sof_shipper_cargoWhereUniqueInput>
  }

  export type sof_holidaysUncheckedCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_holidaysCreateWithoutSofInput>, Enumerable<sof_holidaysUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_holidaysCreateOrConnectWithoutSofInput>
    createMany?: sof_holidaysCreateManySofInputEnvelope
    connect?: Enumerable<sof_holidaysWhereUniqueInput>
  }

  export type sof_remarksUncheckedCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_remarksCreateWithoutSofInput>, Enumerable<sof_remarksUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_remarksCreateOrConnectWithoutSofInput>
    createMany?: sof_remarksCreateManySofInputEnvelope
    connect?: Enumerable<sof_remarksWhereUniqueInput>
  }

  export type sof_draftUncheckedCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_draftCreateWithoutSofInput>, Enumerable<sof_draftUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_draftCreateOrConnectWithoutSofInput>
    createMany?: sof_draftCreateManySofInputEnvelope
    connect?: Enumerable<sof_draftWhereUniqueInput>
  }

  export type sof_bunker_figuresUncheckedCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_bunker_figuresCreateWithoutSofInput>, Enumerable<sof_bunker_figuresUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_bunker_figuresCreateOrConnectWithoutSofInput>
    createMany?: sof_bunker_figuresCreateManySofInputEnvelope
    connect?: Enumerable<sof_bunker_figuresWhereUniqueInput>
  }

  export type ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutShipping_sofInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutShipping_sofInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutShipping_sofInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutShipping_sofInput>
    createMany?: ShippingSofPortLogEventsCreateManyShipping_sofInputEnvelope
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
  }

  export type sof_shipper_cargoUncheckedCreateNestedManyWithoutSofInput = {
    create?: XOR<Enumerable<sof_shipper_cargoCreateWithoutSofInput>, Enumerable<sof_shipper_cargoUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_shipper_cargoCreateOrConnectWithoutSofInput>
    createMany?: sof_shipper_cargoCreateManySofInputEnvelope
    connect?: Enumerable<sof_shipper_cargoWhereUniqueInput>
  }

  export type ShippingUpdateOneWithoutSofNestedInput = {
    create?: XOR<ShippingCreateWithoutSofInput, ShippingUncheckedCreateWithoutSofInput>
    connectOrCreate?: ShippingCreateOrConnectWithoutSofInput
    upsert?: ShippingUpsertWithoutSofInput
    disconnect?: boolean
    delete?: boolean
    connect?: ShippingWhereUniqueInput
    update?: XOR<ShippingUpdateWithoutSofInput, ShippingUncheckedUpdateWithoutSofInput>
  }

  export type sof_holidaysUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_holidaysCreateWithoutSofInput>, Enumerable<sof_holidaysUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_holidaysCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_holidaysUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_holidaysCreateManySofInputEnvelope
    set?: Enumerable<sof_holidaysWhereUniqueInput>
    disconnect?: Enumerable<sof_holidaysWhereUniqueInput>
    delete?: Enumerable<sof_holidaysWhereUniqueInput>
    connect?: Enumerable<sof_holidaysWhereUniqueInput>
    update?: Enumerable<sof_holidaysUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_holidaysUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_holidaysScalarWhereInput>
  }

  export type sof_remarksUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_remarksCreateWithoutSofInput>, Enumerable<sof_remarksUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_remarksCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_remarksUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_remarksCreateManySofInputEnvelope
    set?: Enumerable<sof_remarksWhereUniqueInput>
    disconnect?: Enumerable<sof_remarksWhereUniqueInput>
    delete?: Enumerable<sof_remarksWhereUniqueInput>
    connect?: Enumerable<sof_remarksWhereUniqueInput>
    update?: Enumerable<sof_remarksUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_remarksUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_remarksScalarWhereInput>
  }

  export type sof_draftUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_draftCreateWithoutSofInput>, Enumerable<sof_draftUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_draftCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_draftUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_draftCreateManySofInputEnvelope
    set?: Enumerable<sof_draftWhereUniqueInput>
    disconnect?: Enumerable<sof_draftWhereUniqueInput>
    delete?: Enumerable<sof_draftWhereUniqueInput>
    connect?: Enumerable<sof_draftWhereUniqueInput>
    update?: Enumerable<sof_draftUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_draftUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_draftScalarWhereInput>
  }

  export type sof_bunker_figuresUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_bunker_figuresCreateWithoutSofInput>, Enumerable<sof_bunker_figuresUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_bunker_figuresCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_bunker_figuresUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_bunker_figuresCreateManySofInputEnvelope
    set?: Enumerable<sof_bunker_figuresWhereUniqueInput>
    disconnect?: Enumerable<sof_bunker_figuresWhereUniqueInput>
    delete?: Enumerable<sof_bunker_figuresWhereUniqueInput>
    connect?: Enumerable<sof_bunker_figuresWhereUniqueInput>
    update?: Enumerable<sof_bunker_figuresUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_bunker_figuresUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_bunker_figuresScalarWhereInput>
  }

  export type ShippingSofPortLogEventsUpdateManyWithoutShipping_sofNestedInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutShipping_sofInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutShipping_sofInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutShipping_sofInput>
    upsert?: Enumerable<ShippingSofPortLogEventsUpsertWithWhereUniqueWithoutShipping_sofInput>
    createMany?: ShippingSofPortLogEventsCreateManyShipping_sofInputEnvelope
    set?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    disconnect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    delete?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    update?: Enumerable<ShippingSofPortLogEventsUpdateWithWhereUniqueWithoutShipping_sofInput>
    updateMany?: Enumerable<ShippingSofPortLogEventsUpdateManyWithWhereWithoutShipping_sofInput>
    deleteMany?: Enumerable<ShippingSofPortLogEventsScalarWhereInput>
  }

  export type sof_shipper_cargoUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_shipper_cargoCreateWithoutSofInput>, Enumerable<sof_shipper_cargoUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_shipper_cargoCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_shipper_cargoUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_shipper_cargoCreateManySofInputEnvelope
    set?: Enumerable<sof_shipper_cargoWhereUniqueInput>
    disconnect?: Enumerable<sof_shipper_cargoWhereUniqueInput>
    delete?: Enumerable<sof_shipper_cargoWhereUniqueInput>
    connect?: Enumerable<sof_shipper_cargoWhereUniqueInput>
    update?: Enumerable<sof_shipper_cargoUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_shipper_cargoUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_shipper_cargoScalarWhereInput>
  }

  export type sof_holidaysUncheckedUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_holidaysCreateWithoutSofInput>, Enumerable<sof_holidaysUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_holidaysCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_holidaysUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_holidaysCreateManySofInputEnvelope
    set?: Enumerable<sof_holidaysWhereUniqueInput>
    disconnect?: Enumerable<sof_holidaysWhereUniqueInput>
    delete?: Enumerable<sof_holidaysWhereUniqueInput>
    connect?: Enumerable<sof_holidaysWhereUniqueInput>
    update?: Enumerable<sof_holidaysUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_holidaysUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_holidaysScalarWhereInput>
  }

  export type sof_remarksUncheckedUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_remarksCreateWithoutSofInput>, Enumerable<sof_remarksUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_remarksCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_remarksUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_remarksCreateManySofInputEnvelope
    set?: Enumerable<sof_remarksWhereUniqueInput>
    disconnect?: Enumerable<sof_remarksWhereUniqueInput>
    delete?: Enumerable<sof_remarksWhereUniqueInput>
    connect?: Enumerable<sof_remarksWhereUniqueInput>
    update?: Enumerable<sof_remarksUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_remarksUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_remarksScalarWhereInput>
  }

  export type sof_draftUncheckedUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_draftCreateWithoutSofInput>, Enumerable<sof_draftUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_draftCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_draftUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_draftCreateManySofInputEnvelope
    set?: Enumerable<sof_draftWhereUniqueInput>
    disconnect?: Enumerable<sof_draftWhereUniqueInput>
    delete?: Enumerable<sof_draftWhereUniqueInput>
    connect?: Enumerable<sof_draftWhereUniqueInput>
    update?: Enumerable<sof_draftUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_draftUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_draftScalarWhereInput>
  }

  export type sof_bunker_figuresUncheckedUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_bunker_figuresCreateWithoutSofInput>, Enumerable<sof_bunker_figuresUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_bunker_figuresCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_bunker_figuresUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_bunker_figuresCreateManySofInputEnvelope
    set?: Enumerable<sof_bunker_figuresWhereUniqueInput>
    disconnect?: Enumerable<sof_bunker_figuresWhereUniqueInput>
    delete?: Enumerable<sof_bunker_figuresWhereUniqueInput>
    connect?: Enumerable<sof_bunker_figuresWhereUniqueInput>
    update?: Enumerable<sof_bunker_figuresUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_bunker_figuresUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_bunker_figuresScalarWhereInput>
  }

  export type ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sofNestedInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutShipping_sofInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutShipping_sofInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutShipping_sofInput>
    upsert?: Enumerable<ShippingSofPortLogEventsUpsertWithWhereUniqueWithoutShipping_sofInput>
    createMany?: ShippingSofPortLogEventsCreateManyShipping_sofInputEnvelope
    set?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    disconnect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    delete?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    update?: Enumerable<ShippingSofPortLogEventsUpdateWithWhereUniqueWithoutShipping_sofInput>
    updateMany?: Enumerable<ShippingSofPortLogEventsUpdateManyWithWhereWithoutShipping_sofInput>
    deleteMany?: Enumerable<ShippingSofPortLogEventsScalarWhereInput>
  }

  export type sof_shipper_cargoUncheckedUpdateManyWithoutSofNestedInput = {
    create?: XOR<Enumerable<sof_shipper_cargoCreateWithoutSofInput>, Enumerable<sof_shipper_cargoUncheckedCreateWithoutSofInput>>
    connectOrCreate?: Enumerable<sof_shipper_cargoCreateOrConnectWithoutSofInput>
    upsert?: Enumerable<sof_shipper_cargoUpsertWithWhereUniqueWithoutSofInput>
    createMany?: sof_shipper_cargoCreateManySofInputEnvelope
    set?: Enumerable<sof_shipper_cargoWhereUniqueInput>
    disconnect?: Enumerable<sof_shipper_cargoWhereUniqueInput>
    delete?: Enumerable<sof_shipper_cargoWhereUniqueInput>
    connect?: Enumerable<sof_shipper_cargoWhereUniqueInput>
    update?: Enumerable<sof_shipper_cargoUpdateWithWhereUniqueWithoutSofInput>
    updateMany?: Enumerable<sof_shipper_cargoUpdateManyWithWhereWithoutSofInput>
    deleteMany?: Enumerable<sof_shipper_cargoScalarWhereInput>
  }

  export type sofCreateNestedOneWithoutSof_holidaysInput = {
    create?: XOR<sofCreateWithoutSof_holidaysInput, sofUncheckedCreateWithoutSof_holidaysInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_holidaysInput
    connect?: sofWhereUniqueInput
  }

  export type sofUpdateOneWithoutSof_holidaysNestedInput = {
    create?: XOR<sofCreateWithoutSof_holidaysInput, sofUncheckedCreateWithoutSof_holidaysInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_holidaysInput
    upsert?: sofUpsertWithoutSof_holidaysInput
    disconnect?: boolean
    delete?: boolean
    connect?: sofWhereUniqueInput
    update?: XOR<sofUpdateWithoutSof_holidaysInput, sofUncheckedUpdateWithoutSof_holidaysInput>
  }

  export type sofCreateNestedOneWithoutSof_remarksInput = {
    create?: XOR<sofCreateWithoutSof_remarksInput, sofUncheckedCreateWithoutSof_remarksInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_remarksInput
    connect?: sofWhereUniqueInput
  }

  export type sof_remarks_itemsCreateNestedManyWithoutSof_remarksInput = {
    create?: XOR<Enumerable<sof_remarks_itemsCreateWithoutSof_remarksInput>, Enumerable<sof_remarks_itemsUncheckedCreateWithoutSof_remarksInput>>
    connectOrCreate?: Enumerable<sof_remarks_itemsCreateOrConnectWithoutSof_remarksInput>
    createMany?: sof_remarks_itemsCreateManySof_remarksInputEnvelope
    connect?: Enumerable<sof_remarks_itemsWhereUniqueInput>
  }

  export type sof_remarks_itemsUncheckedCreateNestedManyWithoutSof_remarksInput = {
    create?: XOR<Enumerable<sof_remarks_itemsCreateWithoutSof_remarksInput>, Enumerable<sof_remarks_itemsUncheckedCreateWithoutSof_remarksInput>>
    connectOrCreate?: Enumerable<sof_remarks_itemsCreateOrConnectWithoutSof_remarksInput>
    createMany?: sof_remarks_itemsCreateManySof_remarksInputEnvelope
    connect?: Enumerable<sof_remarks_itemsWhereUniqueInput>
  }

  export type sofUpdateOneWithoutSof_remarksNestedInput = {
    create?: XOR<sofCreateWithoutSof_remarksInput, sofUncheckedCreateWithoutSof_remarksInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_remarksInput
    upsert?: sofUpsertWithoutSof_remarksInput
    disconnect?: boolean
    delete?: boolean
    connect?: sofWhereUniqueInput
    update?: XOR<sofUpdateWithoutSof_remarksInput, sofUncheckedUpdateWithoutSof_remarksInput>
  }

  export type sof_remarks_itemsUpdateManyWithoutSof_remarksNestedInput = {
    create?: XOR<Enumerable<sof_remarks_itemsCreateWithoutSof_remarksInput>, Enumerable<sof_remarks_itemsUncheckedCreateWithoutSof_remarksInput>>
    connectOrCreate?: Enumerable<sof_remarks_itemsCreateOrConnectWithoutSof_remarksInput>
    upsert?: Enumerable<sof_remarks_itemsUpsertWithWhereUniqueWithoutSof_remarksInput>
    createMany?: sof_remarks_itemsCreateManySof_remarksInputEnvelope
    set?: Enumerable<sof_remarks_itemsWhereUniqueInput>
    disconnect?: Enumerable<sof_remarks_itemsWhereUniqueInput>
    delete?: Enumerable<sof_remarks_itemsWhereUniqueInput>
    connect?: Enumerable<sof_remarks_itemsWhereUniqueInput>
    update?: Enumerable<sof_remarks_itemsUpdateWithWhereUniqueWithoutSof_remarksInput>
    updateMany?: Enumerable<sof_remarks_itemsUpdateManyWithWhereWithoutSof_remarksInput>
    deleteMany?: Enumerable<sof_remarks_itemsScalarWhereInput>
  }

  export type sof_remarks_itemsUncheckedUpdateManyWithoutSof_remarksNestedInput = {
    create?: XOR<Enumerable<sof_remarks_itemsCreateWithoutSof_remarksInput>, Enumerable<sof_remarks_itemsUncheckedCreateWithoutSof_remarksInput>>
    connectOrCreate?: Enumerable<sof_remarks_itemsCreateOrConnectWithoutSof_remarksInput>
    upsert?: Enumerable<sof_remarks_itemsUpsertWithWhereUniqueWithoutSof_remarksInput>
    createMany?: sof_remarks_itemsCreateManySof_remarksInputEnvelope
    set?: Enumerable<sof_remarks_itemsWhereUniqueInput>
    disconnect?: Enumerable<sof_remarks_itemsWhereUniqueInput>
    delete?: Enumerable<sof_remarks_itemsWhereUniqueInput>
    connect?: Enumerable<sof_remarks_itemsWhereUniqueInput>
    update?: Enumerable<sof_remarks_itemsUpdateWithWhereUniqueWithoutSof_remarksInput>
    updateMany?: Enumerable<sof_remarks_itemsUpdateManyWithWhereWithoutSof_remarksInput>
    deleteMany?: Enumerable<sof_remarks_itemsScalarWhereInput>
  }

  export type sof_remarksCreateNestedOneWithoutSof_remarks_itensInput = {
    create?: XOR<sof_remarksCreateWithoutSof_remarks_itensInput, sof_remarksUncheckedCreateWithoutSof_remarks_itensInput>
    connectOrCreate?: sof_remarksCreateOrConnectWithoutSof_remarks_itensInput
    connect?: sof_remarksWhereUniqueInput
  }

  export type sof_remarksUpdateOneWithoutSof_remarks_itensNestedInput = {
    create?: XOR<sof_remarksCreateWithoutSof_remarks_itensInput, sof_remarksUncheckedCreateWithoutSof_remarks_itensInput>
    connectOrCreate?: sof_remarksCreateOrConnectWithoutSof_remarks_itensInput
    upsert?: sof_remarksUpsertWithoutSof_remarks_itensInput
    disconnect?: boolean
    delete?: boolean
    connect?: sof_remarksWhereUniqueInput
    update?: XOR<sof_remarksUpdateWithoutSof_remarks_itensInput, sof_remarksUncheckedUpdateWithoutSof_remarks_itensInput>
  }

  export type sofCreateNestedOneWithoutSof_draftInput = {
    create?: XOR<sofCreateWithoutSof_draftInput, sofUncheckedCreateWithoutSof_draftInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_draftInput
    connect?: sofWhereUniqueInput
  }

  export type sofUpdateOneWithoutSof_draftNestedInput = {
    create?: XOR<sofCreateWithoutSof_draftInput, sofUncheckedCreateWithoutSof_draftInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_draftInput
    upsert?: sofUpsertWithoutSof_draftInput
    disconnect?: boolean
    delete?: boolean
    connect?: sofWhereUniqueInput
    update?: XOR<sofUpdateWithoutSof_draftInput, sofUncheckedUpdateWithoutSof_draftInput>
  }

  export type sofCreateNestedOneWithoutSof_bunker_figuresInput = {
    create?: XOR<sofCreateWithoutSof_bunker_figuresInput, sofUncheckedCreateWithoutSof_bunker_figuresInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_bunker_figuresInput
    connect?: sofWhereUniqueInput
  }

  export type sofUpdateOneWithoutSof_bunker_figuresNestedInput = {
    create?: XOR<sofCreateWithoutSof_bunker_figuresInput, sofUncheckedCreateWithoutSof_bunker_figuresInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_bunker_figuresInput
    upsert?: sofUpsertWithoutSof_bunker_figuresInput
    disconnect?: boolean
    delete?: boolean
    connect?: sofWhereUniqueInput
    update?: XOR<sofUpdateWithoutSof_bunker_figuresInput, sofUncheckedUpdateWithoutSof_bunker_figuresInput>
  }

  export type SofPortLogEventsCreateNestedManyWithoutCategoryInput = {
    create?: XOR<Enumerable<SofPortLogEventsCreateWithoutCategoryInput>, Enumerable<SofPortLogEventsUncheckedCreateWithoutCategoryInput>>
    connectOrCreate?: Enumerable<SofPortLogEventsCreateOrConnectWithoutCategoryInput>
    createMany?: SofPortLogEventsCreateManyCategoryInputEnvelope
    connect?: Enumerable<SofPortLogEventsWhereUniqueInput>
  }

  export type SofPortLogEventsUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<Enumerable<SofPortLogEventsCreateWithoutCategoryInput>, Enumerable<SofPortLogEventsUncheckedCreateWithoutCategoryInput>>
    connectOrCreate?: Enumerable<SofPortLogEventsCreateOrConnectWithoutCategoryInput>
    createMany?: SofPortLogEventsCreateManyCategoryInputEnvelope
    connect?: Enumerable<SofPortLogEventsWhereUniqueInput>
  }

  export type SofPortLogEventsUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<Enumerable<SofPortLogEventsCreateWithoutCategoryInput>, Enumerable<SofPortLogEventsUncheckedCreateWithoutCategoryInput>>
    connectOrCreate?: Enumerable<SofPortLogEventsCreateOrConnectWithoutCategoryInput>
    upsert?: Enumerable<SofPortLogEventsUpsertWithWhereUniqueWithoutCategoryInput>
    createMany?: SofPortLogEventsCreateManyCategoryInputEnvelope
    set?: Enumerable<SofPortLogEventsWhereUniqueInput>
    disconnect?: Enumerable<SofPortLogEventsWhereUniqueInput>
    delete?: Enumerable<SofPortLogEventsWhereUniqueInput>
    connect?: Enumerable<SofPortLogEventsWhereUniqueInput>
    update?: Enumerable<SofPortLogEventsUpdateWithWhereUniqueWithoutCategoryInput>
    updateMany?: Enumerable<SofPortLogEventsUpdateManyWithWhereWithoutCategoryInput>
    deleteMany?: Enumerable<SofPortLogEventsScalarWhereInput>
  }

  export type SofPortLogEventsUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<Enumerable<SofPortLogEventsCreateWithoutCategoryInput>, Enumerable<SofPortLogEventsUncheckedCreateWithoutCategoryInput>>
    connectOrCreate?: Enumerable<SofPortLogEventsCreateOrConnectWithoutCategoryInput>
    upsert?: Enumerable<SofPortLogEventsUpsertWithWhereUniqueWithoutCategoryInput>
    createMany?: SofPortLogEventsCreateManyCategoryInputEnvelope
    set?: Enumerable<SofPortLogEventsWhereUniqueInput>
    disconnect?: Enumerable<SofPortLogEventsWhereUniqueInput>
    delete?: Enumerable<SofPortLogEventsWhereUniqueInput>
    connect?: Enumerable<SofPortLogEventsWhereUniqueInput>
    update?: Enumerable<SofPortLogEventsUpdateWithWhereUniqueWithoutCategoryInput>
    updateMany?: Enumerable<SofPortLogEventsUpdateManyWithWhereWithoutCategoryInput>
    deleteMany?: Enumerable<SofPortLogEventsScalarWhereInput>
  }

  export type SofPortLogEventCategoriesCreateNestedOneWithoutEventsInput = {
    create?: XOR<SofPortLogEventCategoriesCreateWithoutEventsInput, SofPortLogEventCategoriesUncheckedCreateWithoutEventsInput>
    connectOrCreate?: SofPortLogEventCategoriesCreateOrConnectWithoutEventsInput
    connect?: SofPortLogEventCategoriesWhereUniqueInput
  }

  export type ShippingSofPortLogEventsCreateNestedManyWithoutSof_port_log_eventInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutSof_port_log_eventInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutSof_port_log_eventInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutSof_port_log_eventInput>
    createMany?: ShippingSofPortLogEventsCreateManySof_port_log_eventInputEnvelope
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
  }

  export type ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutSof_port_log_eventInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutSof_port_log_eventInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutSof_port_log_eventInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutSof_port_log_eventInput>
    createMany?: ShippingSofPortLogEventsCreateManySof_port_log_eventInputEnvelope
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
  }

  export type SofPortLogEventCategoriesUpdateOneWithoutEventsNestedInput = {
    create?: XOR<SofPortLogEventCategoriesCreateWithoutEventsInput, SofPortLogEventCategoriesUncheckedCreateWithoutEventsInput>
    connectOrCreate?: SofPortLogEventCategoriesCreateOrConnectWithoutEventsInput
    upsert?: SofPortLogEventCategoriesUpsertWithoutEventsInput
    disconnect?: boolean
    delete?: boolean
    connect?: SofPortLogEventCategoriesWhereUniqueInput
    update?: XOR<SofPortLogEventCategoriesUpdateWithoutEventsInput, SofPortLogEventCategoriesUncheckedUpdateWithoutEventsInput>
  }

  export type ShippingSofPortLogEventsUpdateManyWithoutSof_port_log_eventNestedInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutSof_port_log_eventInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutSof_port_log_eventInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutSof_port_log_eventInput>
    upsert?: Enumerable<ShippingSofPortLogEventsUpsertWithWhereUniqueWithoutSof_port_log_eventInput>
    createMany?: ShippingSofPortLogEventsCreateManySof_port_log_eventInputEnvelope
    set?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    disconnect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    delete?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    update?: Enumerable<ShippingSofPortLogEventsUpdateWithWhereUniqueWithoutSof_port_log_eventInput>
    updateMany?: Enumerable<ShippingSofPortLogEventsUpdateManyWithWhereWithoutSof_port_log_eventInput>
    deleteMany?: Enumerable<ShippingSofPortLogEventsScalarWhereInput>
  }

  export type ShippingSofPortLogEventsUncheckedUpdateManyWithoutSof_port_log_eventNestedInput = {
    create?: XOR<Enumerable<ShippingSofPortLogEventsCreateWithoutSof_port_log_eventInput>, Enumerable<ShippingSofPortLogEventsUncheckedCreateWithoutSof_port_log_eventInput>>
    connectOrCreate?: Enumerable<ShippingSofPortLogEventsCreateOrConnectWithoutSof_port_log_eventInput>
    upsert?: Enumerable<ShippingSofPortLogEventsUpsertWithWhereUniqueWithoutSof_port_log_eventInput>
    createMany?: ShippingSofPortLogEventsCreateManySof_port_log_eventInputEnvelope
    set?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    disconnect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    delete?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    connect?: Enumerable<ShippingSofPortLogEventsWhereUniqueInput>
    update?: Enumerable<ShippingSofPortLogEventsUpdateWithWhereUniqueWithoutSof_port_log_eventInput>
    updateMany?: Enumerable<ShippingSofPortLogEventsUpdateManyWithWhereWithoutSof_port_log_eventInput>
    deleteMany?: Enumerable<ShippingSofPortLogEventsScalarWhereInput>
  }

  export type SofPortLogEventsCreateNestedOneWithoutShippingSofPortLogEventsInput = {
    create?: XOR<SofPortLogEventsCreateWithoutShippingSofPortLogEventsInput, SofPortLogEventsUncheckedCreateWithoutShippingSofPortLogEventsInput>
    connectOrCreate?: SofPortLogEventsCreateOrConnectWithoutShippingSofPortLogEventsInput
    connect?: SofPortLogEventsWhereUniqueInput
  }

  export type sofCreateNestedOneWithoutSof_port_log_eventsInput = {
    create?: XOR<sofCreateWithoutSof_port_log_eventsInput, sofUncheckedCreateWithoutSof_port_log_eventsInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_port_log_eventsInput
    connect?: sofWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutShipping_sof_port_log_eventsInput = {
    create?: XOR<usersCreateWithoutShipping_sof_port_log_eventsInput, usersUncheckedCreateWithoutShipping_sof_port_log_eventsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_sof_port_log_eventsInput
    connect?: usersWhereUniqueInput
  }

  export type SofPortLogEventsUpdateOneWithoutShippingSofPortLogEventsNestedInput = {
    create?: XOR<SofPortLogEventsCreateWithoutShippingSofPortLogEventsInput, SofPortLogEventsUncheckedCreateWithoutShippingSofPortLogEventsInput>
    connectOrCreate?: SofPortLogEventsCreateOrConnectWithoutShippingSofPortLogEventsInput
    upsert?: SofPortLogEventsUpsertWithoutShippingSofPortLogEventsInput
    disconnect?: boolean
    delete?: boolean
    connect?: SofPortLogEventsWhereUniqueInput
    update?: XOR<SofPortLogEventsUpdateWithoutShippingSofPortLogEventsInput, SofPortLogEventsUncheckedUpdateWithoutShippingSofPortLogEventsInput>
  }

  export type sofUpdateOneWithoutSof_port_log_eventsNestedInput = {
    create?: XOR<sofCreateWithoutSof_port_log_eventsInput, sofUncheckedCreateWithoutSof_port_log_eventsInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_port_log_eventsInput
    upsert?: sofUpsertWithoutSof_port_log_eventsInput
    disconnect?: boolean
    delete?: boolean
    connect?: sofWhereUniqueInput
    update?: XOR<sofUpdateWithoutSof_port_log_eventsInput, sofUncheckedUpdateWithoutSof_port_log_eventsInput>
  }

  export type usersUpdateOneWithoutShipping_sof_port_log_eventsNestedInput = {
    create?: XOR<usersCreateWithoutShipping_sof_port_log_eventsInput, usersUncheckedCreateWithoutShipping_sof_port_log_eventsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShipping_sof_port_log_eventsInput
    upsert?: usersUpsertWithoutShipping_sof_port_log_eventsInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutShipping_sof_port_log_eventsInput, usersUncheckedUpdateWithoutShipping_sof_port_log_eventsInput>
  }

  export type sofCreateNestedOneWithoutSof_shipper_cargoInput = {
    create?: XOR<sofCreateWithoutSof_shipper_cargoInput, sofUncheckedCreateWithoutSof_shipper_cargoInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_shipper_cargoInput
    connect?: sofWhereUniqueInput
  }

  export type sof_shipperCreateNestedManyWithoutSof_shipper_cargoInput = {
    create?: XOR<Enumerable<sof_shipperCreateWithoutSof_shipper_cargoInput>, Enumerable<sof_shipperUncheckedCreateWithoutSof_shipper_cargoInput>>
    connectOrCreate?: Enumerable<sof_shipperCreateOrConnectWithoutSof_shipper_cargoInput>
    createMany?: sof_shipperCreateManySof_shipper_cargoInputEnvelope
    connect?: Enumerable<sof_shipperWhereUniqueInput>
  }

  export type sof_shipper_valueCreateNestedManyWithoutSof_shipper_cargoInput = {
    create?: XOR<Enumerable<sof_shipper_valueCreateWithoutSof_shipper_cargoInput>, Enumerable<sof_shipper_valueUncheckedCreateWithoutSof_shipper_cargoInput>>
    connectOrCreate?: Enumerable<sof_shipper_valueCreateOrConnectWithoutSof_shipper_cargoInput>
    createMany?: sof_shipper_valueCreateManySof_shipper_cargoInputEnvelope
    connect?: Enumerable<sof_shipper_valueWhereUniqueInput>
  }

  export type sof_shipperUncheckedCreateNestedManyWithoutSof_shipper_cargoInput = {
    create?: XOR<Enumerable<sof_shipperCreateWithoutSof_shipper_cargoInput>, Enumerable<sof_shipperUncheckedCreateWithoutSof_shipper_cargoInput>>
    connectOrCreate?: Enumerable<sof_shipperCreateOrConnectWithoutSof_shipper_cargoInput>
    createMany?: sof_shipperCreateManySof_shipper_cargoInputEnvelope
    connect?: Enumerable<sof_shipperWhereUniqueInput>
  }

  export type sof_shipper_valueUncheckedCreateNestedManyWithoutSof_shipper_cargoInput = {
    create?: XOR<Enumerable<sof_shipper_valueCreateWithoutSof_shipper_cargoInput>, Enumerable<sof_shipper_valueUncheckedCreateWithoutSof_shipper_cargoInput>>
    connectOrCreate?: Enumerable<sof_shipper_valueCreateOrConnectWithoutSof_shipper_cargoInput>
    createMany?: sof_shipper_valueCreateManySof_shipper_cargoInputEnvelope
    connect?: Enumerable<sof_shipper_valueWhereUniqueInput>
  }

  export type sofUpdateOneWithoutSof_shipper_cargoNestedInput = {
    create?: XOR<sofCreateWithoutSof_shipper_cargoInput, sofUncheckedCreateWithoutSof_shipper_cargoInput>
    connectOrCreate?: sofCreateOrConnectWithoutSof_shipper_cargoInput
    upsert?: sofUpsertWithoutSof_shipper_cargoInput
    disconnect?: boolean
    delete?: boolean
    connect?: sofWhereUniqueInput
    update?: XOR<sofUpdateWithoutSof_shipper_cargoInput, sofUncheckedUpdateWithoutSof_shipper_cargoInput>
  }

  export type sof_shipperUpdateManyWithoutSof_shipper_cargoNestedInput = {
    create?: XOR<Enumerable<sof_shipperCreateWithoutSof_shipper_cargoInput>, Enumerable<sof_shipperUncheckedCreateWithoutSof_shipper_cargoInput>>
    connectOrCreate?: Enumerable<sof_shipperCreateOrConnectWithoutSof_shipper_cargoInput>
    upsert?: Enumerable<sof_shipperUpsertWithWhereUniqueWithoutSof_shipper_cargoInput>
    createMany?: sof_shipperCreateManySof_shipper_cargoInputEnvelope
    set?: Enumerable<sof_shipperWhereUniqueInput>
    disconnect?: Enumerable<sof_shipperWhereUniqueInput>
    delete?: Enumerable<sof_shipperWhereUniqueInput>
    connect?: Enumerable<sof_shipperWhereUniqueInput>
    update?: Enumerable<sof_shipperUpdateWithWhereUniqueWithoutSof_shipper_cargoInput>
    updateMany?: Enumerable<sof_shipperUpdateManyWithWhereWithoutSof_shipper_cargoInput>
    deleteMany?: Enumerable<sof_shipperScalarWhereInput>
  }

  export type sof_shipper_valueUpdateManyWithoutSof_shipper_cargoNestedInput = {
    create?: XOR<Enumerable<sof_shipper_valueCreateWithoutSof_shipper_cargoInput>, Enumerable<sof_shipper_valueUncheckedCreateWithoutSof_shipper_cargoInput>>
    connectOrCreate?: Enumerable<sof_shipper_valueCreateOrConnectWithoutSof_shipper_cargoInput>
    upsert?: Enumerable<sof_shipper_valueUpsertWithWhereUniqueWithoutSof_shipper_cargoInput>
    createMany?: sof_shipper_valueCreateManySof_shipper_cargoInputEnvelope
    set?: Enumerable<sof_shipper_valueWhereUniqueInput>
    disconnect?: Enumerable<sof_shipper_valueWhereUniqueInput>
    delete?: Enumerable<sof_shipper_valueWhereUniqueInput>
    connect?: Enumerable<sof_shipper_valueWhereUniqueInput>
    update?: Enumerable<sof_shipper_valueUpdateWithWhereUniqueWithoutSof_shipper_cargoInput>
    updateMany?: Enumerable<sof_shipper_valueUpdateManyWithWhereWithoutSof_shipper_cargoInput>
    deleteMany?: Enumerable<sof_shipper_valueScalarWhereInput>
  }

  export type sof_shipperUncheckedUpdateManyWithoutSof_shipper_cargoNestedInput = {
    create?: XOR<Enumerable<sof_shipperCreateWithoutSof_shipper_cargoInput>, Enumerable<sof_shipperUncheckedCreateWithoutSof_shipper_cargoInput>>
    connectOrCreate?: Enumerable<sof_shipperCreateOrConnectWithoutSof_shipper_cargoInput>
    upsert?: Enumerable<sof_shipperUpsertWithWhereUniqueWithoutSof_shipper_cargoInput>
    createMany?: sof_shipperCreateManySof_shipper_cargoInputEnvelope
    set?: Enumerable<sof_shipperWhereUniqueInput>
    disconnect?: Enumerable<sof_shipperWhereUniqueInput>
    delete?: Enumerable<sof_shipperWhereUniqueInput>
    connect?: Enumerable<sof_shipperWhereUniqueInput>
    update?: Enumerable<sof_shipperUpdateWithWhereUniqueWithoutSof_shipper_cargoInput>
    updateMany?: Enumerable<sof_shipperUpdateManyWithWhereWithoutSof_shipper_cargoInput>
    deleteMany?: Enumerable<sof_shipperScalarWhereInput>
  }

  export type sof_shipper_valueUncheckedUpdateManyWithoutSof_shipper_cargoNestedInput = {
    create?: XOR<Enumerable<sof_shipper_valueCreateWithoutSof_shipper_cargoInput>, Enumerable<sof_shipper_valueUncheckedCreateWithoutSof_shipper_cargoInput>>
    connectOrCreate?: Enumerable<sof_shipper_valueCreateOrConnectWithoutSof_shipper_cargoInput>
    upsert?: Enumerable<sof_shipper_valueUpsertWithWhereUniqueWithoutSof_shipper_cargoInput>
    createMany?: sof_shipper_valueCreateManySof_shipper_cargoInputEnvelope
    set?: Enumerable<sof_shipper_valueWhereUniqueInput>
    disconnect?: Enumerable<sof_shipper_valueWhereUniqueInput>
    delete?: Enumerable<sof_shipper_valueWhereUniqueInput>
    connect?: Enumerable<sof_shipper_valueWhereUniqueInput>
    update?: Enumerable<sof_shipper_valueUpdateWithWhereUniqueWithoutSof_shipper_cargoInput>
    updateMany?: Enumerable<sof_shipper_valueUpdateManyWithWhereWithoutSof_shipper_cargoInput>
    deleteMany?: Enumerable<sof_shipper_valueScalarWhereInput>
  }

  export type sof_shipper_cargoCreateNestedOneWithoutSof_shipperInput = {
    create?: XOR<sof_shipper_cargoCreateWithoutSof_shipperInput, sof_shipper_cargoUncheckedCreateWithoutSof_shipperInput>
    connectOrCreate?: sof_shipper_cargoCreateOrConnectWithoutSof_shipperInput
    connect?: sof_shipper_cargoWhereUniqueInput
  }

  export type sof_shipper_cargoUpdateOneWithoutSof_shipperNestedInput = {
    create?: XOR<sof_shipper_cargoCreateWithoutSof_shipperInput, sof_shipper_cargoUncheckedCreateWithoutSof_shipperInput>
    connectOrCreate?: sof_shipper_cargoCreateOrConnectWithoutSof_shipperInput
    upsert?: sof_shipper_cargoUpsertWithoutSof_shipperInput
    disconnect?: boolean
    delete?: boolean
    connect?: sof_shipper_cargoWhereUniqueInput
    update?: XOR<sof_shipper_cargoUpdateWithoutSof_shipperInput, sof_shipper_cargoUncheckedUpdateWithoutSof_shipperInput>
  }

  export type sof_shipper_cargoCreateNestedOneWithoutSof_shipper_valueInput = {
    create?: XOR<sof_shipper_cargoCreateWithoutSof_shipper_valueInput, sof_shipper_cargoUncheckedCreateWithoutSof_shipper_valueInput>
    connectOrCreate?: sof_shipper_cargoCreateOrConnectWithoutSof_shipper_valueInput
    connect?: sof_shipper_cargoWhereUniqueInput
  }

  export type sof_shipper_cargoUpdateOneWithoutSof_shipper_valueNestedInput = {
    create?: XOR<sof_shipper_cargoCreateWithoutSof_shipper_valueInput, sof_shipper_cargoUncheckedCreateWithoutSof_shipper_valueInput>
    connectOrCreate?: sof_shipper_cargoCreateOrConnectWithoutSof_shipper_valueInput
    upsert?: sof_shipper_cargoUpsertWithoutSof_shipper_valueInput
    disconnect?: boolean
    delete?: boolean
    connect?: sof_shipper_cargoWhereUniqueInput
    update?: XOR<sof_shipper_cargoUpdateWithoutSof_shipper_valueInput, sof_shipper_cargoUncheckedUpdateWithoutSof_shipper_valueInput>
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedDateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedDateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type NestedFloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedBoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type NestedBoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type NestedBoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }

  export type CountryCreateWithoutAgencyInput = {
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsCreateNestedManyWithoutCountryInput
    vessels?: VesselCreateNestedManyWithoutCountryInput
  }

  export type CountryUncheckedCreateWithoutAgencyInput = {
    id?: number
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsUncheckedCreateNestedManyWithoutCountryInput
    vessels?: VesselUncheckedCreateNestedManyWithoutCountryInput
  }

  export type CountryCreateOrConnectWithoutAgencyInput = {
    where: CountryWhereUniqueInput
    create: XOR<CountryCreateWithoutAgencyInput, CountryUncheckedCreateWithoutAgencyInput>
  }

  export type usersCreateWithoutAgencyInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutAgencyInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutAgencyInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutAgencyInput, usersUncheckedCreateWithoutAgencyInput>
  }

  export type usersCreateManyAgencyInputEnvelope = {
    data: Enumerable<usersCreateManyAgencyInput>
    skipDuplicates?: boolean
  }

  export type ChecklistTemplateCreateWithoutAgencyInput = {
    name: string
    operation_type?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    items?: ChecklistTemplateItemCreateNestedManyWithoutChecklistTemplateInput
  }

  export type ChecklistTemplateUncheckedCreateWithoutAgencyInput = {
    id?: number
    name: string
    operation_type?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    items?: ChecklistTemplateItemUncheckedCreateNestedManyWithoutChecklistTemplateInput
  }

  export type ChecklistTemplateCreateOrConnectWithoutAgencyInput = {
    where: ChecklistTemplateWhereUniqueInput
    create: XOR<ChecklistTemplateCreateWithoutAgencyInput, ChecklistTemplateUncheckedCreateWithoutAgencyInput>
  }

  export type ChecklistTemplateCreateManyAgencyInputEnvelope = {
    data: Enumerable<ChecklistTemplateCreateManyAgencyInput>
    skipDuplicates?: boolean
  }

  export type CountryUpsertWithoutAgencyInput = {
    update: XOR<CountryUpdateWithoutAgencyInput, CountryUncheckedUpdateWithoutAgencyInput>
    create: XOR<CountryCreateWithoutAgencyInput, CountryUncheckedCreateWithoutAgencyInput>
  }

  export type CountryUpdateWithoutAgencyInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUpdateManyWithoutCountryNestedInput
    vessels?: VesselUpdateManyWithoutCountryNestedInput
  }

  export type CountryUncheckedUpdateWithoutAgencyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUncheckedUpdateManyWithoutCountryNestedInput
    vessels?: VesselUncheckedUpdateManyWithoutCountryNestedInput
  }

  export type usersUpsertWithWhereUniqueWithoutAgencyInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutAgencyInput, usersUncheckedUpdateWithoutAgencyInput>
    create: XOR<usersCreateWithoutAgencyInput, usersUncheckedCreateWithoutAgencyInput>
  }

  export type usersUpdateWithWhereUniqueWithoutAgencyInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutAgencyInput, usersUncheckedUpdateWithoutAgencyInput>
  }

  export type usersUpdateManyWithWhereWithoutAgencyInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutUsersInput>
  }

  export type usersScalarWhereInput = {
    AND?: Enumerable<usersScalarWhereInput>
    OR?: Enumerable<usersScalarWhereInput>
    NOT?: Enumerable<usersScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    email?: StringNullableFilter | string | null
    password?: StringNullableFilter | string | null
    agencyId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type ChecklistTemplateUpsertWithWhereUniqueWithoutAgencyInput = {
    where: ChecklistTemplateWhereUniqueInput
    update: XOR<ChecklistTemplateUpdateWithoutAgencyInput, ChecklistTemplateUncheckedUpdateWithoutAgencyInput>
    create: XOR<ChecklistTemplateCreateWithoutAgencyInput, ChecklistTemplateUncheckedCreateWithoutAgencyInput>
  }

  export type ChecklistTemplateUpdateWithWhereUniqueWithoutAgencyInput = {
    where: ChecklistTemplateWhereUniqueInput
    data: XOR<ChecklistTemplateUpdateWithoutAgencyInput, ChecklistTemplateUncheckedUpdateWithoutAgencyInput>
  }

  export type ChecklistTemplateUpdateManyWithWhereWithoutAgencyInput = {
    where: ChecklistTemplateScalarWhereInput
    data: XOR<ChecklistTemplateUpdateManyMutationInput, ChecklistTemplateUncheckedUpdateManyWithoutChecklistTemplateInput>
  }

  export type ChecklistTemplateScalarWhereInput = {
    AND?: Enumerable<ChecklistTemplateScalarWhereInput>
    OR?: Enumerable<ChecklistTemplateScalarWhereInput>
    NOT?: Enumerable<ChecklistTemplateScalarWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    operation_type?: StringNullableFilter | string | null
    agency_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type berthsCreateWithoutBerth_productsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    ports?: portsCreateNestedOneWithoutBerthsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutBerthsInput
  }

  export type berthsUncheckedCreateWithoutBerth_productsInput = {
    id?: number
    name?: string | null
    description?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutBerthsInput
  }

  export type berthsCreateOrConnectWithoutBerth_productsInput = {
    where: berthsWhereUniqueInput
    create: XOR<berthsCreateWithoutBerth_productsInput, berthsUncheckedCreateWithoutBerth_productsInput>
  }

  export type productsCreateWithoutBerth_productsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_products?: ShippingProductCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateWithoutBerth_productsInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsCreateOrConnectWithoutBerth_productsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutBerth_productsInput, productsUncheckedCreateWithoutBerth_productsInput>
  }

  export type proformasCreateWithoutBerth_productsInput = {
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    proforma_files?: proforma_filesCreateNestedManyWithoutProformasInput
  }

  export type proformasUncheckedCreateWithoutBerth_productsInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    proforma_files?: proforma_filesUncheckedCreateNestedManyWithoutProformasInput
  }

  export type proformasCreateOrConnectWithoutBerth_productsInput = {
    where: proformasWhereUniqueInput
    create: XOR<proformasCreateWithoutBerth_productsInput, proformasUncheckedCreateWithoutBerth_productsInput>
  }

  export type proformasCreateManyBerth_productsInputEnvelope = {
    data: Enumerable<proformasCreateManyBerth_productsInput>
    skipDuplicates?: boolean
  }

  export type berthsUpsertWithoutBerth_productsInput = {
    update: XOR<berthsUpdateWithoutBerth_productsInput, berthsUncheckedUpdateWithoutBerth_productsInput>
    create: XOR<berthsCreateWithoutBerth_productsInput, berthsUncheckedCreateWithoutBerth_productsInput>
  }

  export type berthsUpdateWithoutBerth_productsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    ports?: portsUpdateOneWithoutBerthsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutBerthsNestedInput
  }

  export type berthsUncheckedUpdateWithoutBerth_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutBerthsNestedInput
  }

  export type productsUpsertWithoutBerth_productsInput = {
    update: XOR<productsUpdateWithoutBerth_productsInput, productsUncheckedUpdateWithoutBerth_productsInput>
    create: XOR<productsCreateWithoutBerth_productsInput, productsUncheckedCreateWithoutBerth_productsInput>
  }

  export type productsUpdateWithoutBerth_productsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_products?: ShippingProductUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateWithoutBerth_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutProductNestedInput
  }

  export type proformasUpsertWithWhereUniqueWithoutBerth_productsInput = {
    where: proformasWhereUniqueInput
    update: XOR<proformasUpdateWithoutBerth_productsInput, proformasUncheckedUpdateWithoutBerth_productsInput>
    create: XOR<proformasCreateWithoutBerth_productsInput, proformasUncheckedCreateWithoutBerth_productsInput>
  }

  export type proformasUpdateWithWhereUniqueWithoutBerth_productsInput = {
    where: proformasWhereUniqueInput
    data: XOR<proformasUpdateWithoutBerth_productsInput, proformasUncheckedUpdateWithoutBerth_productsInput>
  }

  export type proformasUpdateManyWithWhereWithoutBerth_productsInput = {
    where: proformasScalarWhereInput
    data: XOR<proformasUpdateManyMutationInput, proformasUncheckedUpdateManyWithoutProformasInput>
  }

  export type proformasScalarWhereInput = {
    AND?: Enumerable<proformasScalarWhereInput>
    OR?: Enumerable<proformasScalarWhereInput>
    NOT?: Enumerable<proformasScalarWhereInput>
    id?: IntFilter | number
    taxes?: StringNullableFilter | string | null
    totalValue?: IntNullableFilter | number | null
    berthedHours?: FloatNullableFilter | number | null
    berthProductId?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    idHash?: StringNullableFilter | string | null
    applicantName?: StringNullableFilter | string | null
    applicantEmail?: StringNullableFilter | string | null
    vesselName?: StringNullableFilter | string | null
    imo?: StringNullableFilter | string | null
    deadWeightTonnage?: FloatNullableFilter | number | null
    lengthOverall?: FloatNullableFilter | number | null
    grossTonnage?: FloatNullableFilter | number | null
    package?: StringNullableFilter | string | null
    builtYear?: IntNullableFilter | number | null
    agencyType?: StringNullableFilter | string | null
    operationType?: StringNullableFilter | string | null
    productTonnage?: FloatNullableFilter | number | null
    usd?: FloatNullableFilter | number | null
    isCargillInternational?: BoolNullableFilter | boolean | null
    beam?: FloatNullableFilter | number | null
    etb?: DateTimeNullableFilter | Date | string | null
    draft?: FloatNullableFilter | number | null
    requestingCustomer?: StringNullableFilter | string | null
    vesselType?: StringNullableFilter | string | null
  }

  export type portsCreateWithoutBerthsInput = {
    name?: string | null
    time_zone?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    country?: CountryCreateNestedOneWithoutPortsInput
    port_files?: port_filesCreateNestedManyWithoutPortsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateWithoutBerthsInput = {
    id?: number
    name?: string | null
    time_zone?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    port_files?: port_filesUncheckedCreateNestedManyWithoutPortsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsCreateOrConnectWithoutBerthsInput = {
    where: portsWhereUniqueInput
    create: XOR<portsCreateWithoutBerthsInput, portsUncheckedCreateWithoutBerthsInput>
  }

  export type berth_productsCreateWithoutBerthsInput = {
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    products: productsCreateNestedOneWithoutBerth_productsInput
    proformas?: proformasCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedCreateWithoutBerthsInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    proformas?: proformasUncheckedCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsCreateOrConnectWithoutBerthsInput = {
    where: berth_productsWhereUniqueInput
    create: XOR<berth_productsCreateWithoutBerthsInput, berth_productsUncheckedCreateWithoutBerthsInput>
  }

  export type berth_productsCreateManyBerthsInputEnvelope = {
    data: Enumerable<berth_productsCreateManyBerthsInput>
    skipDuplicates?: boolean
  }

  export type ShippingPortCreateWithoutBerthsInput = {
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    ports?: portsCreateNestedOneWithoutShipping_portsInput
    shippings?: ShippingCreateNestedOneWithoutShipping_portsInput
  }

  export type ShippingPortUncheckedCreateWithoutBerthsInput = {
    id?: number
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    shipping_id?: number | null
    port_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingPortCreateOrConnectWithoutBerthsInput = {
    where: ShippingPortWhereUniqueInput
    create: XOR<ShippingPortCreateWithoutBerthsInput, ShippingPortUncheckedCreateWithoutBerthsInput>
  }

  export type ShippingPortCreateManyBerthsInputEnvelope = {
    data: Enumerable<ShippingPortCreateManyBerthsInput>
    skipDuplicates?: boolean
  }

  export type portsUpsertWithoutBerthsInput = {
    update: XOR<portsUpdateWithoutBerthsInput, portsUncheckedUpdateWithoutBerthsInput>
    create: XOR<portsCreateWithoutBerthsInput, portsUncheckedCreateWithoutBerthsInput>
  }

  export type portsUpdateWithoutBerthsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    country?: CountryUpdateOneWithoutPortsNestedInput
    port_files?: port_filesUpdateManyWithoutPortsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutPortsNestedInput
  }

  export type portsUncheckedUpdateWithoutBerthsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    port_files?: port_filesUncheckedUpdateManyWithoutPortsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutPortsNestedInput
  }

  export type berth_productsUpsertWithWhereUniqueWithoutBerthsInput = {
    where: berth_productsWhereUniqueInput
    update: XOR<berth_productsUpdateWithoutBerthsInput, berth_productsUncheckedUpdateWithoutBerthsInput>
    create: XOR<berth_productsCreateWithoutBerthsInput, berth_productsUncheckedCreateWithoutBerthsInput>
  }

  export type berth_productsUpdateWithWhereUniqueWithoutBerthsInput = {
    where: berth_productsWhereUniqueInput
    data: XOR<berth_productsUpdateWithoutBerthsInput, berth_productsUncheckedUpdateWithoutBerthsInput>
  }

  export type berth_productsUpdateManyWithWhereWithoutBerthsInput = {
    where: berth_productsScalarWhereInput
    data: XOR<berth_productsUpdateManyMutationInput, berth_productsUncheckedUpdateManyWithoutBerth_productsInput>
  }

  export type berth_productsScalarWhereInput = {
    AND?: Enumerable<berth_productsScalarWhereInput>
    OR?: Enumerable<berth_productsScalarWhereInput>
    NOT?: Enumerable<berth_productsScalarWhereInput>
    id?: IntFilter | number
    loadingCapacity?: FloatNullableFilter | number | null
    unloadingCapacity?: FloatNullableFilter | number | null
    berthId?: IntFilter | number
    productId?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type ShippingPortUpsertWithWhereUniqueWithoutBerthsInput = {
    where: ShippingPortWhereUniqueInput
    update: XOR<ShippingPortUpdateWithoutBerthsInput, ShippingPortUncheckedUpdateWithoutBerthsInput>
    create: XOR<ShippingPortCreateWithoutBerthsInput, ShippingPortUncheckedCreateWithoutBerthsInput>
  }

  export type ShippingPortUpdateWithWhereUniqueWithoutBerthsInput = {
    where: ShippingPortWhereUniqueInput
    data: XOR<ShippingPortUpdateWithoutBerthsInput, ShippingPortUncheckedUpdateWithoutBerthsInput>
  }

  export type ShippingPortUpdateManyWithWhereWithoutBerthsInput = {
    where: ShippingPortScalarWhereInput
    data: XOR<ShippingPortUpdateManyMutationInput, ShippingPortUncheckedUpdateManyWithoutShipping_portsInput>
  }

  export type ShippingPortScalarWhereInput = {
    AND?: Enumerable<ShippingPortScalarWhereInput>
    OR?: Enumerable<ShippingPortScalarWhereInput>
    NOT?: Enumerable<ShippingPortScalarWhereInput>
    id?: IntFilter | number
    estimated_time_of_arrival?: DateTimeNullableFilter | Date | string | null
    estimated_time_of_berthing?: DateTimeNullableFilter | Date | string | null
    estimated_time_of_sailing?: DateTimeNullableFilter | Date | string | null
    time_of_arrival?: DateTimeNullableFilter | Date | string | null
    time_of_berthing?: DateTimeNullableFilter | Date | string | null
    time_of_sailing?: DateTimeNullableFilter | Date | string | null
    shipping_id?: IntNullableFilter | number | null
    port_id?: IntNullableFilter | number | null
    berth_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type ChecklistTemplateItemCreateWithoutChecklistTemplateInput = {
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemCreateOrConnectWithoutChecklistTemplateInput = {
    where: ChecklistTemplateItemWhereUniqueInput
    create: XOR<ChecklistTemplateItemCreateWithoutChecklistTemplateInput, ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>
  }

  export type ChecklistTemplateItemCreateManyChecklistTemplateInputEnvelope = {
    data: Enumerable<ChecklistTemplateItemCreateManyChecklistTemplateInput>
    skipDuplicates?: boolean
  }

  export type AgencyCreateWithoutChecklistTemplateInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country?: CountryCreateNestedOneWithoutAgencyInput
    users?: usersCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutChecklistTemplateInput = {
    id?: number
    name: string
    country_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutChecklistTemplateInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutChecklistTemplateInput, AgencyUncheckedCreateWithoutChecklistTemplateInput>
  }

  export type ChecklistTemplateItemUpsertWithWhereUniqueWithoutChecklistTemplateInput = {
    where: ChecklistTemplateItemWhereUniqueInput
    update: XOR<ChecklistTemplateItemUpdateWithoutChecklistTemplateInput, ChecklistTemplateItemUncheckedUpdateWithoutChecklistTemplateInput>
    create: XOR<ChecklistTemplateItemCreateWithoutChecklistTemplateInput, ChecklistTemplateItemUncheckedCreateWithoutChecklistTemplateInput>
  }

  export type ChecklistTemplateItemUpdateWithWhereUniqueWithoutChecklistTemplateInput = {
    where: ChecklistTemplateItemWhereUniqueInput
    data: XOR<ChecklistTemplateItemUpdateWithoutChecklistTemplateInput, ChecklistTemplateItemUncheckedUpdateWithoutChecklistTemplateInput>
  }

  export type ChecklistTemplateItemUpdateManyWithWhereWithoutChecklistTemplateInput = {
    where: ChecklistTemplateItemScalarWhereInput
    data: XOR<ChecklistTemplateItemUpdateManyMutationInput, ChecklistTemplateItemUncheckedUpdateManyWithoutItemsInput>
  }

  export type ChecklistTemplateItemScalarWhereInput = {
    AND?: Enumerable<ChecklistTemplateItemScalarWhereInput>
    OR?: Enumerable<ChecklistTemplateItemScalarWhereInput>
    NOT?: Enumerable<ChecklistTemplateItemScalarWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    type?: StringFilter | string
    working_days?: IntNullableFilter | number | null
    checklist_template_id?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type AgencyUpsertWithoutChecklistTemplateInput = {
    update: XOR<AgencyUpdateWithoutChecklistTemplateInput, AgencyUncheckedUpdateWithoutChecklistTemplateInput>
    create: XOR<AgencyCreateWithoutChecklistTemplateInput, AgencyUncheckedCreateWithoutChecklistTemplateInput>
  }

  export type AgencyUpdateWithoutChecklistTemplateInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country?: CountryUpdateOneWithoutAgencyNestedInput
    users?: usersUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutChecklistTemplateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type ChecklistTemplateCreateWithoutItemsInput = {
    name: string
    operation_type?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    agency?: AgencyCreateNestedOneWithoutChecklistTemplateInput
  }

  export type ChecklistTemplateUncheckedCreateWithoutItemsInput = {
    id?: number
    name: string
    operation_type?: string | null
    agency_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ChecklistTemplateCreateOrConnectWithoutItemsInput = {
    where: ChecklistTemplateWhereUniqueInput
    create: XOR<ChecklistTemplateCreateWithoutItemsInput, ChecklistTemplateUncheckedCreateWithoutItemsInput>
  }

  export type ChecklistTemplateUpsertWithoutItemsInput = {
    update: XOR<ChecklistTemplateUpdateWithoutItemsInput, ChecklistTemplateUncheckedUpdateWithoutItemsInput>
    create: XOR<ChecklistTemplateCreateWithoutItemsInput, ChecklistTemplateUncheckedCreateWithoutItemsInput>
  }

  export type ChecklistTemplateUpdateWithoutItemsInput = {
    name?: StringFieldUpdateOperationsInput | string
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agency?: AgencyUpdateOneWithoutChecklistTemplateNestedInput
  }

  export type ChecklistTemplateUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingCreateWithoutShippingChecklistItemInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutShippingChecklistItemInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutShippingChecklistItemInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShippingChecklistItemInput, ShippingUncheckedCreateWithoutShippingChecklistItemInput>
  }

  export type usersCreateWithoutShippingChecklistItemInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutShippingChecklistItemInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutShippingChecklistItemInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShippingChecklistItemInput, usersUncheckedCreateWithoutShippingChecklistItemInput>
  }

  export type ShippingUpsertWithoutShippingChecklistItemInput = {
    update: XOR<ShippingUpdateWithoutShippingChecklistItemInput, ShippingUncheckedUpdateWithoutShippingChecklistItemInput>
    create: XOR<ShippingCreateWithoutShippingChecklistItemInput, ShippingUncheckedCreateWithoutShippingChecklistItemInput>
  }

  export type ShippingUpdateWithoutShippingChecklistItemInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutShippingChecklistItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type usersUpsertWithoutShippingChecklistItemInput = {
    update: XOR<usersUpdateWithoutShippingChecklistItemInput, usersUncheckedUpdateWithoutShippingChecklistItemInput>
    create: XOR<usersCreateWithoutShippingChecklistItemInput, usersUncheckedCreateWithoutShippingChecklistItemInput>
  }

  export type usersUpdateWithoutShippingChecklistItemInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutShippingChecklistItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type portsCreateWithoutCountryInput = {
    name?: string | null
    time_zone?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsCreateNestedManyWithoutPortsInput
    port_files?: port_filesCreateNestedManyWithoutPortsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateWithoutCountryInput = {
    id?: number
    name?: string | null
    time_zone?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsUncheckedCreateNestedManyWithoutPortsInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutPortsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsCreateOrConnectWithoutCountryInput = {
    where: portsWhereUniqueInput
    create: XOR<portsCreateWithoutCountryInput, portsUncheckedCreateWithoutCountryInput>
  }

  export type portsCreateManyCountryInputEnvelope = {
    data: Enumerable<portsCreateManyCountryInput>
    skipDuplicates?: boolean
  }

  export type VesselCreateWithoutCountryInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsCreateNestedManyWithoutVesselInput
  }

  export type VesselUncheckedCreateWithoutCountryInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingUncheckedCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutVesselInput
  }

  export type VesselCreateOrConnectWithoutCountryInput = {
    where: VesselWhereUniqueInput
    create: XOR<VesselCreateWithoutCountryInput, VesselUncheckedCreateWithoutCountryInput>
  }

  export type VesselCreateManyCountryInputEnvelope = {
    data: Enumerable<VesselCreateManyCountryInput>
    skipDuplicates?: boolean
  }

  export type AgencyCreateWithoutCountryInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    users?: usersCreateNestedManyWithoutAgencyInput
    ChecklistTemplate?: ChecklistTemplateCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutCountryInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutAgencyInput
    ChecklistTemplate?: ChecklistTemplateUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutCountryInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutCountryInput, AgencyUncheckedCreateWithoutCountryInput>
  }

  export type AgencyCreateManyCountryInputEnvelope = {
    data: Enumerable<AgencyCreateManyCountryInput>
    skipDuplicates?: boolean
  }

  export type portsUpsertWithWhereUniqueWithoutCountryInput = {
    where: portsWhereUniqueInput
    update: XOR<portsUpdateWithoutCountryInput, portsUncheckedUpdateWithoutCountryInput>
    create: XOR<portsCreateWithoutCountryInput, portsUncheckedCreateWithoutCountryInput>
  }

  export type portsUpdateWithWhereUniqueWithoutCountryInput = {
    where: portsWhereUniqueInput
    data: XOR<portsUpdateWithoutCountryInput, portsUncheckedUpdateWithoutCountryInput>
  }

  export type portsUpdateManyWithWhereWithoutCountryInput = {
    where: portsScalarWhereInput
    data: XOR<portsUpdateManyMutationInput, portsUncheckedUpdateManyWithoutPortsInput>
  }

  export type portsScalarWhereInput = {
    AND?: Enumerable<portsScalarWhereInput>
    OR?: Enumerable<portsScalarWhereInput>
    NOT?: Enumerable<portsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    time_zone?: StringNullableFilter | string | null
    countryId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    slug?: StringNullableFilter | string | null
  }

  export type VesselUpsertWithWhereUniqueWithoutCountryInput = {
    where: VesselWhereUniqueInput
    update: XOR<VesselUpdateWithoutCountryInput, VesselUncheckedUpdateWithoutCountryInput>
    create: XOR<VesselCreateWithoutCountryInput, VesselUncheckedCreateWithoutCountryInput>
  }

  export type VesselUpdateWithWhereUniqueWithoutCountryInput = {
    where: VesselWhereUniqueInput
    data: XOR<VesselUpdateWithoutCountryInput, VesselUncheckedUpdateWithoutCountryInput>
  }

  export type VesselUpdateManyWithWhereWithoutCountryInput = {
    where: VesselScalarWhereInput
    data: XOR<VesselUpdateManyMutationInput, VesselUncheckedUpdateManyWithoutVesselsInput>
  }

  export type VesselScalarWhereInput = {
    AND?: Enumerable<VesselScalarWhereInput>
    OR?: Enumerable<VesselScalarWhereInput>
    NOT?: Enumerable<VesselScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    imo?: StringNullableFilter | string | null
    call_sign?: StringNullableFilter | string | null
    satellite_telephone?: StringNullableFilter | string | null
    classification_society?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    length_overall?: FloatNullableFilter | number | null
    dead_weight_tonnage?: FloatNullableFilter | number | null
    beam?: FloatNullableFilter | number | null
    cubic_meters?: FloatNullableFilter | number | null
    gross_tonnage?: FloatNullableFilter | number | null
    net_tonnage?: FloatNullableFilter | number | null
    panama_gross_tonnage?: FloatNullableFilter | number | null
    panama_net_tonnage?: FloatNullableFilter | number | null
    suez_gross_tonnage?: FloatNullableFilter | number | null
    suez_net_tonnage?: FloatNullableFilter | number | null
    reduced_gross_tonnage?: FloatNullableFilter | number | null
    length_between_perpendiculars?: FloatNullableFilter | number | null
    molded_depth?: FloatNullableFilter | number | null
    number_of_holds?: FloatNullableFilter | number | null
    number_of_tanks?: FloatNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    country_id?: IntNullableFilter | number | null
    draft_sw?: StringNullableFilter | string | null
    built_year?: IntNullableFilter | number | null
  }

  export type AgencyUpsertWithWhereUniqueWithoutCountryInput = {
    where: AgencyWhereUniqueInput
    update: XOR<AgencyUpdateWithoutCountryInput, AgencyUncheckedUpdateWithoutCountryInput>
    create: XOR<AgencyCreateWithoutCountryInput, AgencyUncheckedCreateWithoutCountryInput>
  }

  export type AgencyUpdateWithWhereUniqueWithoutCountryInput = {
    where: AgencyWhereUniqueInput
    data: XOR<AgencyUpdateWithoutCountryInput, AgencyUncheckedUpdateWithoutCountryInput>
  }

  export type AgencyUpdateManyWithWhereWithoutCountryInput = {
    where: AgencyScalarWhereInput
    data: XOR<AgencyUpdateManyMutationInput, AgencyUncheckedUpdateManyWithoutAgencyInput>
  }

  export type AgencyScalarWhereInput = {
    AND?: Enumerable<AgencyScalarWhereInput>
    OR?: Enumerable<AgencyScalarWhereInput>
    NOT?: Enumerable<AgencyScalarWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    country_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type usersCreateWithoutPort_filesInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutPort_filesInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutPort_filesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPort_filesInput, usersUncheckedCreateWithoutPort_filesInput>
  }

  export type portsCreateWithoutPort_filesInput = {
    name?: string | null
    time_zone?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    country?: CountryCreateNestedOneWithoutPortsInput
    berths?: berthsCreateNestedManyWithoutPortsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateWithoutPort_filesInput = {
    id?: number
    name?: string | null
    time_zone?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsUncheckedCreateNestedManyWithoutPortsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsCreateOrConnectWithoutPort_filesInput = {
    where: portsWhereUniqueInput
    create: XOR<portsCreateWithoutPort_filesInput, portsUncheckedCreateWithoutPort_filesInput>
  }

  export type usersUpsertWithoutPort_filesInput = {
    update: XOR<usersUpdateWithoutPort_filesInput, usersUncheckedUpdateWithoutPort_filesInput>
    create: XOR<usersCreateWithoutPort_filesInput, usersUncheckedCreateWithoutPort_filesInput>
  }

  export type usersUpdateWithoutPort_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutPort_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type portsUpsertWithoutPort_filesInput = {
    update: XOR<portsUpdateWithoutPort_filesInput, portsUncheckedUpdateWithoutPort_filesInput>
    create: XOR<portsCreateWithoutPort_filesInput, portsUncheckedCreateWithoutPort_filesInput>
  }

  export type portsUpdateWithoutPort_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    country?: CountryUpdateOneWithoutPortsNestedInput
    berths?: berthsUpdateManyWithoutPortsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutPortsNestedInput
  }

  export type portsUncheckedUpdateWithoutPort_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUncheckedUpdateManyWithoutPortsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutPortsNestedInput
  }

  export type CountryCreateWithoutPortsInput = {
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    vessels?: VesselCreateNestedManyWithoutCountryInput
    agency?: AgencyCreateNestedManyWithoutCountryInput
  }

  export type CountryUncheckedCreateWithoutPortsInput = {
    id?: number
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    vessels?: VesselUncheckedCreateNestedManyWithoutCountryInput
    agency?: AgencyUncheckedCreateNestedManyWithoutCountryInput
  }

  export type CountryCreateOrConnectWithoutPortsInput = {
    where: CountryWhereUniqueInput
    create: XOR<CountryCreateWithoutPortsInput, CountryUncheckedCreateWithoutPortsInput>
  }

  export type berthsCreateWithoutPortsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    berth_products?: berth_productsCreateNestedManyWithoutBerthsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutBerthsInput
  }

  export type berthsUncheckedCreateWithoutPortsInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutBerthsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutBerthsInput
  }

  export type berthsCreateOrConnectWithoutPortsInput = {
    where: berthsWhereUniqueInput
    create: XOR<berthsCreateWithoutPortsInput, berthsUncheckedCreateWithoutPortsInput>
  }

  export type berthsCreateManyPortsInputEnvelope = {
    data: Enumerable<berthsCreateManyPortsInput>
    skipDuplicates?: boolean
  }

  export type port_filesCreateWithoutPortsInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutPort_filesInput
  }

  export type port_filesUncheckedCreateWithoutPortsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type port_filesCreateOrConnectWithoutPortsInput = {
    where: port_filesWhereUniqueInput
    create: XOR<port_filesCreateWithoutPortsInput, port_filesUncheckedCreateWithoutPortsInput>
  }

  export type port_filesCreateManyPortsInputEnvelope = {
    data: Enumerable<port_filesCreateManyPortsInput>
    skipDuplicates?: boolean
  }

  export type ShippingPortCreateWithoutPortsInput = {
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    berths?: berthsCreateNestedOneWithoutShipping_portsInput
    shippings?: ShippingCreateNestedOneWithoutShipping_portsInput
  }

  export type ShippingPortUncheckedCreateWithoutPortsInput = {
    id?: number
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    shipping_id?: number | null
    berth_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingPortCreateOrConnectWithoutPortsInput = {
    where: ShippingPortWhereUniqueInput
    create: XOR<ShippingPortCreateWithoutPortsInput, ShippingPortUncheckedCreateWithoutPortsInput>
  }

  export type ShippingPortCreateManyPortsInputEnvelope = {
    data: Enumerable<ShippingPortCreateManyPortsInput>
    skipDuplicates?: boolean
  }

  export type CountryUpsertWithoutPortsInput = {
    update: XOR<CountryUpdateWithoutPortsInput, CountryUncheckedUpdateWithoutPortsInput>
    create: XOR<CountryCreateWithoutPortsInput, CountryUncheckedCreateWithoutPortsInput>
  }

  export type CountryUpdateWithoutPortsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessels?: VesselUpdateManyWithoutCountryNestedInput
    agency?: AgencyUpdateManyWithoutCountryNestedInput
  }

  export type CountryUncheckedUpdateWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessels?: VesselUncheckedUpdateManyWithoutCountryNestedInput
    agency?: AgencyUncheckedUpdateManyWithoutCountryNestedInput
  }

  export type berthsUpsertWithWhereUniqueWithoutPortsInput = {
    where: berthsWhereUniqueInput
    update: XOR<berthsUpdateWithoutPortsInput, berthsUncheckedUpdateWithoutPortsInput>
    create: XOR<berthsCreateWithoutPortsInput, berthsUncheckedCreateWithoutPortsInput>
  }

  export type berthsUpdateWithWhereUniqueWithoutPortsInput = {
    where: berthsWhereUniqueInput
    data: XOR<berthsUpdateWithoutPortsInput, berthsUncheckedUpdateWithoutPortsInput>
  }

  export type berthsUpdateManyWithWhereWithoutPortsInput = {
    where: berthsScalarWhereInput
    data: XOR<berthsUpdateManyMutationInput, berthsUncheckedUpdateManyWithoutBerthsInput>
  }

  export type berthsScalarWhereInput = {
    AND?: Enumerable<berthsScalarWhereInput>
    OR?: Enumerable<berthsScalarWhereInput>
    NOT?: Enumerable<berthsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    portId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    maxDraft?: FloatNullableFilter | number | null
    airDraft?: FloatNullableFilter | number | null
    maxLengthOverall?: FloatNullableFilter | number | null
    maxDeadWeightTonnage?: FloatNullableFilter | number | null
    maxBeam?: FloatNullableFilter | number | null
    waterDensity?: FloatNullableFilter | number | null
  }

  export type port_filesUpsertWithWhereUniqueWithoutPortsInput = {
    where: port_filesWhereUniqueInput
    update: XOR<port_filesUpdateWithoutPortsInput, port_filesUncheckedUpdateWithoutPortsInput>
    create: XOR<port_filesCreateWithoutPortsInput, port_filesUncheckedCreateWithoutPortsInput>
  }

  export type port_filesUpdateWithWhereUniqueWithoutPortsInput = {
    where: port_filesWhereUniqueInput
    data: XOR<port_filesUpdateWithoutPortsInput, port_filesUncheckedUpdateWithoutPortsInput>
  }

  export type port_filesUpdateManyWithWhereWithoutPortsInput = {
    where: port_filesScalarWhereInput
    data: XOR<port_filesUpdateManyMutationInput, port_filesUncheckedUpdateManyWithoutPort_filesInput>
  }

  export type port_filesScalarWhereInput = {
    AND?: Enumerable<port_filesScalarWhereInput>
    OR?: Enumerable<port_filesScalarWhereInput>
    NOT?: Enumerable<port_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    portId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
  }

  export type ShippingPortUpsertWithWhereUniqueWithoutPortsInput = {
    where: ShippingPortWhereUniqueInput
    update: XOR<ShippingPortUpdateWithoutPortsInput, ShippingPortUncheckedUpdateWithoutPortsInput>
    create: XOR<ShippingPortCreateWithoutPortsInput, ShippingPortUncheckedCreateWithoutPortsInput>
  }

  export type ShippingPortUpdateWithWhereUniqueWithoutPortsInput = {
    where: ShippingPortWhereUniqueInput
    data: XOR<ShippingPortUpdateWithoutPortsInput, ShippingPortUncheckedUpdateWithoutPortsInput>
  }

  export type ShippingPortUpdateManyWithWhereWithoutPortsInput = {
    where: ShippingPortScalarWhereInput
    data: XOR<ShippingPortUpdateManyMutationInput, ShippingPortUncheckedUpdateManyWithoutShipping_portsInput>
  }

  export type berth_productsCreateWithoutProductsInput = {
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berths: berthsCreateNestedOneWithoutBerth_productsInput
    proformas?: proformasCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsUncheckedCreateWithoutProductsInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    proformas?: proformasUncheckedCreateNestedManyWithoutBerth_productsInput
  }

  export type berth_productsCreateOrConnectWithoutProductsInput = {
    where: berth_productsWhereUniqueInput
    create: XOR<berth_productsCreateWithoutProductsInput, berth_productsUncheckedCreateWithoutProductsInput>
  }

  export type berth_productsCreateManyProductsInputEnvelope = {
    data: Enumerable<berth_productsCreateManyProductsInput>
    skipDuplicates?: boolean
  }

  export type ShippingProductCreateWithoutProductInput = {
    weight?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    shipping?: ShippingCreateNestedOneWithoutShipping_productsInput
  }

  export type ShippingProductUncheckedCreateWithoutProductInput = {
    id?: number
    weight?: number | null
    shipping_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingProductCreateOrConnectWithoutProductInput = {
    where: ShippingProductWhereUniqueInput
    create: XOR<ShippingProductCreateWithoutProductInput, ShippingProductUncheckedCreateWithoutProductInput>
  }

  export type ShippingProductCreateManyProductInputEnvelope = {
    data: Enumerable<ShippingProductCreateManyProductInput>
    skipDuplicates?: boolean
  }

  export type berth_productsUpsertWithWhereUniqueWithoutProductsInput = {
    where: berth_productsWhereUniqueInput
    update: XOR<berth_productsUpdateWithoutProductsInput, berth_productsUncheckedUpdateWithoutProductsInput>
    create: XOR<berth_productsCreateWithoutProductsInput, berth_productsUncheckedCreateWithoutProductsInput>
  }

  export type berth_productsUpdateWithWhereUniqueWithoutProductsInput = {
    where: berth_productsWhereUniqueInput
    data: XOR<berth_productsUpdateWithoutProductsInput, berth_productsUncheckedUpdateWithoutProductsInput>
  }

  export type berth_productsUpdateManyWithWhereWithoutProductsInput = {
    where: berth_productsScalarWhereInput
    data: XOR<berth_productsUpdateManyMutationInput, berth_productsUncheckedUpdateManyWithoutBerth_productsInput>
  }

  export type ShippingProductUpsertWithWhereUniqueWithoutProductInput = {
    where: ShippingProductWhereUniqueInput
    update: XOR<ShippingProductUpdateWithoutProductInput, ShippingProductUncheckedUpdateWithoutProductInput>
    create: XOR<ShippingProductCreateWithoutProductInput, ShippingProductUncheckedCreateWithoutProductInput>
  }

  export type ShippingProductUpdateWithWhereUniqueWithoutProductInput = {
    where: ShippingProductWhereUniqueInput
    data: XOR<ShippingProductUpdateWithoutProductInput, ShippingProductUncheckedUpdateWithoutProductInput>
  }

  export type ShippingProductUpdateManyWithWhereWithoutProductInput = {
    where: ShippingProductScalarWhereInput
    data: XOR<ShippingProductUpdateManyMutationInput, ShippingProductUncheckedUpdateManyWithoutShipping_productsInput>
  }

  export type ShippingProductScalarWhereInput = {
    AND?: Enumerable<ShippingProductScalarWhereInput>
    OR?: Enumerable<ShippingProductScalarWhereInput>
    NOT?: Enumerable<ShippingProductScalarWhereInput>
    id?: IntFilter | number
    weight?: FloatNullableFilter | number | null
    shipping_id?: IntNullableFilter | number | null
    product_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type proformasCreateWithoutProforma_filesInput = {
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
    berth_products: berth_productsCreateNestedOneWithoutProformasInput
  }

  export type proformasUncheckedCreateWithoutProforma_filesInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    berthProductId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
  }

  export type proformasCreateOrConnectWithoutProforma_filesInput = {
    where: proformasWhereUniqueInput
    create: XOR<proformasCreateWithoutProforma_filesInput, proformasUncheckedCreateWithoutProforma_filesInput>
  }

  export type proformasUpsertWithoutProforma_filesInput = {
    update: XOR<proformasUpdateWithoutProforma_filesInput, proformasUncheckedUpdateWithoutProforma_filesInput>
    create: XOR<proformasCreateWithoutProforma_filesInput, proformasUncheckedCreateWithoutProforma_filesInput>
  }

  export type proformasUpdateWithoutProforma_filesInput = {
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    berth_products?: berth_productsUpdateOneRequiredWithoutProformasNestedInput
  }

  export type proformasUncheckedUpdateWithoutProforma_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    berthProductId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type berth_productsCreateWithoutProformasInput = {
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berths: berthsCreateNestedOneWithoutBerth_productsInput
    products: productsCreateNestedOneWithoutBerth_productsInput
  }

  export type berth_productsUncheckedCreateWithoutProformasInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type berth_productsCreateOrConnectWithoutProformasInput = {
    where: berth_productsWhereUniqueInput
    create: XOR<berth_productsCreateWithoutProformasInput, berth_productsUncheckedCreateWithoutProformasInput>
  }

  export type proforma_filesCreateWithoutProformasInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesUncheckedCreateWithoutProformasInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesCreateOrConnectWithoutProformasInput = {
    where: proforma_filesWhereUniqueInput
    create: XOR<proforma_filesCreateWithoutProformasInput, proforma_filesUncheckedCreateWithoutProformasInput>
  }

  export type proforma_filesCreateManyProformasInputEnvelope = {
    data: Enumerable<proforma_filesCreateManyProformasInput>
    skipDuplicates?: boolean
  }

  export type berth_productsUpsertWithoutProformasInput = {
    update: XOR<berth_productsUpdateWithoutProformasInput, berth_productsUncheckedUpdateWithoutProformasInput>
    create: XOR<berth_productsCreateWithoutProformasInput, berth_productsUncheckedCreateWithoutProformasInput>
  }

  export type berth_productsUpdateWithoutProformasInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneRequiredWithoutBerth_productsNestedInput
    products?: productsUpdateOneRequiredWithoutBerth_productsNestedInput
  }

  export type berth_productsUncheckedUpdateWithoutProformasInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    berthId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesUpsertWithWhereUniqueWithoutProformasInput = {
    where: proforma_filesWhereUniqueInput
    update: XOR<proforma_filesUpdateWithoutProformasInput, proforma_filesUncheckedUpdateWithoutProformasInput>
    create: XOR<proforma_filesCreateWithoutProformasInput, proforma_filesUncheckedCreateWithoutProformasInput>
  }

  export type proforma_filesUpdateWithWhereUniqueWithoutProformasInput = {
    where: proforma_filesWhereUniqueInput
    data: XOR<proforma_filesUpdateWithoutProformasInput, proforma_filesUncheckedUpdateWithoutProformasInput>
  }

  export type proforma_filesUpdateManyWithWhereWithoutProformasInput = {
    where: proforma_filesScalarWhereInput
    data: XOR<proforma_filesUpdateManyMutationInput, proforma_filesUncheckedUpdateManyWithoutProforma_filesInput>
  }

  export type proforma_filesScalarWhereInput = {
    AND?: Enumerable<proforma_filesScalarWhereInput>
    OR?: Enumerable<proforma_filesScalarWhereInput>
    NOT?: Enumerable<proforma_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    proformaId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type ShippingCreateWithoutShipping_documentsInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutShipping_documentsInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutShipping_documentsInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShipping_documentsInput, ShippingUncheckedCreateWithoutShipping_documentsInput>
  }

  export type subsetsCreateWithoutShipping_documentsInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shippings?: ShippingCreateNestedOneWithoutSubsetsInput
  }

  export type subsetsUncheckedCreateWithoutShipping_documentsInput = {
    id?: number
    name?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type subsetsCreateOrConnectWithoutShipping_documentsInput = {
    where: subsetsWhereUniqueInput
    create: XOR<subsetsCreateWithoutShipping_documentsInput, subsetsUncheckedCreateWithoutShipping_documentsInput>
  }

  export type usersCreateWithoutShipping_documentsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutShipping_documentsInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutShipping_documentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShipping_documentsInput, usersUncheckedCreateWithoutShipping_documentsInput>
  }

  export type document_shipperCreateWithoutShipping_documentsInput = {
    name?: string | null
    cnpj?: string | null
    complement?: string | null
  }

  export type document_shipperUncheckedCreateWithoutShipping_documentsInput = {
    id?: number
    name?: string | null
    cnpj?: string | null
    complement?: string | null
  }

  export type document_shipperCreateOrConnectWithoutShipping_documentsInput = {
    where: document_shipperWhereUniqueInput
    create: XOR<document_shipperCreateWithoutShipping_documentsInput, document_shipperUncheckedCreateWithoutShipping_documentsInput>
  }

  export type document_productCreateWithoutShipping_documentsInput = {
    name?: string | null
    abbreviation?: string | null
    description?: string | null
    packing_type?: string | null
  }

  export type document_productUncheckedCreateWithoutShipping_documentsInput = {
    id?: number
    name?: string | null
    abbreviation?: string | null
    description?: string | null
    packing_type?: string | null
  }

  export type document_productCreateOrConnectWithoutShipping_documentsInput = {
    where: document_productWhereUniqueInput
    create: XOR<document_productCreateWithoutShipping_documentsInput, document_productUncheckedCreateWithoutShipping_documentsInput>
  }

  export type ShippingUpsertWithoutShipping_documentsInput = {
    update: XOR<ShippingUpdateWithoutShipping_documentsInput, ShippingUncheckedUpdateWithoutShipping_documentsInput>
    create: XOR<ShippingCreateWithoutShipping_documentsInput, ShippingUncheckedCreateWithoutShipping_documentsInput>
  }

  export type ShippingUpdateWithoutShipping_documentsInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutShipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type subsetsUpsertWithoutShipping_documentsInput = {
    update: XOR<subsetsUpdateWithoutShipping_documentsInput, subsetsUncheckedUpdateWithoutShipping_documentsInput>
    create: XOR<subsetsCreateWithoutShipping_documentsInput, subsetsUncheckedCreateWithoutShipping_documentsInput>
  }

  export type subsetsUpdateWithoutShipping_documentsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippings?: ShippingUpdateOneWithoutSubsetsNestedInput
  }

  export type subsetsUncheckedUpdateWithoutShipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUpsertWithoutShipping_documentsInput = {
    update: XOR<usersUpdateWithoutShipping_documentsInput, usersUncheckedUpdateWithoutShipping_documentsInput>
    create: XOR<usersCreateWithoutShipping_documentsInput, usersUncheckedCreateWithoutShipping_documentsInput>
  }

  export type usersUpdateWithoutShipping_documentsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutShipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type document_shipperUpsertWithoutShipping_documentsInput = {
    update: XOR<document_shipperUpdateWithoutShipping_documentsInput, document_shipperUncheckedUpdateWithoutShipping_documentsInput>
    create: XOR<document_shipperCreateWithoutShipping_documentsInput, document_shipperUncheckedCreateWithoutShipping_documentsInput>
  }

  export type document_shipperUpdateWithoutShipping_documentsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_shipperUncheckedUpdateWithoutShipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_productUpsertWithoutShipping_documentsInput = {
    update: XOR<document_productUpdateWithoutShipping_documentsInput, document_productUncheckedUpdateWithoutShipping_documentsInput>
    create: XOR<document_productCreateWithoutShipping_documentsInput, document_productUncheckedCreateWithoutShipping_documentsInput>
  }

  export type document_productUpdateWithoutShipping_documentsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    packing_type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_productUncheckedUpdateWithoutShipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    packing_type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_documentsCreateWithoutDocument_shipperInput = {
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    master_name?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_documentsInput
    subsets?: subsetsCreateNestedOneWithoutShipping_documentsInput
    users?: usersCreateNestedOneWithoutShipping_documentsInput
    document_product?: document_productCreateNestedOneWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateWithoutDocument_shipperInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsCreateOrConnectWithoutDocument_shipperInput = {
    where: shipping_documentsWhereUniqueInput
    create: XOR<shipping_documentsCreateWithoutDocument_shipperInput, shipping_documentsUncheckedCreateWithoutDocument_shipperInput>
  }

  export type shipping_documentsCreateManyDocument_shipperInputEnvelope = {
    data: Enumerable<shipping_documentsCreateManyDocument_shipperInput>
    skipDuplicates?: boolean
  }

  export type shipping_documentsUpsertWithWhereUniqueWithoutDocument_shipperInput = {
    where: shipping_documentsWhereUniqueInput
    update: XOR<shipping_documentsUpdateWithoutDocument_shipperInput, shipping_documentsUncheckedUpdateWithoutDocument_shipperInput>
    create: XOR<shipping_documentsCreateWithoutDocument_shipperInput, shipping_documentsUncheckedCreateWithoutDocument_shipperInput>
  }

  export type shipping_documentsUpdateWithWhereUniqueWithoutDocument_shipperInput = {
    where: shipping_documentsWhereUniqueInput
    data: XOR<shipping_documentsUpdateWithoutDocument_shipperInput, shipping_documentsUncheckedUpdateWithoutDocument_shipperInput>
  }

  export type shipping_documentsUpdateManyWithWhereWithoutDocument_shipperInput = {
    where: shipping_documentsScalarWhereInput
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput>
  }

  export type shipping_documentsScalarWhereInput = {
    AND?: Enumerable<shipping_documentsScalarWhereInput>
    OR?: Enumerable<shipping_documentsScalarWhereInput>
    NOT?: Enumerable<shipping_documentsScalarWhereInput>
    id?: IntFilter | number
    type?: StringNullableFilter | string | null
    document_number?: StringNullableFilter | string | null
    consignee?: StringNullableFilter | string | null
    vessel_name?: StringNullableFilter | string | null
    port_of_loading?: StringNullableFilter | string | null
    port_of_discharge?: StringNullableFilter | string | null
    notify?: StringNullableFilter | string | null
    product_name_extra_info?: StringNullableFilter | string | null
    product_weight_extra_info?: StringNullableFilter | string | null
    freight_type?: StringNullableFilter | string | null
    charter_party_date?: StringNullableFilter | string | null
    ship_boarded_date?: StringNullableFilter | string | null
    issue_place_date?: StringNullableFilter | string | null
    number_of_original_bill_of_landing?: FloatNullableFilter | number | null
    shipper_id?: IntNullableFilter | number | null
    product_id?: IntNullableFilter | number | null
    master_name?: StringNullableFilter | string | null
    signature?: StringNullableFilter | string | null
    shipping_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    order?: IntNullableFilter | number | null
    subset_id?: IntNullableFilter | number | null
    product_gross_weight?: FloatNullableFilter | number | null
    product_net_weight?: FloatNullableFilter | number | null
    product_quantity?: FloatNullableFilter | number | null
    product_packing?: StringNullableFilter | string | null
  }

  export type shipping_documentsCreateWithoutDocument_productInput = {
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    master_name?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_documentsInput
    subsets?: subsetsCreateNestedOneWithoutShipping_documentsInput
    users?: usersCreateNestedOneWithoutShipping_documentsInput
    document_shipper?: document_shipperCreateNestedOneWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateWithoutDocument_productInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsCreateOrConnectWithoutDocument_productInput = {
    where: shipping_documentsWhereUniqueInput
    create: XOR<shipping_documentsCreateWithoutDocument_productInput, shipping_documentsUncheckedCreateWithoutDocument_productInput>
  }

  export type shipping_documentsCreateManyDocument_productInputEnvelope = {
    data: Enumerable<shipping_documentsCreateManyDocument_productInput>
    skipDuplicates?: boolean
  }

  export type shipping_documentsUpsertWithWhereUniqueWithoutDocument_productInput = {
    where: shipping_documentsWhereUniqueInput
    update: XOR<shipping_documentsUpdateWithoutDocument_productInput, shipping_documentsUncheckedUpdateWithoutDocument_productInput>
    create: XOR<shipping_documentsCreateWithoutDocument_productInput, shipping_documentsUncheckedCreateWithoutDocument_productInput>
  }

  export type shipping_documentsUpdateWithWhereUniqueWithoutDocument_productInput = {
    where: shipping_documentsWhereUniqueInput
    data: XOR<shipping_documentsUpdateWithoutDocument_productInput, shipping_documentsUncheckedUpdateWithoutDocument_productInput>
  }

  export type shipping_documentsUpdateManyWithWhereWithoutDocument_productInput = {
    where: shipping_documentsScalarWhereInput
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput>
  }

  export type ShippingCreateWithoutShipping_filesInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutShipping_filesInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutShipping_filesInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShipping_filesInput, ShippingUncheckedCreateWithoutShipping_filesInput>
  }

  export type usersCreateWithoutShipping_filesInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutShipping_filesInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutShipping_filesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShipping_filesInput, usersUncheckedCreateWithoutShipping_filesInput>
  }

  export type ShippingUpsertWithoutShipping_filesInput = {
    update: XOR<ShippingUpdateWithoutShipping_filesInput, ShippingUncheckedUpdateWithoutShipping_filesInput>
    create: XOR<ShippingCreateWithoutShipping_filesInput, ShippingUncheckedCreateWithoutShipping_filesInput>
  }

  export type ShippingUpdateWithoutShipping_filesInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutShipping_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type usersUpsertWithoutShipping_filesInput = {
    update: XOR<usersUpdateWithoutShipping_filesInput, usersUncheckedUpdateWithoutShipping_filesInput>
    create: XOR<usersCreateWithoutShipping_filesInput, usersUncheckedCreateWithoutShipping_filesInput>
  }

  export type usersUpdateWithoutShipping_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutShipping_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type berthsCreateWithoutShipping_portsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    ports?: portsCreateNestedOneWithoutBerthsInput
    berth_products?: berth_productsCreateNestedManyWithoutBerthsInput
  }

  export type berthsUncheckedCreateWithoutShipping_portsInput = {
    id?: number
    name?: string | null
    description?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutBerthsInput
  }

  export type berthsCreateOrConnectWithoutShipping_portsInput = {
    where: berthsWhereUniqueInput
    create: XOR<berthsCreateWithoutShipping_portsInput, berthsUncheckedCreateWithoutShipping_portsInput>
  }

  export type portsCreateWithoutShipping_portsInput = {
    name?: string | null
    time_zone?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    country?: CountryCreateNestedOneWithoutPortsInput
    berths?: berthsCreateNestedManyWithoutPortsInput
    port_files?: port_filesCreateNestedManyWithoutPortsInput
  }

  export type portsUncheckedCreateWithoutShipping_portsInput = {
    id?: number
    name?: string | null
    time_zone?: string | null
    countryId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
    berths?: berthsUncheckedCreateNestedManyWithoutPortsInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutPortsInput
  }

  export type portsCreateOrConnectWithoutShipping_portsInput = {
    where: portsWhereUniqueInput
    create: XOR<portsCreateWithoutShipping_portsInput, portsUncheckedCreateWithoutShipping_portsInput>
  }

  export type ShippingCreateWithoutShipping_portsInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutShipping_portsInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutShipping_portsInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShipping_portsInput, ShippingUncheckedCreateWithoutShipping_portsInput>
  }

  export type berthsUpsertWithoutShipping_portsInput = {
    update: XOR<berthsUpdateWithoutShipping_portsInput, berthsUncheckedUpdateWithoutShipping_portsInput>
    create: XOR<berthsCreateWithoutShipping_portsInput, berthsUncheckedCreateWithoutShipping_portsInput>
  }

  export type berthsUpdateWithoutShipping_portsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    ports?: portsUpdateOneWithoutBerthsNestedInput
    berth_products?: berth_productsUpdateManyWithoutBerthsNestedInput
  }

  export type berthsUncheckedUpdateWithoutShipping_portsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutBerthsNestedInput
  }

  export type portsUpsertWithoutShipping_portsInput = {
    update: XOR<portsUpdateWithoutShipping_portsInput, portsUncheckedUpdateWithoutShipping_portsInput>
    create: XOR<portsCreateWithoutShipping_portsInput, portsUncheckedCreateWithoutShipping_portsInput>
  }

  export type portsUpdateWithoutShipping_portsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    country?: CountryUpdateOneWithoutPortsNestedInput
    berths?: berthsUpdateManyWithoutPortsNestedInput
    port_files?: port_filesUpdateManyWithoutPortsNestedInput
  }

  export type portsUncheckedUpdateWithoutShipping_portsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUncheckedUpdateManyWithoutPortsNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutPortsNestedInput
  }

  export type ShippingUpsertWithoutShipping_portsInput = {
    update: XOR<ShippingUpdateWithoutShipping_portsInput, ShippingUncheckedUpdateWithoutShipping_portsInput>
    create: XOR<ShippingCreateWithoutShipping_portsInput, ShippingUncheckedCreateWithoutShipping_portsInput>
  }

  export type ShippingUpdateWithoutShipping_portsInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutShipping_portsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type productsCreateWithoutShipping_productsInput = {
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berth_products?: berth_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutShipping_productsInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    berth_products?: berth_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutShipping_productsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutShipping_productsInput, productsUncheckedCreateWithoutShipping_productsInput>
  }

  export type ShippingCreateWithoutShipping_productsInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutShipping_productsInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutShipping_productsInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutShipping_productsInput, ShippingUncheckedCreateWithoutShipping_productsInput>
  }

  export type productsUpsertWithoutShipping_productsInput = {
    update: XOR<productsUpdateWithoutShipping_productsInput, productsUncheckedUpdateWithoutShipping_productsInput>
    create: XOR<productsCreateWithoutShipping_productsInput, productsUncheckedCreateWithoutShipping_productsInput>
  }

  export type productsUpdateWithoutShipping_productsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berth_products?: berth_productsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutShipping_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ShippingUpsertWithoutShipping_productsInput = {
    update: XOR<ShippingUpdateWithoutShipping_productsInput, ShippingUncheckedUpdateWithoutShipping_productsInput>
    create: XOR<ShippingCreateWithoutShipping_productsInput, ShippingUncheckedCreateWithoutShipping_productsInput>
  }

  export type ShippingUpdateWithoutShipping_productsInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutShipping_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type usersCreateWithoutShippingsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutShippingsInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutShippingsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShippingsInput, usersUncheckedCreateWithoutShippingsInput>
  }

  export type VesselCreateWithoutShippingsInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    country?: CountryCreateNestedOneWithoutVesselsInput
    vessel_files?: vessel_filesCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsCreateNestedManyWithoutVesselInput
  }

  export type VesselUncheckedCreateWithoutShippingsInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutVesselsInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutVesselInput
  }

  export type VesselCreateOrConnectWithoutShippingsInput = {
    where: VesselWhereUniqueInput
    create: XOR<VesselCreateWithoutShippingsInput, VesselUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_documentsCreateWithoutShippingsInput = {
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    master_name?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
    subsets?: subsetsCreateNestedOneWithoutShipping_documentsInput
    users?: usersCreateNestedOneWithoutShipping_documentsInput
    document_shipper?: document_shipperCreateNestedOneWithoutShipping_documentsInput
    document_product?: document_productCreateNestedOneWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateWithoutShippingsInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsCreateOrConnectWithoutShippingsInput = {
    where: shipping_documentsWhereUniqueInput
    create: XOR<shipping_documentsCreateWithoutShippingsInput, shipping_documentsUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_documentsCreateManyShippingsInputEnvelope = {
    data: Enumerable<shipping_documentsCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type shipping_filesCreateWithoutShippingsInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutShipping_filesInput
  }

  export type shipping_filesUncheckedCreateWithoutShippingsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type shipping_filesCreateOrConnectWithoutShippingsInput = {
    where: shipping_filesWhereUniqueInput
    create: XOR<shipping_filesCreateWithoutShippingsInput, shipping_filesUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_filesCreateManyShippingsInputEnvelope = {
    data: Enumerable<shipping_filesCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type ShippingPortCreateWithoutShippingsInput = {
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    berths?: berthsCreateNestedOneWithoutShipping_portsInput
    ports?: portsCreateNestedOneWithoutShipping_portsInput
  }

  export type ShippingPortUncheckedCreateWithoutShippingsInput = {
    id?: number
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    port_id?: number | null
    berth_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingPortCreateOrConnectWithoutShippingsInput = {
    where: ShippingPortWhereUniqueInput
    create: XOR<ShippingPortCreateWithoutShippingsInput, ShippingPortUncheckedCreateWithoutShippingsInput>
  }

  export type ShippingPortCreateManyShippingsInputEnvelope = {
    data: Enumerable<ShippingPortCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type ShippingProductCreateWithoutShippingInput = {
    weight?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    product?: productsCreateNestedOneWithoutShipping_productsInput
  }

  export type ShippingProductUncheckedCreateWithoutShippingInput = {
    id?: number
    weight?: number | null
    product_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingProductCreateOrConnectWithoutShippingInput = {
    where: ShippingProductWhereUniqueInput
    create: XOR<ShippingProductCreateWithoutShippingInput, ShippingProductUncheckedCreateWithoutShippingInput>
  }

  export type ShippingProductCreateManyShippingInputEnvelope = {
    data: Enumerable<ShippingProductCreateManyShippingInput>
    skipDuplicates?: boolean
  }

  export type subsetsCreateWithoutShippingsInput = {
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutSubsetsInput
  }

  export type subsetsUncheckedCreateWithoutShippingsInput = {
    id?: number
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutSubsetsInput
  }

  export type subsetsCreateOrConnectWithoutShippingsInput = {
    where: subsetsWhereUniqueInput
    create: XOR<subsetsCreateWithoutShippingsInput, subsetsUncheckedCreateWithoutShippingsInput>
  }

  export type subsetsCreateManyShippingsInputEnvelope = {
    data: Enumerable<subsetsCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type inquiresCreateWithoutShippingsInput = {
    title?: string | null
    group?: string | null
    users?: usersCreateNestedOneWithoutInquiresInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutInquiresInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquiresUncheckedCreateWithoutShippingsInput = {
    id?: number
    title?: string | null
    group?: string | null
    updated_by_user_id?: number | null
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutInquiresInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquiresCreateOrConnectWithoutShippingsInput = {
    where: inquiresWhereUniqueInput
    create: XOR<inquiresCreateWithoutShippingsInput, inquiresUncheckedCreateWithoutShippingsInput>
  }

  export type inquiresCreateManyShippingsInputEnvelope = {
    data: Enumerable<inquiresCreateManyShippingsInput>
    skipDuplicates?: boolean
  }

  export type ShippingChecklistItemCreateWithoutShippingInput = {
    name: string
    description?: string | null
    type: string
    deadline_date?: Date | string | null
    commentary?: string | null
    is_done: boolean
    created_at?: Date | string
    updated_ut?: Date | string
    deleted_at?: Date | string | null
    user?: usersCreateNestedOneWithoutShippingChecklistItemInput
  }

  export type ShippingChecklistItemUncheckedCreateWithoutShippingInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: Date | string | null
    commentary?: string | null
    is_done: boolean
    updated_by_user_id?: number | null
    created_at?: Date | string
    updated_ut?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingChecklistItemCreateOrConnectWithoutShippingInput = {
    where: ShippingChecklistItemWhereUniqueInput
    create: XOR<ShippingChecklistItemCreateWithoutShippingInput, ShippingChecklistItemUncheckedCreateWithoutShippingInput>
  }

  export type ShippingChecklistItemCreateManyShippingInputEnvelope = {
    data: Enumerable<ShippingChecklistItemCreateManyShippingInput>
    skipDuplicates?: boolean
  }

  export type sofCreateWithoutShippingInput = {
    hidden_attributes?: string | null
    sof_holidays?: sof_holidaysCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoCreateNestedManyWithoutSofInput
  }

  export type sofUncheckedCreateWithoutShippingInput = {
    id?: number
    hidden_attributes?: string | null
    sof_holidays?: sof_holidaysUncheckedCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksUncheckedCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftUncheckedCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedCreateNestedManyWithoutSofInput
  }

  export type sofCreateOrConnectWithoutShippingInput = {
    where: sofWhereUniqueInput
    create: XOR<sofCreateWithoutShippingInput, sofUncheckedCreateWithoutShippingInput>
  }

  export type usersUpsertWithoutShippingsInput = {
    update: XOR<usersUpdateWithoutShippingsInput, usersUncheckedUpdateWithoutShippingsInput>
    create: XOR<usersCreateWithoutShippingsInput, usersUncheckedCreateWithoutShippingsInput>
  }

  export type usersUpdateWithoutShippingsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type VesselUpsertWithoutShippingsInput = {
    update: XOR<VesselUpdateWithoutShippingsInput, VesselUncheckedUpdateWithoutShippingsInput>
    create: XOR<VesselCreateWithoutShippingsInput, VesselUncheckedCreateWithoutShippingsInput>
  }

  export type VesselUpdateWithoutShippingsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    country?: CountryUpdateOneWithoutVesselsNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutVesselsNestedInput
    group_emails?: group_emailsUpdateManyWithoutVesselNestedInput
  }

  export type VesselUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutVesselsNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutVesselNestedInput
  }

  export type shipping_documentsUpsertWithWhereUniqueWithoutShippingsInput = {
    where: shipping_documentsWhereUniqueInput
    update: XOR<shipping_documentsUpdateWithoutShippingsInput, shipping_documentsUncheckedUpdateWithoutShippingsInput>
    create: XOR<shipping_documentsCreateWithoutShippingsInput, shipping_documentsUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_documentsUpdateWithWhereUniqueWithoutShippingsInput = {
    where: shipping_documentsWhereUniqueInput
    data: XOR<shipping_documentsUpdateWithoutShippingsInput, shipping_documentsUncheckedUpdateWithoutShippingsInput>
  }

  export type shipping_documentsUpdateManyWithWhereWithoutShippingsInput = {
    where: shipping_documentsScalarWhereInput
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput>
  }

  export type shipping_filesUpsertWithWhereUniqueWithoutShippingsInput = {
    where: shipping_filesWhereUniqueInput
    update: XOR<shipping_filesUpdateWithoutShippingsInput, shipping_filesUncheckedUpdateWithoutShippingsInput>
    create: XOR<shipping_filesCreateWithoutShippingsInput, shipping_filesUncheckedCreateWithoutShippingsInput>
  }

  export type shipping_filesUpdateWithWhereUniqueWithoutShippingsInput = {
    where: shipping_filesWhereUniqueInput
    data: XOR<shipping_filesUpdateWithoutShippingsInput, shipping_filesUncheckedUpdateWithoutShippingsInput>
  }

  export type shipping_filesUpdateManyWithWhereWithoutShippingsInput = {
    where: shipping_filesScalarWhereInput
    data: XOR<shipping_filesUpdateManyMutationInput, shipping_filesUncheckedUpdateManyWithoutShipping_filesInput>
  }

  export type shipping_filesScalarWhereInput = {
    AND?: Enumerable<shipping_filesScalarWhereInput>
    OR?: Enumerable<shipping_filesScalarWhereInput>
    NOT?: Enumerable<shipping_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
  }

  export type ShippingPortUpsertWithWhereUniqueWithoutShippingsInput = {
    where: ShippingPortWhereUniqueInput
    update: XOR<ShippingPortUpdateWithoutShippingsInput, ShippingPortUncheckedUpdateWithoutShippingsInput>
    create: XOR<ShippingPortCreateWithoutShippingsInput, ShippingPortUncheckedCreateWithoutShippingsInput>
  }

  export type ShippingPortUpdateWithWhereUniqueWithoutShippingsInput = {
    where: ShippingPortWhereUniqueInput
    data: XOR<ShippingPortUpdateWithoutShippingsInput, ShippingPortUncheckedUpdateWithoutShippingsInput>
  }

  export type ShippingPortUpdateManyWithWhereWithoutShippingsInput = {
    where: ShippingPortScalarWhereInput
    data: XOR<ShippingPortUpdateManyMutationInput, ShippingPortUncheckedUpdateManyWithoutShipping_portsInput>
  }

  export type ShippingProductUpsertWithWhereUniqueWithoutShippingInput = {
    where: ShippingProductWhereUniqueInput
    update: XOR<ShippingProductUpdateWithoutShippingInput, ShippingProductUncheckedUpdateWithoutShippingInput>
    create: XOR<ShippingProductCreateWithoutShippingInput, ShippingProductUncheckedCreateWithoutShippingInput>
  }

  export type ShippingProductUpdateWithWhereUniqueWithoutShippingInput = {
    where: ShippingProductWhereUniqueInput
    data: XOR<ShippingProductUpdateWithoutShippingInput, ShippingProductUncheckedUpdateWithoutShippingInput>
  }

  export type ShippingProductUpdateManyWithWhereWithoutShippingInput = {
    where: ShippingProductScalarWhereInput
    data: XOR<ShippingProductUpdateManyMutationInput, ShippingProductUncheckedUpdateManyWithoutShipping_productsInput>
  }

  export type subsetsUpsertWithWhereUniqueWithoutShippingsInput = {
    where: subsetsWhereUniqueInput
    update: XOR<subsetsUpdateWithoutShippingsInput, subsetsUncheckedUpdateWithoutShippingsInput>
    create: XOR<subsetsCreateWithoutShippingsInput, subsetsUncheckedCreateWithoutShippingsInput>
  }

  export type subsetsUpdateWithWhereUniqueWithoutShippingsInput = {
    where: subsetsWhereUniqueInput
    data: XOR<subsetsUpdateWithoutShippingsInput, subsetsUncheckedUpdateWithoutShippingsInput>
  }

  export type subsetsUpdateManyWithWhereWithoutShippingsInput = {
    where: subsetsScalarWhereInput
    data: XOR<subsetsUpdateManyMutationInput, subsetsUncheckedUpdateManyWithoutSubsetsInput>
  }

  export type subsetsScalarWhereInput = {
    AND?: Enumerable<subsetsScalarWhereInput>
    OR?: Enumerable<subsetsScalarWhereInput>
    NOT?: Enumerable<subsetsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    shippingId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type inquiresUpsertWithWhereUniqueWithoutShippingsInput = {
    where: inquiresWhereUniqueInput
    update: XOR<inquiresUpdateWithoutShippingsInput, inquiresUncheckedUpdateWithoutShippingsInput>
    create: XOR<inquiresCreateWithoutShippingsInput, inquiresUncheckedCreateWithoutShippingsInput>
  }

  export type inquiresUpdateWithWhereUniqueWithoutShippingsInput = {
    where: inquiresWhereUniqueInput
    data: XOR<inquiresUpdateWithoutShippingsInput, inquiresUncheckedUpdateWithoutShippingsInput>
  }

  export type inquiresUpdateManyWithWhereWithoutShippingsInput = {
    where: inquiresScalarWhereInput
    data: XOR<inquiresUpdateManyMutationInput, inquiresUncheckedUpdateManyWithoutInquiresInput>
  }

  export type inquiresScalarWhereInput = {
    AND?: Enumerable<inquiresScalarWhereInput>
    OR?: Enumerable<inquiresScalarWhereInput>
    NOT?: Enumerable<inquiresScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    group?: StringNullableFilter | string | null
    shipping_id?: IntNullableFilter | number | null
    updated_by_user_id?: IntNullableFilter | number | null
    deleted?: BoolFilter | boolean
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type ShippingChecklistItemUpsertWithWhereUniqueWithoutShippingInput = {
    where: ShippingChecklistItemWhereUniqueInput
    update: XOR<ShippingChecklistItemUpdateWithoutShippingInput, ShippingChecklistItemUncheckedUpdateWithoutShippingInput>
    create: XOR<ShippingChecklistItemCreateWithoutShippingInput, ShippingChecklistItemUncheckedCreateWithoutShippingInput>
  }

  export type ShippingChecklistItemUpdateWithWhereUniqueWithoutShippingInput = {
    where: ShippingChecklistItemWhereUniqueInput
    data: XOR<ShippingChecklistItemUpdateWithoutShippingInput, ShippingChecklistItemUncheckedUpdateWithoutShippingInput>
  }

  export type ShippingChecklistItemUpdateManyWithWhereWithoutShippingInput = {
    where: ShippingChecklistItemScalarWhereInput
    data: XOR<ShippingChecklistItemUpdateManyMutationInput, ShippingChecklistItemUncheckedUpdateManyWithoutShippingChecklistItemInput>
  }

  export type ShippingChecklistItemScalarWhereInput = {
    AND?: Enumerable<ShippingChecklistItemScalarWhereInput>
    OR?: Enumerable<ShippingChecklistItemScalarWhereInput>
    NOT?: Enumerable<ShippingChecklistItemScalarWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    type?: StringFilter | string
    deadline_date?: DateTimeNullableFilter | Date | string | null
    commentary?: StringNullableFilter | string | null
    is_done?: BoolFilter | boolean
    shipping_id?: IntFilter | number
    updated_by_user_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_ut?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sofUpsertWithoutShippingInput = {
    update: XOR<sofUpdateWithoutShippingInput, sofUncheckedUpdateWithoutShippingInput>
    create: XOR<sofCreateWithoutShippingInput, sofUncheckedCreateWithoutShippingInput>
  }

  export type sofUpdateWithoutShippingInput = {
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    sof_holidays?: sof_holidaysUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUpdateManyWithoutSofNestedInput
  }

  export type sofUncheckedUpdateWithoutShippingInput = {
    id?: IntFieldUpdateOperationsInput | number
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    sof_holidays?: sof_holidaysUncheckedUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUncheckedUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUncheckedUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedUpdateManyWithoutSofNestedInput
  }

  export type ShippingCreateWithoutSubsetsInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutSubsetsInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutSubsetsInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutSubsetsInput, ShippingUncheckedCreateWithoutSubsetsInput>
  }

  export type shipping_documentsCreateWithoutSubsetsInput = {
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    master_name?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_documentsInput
    users?: usersCreateNestedOneWithoutShipping_documentsInput
    document_shipper?: document_shipperCreateNestedOneWithoutShipping_documentsInput
    document_product?: document_productCreateNestedOneWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateWithoutSubsetsInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsCreateOrConnectWithoutSubsetsInput = {
    where: shipping_documentsWhereUniqueInput
    create: XOR<shipping_documentsCreateWithoutSubsetsInput, shipping_documentsUncheckedCreateWithoutSubsetsInput>
  }

  export type shipping_documentsCreateManySubsetsInputEnvelope = {
    data: Enumerable<shipping_documentsCreateManySubsetsInput>
    skipDuplicates?: boolean
  }

  export type ShippingUpsertWithoutSubsetsInput = {
    update: XOR<ShippingUpdateWithoutSubsetsInput, ShippingUncheckedUpdateWithoutSubsetsInput>
    create: XOR<ShippingCreateWithoutSubsetsInput, ShippingUncheckedCreateWithoutSubsetsInput>
  }

  export type ShippingUpdateWithoutSubsetsInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutSubsetsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type shipping_documentsUpsertWithWhereUniqueWithoutSubsetsInput = {
    where: shipping_documentsWhereUniqueInput
    update: XOR<shipping_documentsUpdateWithoutSubsetsInput, shipping_documentsUncheckedUpdateWithoutSubsetsInput>
    create: XOR<shipping_documentsCreateWithoutSubsetsInput, shipping_documentsUncheckedCreateWithoutSubsetsInput>
  }

  export type shipping_documentsUpdateWithWhereUniqueWithoutSubsetsInput = {
    where: shipping_documentsWhereUniqueInput
    data: XOR<shipping_documentsUpdateWithoutSubsetsInput, shipping_documentsUncheckedUpdateWithoutSubsetsInput>
  }

  export type shipping_documentsUpdateManyWithWhereWithoutSubsetsInput = {
    where: shipping_documentsScalarWhereInput
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput>
  }

  export type usersCreateWithoutUser_filesInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutUser_filesInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutUser_filesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_filesInput, usersUncheckedCreateWithoutUser_filesInput>
  }

  export type usersUpsertWithoutUser_filesInput = {
    update: XOR<usersUpdateWithoutUser_filesInput, usersUncheckedUpdateWithoutUser_filesInput>
    create: XOR<usersCreateWithoutUser_filesInput, usersUncheckedCreateWithoutUser_filesInput>
  }

  export type usersUpdateWithoutUser_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type shipping_documentsCreateWithoutUsersInput = {
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    master_name?: string | null
    signature?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_documentsInput
    subsets?: subsetsCreateNestedOneWithoutShipping_documentsInput
    document_shipper?: document_shipperCreateNestedOneWithoutShipping_documentsInput
    document_product?: document_productCreateNestedOneWithoutShipping_documentsInput
  }

  export type shipping_documentsUncheckedCreateWithoutUsersInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsCreateOrConnectWithoutUsersInput = {
    where: shipping_documentsWhereUniqueInput
    create: XOR<shipping_documentsCreateWithoutUsersInput, shipping_documentsUncheckedCreateWithoutUsersInput>
  }

  export type shipping_documentsCreateManyUsersInputEnvelope = {
    data: Enumerable<shipping_documentsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type shipping_filesCreateWithoutUsersInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shippings?: ShippingCreateNestedOneWithoutShipping_filesInput
  }

  export type shipping_filesUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type shipping_filesCreateOrConnectWithoutUsersInput = {
    where: shipping_filesWhereUniqueInput
    create: XOR<shipping_filesCreateWithoutUsersInput, shipping_filesUncheckedCreateWithoutUsersInput>
  }

  export type shipping_filesCreateManyUsersInputEnvelope = {
    data: Enumerable<shipping_filesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type ShippingCreateWithoutUsersInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutUsersInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutUsersInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutUsersInput, ShippingUncheckedCreateWithoutUsersInput>
  }

  export type ShippingCreateManyUsersInputEnvelope = {
    data: Enumerable<ShippingCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type user_filesCreateWithoutUsersInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type user_filesUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type user_filesCreateOrConnectWithoutUsersInput = {
    where: user_filesWhereUniqueInput
    create: XOR<user_filesCreateWithoutUsersInput, user_filesUncheckedCreateWithoutUsersInput>
  }

  export type user_filesCreateManyUsersInputEnvelope = {
    data: Enumerable<user_filesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type inquiresCreateWithoutUsersInput = {
    title?: string | null
    group?: string | null
    shippings?: ShippingCreateNestedOneWithoutInquiresInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutInquiresInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquiresUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    group?: string | null
    shipping_id?: number | null
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutInquiresInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquiresCreateOrConnectWithoutUsersInput = {
    where: inquiresWhereUniqueInput
    create: XOR<inquiresCreateWithoutUsersInput, inquiresUncheckedCreateWithoutUsersInput>
  }

  export type inquiresCreateManyUsersInputEnvelope = {
    data: Enumerable<inquiresCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type inquires_commentsCreateWithoutUsersInput = {
    body?: string | null
    type?: string | null
    is_done: boolean
    deadline_date?: Date | string | null
    inquires?: inquiresCreateNestedOneWithoutInquires_commentsInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquires_commentsUncheckedCreateWithoutUsersInput = {
    id?: number
    body?: string | null
    type?: string | null
    is_done: boolean
    deadline_date?: Date | string | null
    inquire_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquires_commentsCreateOrConnectWithoutUsersInput = {
    where: inquires_commentsWhereUniqueInput
    create: XOR<inquires_commentsCreateWithoutUsersInput, inquires_commentsUncheckedCreateWithoutUsersInput>
  }

  export type inquires_commentsCreateManyUsersInputEnvelope = {
    data: Enumerable<inquires_commentsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type ShippingChecklistItemCreateWithoutUserInput = {
    name: string
    description?: string | null
    type: string
    deadline_date?: Date | string | null
    commentary?: string | null
    is_done: boolean
    created_at?: Date | string
    updated_ut?: Date | string
    deleted_at?: Date | string | null
    shipping?: ShippingCreateNestedOneWithoutShippingChecklistItemInput
  }

  export type ShippingChecklistItemUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: Date | string | null
    commentary?: string | null
    is_done: boolean
    shipping_id: number
    created_at?: Date | string
    updated_ut?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingChecklistItemCreateOrConnectWithoutUserInput = {
    where: ShippingChecklistItemWhereUniqueInput
    create: XOR<ShippingChecklistItemCreateWithoutUserInput, ShippingChecklistItemUncheckedCreateWithoutUserInput>
  }

  export type ShippingChecklistItemCreateManyUserInputEnvelope = {
    data: Enumerable<ShippingChecklistItemCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type group_emailsCreateWithoutUsersInput = {
    name?: string | null
    emails?: string | null
    vessel?: VesselCreateNestedOneWithoutGroup_emailsInput
  }

  export type group_emailsUncheckedCreateWithoutUsersInput = {
    id?: number
    name?: string | null
    emails?: string | null
    vessel_id?: number | null
  }

  export type group_emailsCreateOrConnectWithoutUsersInput = {
    where: group_emailsWhereUniqueInput
    create: XOR<group_emailsCreateWithoutUsersInput, group_emailsUncheckedCreateWithoutUsersInput>
  }

  export type group_emailsCreateManyUsersInputEnvelope = {
    data: Enumerable<group_emailsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type port_filesCreateWithoutUsersInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsCreateNestedOneWithoutPort_filesInput
  }

  export type port_filesUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type port_filesCreateOrConnectWithoutUsersInput = {
    where: port_filesWhereUniqueInput
    create: XOR<port_filesCreateWithoutUsersInput, port_filesUncheckedCreateWithoutUsersInput>
  }

  export type port_filesCreateManyUsersInputEnvelope = {
    data: Enumerable<port_filesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type vessel_filesCreateWithoutUsersInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    vessels?: VesselCreateNestedOneWithoutVessel_filesInput
  }

  export type vessel_filesUncheckedCreateWithoutUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    vessel_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type vessel_filesCreateOrConnectWithoutUsersInput = {
    where: vessel_filesWhereUniqueInput
    create: XOR<vessel_filesCreateWithoutUsersInput, vessel_filesUncheckedCreateWithoutUsersInput>
  }

  export type vessel_filesCreateManyUsersInputEnvelope = {
    data: Enumerable<vessel_filesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type AgencyCreateWithoutUsersInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country?: CountryCreateNestedOneWithoutAgencyInput
    ChecklistTemplate?: ChecklistTemplateCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
    country_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    ChecklistTemplate?: ChecklistTemplateUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutUsersInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutUsersInput, AgencyUncheckedCreateWithoutUsersInput>
  }

  export type users_preferenceCreateWithoutUsersInput = {
    team?: string | null
    ports?: string | null
    initial_page?: string | null
  }

  export type users_preferenceUncheckedCreateWithoutUsersInput = {
    id?: number
    team?: string | null
    ports?: string | null
    initial_page?: string | null
  }

  export type users_preferenceCreateOrConnectWithoutUsersInput = {
    where: users_preferenceWhereUniqueInput
    create: XOR<users_preferenceCreateWithoutUsersInput, users_preferenceUncheckedCreateWithoutUsersInput>
  }

  export type users_preferenceCreateManyUsersInputEnvelope = {
    data: Enumerable<users_preferenceCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type ShippingSofPortLogEventsCreateWithoutCreated_by_userInput = {
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_event?: SofPortLogEventsCreateNestedOneWithoutShippingSofPortLogEventsInput
    shipping_sof?: sofCreateNestedOneWithoutSof_port_log_eventsInput
  }

  export type ShippingSofPortLogEventsUncheckedCreateWithoutCreated_by_userInput = {
    id?: number
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    sof_port_log_event_id: number
    shipping_sof_id: number
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingSofPortLogEventsCreateOrConnectWithoutCreated_by_userInput = {
    where: ShippingSofPortLogEventsWhereUniqueInput
    create: XOR<ShippingSofPortLogEventsCreateWithoutCreated_by_userInput, ShippingSofPortLogEventsUncheckedCreateWithoutCreated_by_userInput>
  }

  export type ShippingSofPortLogEventsCreateManyCreated_by_userInputEnvelope = {
    data: Enumerable<ShippingSofPortLogEventsCreateManyCreated_by_userInput>
    skipDuplicates?: boolean
  }

  export type shipping_documentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: shipping_documentsWhereUniqueInput
    update: XOR<shipping_documentsUpdateWithoutUsersInput, shipping_documentsUncheckedUpdateWithoutUsersInput>
    create: XOR<shipping_documentsCreateWithoutUsersInput, shipping_documentsUncheckedCreateWithoutUsersInput>
  }

  export type shipping_documentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: shipping_documentsWhereUniqueInput
    data: XOR<shipping_documentsUpdateWithoutUsersInput, shipping_documentsUncheckedUpdateWithoutUsersInput>
  }

  export type shipping_documentsUpdateManyWithWhereWithoutUsersInput = {
    where: shipping_documentsScalarWhereInput
    data: XOR<shipping_documentsUpdateManyMutationInput, shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput>
  }

  export type shipping_filesUpsertWithWhereUniqueWithoutUsersInput = {
    where: shipping_filesWhereUniqueInput
    update: XOR<shipping_filesUpdateWithoutUsersInput, shipping_filesUncheckedUpdateWithoutUsersInput>
    create: XOR<shipping_filesCreateWithoutUsersInput, shipping_filesUncheckedCreateWithoutUsersInput>
  }

  export type shipping_filesUpdateWithWhereUniqueWithoutUsersInput = {
    where: shipping_filesWhereUniqueInput
    data: XOR<shipping_filesUpdateWithoutUsersInput, shipping_filesUncheckedUpdateWithoutUsersInput>
  }

  export type shipping_filesUpdateManyWithWhereWithoutUsersInput = {
    where: shipping_filesScalarWhereInput
    data: XOR<shipping_filesUpdateManyMutationInput, shipping_filesUncheckedUpdateManyWithoutShipping_filesInput>
  }

  export type ShippingUpsertWithWhereUniqueWithoutUsersInput = {
    where: ShippingWhereUniqueInput
    update: XOR<ShippingUpdateWithoutUsersInput, ShippingUncheckedUpdateWithoutUsersInput>
    create: XOR<ShippingCreateWithoutUsersInput, ShippingUncheckedCreateWithoutUsersInput>
  }

  export type ShippingUpdateWithWhereUniqueWithoutUsersInput = {
    where: ShippingWhereUniqueInput
    data: XOR<ShippingUpdateWithoutUsersInput, ShippingUncheckedUpdateWithoutUsersInput>
  }

  export type ShippingUpdateManyWithWhereWithoutUsersInput = {
    where: ShippingScalarWhereInput
    data: XOR<ShippingUpdateManyMutationInput, ShippingUncheckedUpdateManyWithoutShippingsInput>
  }

  export type ShippingScalarWhereInput = {
    AND?: Enumerable<ShippingScalarWhereInput>
    OR?: Enumerable<ShippingScalarWhereInput>
    NOT?: Enumerable<ShippingScalarWhereInput>
    id?: IntFilter | number
    status?: StringNullableFilter | string | null
    owner_head_name?: StringNullableFilter | string | null
    owner_head_address?: StringNullableFilter | string | null
    disponent_owner?: StringNullableFilter | string | null
    charter_name?: StringNullableFilter | string | null
    master_name?: StringNullableFilter | string | null
    master_email?: StringNullableFilter | string | null
    estimated_draft_arrival?: StringNullableFilter | string | null
    estimated_draft_departure?: StringNullableFilter | string | null
    arrival_draft?: FloatNullableFilter | number | null
    depart_draft?: FloatNullableFilter | number | null
    vessel_operator?: StringNullableFilter | string | null
    vessel_operator_email?: StringNullableFilter | string | null
    operation_type?: StringNullableFilter | string | null
    agency_type?: StringNullableFilter | string | null
    voyage_number?: StringNullableFilter | string | null
    external_code?: StringNullableFilter | string | null
    comments?: StringNullableFilter | string | null
    last_port?: StringNullableFilter | string | null
    next_port?: StringNullableFilter | string | null
    broker?: StringNullableFilter | string | null
    boat?: StringNullableFilter | string | null
    tugs?: StringNullableFilter | string | null
    garbage?: StringNullableFilter | string | null
    last_cargoes?: StringNullableFilter | string | null
    sscec_port?: StringNullableFilter | string | null
    sscec_exp?: StringNullableFilter | string | null
    in_marsat_c_number?: StringNullableFilter | string | null
    master_phone_01?: StringNullableFilter | string | null
    master_phone_02?: StringNullableFilter | string | null
    vessel_expert?: StringNullableFilter | string | null
    vessel_expert_phone01?: StringNullableFilter | string | null
    vessel_expert_phone02?: StringNullableFilter | string | null
    vessel_expert_alternate?: StringNullableFilter | string | null
    vessel_expert_alternate_phone01?: StringNullableFilter | string | null
    vessel_expert_alternate_phone02?: StringNullableFilter | string | null
    vessel_operator_phone01?: StringNullableFilter | string | null
    vessel_operator_phone02?: StringNullableFilter | string | null
    vessel_operator_city_country?: StringNullableFilter | string | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    vessel_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    total_load_expected?: FloatNullableFilter | number | null
    total_load_actual?: FloatNullableFilter | number | null
    port_operator?: StringNullableFilter | string | null
  }

  export type user_filesUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_filesWhereUniqueInput
    update: XOR<user_filesUpdateWithoutUsersInput, user_filesUncheckedUpdateWithoutUsersInput>
    create: XOR<user_filesCreateWithoutUsersInput, user_filesUncheckedCreateWithoutUsersInput>
  }

  export type user_filesUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_filesWhereUniqueInput
    data: XOR<user_filesUpdateWithoutUsersInput, user_filesUncheckedUpdateWithoutUsersInput>
  }

  export type user_filesUpdateManyWithWhereWithoutUsersInput = {
    where: user_filesScalarWhereInput
    data: XOR<user_filesUpdateManyMutationInput, user_filesUncheckedUpdateManyWithoutUser_filesInput>
  }

  export type user_filesScalarWhereInput = {
    AND?: Enumerable<user_filesScalarWhereInput>
    OR?: Enumerable<user_filesScalarWhereInput>
    NOT?: Enumerable<user_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    userId?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type inquiresUpsertWithWhereUniqueWithoutUsersInput = {
    where: inquiresWhereUniqueInput
    update: XOR<inquiresUpdateWithoutUsersInput, inquiresUncheckedUpdateWithoutUsersInput>
    create: XOR<inquiresCreateWithoutUsersInput, inquiresUncheckedCreateWithoutUsersInput>
  }

  export type inquiresUpdateWithWhereUniqueWithoutUsersInput = {
    where: inquiresWhereUniqueInput
    data: XOR<inquiresUpdateWithoutUsersInput, inquiresUncheckedUpdateWithoutUsersInput>
  }

  export type inquiresUpdateManyWithWhereWithoutUsersInput = {
    where: inquiresScalarWhereInput
    data: XOR<inquiresUpdateManyMutationInput, inquiresUncheckedUpdateManyWithoutInquiresInput>
  }

  export type inquires_commentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: inquires_commentsWhereUniqueInput
    update: XOR<inquires_commentsUpdateWithoutUsersInput, inquires_commentsUncheckedUpdateWithoutUsersInput>
    create: XOR<inquires_commentsCreateWithoutUsersInput, inquires_commentsUncheckedCreateWithoutUsersInput>
  }

  export type inquires_commentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: inquires_commentsWhereUniqueInput
    data: XOR<inquires_commentsUpdateWithoutUsersInput, inquires_commentsUncheckedUpdateWithoutUsersInput>
  }

  export type inquires_commentsUpdateManyWithWhereWithoutUsersInput = {
    where: inquires_commentsScalarWhereInput
    data: XOR<inquires_commentsUpdateManyMutationInput, inquires_commentsUncheckedUpdateManyWithoutInquires_commentsInput>
  }

  export type inquires_commentsScalarWhereInput = {
    AND?: Enumerable<inquires_commentsScalarWhereInput>
    OR?: Enumerable<inquires_commentsScalarWhereInput>
    NOT?: Enumerable<inquires_commentsScalarWhereInput>
    id?: IntFilter | number
    body?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    is_done?: BoolFilter | boolean
    deadline_date?: DateTimeNullableFilter | Date | string | null
    inquire_id?: IntNullableFilter | number | null
    user_id?: IntNullableFilter | number | null
    deleted?: BoolFilter | boolean
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type ShippingChecklistItemUpsertWithWhereUniqueWithoutUserInput = {
    where: ShippingChecklistItemWhereUniqueInput
    update: XOR<ShippingChecklistItemUpdateWithoutUserInput, ShippingChecklistItemUncheckedUpdateWithoutUserInput>
    create: XOR<ShippingChecklistItemCreateWithoutUserInput, ShippingChecklistItemUncheckedCreateWithoutUserInput>
  }

  export type ShippingChecklistItemUpdateWithWhereUniqueWithoutUserInput = {
    where: ShippingChecklistItemWhereUniqueInput
    data: XOR<ShippingChecklistItemUpdateWithoutUserInput, ShippingChecklistItemUncheckedUpdateWithoutUserInput>
  }

  export type ShippingChecklistItemUpdateManyWithWhereWithoutUserInput = {
    where: ShippingChecklistItemScalarWhereInput
    data: XOR<ShippingChecklistItemUpdateManyMutationInput, ShippingChecklistItemUncheckedUpdateManyWithoutShippingChecklistItemInput>
  }

  export type group_emailsUpsertWithWhereUniqueWithoutUsersInput = {
    where: group_emailsWhereUniqueInput
    update: XOR<group_emailsUpdateWithoutUsersInput, group_emailsUncheckedUpdateWithoutUsersInput>
    create: XOR<group_emailsCreateWithoutUsersInput, group_emailsUncheckedCreateWithoutUsersInput>
  }

  export type group_emailsUpdateWithWhereUniqueWithoutUsersInput = {
    where: group_emailsWhereUniqueInput
    data: XOR<group_emailsUpdateWithoutUsersInput, group_emailsUncheckedUpdateWithoutUsersInput>
  }

  export type group_emailsUpdateManyWithWhereWithoutUsersInput = {
    where: group_emailsScalarWhereInput
    data: XOR<group_emailsUpdateManyMutationInput, group_emailsUncheckedUpdateManyWithoutGroup_emailsInput>
  }

  export type group_emailsScalarWhereInput = {
    AND?: Enumerable<group_emailsScalarWhereInput>
    OR?: Enumerable<group_emailsScalarWhereInput>
    NOT?: Enumerable<group_emailsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    emails?: StringNullableFilter | string | null
    vessel_id?: IntNullableFilter | number | null
    updated_by_user_id?: IntNullableFilter | number | null
  }

  export type port_filesUpsertWithWhereUniqueWithoutUsersInput = {
    where: port_filesWhereUniqueInput
    update: XOR<port_filesUpdateWithoutUsersInput, port_filesUncheckedUpdateWithoutUsersInput>
    create: XOR<port_filesCreateWithoutUsersInput, port_filesUncheckedCreateWithoutUsersInput>
  }

  export type port_filesUpdateWithWhereUniqueWithoutUsersInput = {
    where: port_filesWhereUniqueInput
    data: XOR<port_filesUpdateWithoutUsersInput, port_filesUncheckedUpdateWithoutUsersInput>
  }

  export type port_filesUpdateManyWithWhereWithoutUsersInput = {
    where: port_filesScalarWhereInput
    data: XOR<port_filesUpdateManyMutationInput, port_filesUncheckedUpdateManyWithoutPort_filesInput>
  }

  export type vessel_filesUpsertWithWhereUniqueWithoutUsersInput = {
    where: vessel_filesWhereUniqueInput
    update: XOR<vessel_filesUpdateWithoutUsersInput, vessel_filesUncheckedUpdateWithoutUsersInput>
    create: XOR<vessel_filesCreateWithoutUsersInput, vessel_filesUncheckedCreateWithoutUsersInput>
  }

  export type vessel_filesUpdateWithWhereUniqueWithoutUsersInput = {
    where: vessel_filesWhereUniqueInput
    data: XOR<vessel_filesUpdateWithoutUsersInput, vessel_filesUncheckedUpdateWithoutUsersInput>
  }

  export type vessel_filesUpdateManyWithWhereWithoutUsersInput = {
    where: vessel_filesScalarWhereInput
    data: XOR<vessel_filesUpdateManyMutationInput, vessel_filesUncheckedUpdateManyWithoutVessel_filesInput>
  }

  export type vessel_filesScalarWhereInput = {
    AND?: Enumerable<vessel_filesScalarWhereInput>
    OR?: Enumerable<vessel_filesScalarWhereInput>
    NOT?: Enumerable<vessel_filesScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    filename?: StringNullableFilter | string | null
    originalName?: StringNullableFilter | string | null
    vessel_id?: IntNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    userId?: IntNullableFilter | number | null
  }

  export type AgencyUpsertWithoutUsersInput = {
    update: XOR<AgencyUpdateWithoutUsersInput, AgencyUncheckedUpdateWithoutUsersInput>
    create: XOR<AgencyCreateWithoutUsersInput, AgencyUncheckedCreateWithoutUsersInput>
  }

  export type AgencyUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country?: CountryUpdateOneWithoutAgencyNestedInput
    ChecklistTemplate?: ChecklistTemplateUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ChecklistTemplate?: ChecklistTemplateUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type users_preferenceUpsertWithWhereUniqueWithoutUsersInput = {
    where: users_preferenceWhereUniqueInput
    update: XOR<users_preferenceUpdateWithoutUsersInput, users_preferenceUncheckedUpdateWithoutUsersInput>
    create: XOR<users_preferenceCreateWithoutUsersInput, users_preferenceUncheckedCreateWithoutUsersInput>
  }

  export type users_preferenceUpdateWithWhereUniqueWithoutUsersInput = {
    where: users_preferenceWhereUniqueInput
    data: XOR<users_preferenceUpdateWithoutUsersInput, users_preferenceUncheckedUpdateWithoutUsersInput>
  }

  export type users_preferenceUpdateManyWithWhereWithoutUsersInput = {
    where: users_preferenceScalarWhereInput
    data: XOR<users_preferenceUpdateManyMutationInput, users_preferenceUncheckedUpdateManyWithoutUsers_preferenceInput>
  }

  export type users_preferenceScalarWhereInput = {
    AND?: Enumerable<users_preferenceScalarWhereInput>
    OR?: Enumerable<users_preferenceScalarWhereInput>
    NOT?: Enumerable<users_preferenceScalarWhereInput>
    id?: IntFilter | number
    team?: StringNullableFilter | string | null
    ports?: StringNullableFilter | string | null
    initial_page?: StringNullableFilter | string | null
    user_id?: IntNullableFilter | number | null
  }

  export type ShippingSofPortLogEventsUpsertWithWhereUniqueWithoutCreated_by_userInput = {
    where: ShippingSofPortLogEventsWhereUniqueInput
    update: XOR<ShippingSofPortLogEventsUpdateWithoutCreated_by_userInput, ShippingSofPortLogEventsUncheckedUpdateWithoutCreated_by_userInput>
    create: XOR<ShippingSofPortLogEventsCreateWithoutCreated_by_userInput, ShippingSofPortLogEventsUncheckedCreateWithoutCreated_by_userInput>
  }

  export type ShippingSofPortLogEventsUpdateWithWhereUniqueWithoutCreated_by_userInput = {
    where: ShippingSofPortLogEventsWhereUniqueInput
    data: XOR<ShippingSofPortLogEventsUpdateWithoutCreated_by_userInput, ShippingSofPortLogEventsUncheckedUpdateWithoutCreated_by_userInput>
  }

  export type ShippingSofPortLogEventsUpdateManyWithWhereWithoutCreated_by_userInput = {
    where: ShippingSofPortLogEventsScalarWhereInput
    data: XOR<ShippingSofPortLogEventsUpdateManyMutationInput, ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sof_port_log_eventsInput>
  }

  export type ShippingSofPortLogEventsScalarWhereInput = {
    AND?: Enumerable<ShippingSofPortLogEventsScalarWhereInput>
    OR?: Enumerable<ShippingSofPortLogEventsScalarWhereInput>
    NOT?: Enumerable<ShippingSofPortLogEventsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    commentary?: StringNullableFilter | string | null
    is_important?: BoolNullableFilter | boolean | null
    is_highlighted?: BoolNullableFilter | boolean | null
    start_date?: DateTimeNullableFilter | Date | string | null
    end_date?: DateTimeNullableFilter | Date | string | null
    sof_port_log_event_id?: IntFilter | number
    shipping_sof_id?: IntFilter | number
    created_by_user_id?: IntFilter | number
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type usersCreateWithoutUsers_preferenceInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutUsers_preferenceInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutUsers_preferenceInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUsers_preferenceInput, usersUncheckedCreateWithoutUsers_preferenceInput>
  }

  export type usersUpsertWithoutUsers_preferenceInput = {
    update: XOR<usersUpdateWithoutUsers_preferenceInput, usersUncheckedUpdateWithoutUsers_preferenceInput>
    create: XOR<usersCreateWithoutUsers_preferenceInput, usersUncheckedCreateWithoutUsers_preferenceInput>
  }

  export type usersUpdateWithoutUsers_preferenceInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutUsers_preferenceInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersCreateWithoutVessel_filesInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutVessel_filesInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutVessel_filesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutVessel_filesInput, usersUncheckedCreateWithoutVessel_filesInput>
  }

  export type VesselCreateWithoutVessel_filesInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    country?: CountryCreateNestedOneWithoutVesselsInput
    shippings?: ShippingCreateNestedManyWithoutVesselInput
    group_emails?: group_emailsCreateNestedManyWithoutVesselInput
  }

  export type VesselUncheckedCreateWithoutVessel_filesInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingUncheckedCreateNestedManyWithoutVesselInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutVesselInput
  }

  export type VesselCreateOrConnectWithoutVessel_filesInput = {
    where: VesselWhereUniqueInput
    create: XOR<VesselCreateWithoutVessel_filesInput, VesselUncheckedCreateWithoutVessel_filesInput>
  }

  export type usersUpsertWithoutVessel_filesInput = {
    update: XOR<usersUpdateWithoutVessel_filesInput, usersUncheckedUpdateWithoutVessel_filesInput>
    create: XOR<usersCreateWithoutVessel_filesInput, usersUncheckedCreateWithoutVessel_filesInput>
  }

  export type usersUpdateWithoutVessel_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutVessel_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type VesselUpsertWithoutVessel_filesInput = {
    update: XOR<VesselUpdateWithoutVessel_filesInput, VesselUncheckedUpdateWithoutVessel_filesInput>
    create: XOR<VesselCreateWithoutVessel_filesInput, VesselUncheckedCreateWithoutVessel_filesInput>
  }

  export type VesselUpdateWithoutVessel_filesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    country?: CountryUpdateOneWithoutVesselsNestedInput
    shippings?: ShippingUpdateManyWithoutVesselNestedInput
    group_emails?: group_emailsUpdateManyWithoutVesselNestedInput
  }

  export type VesselUncheckedUpdateWithoutVessel_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUncheckedUpdateManyWithoutVesselNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutVesselNestedInput
  }

  export type CountryCreateWithoutVesselsInput = {
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsCreateNestedManyWithoutCountryInput
    agency?: AgencyCreateNestedManyWithoutCountryInput
  }

  export type CountryUncheckedCreateWithoutVesselsInput = {
    id?: number
    name?: string | null
    flag?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    ports?: portsUncheckedCreateNestedManyWithoutCountryInput
    agency?: AgencyUncheckedCreateNestedManyWithoutCountryInput
  }

  export type CountryCreateOrConnectWithoutVesselsInput = {
    where: CountryWhereUniqueInput
    create: XOR<CountryCreateWithoutVesselsInput, CountryUncheckedCreateWithoutVesselsInput>
  }

  export type ShippingCreateWithoutVesselInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutVesselInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutVesselInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutVesselInput, ShippingUncheckedCreateWithoutVesselInput>
  }

  export type ShippingCreateManyVesselInputEnvelope = {
    data: Enumerable<ShippingCreateManyVesselInput>
    skipDuplicates?: boolean
  }

  export type vessel_filesCreateWithoutVesselsInput = {
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    users?: usersCreateNestedOneWithoutVessel_filesInput
  }

  export type vessel_filesUncheckedCreateWithoutVesselsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type vessel_filesCreateOrConnectWithoutVesselsInput = {
    where: vessel_filesWhereUniqueInput
    create: XOR<vessel_filesCreateWithoutVesselsInput, vessel_filesUncheckedCreateWithoutVesselsInput>
  }

  export type vessel_filesCreateManyVesselsInputEnvelope = {
    data: Enumerable<vessel_filesCreateManyVesselsInput>
    skipDuplicates?: boolean
  }

  export type group_emailsCreateWithoutVesselInput = {
    name?: string | null
    emails?: string | null
    users?: usersCreateNestedOneWithoutGroup_emailsInput
  }

  export type group_emailsUncheckedCreateWithoutVesselInput = {
    id?: number
    name?: string | null
    emails?: string | null
    updated_by_user_id?: number | null
  }

  export type group_emailsCreateOrConnectWithoutVesselInput = {
    where: group_emailsWhereUniqueInput
    create: XOR<group_emailsCreateWithoutVesselInput, group_emailsUncheckedCreateWithoutVesselInput>
  }

  export type group_emailsCreateManyVesselInputEnvelope = {
    data: Enumerable<group_emailsCreateManyVesselInput>
    skipDuplicates?: boolean
  }

  export type CountryUpsertWithoutVesselsInput = {
    update: XOR<CountryUpdateWithoutVesselsInput, CountryUncheckedUpdateWithoutVesselsInput>
    create: XOR<CountryCreateWithoutVesselsInput, CountryUncheckedCreateWithoutVesselsInput>
  }

  export type CountryUpdateWithoutVesselsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUpdateManyWithoutCountryNestedInput
    agency?: AgencyUpdateManyWithoutCountryNestedInput
  }

  export type CountryUncheckedUpdateWithoutVesselsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    flag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUncheckedUpdateManyWithoutCountryNestedInput
    agency?: AgencyUncheckedUpdateManyWithoutCountryNestedInput
  }

  export type ShippingUpsertWithWhereUniqueWithoutVesselInput = {
    where: ShippingWhereUniqueInput
    update: XOR<ShippingUpdateWithoutVesselInput, ShippingUncheckedUpdateWithoutVesselInput>
    create: XOR<ShippingCreateWithoutVesselInput, ShippingUncheckedCreateWithoutVesselInput>
  }

  export type ShippingUpdateWithWhereUniqueWithoutVesselInput = {
    where: ShippingWhereUniqueInput
    data: XOR<ShippingUpdateWithoutVesselInput, ShippingUncheckedUpdateWithoutVesselInput>
  }

  export type ShippingUpdateManyWithWhereWithoutVesselInput = {
    where: ShippingScalarWhereInput
    data: XOR<ShippingUpdateManyMutationInput, ShippingUncheckedUpdateManyWithoutShippingsInput>
  }

  export type vessel_filesUpsertWithWhereUniqueWithoutVesselsInput = {
    where: vessel_filesWhereUniqueInput
    update: XOR<vessel_filesUpdateWithoutVesselsInput, vessel_filesUncheckedUpdateWithoutVesselsInput>
    create: XOR<vessel_filesCreateWithoutVesselsInput, vessel_filesUncheckedCreateWithoutVesselsInput>
  }

  export type vessel_filesUpdateWithWhereUniqueWithoutVesselsInput = {
    where: vessel_filesWhereUniqueInput
    data: XOR<vessel_filesUpdateWithoutVesselsInput, vessel_filesUncheckedUpdateWithoutVesselsInput>
  }

  export type vessel_filesUpdateManyWithWhereWithoutVesselsInput = {
    where: vessel_filesScalarWhereInput
    data: XOR<vessel_filesUpdateManyMutationInput, vessel_filesUncheckedUpdateManyWithoutVessel_filesInput>
  }

  export type group_emailsUpsertWithWhereUniqueWithoutVesselInput = {
    where: group_emailsWhereUniqueInput
    update: XOR<group_emailsUpdateWithoutVesselInput, group_emailsUncheckedUpdateWithoutVesselInput>
    create: XOR<group_emailsCreateWithoutVesselInput, group_emailsUncheckedCreateWithoutVesselInput>
  }

  export type group_emailsUpdateWithWhereUniqueWithoutVesselInput = {
    where: group_emailsWhereUniqueInput
    data: XOR<group_emailsUpdateWithoutVesselInput, group_emailsUncheckedUpdateWithoutVesselInput>
  }

  export type group_emailsUpdateManyWithWhereWithoutVesselInput = {
    where: group_emailsScalarWhereInput
    data: XOR<group_emailsUpdateManyMutationInput, group_emailsUncheckedUpdateManyWithoutGroup_emailsInput>
  }

  export type ShippingCreateWithoutInquiresInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
    sof?: sofCreateNestedOneWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutInquiresInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
    sof?: sofUncheckedCreateNestedOneWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutInquiresInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutInquiresInput, ShippingUncheckedCreateWithoutInquiresInput>
  }

  export type usersCreateWithoutInquiresInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutInquiresInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutInquiresInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutInquiresInput, usersUncheckedCreateWithoutInquiresInput>
  }

  export type inquires_commentsCreateWithoutInquiresInput = {
    body?: string | null
    type?: string | null
    is_done: boolean
    deadline_date?: Date | string | null
    users?: usersCreateNestedOneWithoutInquires_commentsInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquires_commentsUncheckedCreateWithoutInquiresInput = {
    id?: number
    body?: string | null
    type?: string | null
    is_done: boolean
    deadline_date?: Date | string | null
    user_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquires_commentsCreateOrConnectWithoutInquiresInput = {
    where: inquires_commentsWhereUniqueInput
    create: XOR<inquires_commentsCreateWithoutInquiresInput, inquires_commentsUncheckedCreateWithoutInquiresInput>
  }

  export type inquires_commentsCreateManyInquiresInputEnvelope = {
    data: Enumerable<inquires_commentsCreateManyInquiresInput>
    skipDuplicates?: boolean
  }

  export type ShippingUpsertWithoutInquiresInput = {
    update: XOR<ShippingUpdateWithoutInquiresInput, ShippingUncheckedUpdateWithoutInquiresInput>
    create: XOR<ShippingCreateWithoutInquiresInput, ShippingUncheckedCreateWithoutInquiresInput>
  }

  export type ShippingUpdateWithoutInquiresInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutInquiresInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type usersUpsertWithoutInquiresInput = {
    update: XOR<usersUpdateWithoutInquiresInput, usersUncheckedUpdateWithoutInquiresInput>
    create: XOR<usersCreateWithoutInquiresInput, usersUncheckedCreateWithoutInquiresInput>
  }

  export type usersUpdateWithoutInquiresInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutInquiresInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type inquires_commentsUpsertWithWhereUniqueWithoutInquiresInput = {
    where: inquires_commentsWhereUniqueInput
    update: XOR<inquires_commentsUpdateWithoutInquiresInput, inquires_commentsUncheckedUpdateWithoutInquiresInput>
    create: XOR<inquires_commentsCreateWithoutInquiresInput, inquires_commentsUncheckedCreateWithoutInquiresInput>
  }

  export type inquires_commentsUpdateWithWhereUniqueWithoutInquiresInput = {
    where: inquires_commentsWhereUniqueInput
    data: XOR<inquires_commentsUpdateWithoutInquiresInput, inquires_commentsUncheckedUpdateWithoutInquiresInput>
  }

  export type inquires_commentsUpdateManyWithWhereWithoutInquiresInput = {
    where: inquires_commentsScalarWhereInput
    data: XOR<inquires_commentsUpdateManyMutationInput, inquires_commentsUncheckedUpdateManyWithoutInquires_commentsInput>
  }

  export type inquiresCreateWithoutInquires_commentsInput = {
    title?: string | null
    group?: string | null
    shippings?: ShippingCreateNestedOneWithoutInquiresInput
    users?: usersCreateNestedOneWithoutInquiresInput
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquiresUncheckedCreateWithoutInquires_commentsInput = {
    id?: number
    title?: string | null
    group?: string | null
    shipping_id?: number | null
    updated_by_user_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquiresCreateOrConnectWithoutInquires_commentsInput = {
    where: inquiresWhereUniqueInput
    create: XOR<inquiresCreateWithoutInquires_commentsInput, inquiresUncheckedCreateWithoutInquires_commentsInput>
  }

  export type usersCreateWithoutInquires_commentsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutInquires_commentsInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutInquires_commentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutInquires_commentsInput, usersUncheckedCreateWithoutInquires_commentsInput>
  }

  export type inquiresUpsertWithoutInquires_commentsInput = {
    update: XOR<inquiresUpdateWithoutInquires_commentsInput, inquiresUncheckedUpdateWithoutInquires_commentsInput>
    create: XOR<inquiresCreateWithoutInquires_commentsInput, inquiresUncheckedCreateWithoutInquires_commentsInput>
  }

  export type inquiresUpdateWithoutInquires_commentsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    shippings?: ShippingUpdateOneWithoutInquiresNestedInput
    users?: usersUpdateOneWithoutInquiresNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUncheckedUpdateWithoutInquires_commentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUpsertWithoutInquires_commentsInput = {
    update: XOR<usersUpdateWithoutInquires_commentsInput, usersUncheckedUpdateWithoutInquires_commentsInput>
    create: XOR<usersCreateWithoutInquires_commentsInput, usersUncheckedCreateWithoutInquires_commentsInput>
  }

  export type usersUpdateWithoutInquires_commentsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutInquires_commentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type VesselCreateWithoutGroup_emailsInput = {
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
    country?: CountryCreateNestedOneWithoutVesselsInput
    shippings?: ShippingCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesCreateNestedManyWithoutVesselsInput
  }

  export type VesselUncheckedCreateWithoutGroup_emailsInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    country_id?: number | null
    draft_sw?: string | null
    built_year?: number | null
    shippings?: ShippingUncheckedCreateNestedManyWithoutVesselInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutVesselsInput
  }

  export type VesselCreateOrConnectWithoutGroup_emailsInput = {
    where: VesselWhereUniqueInput
    create: XOR<VesselCreateWithoutGroup_emailsInput, VesselUncheckedCreateWithoutGroup_emailsInput>
  }

  export type usersCreateWithoutGroup_emailsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersUncheckedCreateWithoutGroup_emailsInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutCreated_by_userInput
  }

  export type usersCreateOrConnectWithoutGroup_emailsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutGroup_emailsInput, usersUncheckedCreateWithoutGroup_emailsInput>
  }

  export type VesselUpsertWithoutGroup_emailsInput = {
    update: XOR<VesselUpdateWithoutGroup_emailsInput, VesselUncheckedUpdateWithoutGroup_emailsInput>
    create: XOR<VesselCreateWithoutGroup_emailsInput, VesselUncheckedCreateWithoutGroup_emailsInput>
  }

  export type VesselUpdateWithoutGroup_emailsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    country?: CountryUpdateOneWithoutVesselsNestedInput
    shippings?: ShippingUpdateManyWithoutVesselNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutVesselsNestedInput
  }

  export type VesselUncheckedUpdateWithoutGroup_emailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    country_id?: NullableIntFieldUpdateOperationsInput | number | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUncheckedUpdateManyWithoutVesselNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutVesselsNestedInput
  }

  export type usersUpsertWithoutGroup_emailsInput = {
    update: XOR<usersUpdateWithoutGroup_emailsInput, usersUncheckedUpdateWithoutGroup_emailsInput>
    create: XOR<usersCreateWithoutGroup_emailsInput, usersUncheckedCreateWithoutGroup_emailsInput>
  }

  export type usersUpdateWithoutGroup_emailsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutGroup_emailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type ShippingCreateWithoutSofInput = {
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    users?: usersCreateNestedOneWithoutShippingsInput
    vessel?: VesselCreateNestedOneWithoutShippingsInput
    shipping_documents?: shipping_documentsCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductCreateNestedManyWithoutShippingInput
    subsets?: subsetsCreateNestedManyWithoutShippingsInput
    inquires?: inquiresCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutShippingInput
  }

  export type ShippingUncheckedCreateWithoutSofInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutShippingsInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutShippingsInput
    shipping_ports?: ShippingPortUncheckedCreateNestedManyWithoutShippingsInput
    shipping_products?: ShippingProductUncheckedCreateNestedManyWithoutShippingInput
    subsets?: subsetsUncheckedCreateNestedManyWithoutShippingsInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutShippingsInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutShippingInput
  }

  export type ShippingCreateOrConnectWithoutSofInput = {
    where: ShippingWhereUniqueInput
    create: XOR<ShippingCreateWithoutSofInput, ShippingUncheckedCreateWithoutSofInput>
  }

  export type sof_holidaysCreateWithoutSofInput = {
    name?: string | null
    date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_holidaysUncheckedCreateWithoutSofInput = {
    id?: number
    name?: string | null
    date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_holidaysCreateOrConnectWithoutSofInput = {
    where: sof_holidaysWhereUniqueInput
    create: XOR<sof_holidaysCreateWithoutSofInput, sof_holidaysUncheckedCreateWithoutSofInput>
  }

  export type sof_holidaysCreateManySofInputEnvelope = {
    data: Enumerable<sof_holidaysCreateManySofInput>
    skipDuplicates?: boolean
  }

  export type sof_remarksCreateWithoutSofInput = {
    title?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_remarks_itens?: sof_remarks_itemsCreateNestedManyWithoutSof_remarksInput
  }

  export type sof_remarksUncheckedCreateWithoutSofInput = {
    id?: number
    title?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_remarks_itens?: sof_remarks_itemsUncheckedCreateNestedManyWithoutSof_remarksInput
  }

  export type sof_remarksCreateOrConnectWithoutSofInput = {
    where: sof_remarksWhereUniqueInput
    create: XOR<sof_remarksCreateWithoutSofInput, sof_remarksUncheckedCreateWithoutSofInput>
  }

  export type sof_remarksCreateManySofInputEnvelope = {
    data: Enumerable<sof_remarksCreateManySofInput>
    skipDuplicates?: boolean
  }

  export type sof_draftCreateWithoutSofInput = {
    title?: string | null
    fwd?: number | null
    mid?: number | null
    aft?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_draftUncheckedCreateWithoutSofInput = {
    id?: number
    title?: string | null
    fwd?: number | null
    mid?: number | null
    aft?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_draftCreateOrConnectWithoutSofInput = {
    where: sof_draftWhereUniqueInput
    create: XOR<sof_draftCreateWithoutSofInput, sof_draftUncheckedCreateWithoutSofInput>
  }

  export type sof_draftCreateManySofInputEnvelope = {
    data: Enumerable<sof_draftCreateManySofInput>
    skipDuplicates?: boolean
  }

  export type sof_bunker_figuresCreateWithoutSofInput = {
    title?: string | null
    ifo?: number | null
    mdo?: number | null
    fw?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_bunker_figuresUncheckedCreateWithoutSofInput = {
    id?: number
    title?: string | null
    ifo?: number | null
    mdo?: number | null
    fw?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_bunker_figuresCreateOrConnectWithoutSofInput = {
    where: sof_bunker_figuresWhereUniqueInput
    create: XOR<sof_bunker_figuresCreateWithoutSofInput, sof_bunker_figuresUncheckedCreateWithoutSofInput>
  }

  export type sof_bunker_figuresCreateManySofInputEnvelope = {
    data: Enumerable<sof_bunker_figuresCreateManySofInput>
    skipDuplicates?: boolean
  }

  export type ShippingSofPortLogEventsCreateWithoutShipping_sofInput = {
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_event?: SofPortLogEventsCreateNestedOneWithoutShippingSofPortLogEventsInput
    created_by_user?: usersCreateNestedOneWithoutShipping_sof_port_log_eventsInput
  }

  export type ShippingSofPortLogEventsUncheckedCreateWithoutShipping_sofInput = {
    id?: number
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    sof_port_log_event_id: number
    created_by_user_id: number
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingSofPortLogEventsCreateOrConnectWithoutShipping_sofInput = {
    where: ShippingSofPortLogEventsWhereUniqueInput
    create: XOR<ShippingSofPortLogEventsCreateWithoutShipping_sofInput, ShippingSofPortLogEventsUncheckedCreateWithoutShipping_sofInput>
  }

  export type ShippingSofPortLogEventsCreateManyShipping_sofInputEnvelope = {
    data: Enumerable<ShippingSofPortLogEventsCreateManyShipping_sofInput>
    skipDuplicates?: boolean
  }

  export type sof_shipper_cargoCreateWithoutSofInput = {
    berth?: string | null
    cargo?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper?: sof_shipperCreateNestedManyWithoutSof_shipper_cargoInput
    sof_shipper_value?: sof_shipper_valueCreateNestedManyWithoutSof_shipper_cargoInput
  }

  export type sof_shipper_cargoUncheckedCreateWithoutSofInput = {
    id?: number
    berth?: string | null
    cargo?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper?: sof_shipperUncheckedCreateNestedManyWithoutSof_shipper_cargoInput
    sof_shipper_value?: sof_shipper_valueUncheckedCreateNestedManyWithoutSof_shipper_cargoInput
  }

  export type sof_shipper_cargoCreateOrConnectWithoutSofInput = {
    where: sof_shipper_cargoWhereUniqueInput
    create: XOR<sof_shipper_cargoCreateWithoutSofInput, sof_shipper_cargoUncheckedCreateWithoutSofInput>
  }

  export type sof_shipper_cargoCreateManySofInputEnvelope = {
    data: Enumerable<sof_shipper_cargoCreateManySofInput>
    skipDuplicates?: boolean
  }

  export type ShippingUpsertWithoutSofInput = {
    update: XOR<ShippingUpdateWithoutSofInput, ShippingUncheckedUpdateWithoutSofInput>
    create: XOR<ShippingCreateWithoutSofInput, ShippingUncheckedCreateWithoutSofInput>
  }

  export type ShippingUpdateWithoutSofInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutSofInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
  }

  export type sof_holidaysUpsertWithWhereUniqueWithoutSofInput = {
    where: sof_holidaysWhereUniqueInput
    update: XOR<sof_holidaysUpdateWithoutSofInput, sof_holidaysUncheckedUpdateWithoutSofInput>
    create: XOR<sof_holidaysCreateWithoutSofInput, sof_holidaysUncheckedCreateWithoutSofInput>
  }

  export type sof_holidaysUpdateWithWhereUniqueWithoutSofInput = {
    where: sof_holidaysWhereUniqueInput
    data: XOR<sof_holidaysUpdateWithoutSofInput, sof_holidaysUncheckedUpdateWithoutSofInput>
  }

  export type sof_holidaysUpdateManyWithWhereWithoutSofInput = {
    where: sof_holidaysScalarWhereInput
    data: XOR<sof_holidaysUpdateManyMutationInput, sof_holidaysUncheckedUpdateManyWithoutSof_holidaysInput>
  }

  export type sof_holidaysScalarWhereInput = {
    AND?: Enumerable<sof_holidaysScalarWhereInput>
    OR?: Enumerable<sof_holidaysScalarWhereInput>
    NOT?: Enumerable<sof_holidaysScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    date?: DateTimeNullableFilter | Date | string | null
    sof_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sof_remarksUpsertWithWhereUniqueWithoutSofInput = {
    where: sof_remarksWhereUniqueInput
    update: XOR<sof_remarksUpdateWithoutSofInput, sof_remarksUncheckedUpdateWithoutSofInput>
    create: XOR<sof_remarksCreateWithoutSofInput, sof_remarksUncheckedCreateWithoutSofInput>
  }

  export type sof_remarksUpdateWithWhereUniqueWithoutSofInput = {
    where: sof_remarksWhereUniqueInput
    data: XOR<sof_remarksUpdateWithoutSofInput, sof_remarksUncheckedUpdateWithoutSofInput>
  }

  export type sof_remarksUpdateManyWithWhereWithoutSofInput = {
    where: sof_remarksScalarWhereInput
    data: XOR<sof_remarksUpdateManyMutationInput, sof_remarksUncheckedUpdateManyWithoutSof_remarksInput>
  }

  export type sof_remarksScalarWhereInput = {
    AND?: Enumerable<sof_remarksScalarWhereInput>
    OR?: Enumerable<sof_remarksScalarWhereInput>
    NOT?: Enumerable<sof_remarksScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    sof_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sof_draftUpsertWithWhereUniqueWithoutSofInput = {
    where: sof_draftWhereUniqueInput
    update: XOR<sof_draftUpdateWithoutSofInput, sof_draftUncheckedUpdateWithoutSofInput>
    create: XOR<sof_draftCreateWithoutSofInput, sof_draftUncheckedCreateWithoutSofInput>
  }

  export type sof_draftUpdateWithWhereUniqueWithoutSofInput = {
    where: sof_draftWhereUniqueInput
    data: XOR<sof_draftUpdateWithoutSofInput, sof_draftUncheckedUpdateWithoutSofInput>
  }

  export type sof_draftUpdateManyWithWhereWithoutSofInput = {
    where: sof_draftScalarWhereInput
    data: XOR<sof_draftUpdateManyMutationInput, sof_draftUncheckedUpdateManyWithoutSof_draftInput>
  }

  export type sof_draftScalarWhereInput = {
    AND?: Enumerable<sof_draftScalarWhereInput>
    OR?: Enumerable<sof_draftScalarWhereInput>
    NOT?: Enumerable<sof_draftScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    fwd?: FloatNullableFilter | number | null
    mid?: FloatNullableFilter | number | null
    aft?: FloatNullableFilter | number | null
    sof_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sof_bunker_figuresUpsertWithWhereUniqueWithoutSofInput = {
    where: sof_bunker_figuresWhereUniqueInput
    update: XOR<sof_bunker_figuresUpdateWithoutSofInput, sof_bunker_figuresUncheckedUpdateWithoutSofInput>
    create: XOR<sof_bunker_figuresCreateWithoutSofInput, sof_bunker_figuresUncheckedCreateWithoutSofInput>
  }

  export type sof_bunker_figuresUpdateWithWhereUniqueWithoutSofInput = {
    where: sof_bunker_figuresWhereUniqueInput
    data: XOR<sof_bunker_figuresUpdateWithoutSofInput, sof_bunker_figuresUncheckedUpdateWithoutSofInput>
  }

  export type sof_bunker_figuresUpdateManyWithWhereWithoutSofInput = {
    where: sof_bunker_figuresScalarWhereInput
    data: XOR<sof_bunker_figuresUpdateManyMutationInput, sof_bunker_figuresUncheckedUpdateManyWithoutSof_bunker_figuresInput>
  }

  export type sof_bunker_figuresScalarWhereInput = {
    AND?: Enumerable<sof_bunker_figuresScalarWhereInput>
    OR?: Enumerable<sof_bunker_figuresScalarWhereInput>
    NOT?: Enumerable<sof_bunker_figuresScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    ifo?: FloatNullableFilter | number | null
    mdo?: FloatNullableFilter | number | null
    fw?: FloatNullableFilter | number | null
    sof_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type ShippingSofPortLogEventsUpsertWithWhereUniqueWithoutShipping_sofInput = {
    where: ShippingSofPortLogEventsWhereUniqueInput
    update: XOR<ShippingSofPortLogEventsUpdateWithoutShipping_sofInput, ShippingSofPortLogEventsUncheckedUpdateWithoutShipping_sofInput>
    create: XOR<ShippingSofPortLogEventsCreateWithoutShipping_sofInput, ShippingSofPortLogEventsUncheckedCreateWithoutShipping_sofInput>
  }

  export type ShippingSofPortLogEventsUpdateWithWhereUniqueWithoutShipping_sofInput = {
    where: ShippingSofPortLogEventsWhereUniqueInput
    data: XOR<ShippingSofPortLogEventsUpdateWithoutShipping_sofInput, ShippingSofPortLogEventsUncheckedUpdateWithoutShipping_sofInput>
  }

  export type ShippingSofPortLogEventsUpdateManyWithWhereWithoutShipping_sofInput = {
    where: ShippingSofPortLogEventsScalarWhereInput
    data: XOR<ShippingSofPortLogEventsUpdateManyMutationInput, ShippingSofPortLogEventsUncheckedUpdateManyWithoutSof_port_log_eventsInput>
  }

  export type sof_shipper_cargoUpsertWithWhereUniqueWithoutSofInput = {
    where: sof_shipper_cargoWhereUniqueInput
    update: XOR<sof_shipper_cargoUpdateWithoutSofInput, sof_shipper_cargoUncheckedUpdateWithoutSofInput>
    create: XOR<sof_shipper_cargoCreateWithoutSofInput, sof_shipper_cargoUncheckedCreateWithoutSofInput>
  }

  export type sof_shipper_cargoUpdateWithWhereUniqueWithoutSofInput = {
    where: sof_shipper_cargoWhereUniqueInput
    data: XOR<sof_shipper_cargoUpdateWithoutSofInput, sof_shipper_cargoUncheckedUpdateWithoutSofInput>
  }

  export type sof_shipper_cargoUpdateManyWithWhereWithoutSofInput = {
    where: sof_shipper_cargoScalarWhereInput
    data: XOR<sof_shipper_cargoUpdateManyMutationInput, sof_shipper_cargoUncheckedUpdateManyWithoutSof_shipper_cargoInput>
  }

  export type sof_shipper_cargoScalarWhereInput = {
    AND?: Enumerable<sof_shipper_cargoScalarWhereInput>
    OR?: Enumerable<sof_shipper_cargoScalarWhereInput>
    NOT?: Enumerable<sof_shipper_cargoScalarWhereInput>
    id?: IntFilter | number
    berth?: StringNullableFilter | string | null
    cargo?: StringNullableFilter | string | null
    sof_id?: IntNullableFilter | number | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sofCreateWithoutSof_holidaysInput = {
    hidden_attributes?: string | null
    shipping?: ShippingCreateNestedOneWithoutSofInput
    sof_remarks?: sof_remarksCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoCreateNestedManyWithoutSofInput
  }

  export type sofUncheckedCreateWithoutSof_holidaysInput = {
    id?: number
    hidden_attributes?: string | null
    shipping_id?: number | null
    sof_remarks?: sof_remarksUncheckedCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftUncheckedCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedCreateNestedManyWithoutSofInput
  }

  export type sofCreateOrConnectWithoutSof_holidaysInput = {
    where: sofWhereUniqueInput
    create: XOR<sofCreateWithoutSof_holidaysInput, sofUncheckedCreateWithoutSof_holidaysInput>
  }

  export type sofUpsertWithoutSof_holidaysInput = {
    update: XOR<sofUpdateWithoutSof_holidaysInput, sofUncheckedUpdateWithoutSof_holidaysInput>
    create: XOR<sofCreateWithoutSof_holidaysInput, sofUncheckedCreateWithoutSof_holidaysInput>
  }

  export type sofUpdateWithoutSof_holidaysInput = {
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping?: ShippingUpdateOneWithoutSofNestedInput
    sof_remarks?: sof_remarksUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUpdateManyWithoutSofNestedInput
  }

  export type sofUncheckedUpdateWithoutSof_holidaysInput = {
    id?: IntFieldUpdateOperationsInput | number
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    sof_remarks?: sof_remarksUncheckedUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUncheckedUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedUpdateManyWithoutSofNestedInput
  }

  export type sofCreateWithoutSof_remarksInput = {
    hidden_attributes?: string | null
    shipping?: ShippingCreateNestedOneWithoutSofInput
    sof_holidays?: sof_holidaysCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoCreateNestedManyWithoutSofInput
  }

  export type sofUncheckedCreateWithoutSof_remarksInput = {
    id?: number
    hidden_attributes?: string | null
    shipping_id?: number | null
    sof_holidays?: sof_holidaysUncheckedCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftUncheckedCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedCreateNestedManyWithoutSofInput
  }

  export type sofCreateOrConnectWithoutSof_remarksInput = {
    where: sofWhereUniqueInput
    create: XOR<sofCreateWithoutSof_remarksInput, sofUncheckedCreateWithoutSof_remarksInput>
  }

  export type sof_remarks_itemsCreateWithoutSof_remarksInput = {
    title?: string | null
    value?: string | null
    is_single?: boolean
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarks_itemsUncheckedCreateWithoutSof_remarksInput = {
    id?: number
    title?: string | null
    value?: string | null
    is_single?: boolean
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarks_itemsCreateOrConnectWithoutSof_remarksInput = {
    where: sof_remarks_itemsWhereUniqueInput
    create: XOR<sof_remarks_itemsCreateWithoutSof_remarksInput, sof_remarks_itemsUncheckedCreateWithoutSof_remarksInput>
  }

  export type sof_remarks_itemsCreateManySof_remarksInputEnvelope = {
    data: Enumerable<sof_remarks_itemsCreateManySof_remarksInput>
    skipDuplicates?: boolean
  }

  export type sofUpsertWithoutSof_remarksInput = {
    update: XOR<sofUpdateWithoutSof_remarksInput, sofUncheckedUpdateWithoutSof_remarksInput>
    create: XOR<sofCreateWithoutSof_remarksInput, sofUncheckedCreateWithoutSof_remarksInput>
  }

  export type sofUpdateWithoutSof_remarksInput = {
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping?: ShippingUpdateOneWithoutSofNestedInput
    sof_holidays?: sof_holidaysUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUpdateManyWithoutSofNestedInput
  }

  export type sofUncheckedUpdateWithoutSof_remarksInput = {
    id?: IntFieldUpdateOperationsInput | number
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    sof_holidays?: sof_holidaysUncheckedUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUncheckedUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedUpdateManyWithoutSofNestedInput
  }

  export type sof_remarks_itemsUpsertWithWhereUniqueWithoutSof_remarksInput = {
    where: sof_remarks_itemsWhereUniqueInput
    update: XOR<sof_remarks_itemsUpdateWithoutSof_remarksInput, sof_remarks_itemsUncheckedUpdateWithoutSof_remarksInput>
    create: XOR<sof_remarks_itemsCreateWithoutSof_remarksInput, sof_remarks_itemsUncheckedCreateWithoutSof_remarksInput>
  }

  export type sof_remarks_itemsUpdateWithWhereUniqueWithoutSof_remarksInput = {
    where: sof_remarks_itemsWhereUniqueInput
    data: XOR<sof_remarks_itemsUpdateWithoutSof_remarksInput, sof_remarks_itemsUncheckedUpdateWithoutSof_remarksInput>
  }

  export type sof_remarks_itemsUpdateManyWithWhereWithoutSof_remarksInput = {
    where: sof_remarks_itemsScalarWhereInput
    data: XOR<sof_remarks_itemsUpdateManyMutationInput, sof_remarks_itemsUncheckedUpdateManyWithoutSof_remarks_itensInput>
  }

  export type sof_remarks_itemsScalarWhereInput = {
    AND?: Enumerable<sof_remarks_itemsScalarWhereInput>
    OR?: Enumerable<sof_remarks_itemsScalarWhereInput>
    NOT?: Enumerable<sof_remarks_itemsScalarWhereInput>
    id?: IntFilter | number
    title?: StringNullableFilter | string | null
    value?: StringNullableFilter | string | null
    is_single?: BoolFilter | boolean
    sof_remark_id?: IntFilter | number
    deleted?: BoolFilter | boolean
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type sof_remarksCreateWithoutSof_remarks_itensInput = {
    title?: string | null
    sof?: sofCreateNestedOneWithoutSof_remarksInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarksUncheckedCreateWithoutSof_remarks_itensInput = {
    id?: number
    title?: string | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarksCreateOrConnectWithoutSof_remarks_itensInput = {
    where: sof_remarksWhereUniqueInput
    create: XOR<sof_remarksCreateWithoutSof_remarks_itensInput, sof_remarksUncheckedCreateWithoutSof_remarks_itensInput>
  }

  export type sof_remarksUpsertWithoutSof_remarks_itensInput = {
    update: XOR<sof_remarksUpdateWithoutSof_remarks_itensInput, sof_remarksUncheckedUpdateWithoutSof_remarks_itensInput>
    create: XOR<sof_remarksCreateWithoutSof_remarks_itensInput, sof_remarksUncheckedCreateWithoutSof_remarks_itensInput>
  }

  export type sof_remarksUpdateWithoutSof_remarks_itensInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    sof?: sofUpdateOneWithoutSof_remarksNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarksUncheckedUpdateWithoutSof_remarks_itensInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sofCreateWithoutSof_draftInput = {
    hidden_attributes?: string | null
    shipping?: ShippingCreateNestedOneWithoutSofInput
    sof_holidays?: sof_holidaysCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoCreateNestedManyWithoutSofInput
  }

  export type sofUncheckedCreateWithoutSof_draftInput = {
    id?: number
    hidden_attributes?: string | null
    shipping_id?: number | null
    sof_holidays?: sof_holidaysUncheckedCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksUncheckedCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedCreateNestedManyWithoutSofInput
  }

  export type sofCreateOrConnectWithoutSof_draftInput = {
    where: sofWhereUniqueInput
    create: XOR<sofCreateWithoutSof_draftInput, sofUncheckedCreateWithoutSof_draftInput>
  }

  export type sofUpsertWithoutSof_draftInput = {
    update: XOR<sofUpdateWithoutSof_draftInput, sofUncheckedUpdateWithoutSof_draftInput>
    create: XOR<sofCreateWithoutSof_draftInput, sofUncheckedCreateWithoutSof_draftInput>
  }

  export type sofUpdateWithoutSof_draftInput = {
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping?: ShippingUpdateOneWithoutSofNestedInput
    sof_holidays?: sof_holidaysUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUpdateManyWithoutSofNestedInput
  }

  export type sofUncheckedUpdateWithoutSof_draftInput = {
    id?: IntFieldUpdateOperationsInput | number
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    sof_holidays?: sof_holidaysUncheckedUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUncheckedUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedUpdateManyWithoutSofNestedInput
  }

  export type sofCreateWithoutSof_bunker_figuresInput = {
    hidden_attributes?: string | null
    shipping?: ShippingCreateNestedOneWithoutSofInput
    sof_holidays?: sof_holidaysCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoCreateNestedManyWithoutSofInput
  }

  export type sofUncheckedCreateWithoutSof_bunker_figuresInput = {
    id?: number
    hidden_attributes?: string | null
    shipping_id?: number | null
    sof_holidays?: sof_holidaysUncheckedCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksUncheckedCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftUncheckedCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutShipping_sofInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedCreateNestedManyWithoutSofInput
  }

  export type sofCreateOrConnectWithoutSof_bunker_figuresInput = {
    where: sofWhereUniqueInput
    create: XOR<sofCreateWithoutSof_bunker_figuresInput, sofUncheckedCreateWithoutSof_bunker_figuresInput>
  }

  export type sofUpsertWithoutSof_bunker_figuresInput = {
    update: XOR<sofUpdateWithoutSof_bunker_figuresInput, sofUncheckedUpdateWithoutSof_bunker_figuresInput>
    create: XOR<sofCreateWithoutSof_bunker_figuresInput, sofUncheckedCreateWithoutSof_bunker_figuresInput>
  }

  export type sofUpdateWithoutSof_bunker_figuresInput = {
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping?: ShippingUpdateOneWithoutSofNestedInput
    sof_holidays?: sof_holidaysUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUpdateManyWithoutSofNestedInput
  }

  export type sofUncheckedUpdateWithoutSof_bunker_figuresInput = {
    id?: IntFieldUpdateOperationsInput | number
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    sof_holidays?: sof_holidaysUncheckedUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUncheckedUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUncheckedUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sofNestedInput
    sof_shipper_cargo?: sof_shipper_cargoUncheckedUpdateManyWithoutSofNestedInput
  }

  export type SofPortLogEventsCreateWithoutCategoryInput = {
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsCreateNestedManyWithoutSof_port_log_eventInput
  }

  export type SofPortLogEventsUncheckedCreateWithoutCategoryInput = {
    id?: number
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutSof_port_log_eventInput
  }

  export type SofPortLogEventsCreateOrConnectWithoutCategoryInput = {
    where: SofPortLogEventsWhereUniqueInput
    create: XOR<SofPortLogEventsCreateWithoutCategoryInput, SofPortLogEventsUncheckedCreateWithoutCategoryInput>
  }

  export type SofPortLogEventsCreateManyCategoryInputEnvelope = {
    data: Enumerable<SofPortLogEventsCreateManyCategoryInput>
    skipDuplicates?: boolean
  }

  export type SofPortLogEventsUpsertWithWhereUniqueWithoutCategoryInput = {
    where: SofPortLogEventsWhereUniqueInput
    update: XOR<SofPortLogEventsUpdateWithoutCategoryInput, SofPortLogEventsUncheckedUpdateWithoutCategoryInput>
    create: XOR<SofPortLogEventsCreateWithoutCategoryInput, SofPortLogEventsUncheckedCreateWithoutCategoryInput>
  }

  export type SofPortLogEventsUpdateWithWhereUniqueWithoutCategoryInput = {
    where: SofPortLogEventsWhereUniqueInput
    data: XOR<SofPortLogEventsUpdateWithoutCategoryInput, SofPortLogEventsUncheckedUpdateWithoutCategoryInput>
  }

  export type SofPortLogEventsUpdateManyWithWhereWithoutCategoryInput = {
    where: SofPortLogEventsScalarWhereInput
    data: XOR<SofPortLogEventsUpdateManyMutationInput, SofPortLogEventsUncheckedUpdateManyWithoutEventsInput>
  }

  export type SofPortLogEventsScalarWhereInput = {
    AND?: Enumerable<SofPortLogEventsScalarWhereInput>
    OR?: Enumerable<SofPortLogEventsScalarWhereInput>
    NOT?: Enumerable<SofPortLogEventsScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeFilter | Date | string
    deleted_at?: DateTimeNullableFilter | Date | string | null
    category_id?: IntNullableFilter | number | null
  }

  export type SofPortLogEventCategoriesCreateWithoutEventsInput = {
    name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type SofPortLogEventCategoriesUncheckedCreateWithoutEventsInput = {
    id?: number
    name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type SofPortLogEventCategoriesCreateOrConnectWithoutEventsInput = {
    where: SofPortLogEventCategoriesWhereUniqueInput
    create: XOR<SofPortLogEventCategoriesCreateWithoutEventsInput, SofPortLogEventCategoriesUncheckedCreateWithoutEventsInput>
  }

  export type ShippingSofPortLogEventsCreateWithoutSof_port_log_eventInput = {
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    shipping_sof?: sofCreateNestedOneWithoutSof_port_log_eventsInput
    created_by_user?: usersCreateNestedOneWithoutShipping_sof_port_log_eventsInput
  }

  export type ShippingSofPortLogEventsUncheckedCreateWithoutSof_port_log_eventInput = {
    id?: number
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    shipping_sof_id: number
    created_by_user_id: number
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingSofPortLogEventsCreateOrConnectWithoutSof_port_log_eventInput = {
    where: ShippingSofPortLogEventsWhereUniqueInput
    create: XOR<ShippingSofPortLogEventsCreateWithoutSof_port_log_eventInput, ShippingSofPortLogEventsUncheckedCreateWithoutSof_port_log_eventInput>
  }

  export type ShippingSofPortLogEventsCreateManySof_port_log_eventInputEnvelope = {
    data: Enumerable<ShippingSofPortLogEventsCreateManySof_port_log_eventInput>
    skipDuplicates?: boolean
  }

  export type SofPortLogEventCategoriesUpsertWithoutEventsInput = {
    update: XOR<SofPortLogEventCategoriesUpdateWithoutEventsInput, SofPortLogEventCategoriesUncheckedUpdateWithoutEventsInput>
    create: XOR<SofPortLogEventCategoriesCreateWithoutEventsInput, SofPortLogEventCategoriesUncheckedCreateWithoutEventsInput>
  }

  export type SofPortLogEventCategoriesUpdateWithoutEventsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SofPortLogEventCategoriesUncheckedUpdateWithoutEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingSofPortLogEventsUpsertWithWhereUniqueWithoutSof_port_log_eventInput = {
    where: ShippingSofPortLogEventsWhereUniqueInput
    update: XOR<ShippingSofPortLogEventsUpdateWithoutSof_port_log_eventInput, ShippingSofPortLogEventsUncheckedUpdateWithoutSof_port_log_eventInput>
    create: XOR<ShippingSofPortLogEventsCreateWithoutSof_port_log_eventInput, ShippingSofPortLogEventsUncheckedCreateWithoutSof_port_log_eventInput>
  }

  export type ShippingSofPortLogEventsUpdateWithWhereUniqueWithoutSof_port_log_eventInput = {
    where: ShippingSofPortLogEventsWhereUniqueInput
    data: XOR<ShippingSofPortLogEventsUpdateWithoutSof_port_log_eventInput, ShippingSofPortLogEventsUncheckedUpdateWithoutSof_port_log_eventInput>
  }

  export type ShippingSofPortLogEventsUpdateManyWithWhereWithoutSof_port_log_eventInput = {
    where: ShippingSofPortLogEventsScalarWhereInput
    data: XOR<ShippingSofPortLogEventsUpdateManyMutationInput, ShippingSofPortLogEventsUncheckedUpdateManyWithoutShippingSofPortLogEventsInput>
  }

  export type SofPortLogEventsCreateWithoutShippingSofPortLogEventsInput = {
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    category?: SofPortLogEventCategoriesCreateNestedOneWithoutEventsInput
  }

  export type SofPortLogEventsUncheckedCreateWithoutShippingSofPortLogEventsInput = {
    id?: number
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    category_id?: number | null
  }

  export type SofPortLogEventsCreateOrConnectWithoutShippingSofPortLogEventsInput = {
    where: SofPortLogEventsWhereUniqueInput
    create: XOR<SofPortLogEventsCreateWithoutShippingSofPortLogEventsInput, SofPortLogEventsUncheckedCreateWithoutShippingSofPortLogEventsInput>
  }

  export type sofCreateWithoutSof_port_log_eventsInput = {
    hidden_attributes?: string | null
    shipping?: ShippingCreateNestedOneWithoutSofInput
    sof_holidays?: sof_holidaysCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper_cargo?: sof_shipper_cargoCreateNestedManyWithoutSofInput
  }

  export type sofUncheckedCreateWithoutSof_port_log_eventsInput = {
    id?: number
    hidden_attributes?: string | null
    shipping_id?: number | null
    sof_holidays?: sof_holidaysUncheckedCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksUncheckedCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftUncheckedCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper_cargo?: sof_shipper_cargoUncheckedCreateNestedManyWithoutSofInput
  }

  export type sofCreateOrConnectWithoutSof_port_log_eventsInput = {
    where: sofWhereUniqueInput
    create: XOR<sofCreateWithoutSof_port_log_eventsInput, sofUncheckedCreateWithoutSof_port_log_eventsInput>
  }

  export type usersCreateWithoutShipping_sof_port_log_eventsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesCreateNestedManyWithoutUsersInput
    shippings?: ShippingCreateNestedManyWithoutUsersInput
    user_files?: user_filesCreateNestedManyWithoutUsersInput
    inquires?: inquiresCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemCreateNestedManyWithoutUserInput
    group_emails?: group_emailsCreateNestedManyWithoutUsersInput
    port_files?: port_filesCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesCreateNestedManyWithoutUsersInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    users_preference?: users_preferenceCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutShipping_sof_port_log_eventsInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    agencyId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    shipping_documents?: shipping_documentsUncheckedCreateNestedManyWithoutUsersInput
    shipping_files?: shipping_filesUncheckedCreateNestedManyWithoutUsersInput
    shippings?: ShippingUncheckedCreateNestedManyWithoutUsersInput
    user_files?: user_filesUncheckedCreateNestedManyWithoutUsersInput
    inquires?: inquiresUncheckedCreateNestedManyWithoutUsersInput
    inquires_comments?: inquires_commentsUncheckedCreateNestedManyWithoutUsersInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedCreateNestedManyWithoutUserInput
    group_emails?: group_emailsUncheckedCreateNestedManyWithoutUsersInput
    port_files?: port_filesUncheckedCreateNestedManyWithoutUsersInput
    vessel_files?: vessel_filesUncheckedCreateNestedManyWithoutUsersInput
    users_preference?: users_preferenceUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutShipping_sof_port_log_eventsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShipping_sof_port_log_eventsInput, usersUncheckedCreateWithoutShipping_sof_port_log_eventsInput>
  }

  export type SofPortLogEventsUpsertWithoutShippingSofPortLogEventsInput = {
    update: XOR<SofPortLogEventsUpdateWithoutShippingSofPortLogEventsInput, SofPortLogEventsUncheckedUpdateWithoutShippingSofPortLogEventsInput>
    create: XOR<SofPortLogEventsCreateWithoutShippingSofPortLogEventsInput, SofPortLogEventsUncheckedCreateWithoutShippingSofPortLogEventsInput>
  }

  export type SofPortLogEventsUpdateWithoutShippingSofPortLogEventsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: SofPortLogEventCategoriesUpdateOneWithoutEventsNestedInput
  }

  export type SofPortLogEventsUncheckedUpdateWithoutShippingSofPortLogEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sofUpsertWithoutSof_port_log_eventsInput = {
    update: XOR<sofUpdateWithoutSof_port_log_eventsInput, sofUncheckedUpdateWithoutSof_port_log_eventsInput>
    create: XOR<sofCreateWithoutSof_port_log_eventsInput, sofUncheckedCreateWithoutSof_port_log_eventsInput>
  }

  export type sofUpdateWithoutSof_port_log_eventsInput = {
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping?: ShippingUpdateOneWithoutSofNestedInput
    sof_holidays?: sof_holidaysUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper_cargo?: sof_shipper_cargoUpdateManyWithoutSofNestedInput
  }

  export type sofUncheckedUpdateWithoutSof_port_log_eventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    sof_holidays?: sof_holidaysUncheckedUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUncheckedUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUncheckedUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper_cargo?: sof_shipper_cargoUncheckedUpdateManyWithoutSofNestedInput
  }

  export type usersUpsertWithoutShipping_sof_port_log_eventsInput = {
    update: XOR<usersUpdateWithoutShipping_sof_port_log_eventsInput, usersUncheckedUpdateWithoutShipping_sof_port_log_eventsInput>
    create: XOR<usersCreateWithoutShipping_sof_port_log_eventsInput, usersUncheckedCreateWithoutShipping_sof_port_log_eventsInput>
  }

  export type usersUpdateWithoutShipping_sof_port_log_eventsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutShipping_sof_port_log_eventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type sofCreateWithoutSof_shipper_cargoInput = {
    hidden_attributes?: string | null
    shipping?: ShippingCreateNestedOneWithoutSofInput
    sof_holidays?: sof_holidaysCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsCreateNestedManyWithoutShipping_sofInput
  }

  export type sofUncheckedCreateWithoutSof_shipper_cargoInput = {
    id?: number
    hidden_attributes?: string | null
    shipping_id?: number | null
    sof_holidays?: sof_holidaysUncheckedCreateNestedManyWithoutSofInput
    sof_remarks?: sof_remarksUncheckedCreateNestedManyWithoutSofInput
    sof_draft?: sof_draftUncheckedCreateNestedManyWithoutSofInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedCreateNestedManyWithoutSofInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedCreateNestedManyWithoutShipping_sofInput
  }

  export type sofCreateOrConnectWithoutSof_shipper_cargoInput = {
    where: sofWhereUniqueInput
    create: XOR<sofCreateWithoutSof_shipper_cargoInput, sofUncheckedCreateWithoutSof_shipper_cargoInput>
  }

  export type sof_shipperCreateWithoutSof_shipper_cargoInput = {
    name?: string | null
    quantity?: number | null
  }

  export type sof_shipperUncheckedCreateWithoutSof_shipper_cargoInput = {
    id?: number
    name?: string | null
    quantity?: number | null
  }

  export type sof_shipperCreateOrConnectWithoutSof_shipper_cargoInput = {
    where: sof_shipperWhereUniqueInput
    create: XOR<sof_shipperCreateWithoutSof_shipper_cargoInput, sof_shipperUncheckedCreateWithoutSof_shipper_cargoInput>
  }

  export type sof_shipperCreateManySof_shipper_cargoInputEnvelope = {
    data: Enumerable<sof_shipperCreateManySof_shipper_cargoInput>
    skipDuplicates?: boolean
  }

  export type sof_shipper_valueCreateWithoutSof_shipper_cargoInput = {
    value?: number | null
  }

  export type sof_shipper_valueUncheckedCreateWithoutSof_shipper_cargoInput = {
    id?: number
    value?: number | null
  }

  export type sof_shipper_valueCreateOrConnectWithoutSof_shipper_cargoInput = {
    where: sof_shipper_valueWhereUniqueInput
    create: XOR<sof_shipper_valueCreateWithoutSof_shipper_cargoInput, sof_shipper_valueUncheckedCreateWithoutSof_shipper_cargoInput>
  }

  export type sof_shipper_valueCreateManySof_shipper_cargoInputEnvelope = {
    data: Enumerable<sof_shipper_valueCreateManySof_shipper_cargoInput>
    skipDuplicates?: boolean
  }

  export type sofUpsertWithoutSof_shipper_cargoInput = {
    update: XOR<sofUpdateWithoutSof_shipper_cargoInput, sofUncheckedUpdateWithoutSof_shipper_cargoInput>
    create: XOR<sofCreateWithoutSof_shipper_cargoInput, sofUncheckedCreateWithoutSof_shipper_cargoInput>
  }

  export type sofUpdateWithoutSof_shipper_cargoInput = {
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping?: ShippingUpdateOneWithoutSofNestedInput
    sof_holidays?: sof_holidaysUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutShipping_sofNestedInput
  }

  export type sofUncheckedUpdateWithoutSof_shipper_cargoInput = {
    id?: IntFieldUpdateOperationsInput | number
    hidden_attributes?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    sof_holidays?: sof_holidaysUncheckedUpdateManyWithoutSofNestedInput
    sof_remarks?: sof_remarksUncheckedUpdateManyWithoutSofNestedInput
    sof_draft?: sof_draftUncheckedUpdateManyWithoutSofNestedInput
    sof_bunker_figures?: sof_bunker_figuresUncheckedUpdateManyWithoutSofNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sofNestedInput
  }

  export type sof_shipperUpsertWithWhereUniqueWithoutSof_shipper_cargoInput = {
    where: sof_shipperWhereUniqueInput
    update: XOR<sof_shipperUpdateWithoutSof_shipper_cargoInput, sof_shipperUncheckedUpdateWithoutSof_shipper_cargoInput>
    create: XOR<sof_shipperCreateWithoutSof_shipper_cargoInput, sof_shipperUncheckedCreateWithoutSof_shipper_cargoInput>
  }

  export type sof_shipperUpdateWithWhereUniqueWithoutSof_shipper_cargoInput = {
    where: sof_shipperWhereUniqueInput
    data: XOR<sof_shipperUpdateWithoutSof_shipper_cargoInput, sof_shipperUncheckedUpdateWithoutSof_shipper_cargoInput>
  }

  export type sof_shipperUpdateManyWithWhereWithoutSof_shipper_cargoInput = {
    where: sof_shipperScalarWhereInput
    data: XOR<sof_shipperUpdateManyMutationInput, sof_shipperUncheckedUpdateManyWithoutSof_shipperInput>
  }

  export type sof_shipperScalarWhereInput = {
    AND?: Enumerable<sof_shipperScalarWhereInput>
    OR?: Enumerable<sof_shipperScalarWhereInput>
    NOT?: Enumerable<sof_shipperScalarWhereInput>
    id?: IntFilter | number
    name?: StringNullableFilter | string | null
    quantity?: FloatNullableFilter | number | null
    sof_shipper_cargo_id?: IntNullableFilter | number | null
  }

  export type sof_shipper_valueUpsertWithWhereUniqueWithoutSof_shipper_cargoInput = {
    where: sof_shipper_valueWhereUniqueInput
    update: XOR<sof_shipper_valueUpdateWithoutSof_shipper_cargoInput, sof_shipper_valueUncheckedUpdateWithoutSof_shipper_cargoInput>
    create: XOR<sof_shipper_valueCreateWithoutSof_shipper_cargoInput, sof_shipper_valueUncheckedCreateWithoutSof_shipper_cargoInput>
  }

  export type sof_shipper_valueUpdateWithWhereUniqueWithoutSof_shipper_cargoInput = {
    where: sof_shipper_valueWhereUniqueInput
    data: XOR<sof_shipper_valueUpdateWithoutSof_shipper_cargoInput, sof_shipper_valueUncheckedUpdateWithoutSof_shipper_cargoInput>
  }

  export type sof_shipper_valueUpdateManyWithWhereWithoutSof_shipper_cargoInput = {
    where: sof_shipper_valueScalarWhereInput
    data: XOR<sof_shipper_valueUpdateManyMutationInput, sof_shipper_valueUncheckedUpdateManyWithoutSof_shipper_valueInput>
  }

  export type sof_shipper_valueScalarWhereInput = {
    AND?: Enumerable<sof_shipper_valueScalarWhereInput>
    OR?: Enumerable<sof_shipper_valueScalarWhereInput>
    NOT?: Enumerable<sof_shipper_valueScalarWhereInput>
    id?: IntFilter | number
    value?: FloatNullableFilter | number | null
    sof_shipper_cargo_id?: IntNullableFilter | number | null
  }

  export type sof_shipper_cargoCreateWithoutSof_shipperInput = {
    berth?: string | null
    cargo?: string | null
    sof?: sofCreateNestedOneWithoutSof_shipper_cargoInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper_value?: sof_shipper_valueCreateNestedManyWithoutSof_shipper_cargoInput
  }

  export type sof_shipper_cargoUncheckedCreateWithoutSof_shipperInput = {
    id?: number
    berth?: string | null
    cargo?: string | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper_value?: sof_shipper_valueUncheckedCreateNestedManyWithoutSof_shipper_cargoInput
  }

  export type sof_shipper_cargoCreateOrConnectWithoutSof_shipperInput = {
    where: sof_shipper_cargoWhereUniqueInput
    create: XOR<sof_shipper_cargoCreateWithoutSof_shipperInput, sof_shipper_cargoUncheckedCreateWithoutSof_shipperInput>
  }

  export type sof_shipper_cargoUpsertWithoutSof_shipperInput = {
    update: XOR<sof_shipper_cargoUpdateWithoutSof_shipperInput, sof_shipper_cargoUncheckedUpdateWithoutSof_shipperInput>
    create: XOR<sof_shipper_cargoCreateWithoutSof_shipperInput, sof_shipper_cargoUncheckedCreateWithoutSof_shipperInput>
  }

  export type sof_shipper_cargoUpdateWithoutSof_shipperInput = {
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    sof?: sofUpdateOneWithoutSof_shipper_cargoNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper_value?: sof_shipper_valueUpdateManyWithoutSof_shipper_cargoNestedInput
  }

  export type sof_shipper_cargoUncheckedUpdateWithoutSof_shipperInput = {
    id?: IntFieldUpdateOperationsInput | number
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper_value?: sof_shipper_valueUncheckedUpdateManyWithoutSof_shipper_cargoNestedInput
  }

  export type sof_shipper_cargoCreateWithoutSof_shipper_valueInput = {
    berth?: string | null
    cargo?: string | null
    sof?: sofCreateNestedOneWithoutSof_shipper_cargoInput
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper?: sof_shipperCreateNestedManyWithoutSof_shipper_cargoInput
  }

  export type sof_shipper_cargoUncheckedCreateWithoutSof_shipper_valueInput = {
    id?: number
    berth?: string | null
    cargo?: string | null
    sof_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    sof_shipper?: sof_shipperUncheckedCreateNestedManyWithoutSof_shipper_cargoInput
  }

  export type sof_shipper_cargoCreateOrConnectWithoutSof_shipper_valueInput = {
    where: sof_shipper_cargoWhereUniqueInput
    create: XOR<sof_shipper_cargoCreateWithoutSof_shipper_valueInput, sof_shipper_cargoUncheckedCreateWithoutSof_shipper_valueInput>
  }

  export type sof_shipper_cargoUpsertWithoutSof_shipper_valueInput = {
    update: XOR<sof_shipper_cargoUpdateWithoutSof_shipper_valueInput, sof_shipper_cargoUncheckedUpdateWithoutSof_shipper_valueInput>
    create: XOR<sof_shipper_cargoCreateWithoutSof_shipper_valueInput, sof_shipper_cargoUncheckedCreateWithoutSof_shipper_valueInput>
  }

  export type sof_shipper_cargoUpdateWithoutSof_shipper_valueInput = {
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    sof?: sofUpdateOneWithoutSof_shipper_cargoNestedInput
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper?: sof_shipperUpdateManyWithoutSof_shipper_cargoNestedInput
  }

  export type sof_shipper_cargoUncheckedUpdateWithoutSof_shipper_valueInput = {
    id?: IntFieldUpdateOperationsInput | number
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    sof_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper?: sof_shipperUncheckedUpdateManyWithoutSof_shipper_cargoNestedInput
  }

  export type usersCreateManyAgencyInput = {
    id?: number
    name?: string | null
    email?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateCreateManyAgencyInput = {
    id?: number
    name: string
    operation_type?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type usersUpdateWithoutAgencyInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateWithoutAgencyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutUsersNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutUsersNestedInput
    shippings?: ShippingUncheckedUpdateManyWithoutUsersNestedInput
    user_files?: user_filesUncheckedUpdateManyWithoutUsersNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutUsersNestedInput
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutUsersNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutUserNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutUsersNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutUsersNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutUsersNestedInput
    users_preference?: users_preferenceUncheckedUpdateManyWithoutUsersNestedInput
    shipping_sof_port_log_events?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutCreated_by_userNestedInput
  }

  export type usersUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateUpdateWithoutAgencyInput = {
    name?: StringFieldUpdateOperationsInput | string
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: ChecklistTemplateItemUpdateManyWithoutChecklistTemplateNestedInput
  }

  export type ChecklistTemplateUncheckedUpdateWithoutAgencyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: ChecklistTemplateItemUncheckedUpdateManyWithoutChecklistTemplateNestedInput
  }

  export type ChecklistTemplateUncheckedUpdateManyWithoutChecklistTemplateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proformasCreateManyBerth_productsInput = {
    id?: number
    taxes?: string | null
    totalValue?: number | null
    berthedHours?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    idHash?: string | null
    applicantName?: string | null
    applicantEmail?: string | null
    vesselName?: string | null
    imo?: string | null
    deadWeightTonnage?: number | null
    lengthOverall?: number | null
    grossTonnage?: number | null
    package?: string | null
    builtYear?: number | null
    agencyType?: string | null
    operationType?: string | null
    productTonnage?: number | null
    usd?: number | null
    isCargillInternational?: boolean | null
    beam?: number | null
    etb?: Date | string | null
    draft?: number | null
    requestingCustomer?: string | null
    vesselType?: string | null
  }

  export type proformasUpdateWithoutBerth_productsInput = {
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    proforma_files?: proforma_filesUpdateManyWithoutProformasNestedInput
  }

  export type proformasUncheckedUpdateWithoutBerth_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
    proforma_files?: proforma_filesUncheckedUpdateManyWithoutProformasNestedInput
  }

  export type proformasUncheckedUpdateManyWithoutProformasInput = {
    id?: IntFieldUpdateOperationsInput | number
    taxes?: NullableStringFieldUpdateOperationsInput | string | null
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    berthedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idHash?: NullableStringFieldUpdateOperationsInput | string | null
    applicantName?: NullableStringFieldUpdateOperationsInput | string | null
    applicantEmail?: NullableStringFieldUpdateOperationsInput | string | null
    vesselName?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    deadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    lengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    grossTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    package?: NullableStringFieldUpdateOperationsInput | string | null
    builtYear?: NullableIntFieldUpdateOperationsInput | number | null
    agencyType?: NullableStringFieldUpdateOperationsInput | string | null
    operationType?: NullableStringFieldUpdateOperationsInput | string | null
    productTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    usd?: NullableFloatFieldUpdateOperationsInput | number | null
    isCargillInternational?: NullableBoolFieldUpdateOperationsInput | boolean | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    etb?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft?: NullableFloatFieldUpdateOperationsInput | number | null
    requestingCustomer?: NullableStringFieldUpdateOperationsInput | string | null
    vesselType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type berth_productsCreateManyBerthsInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ShippingPortCreateManyBerthsInput = {
    id?: number
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    shipping_id?: number | null
    port_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type berth_productsUpdateWithoutBerthsInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: productsUpdateOneRequiredWithoutBerth_productsNestedInput
    proformas?: proformasUpdateManyWithoutBerth_productsNestedInput
  }

  export type berth_productsUncheckedUpdateWithoutBerthsInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proformas?: proformasUncheckedUpdateManyWithoutBerth_productsNestedInput
  }

  export type berth_productsUncheckedUpdateManyWithoutBerth_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingPortUpdateWithoutBerthsInput = {
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUpdateOneWithoutShipping_portsNestedInput
    shippings?: ShippingUpdateOneWithoutShipping_portsNestedInput
  }

  export type ShippingPortUncheckedUpdateWithoutBerthsInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    port_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingPortUncheckedUpdateManyWithoutShipping_portsInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    port_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemCreateManyChecklistTemplateInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    working_days?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ChecklistTemplateItemUpdateWithoutChecklistTemplateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemUncheckedUpdateWithoutChecklistTemplateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChecklistTemplateItemUncheckedUpdateManyWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    working_days?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type portsCreateManyCountryInput = {
    id?: number
    name?: string | null
    time_zone?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    slug?: string | null
  }

  export type VesselCreateManyCountryInput = {
    id?: number
    name?: string | null
    imo?: string | null
    call_sign?: string | null
    satellite_telephone?: string | null
    classification_society?: string | null
    type?: string | null
    length_overall?: number | null
    dead_weight_tonnage?: number | null
    beam?: number | null
    cubic_meters?: number | null
    gross_tonnage?: number | null
    net_tonnage?: number | null
    panama_gross_tonnage?: number | null
    panama_net_tonnage?: number | null
    suez_gross_tonnage?: number | null
    suez_net_tonnage?: number | null
    reduced_gross_tonnage?: number | null
    length_between_perpendiculars?: number | null
    molded_depth?: number | null
    number_of_holds?: number | null
    number_of_tanks?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    draft_sw?: string | null
    built_year?: number | null
  }

  export type AgencyCreateManyCountryInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type portsUpdateWithoutCountryInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUpdateManyWithoutPortsNestedInput
    port_files?: port_filesUpdateManyWithoutPortsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutPortsNestedInput
  }

  export type portsUncheckedUpdateWithoutCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    berths?: berthsUncheckedUpdateManyWithoutPortsNestedInput
    port_files?: port_filesUncheckedUpdateManyWithoutPortsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutPortsNestedInput
  }

  export type portsUncheckedUpdateManyWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    time_zone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VesselUpdateWithoutCountryInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUpdateManyWithoutVesselNestedInput
    vessel_files?: vessel_filesUpdateManyWithoutVesselsNestedInput
    group_emails?: group_emailsUpdateManyWithoutVesselNestedInput
  }

  export type VesselUncheckedUpdateWithoutCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
    shippings?: ShippingUncheckedUpdateManyWithoutVesselNestedInput
    vessel_files?: vessel_filesUncheckedUpdateManyWithoutVesselsNestedInput
    group_emails?: group_emailsUncheckedUpdateManyWithoutVesselNestedInput
  }

  export type VesselUncheckedUpdateManyWithoutVesselsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    imo?: NullableStringFieldUpdateOperationsInput | string | null
    call_sign?: NullableStringFieldUpdateOperationsInput | string | null
    satellite_telephone?: NullableStringFieldUpdateOperationsInput | string | null
    classification_society?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    length_overall?: NullableFloatFieldUpdateOperationsInput | number | null
    dead_weight_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    beam?: NullableFloatFieldUpdateOperationsInput | number | null
    cubic_meters?: NullableFloatFieldUpdateOperationsInput | number | null
    gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    panama_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    suez_net_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    reduced_gross_tonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    length_between_perpendiculars?: NullableFloatFieldUpdateOperationsInput | number | null
    molded_depth?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_holds?: NullableFloatFieldUpdateOperationsInput | number | null
    number_of_tanks?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    draft_sw?: NullableStringFieldUpdateOperationsInput | string | null
    built_year?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AgencyUpdateWithoutCountryInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateManyWithoutAgencyNestedInput
    ChecklistTemplate?: ChecklistTemplateUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutAgencyNestedInput
    ChecklistTemplate?: ChecklistTemplateUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateManyWithoutAgencyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type berthsCreateManyPortsInput = {
    id?: number
    name?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    maxDraft?: number | null
    airDraft?: number | null
    maxLengthOverall?: number | null
    maxDeadWeightTonnage?: number | null
    maxBeam?: number | null
    waterDensity?: number | null
  }

  export type port_filesCreateManyPortsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type ShippingPortCreateManyPortsInput = {
    id?: number
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    shipping_id?: number | null
    berth_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type berthsUpdateWithoutPortsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    berth_products?: berth_productsUpdateManyWithoutBerthsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutBerthsNestedInput
  }

  export type berthsUncheckedUpdateWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
    berth_products?: berth_productsUncheckedUpdateManyWithoutBerthsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutBerthsNestedInput
  }

  export type berthsUncheckedUpdateManyWithoutBerthsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    airDraft?: NullableFloatFieldUpdateOperationsInput | number | null
    maxLengthOverall?: NullableFloatFieldUpdateOperationsInput | number | null
    maxDeadWeightTonnage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxBeam?: NullableFloatFieldUpdateOperationsInput | number | null
    waterDensity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type port_filesUpdateWithoutPortsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutPort_filesNestedInput
  }

  export type port_filesUncheckedUpdateWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type port_filesUncheckedUpdateManyWithoutPort_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShippingPortUpdateWithoutPortsInput = {
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneWithoutShipping_portsNestedInput
    shippings?: ShippingUpdateOneWithoutShipping_portsNestedInput
  }

  export type ShippingPortUncheckedUpdateWithoutPortsInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    berth_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type berth_productsCreateManyProductsInput = {
    id?: number
    loadingCapacity?: number | null
    unloadingCapacity?: number | null
    berthId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ShippingProductCreateManyProductInput = {
    id?: number
    weight?: number | null
    shipping_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type berth_productsUpdateWithoutProductsInput = {
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneRequiredWithoutBerth_productsNestedInput
    proformas?: proformasUpdateManyWithoutBerth_productsNestedInput
  }

  export type berth_productsUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    loadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    unloadingCapacity?: NullableFloatFieldUpdateOperationsInput | number | null
    berthId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proformas?: proformasUncheckedUpdateManyWithoutBerth_productsNestedInput
  }

  export type ShippingProductUpdateWithoutProductInput = {
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping?: ShippingUpdateOneWithoutShipping_productsNestedInput
  }

  export type ShippingProductUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingProductUncheckedUpdateManyWithoutShipping_productsInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesCreateManyProformasInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type proforma_filesUpdateWithoutProformasInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesUncheckedUpdateWithoutProformasInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proforma_filesUncheckedUpdateManyWithoutProforma_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_documentsCreateManyDocument_shipperInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsUpdateWithoutDocument_shipperInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
    shippings?: ShippingUpdateOneWithoutShipping_documentsNestedInput
    subsets?: subsetsUpdateOneWithoutShipping_documentsNestedInput
    users?: usersUpdateOneWithoutShipping_documentsNestedInput
    document_product?: document_productUpdateOneWithoutShipping_documentsNestedInput
  }

  export type shipping_documentsUncheckedUpdateWithoutDocument_shipperInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subset_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_documentsUncheckedUpdateManyWithoutShipping_documentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subset_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_documentsCreateManyDocument_productInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsUpdateWithoutDocument_productInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
    shippings?: ShippingUpdateOneWithoutShipping_documentsNestedInput
    subsets?: subsetsUpdateOneWithoutShipping_documentsNestedInput
    users?: usersUpdateOneWithoutShipping_documentsNestedInput
    document_shipper?: document_shipperUpdateOneWithoutShipping_documentsNestedInput
  }

  export type shipping_documentsUncheckedUpdateWithoutDocument_productInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper_id?: NullableIntFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subset_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_documentsCreateManyShippingsInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_filesCreateManyShippingsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type ShippingPortCreateManyShippingsInput = {
    id?: number
    estimated_time_of_arrival?: Date | string | null
    estimated_time_of_berthing?: Date | string | null
    estimated_time_of_sailing?: Date | string | null
    time_of_arrival?: Date | string | null
    time_of_berthing?: Date | string | null
    time_of_sailing?: Date | string | null
    port_id?: number | null
    berth_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingProductCreateManyShippingInput = {
    id?: number
    weight?: number | null
    product_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type subsetsCreateManyShippingsInput = {
    id?: number
    name?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type inquiresCreateManyShippingsInput = {
    id?: number
    title?: string | null
    group?: string | null
    updated_by_user_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingChecklistItemCreateManyShippingInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: Date | string | null
    commentary?: string | null
    is_done: boolean
    updated_by_user_id?: number | null
    created_at?: Date | string
    updated_ut?: Date | string
    deleted_at?: Date | string | null
  }

  export type shipping_documentsUpdateWithoutShippingsInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
    subsets?: subsetsUpdateOneWithoutShipping_documentsNestedInput
    users?: usersUpdateOneWithoutShipping_documentsNestedInput
    document_shipper?: document_shipperUpdateOneWithoutShipping_documentsNestedInput
    document_product?: document_productUpdateOneWithoutShipping_documentsNestedInput
  }

  export type shipping_documentsUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subset_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_filesUpdateWithoutShippingsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutShipping_filesNestedInput
  }

  export type shipping_filesUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type shipping_filesUncheckedUpdateManyWithoutShipping_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShippingPortUpdateWithoutShippingsInput = {
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    berths?: berthsUpdateOneWithoutShipping_portsNestedInput
    ports?: portsUpdateOneWithoutShipping_portsNestedInput
  }

  export type ShippingPortUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    estimated_time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_arrival?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_berthing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_of_sailing?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    port_id?: NullableIntFieldUpdateOperationsInput | number | null
    berth_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingProductUpdateWithoutShippingInput = {
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product?: productsUpdateOneWithoutShipping_productsNestedInput
  }

  export type ShippingProductUncheckedUpdateWithoutShippingInput = {
    id?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subsetsUpdateWithoutShippingsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUpdateManyWithoutSubsetsNestedInput
  }

  export type subsetsUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutSubsetsNestedInput
  }

  export type subsetsUncheckedUpdateManyWithoutSubsetsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUpdateWithoutShippingsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutInquiresNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutInquiresNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUncheckedUpdateWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutInquiresNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUncheckedUpdateManyWithoutInquiresInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemUpdateWithoutShippingInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_ut?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: usersUpdateOneWithoutShippingChecklistItemNestedInput
  }

  export type ShippingChecklistItemUncheckedUpdateWithoutShippingInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_ut?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemUncheckedUpdateManyWithoutShippingChecklistItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_ut?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type shipping_documentsCreateManySubsetsInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    user_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_documentsUpdateWithoutSubsetsInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
    shippings?: ShippingUpdateOneWithoutShipping_documentsNestedInput
    users?: usersUpdateOneWithoutShipping_documentsNestedInput
    document_shipper?: document_shipperUpdateOneWithoutShipping_documentsNestedInput
    document_product?: document_productUpdateOneWithoutShipping_documentsNestedInput
  }

  export type shipping_documentsUncheckedUpdateWithoutSubsetsInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_documentsCreateManyUsersInput = {
    id?: number
    type?: string | null
    document_number?: string | null
    consignee?: string | null
    vessel_name?: string | null
    port_of_loading?: string | null
    port_of_discharge?: string | null
    notify?: string | null
    product_name_extra_info?: string | null
    product_weight_extra_info?: string | null
    freight_type?: string | null
    charter_party_date?: string | null
    ship_boarded_date?: string | null
    issue_place_date?: string | null
    number_of_original_bill_of_landing?: number | null
    shipper_id?: number | null
    product_id?: number | null
    master_name?: string | null
    signature?: string | null
    shipping_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    order?: number | null
    subset_id?: number | null
    product_gross_weight?: number | null
    product_net_weight?: number | null
    product_quantity?: number | null
    product_packing?: string | null
  }

  export type shipping_filesCreateManyUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    shippingId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ShippingCreateManyUsersInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    vessel_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
  }

  export type user_filesCreateManyUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type inquiresCreateManyUsersInput = {
    id?: number
    title?: string | null
    group?: string | null
    shipping_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquires_commentsCreateManyUsersInput = {
    id?: number
    body?: string | null
    type?: string | null
    is_done: boolean
    deadline_date?: Date | string | null
    inquire_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingChecklistItemCreateManyUserInput = {
    id?: number
    name: string
    description?: string | null
    type: string
    deadline_date?: Date | string | null
    commentary?: string | null
    is_done: boolean
    shipping_id: number
    created_at?: Date | string
    updated_ut?: Date | string
    deleted_at?: Date | string | null
  }

  export type group_emailsCreateManyUsersInput = {
    id?: number
    name?: string | null
    emails?: string | null
    vessel_id?: number | null
  }

  export type port_filesCreateManyUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    portId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type vessel_filesCreateManyUsersInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    vessel_id?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type users_preferenceCreateManyUsersInput = {
    id?: number
    team?: string | null
    ports?: string | null
    initial_page?: string | null
  }

  export type ShippingSofPortLogEventsCreateManyCreated_by_userInput = {
    id?: number
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    sof_port_log_event_id: number
    shipping_sof_id: number
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type shipping_documentsUpdateWithoutUsersInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
    shippings?: ShippingUpdateOneWithoutShipping_documentsNestedInput
    subsets?: subsetsUpdateOneWithoutShipping_documentsNestedInput
    document_shipper?: document_shipperUpdateOneWithoutShipping_documentsNestedInput
    document_product?: document_productUpdateOneWithoutShipping_documentsNestedInput
  }

  export type shipping_documentsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_name?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_loading?: NullableStringFieldUpdateOperationsInput | string | null
    port_of_discharge?: NullableStringFieldUpdateOperationsInput | string | null
    notify?: NullableStringFieldUpdateOperationsInput | string | null
    product_name_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    product_weight_extra_info?: NullableStringFieldUpdateOperationsInput | string | null
    freight_type?: NullableStringFieldUpdateOperationsInput | string | null
    charter_party_date?: NullableStringFieldUpdateOperationsInput | string | null
    ship_boarded_date?: NullableStringFieldUpdateOperationsInput | string | null
    issue_place_date?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_original_bill_of_landing?: NullableFloatFieldUpdateOperationsInput | number | null
    shipper_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_id?: NullableIntFieldUpdateOperationsInput | number | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    subset_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_gross_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_net_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    product_quantity?: NullableFloatFieldUpdateOperationsInput | number | null
    product_packing?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type shipping_filesUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippings?: ShippingUpdateOneWithoutShipping_filesNestedInput
  }

  export type shipping_filesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    shippingId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingUpdateWithoutUsersInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel?: VesselUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateManyWithoutShippingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_filesUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_filesUncheckedUpdateManyWithoutUser_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    shippings?: ShippingUpdateOneWithoutInquiresNestedInput
    inquires_comments?: inquires_commentsUpdateManyWithoutInquiresNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquiresUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    group?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_id?: NullableIntFieldUpdateOperationsInput | number | null
    inquires_comments?: inquires_commentsUncheckedUpdateManyWithoutInquiresNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquires_commentsUpdateWithoutUsersInput = {
    body?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inquires?: inquiresUpdateOneWithoutInquires_commentsNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquires_commentsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inquire_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquires_commentsUncheckedUpdateManyWithoutInquires_commentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inquire_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingChecklistItemUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_ut?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping?: ShippingUpdateOneWithoutShippingChecklistItemNestedInput
  }

  export type ShippingChecklistItemUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    shipping_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_ut?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_emailsUpdateWithoutUsersInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel?: VesselUpdateOneWithoutGroup_emailsNestedInput
  }

  export type group_emailsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type group_emailsUncheckedUpdateManyWithoutGroup_emailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type port_filesUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ports?: portsUpdateOneWithoutPort_filesNestedInput
  }

  export type port_filesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    portId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vessel_filesUpdateWithoutUsersInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vessels?: VesselUpdateOneWithoutVessel_filesNestedInput
  }

  export type vessel_filesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type vessel_filesUncheckedUpdateManyWithoutVessel_filesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type users_preferenceUpdateWithoutUsersInput = {
    team?: NullableStringFieldUpdateOperationsInput | string | null
    ports?: NullableStringFieldUpdateOperationsInput | string | null
    initial_page?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type users_preferenceUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    team?: NullableStringFieldUpdateOperationsInput | string | null
    ports?: NullableStringFieldUpdateOperationsInput | string | null
    initial_page?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type users_preferenceUncheckedUpdateManyWithoutUsers_preferenceInput = {
    id?: IntFieldUpdateOperationsInput | number
    team?: NullableStringFieldUpdateOperationsInput | string | null
    ports?: NullableStringFieldUpdateOperationsInput | string | null
    initial_page?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShippingSofPortLogEventsUpdateWithoutCreated_by_userInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_event?: SofPortLogEventsUpdateOneWithoutShippingSofPortLogEventsNestedInput
    shipping_sof?: sofUpdateOneWithoutSof_port_log_eventsNestedInput
  }

  export type ShippingSofPortLogEventsUncheckedUpdateWithoutCreated_by_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_event_id?: IntFieldUpdateOperationsInput | number
    shipping_sof_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingSofPortLogEventsUncheckedUpdateManyWithoutShipping_sof_port_log_eventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_event_id?: IntFieldUpdateOperationsInput | number
    shipping_sof_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingCreateManyVesselInput = {
    id?: number
    status?: string | null
    owner_head_name?: string | null
    owner_head_address?: string | null
    disponent_owner?: string | null
    charter_name?: string | null
    master_name?: string | null
    master_email?: string | null
    estimated_draft_arrival?: string | null
    estimated_draft_departure?: string | null
    arrival_draft?: number | null
    depart_draft?: number | null
    vessel_operator?: string | null
    vessel_operator_email?: string | null
    operation_type?: string | null
    agency_type?: string | null
    voyage_number?: string | null
    external_code?: string | null
    comments?: string | null
    last_port?: string | null
    next_port?: string | null
    broker?: string | null
    boat?: string | null
    tugs?: string | null
    garbage?: string | null
    last_cargoes?: string | null
    sscec_port?: string | null
    sscec_exp?: string | null
    in_marsat_c_number?: string | null
    master_phone_01?: string | null
    master_phone_02?: string | null
    vessel_expert?: string | null
    vessel_expert_phone01?: string | null
    vessel_expert_phone02?: string | null
    vessel_expert_alternate?: string | null
    vessel_expert_alternate_phone01?: string | null
    vessel_expert_alternate_phone02?: string | null
    vessel_operator_phone01?: string | null
    vessel_operator_phone02?: string | null
    vessel_operator_city_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
    user_id?: number | null
    total_load_expected?: number | null
    total_load_actual?: number | null
    port_operator?: string | null
  }

  export type vessel_filesCreateManyVesselsInput = {
    id?: number
    title?: string | null
    filename?: string | null
    originalName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    userId?: number | null
  }

  export type group_emailsCreateManyVesselInput = {
    id?: number
    name?: string | null
    emails?: string | null
    updated_by_user_id?: number | null
  }

  export type ShippingUpdateWithoutVesselInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutShippingsNestedInput
    shipping_documents?: shipping_documentsUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUpdateManyWithoutShippingNestedInput
    sof?: sofUpdateOneWithoutShippingNestedInput
  }

  export type ShippingUncheckedUpdateWithoutVesselInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_head_address?: NullableStringFieldUpdateOperationsInput | string | null
    disponent_owner?: NullableStringFieldUpdateOperationsInput | string | null
    charter_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_name?: NullableStringFieldUpdateOperationsInput | string | null
    master_email?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_arrival?: NullableStringFieldUpdateOperationsInput | string | null
    estimated_draft_departure?: NullableStringFieldUpdateOperationsInput | string | null
    arrival_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    depart_draft?: NullableFloatFieldUpdateOperationsInput | number | null
    vessel_operator?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_email?: NullableStringFieldUpdateOperationsInput | string | null
    operation_type?: NullableStringFieldUpdateOperationsInput | string | null
    agency_type?: NullableStringFieldUpdateOperationsInput | string | null
    voyage_number?: NullableStringFieldUpdateOperationsInput | string | null
    external_code?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    last_port?: NullableStringFieldUpdateOperationsInput | string | null
    next_port?: NullableStringFieldUpdateOperationsInput | string | null
    broker?: NullableStringFieldUpdateOperationsInput | string | null
    boat?: NullableStringFieldUpdateOperationsInput | string | null
    tugs?: NullableStringFieldUpdateOperationsInput | string | null
    garbage?: NullableStringFieldUpdateOperationsInput | string | null
    last_cargoes?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_port?: NullableStringFieldUpdateOperationsInput | string | null
    sscec_exp?: NullableStringFieldUpdateOperationsInput | string | null
    in_marsat_c_number?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_01?: NullableStringFieldUpdateOperationsInput | string | null
    master_phone_02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_expert_alternate_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone01?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_phone02?: NullableStringFieldUpdateOperationsInput | string | null
    vessel_operator_city_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_load_expected?: NullableFloatFieldUpdateOperationsInput | number | null
    total_load_actual?: NullableFloatFieldUpdateOperationsInput | number | null
    port_operator?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_documents?: shipping_documentsUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_files?: shipping_filesUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_ports?: ShippingPortUncheckedUpdateManyWithoutShippingsNestedInput
    shipping_products?: ShippingProductUncheckedUpdateManyWithoutShippingNestedInput
    subsets?: subsetsUncheckedUpdateManyWithoutShippingsNestedInput
    inquires?: inquiresUncheckedUpdateManyWithoutShippingsNestedInput
    ShippingChecklistItem?: ShippingChecklistItemUncheckedUpdateManyWithoutShippingNestedInput
    sof?: sofUncheckedUpdateOneWithoutShippingNestedInput
  }

  export type vessel_filesUpdateWithoutVesselsInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutVessel_filesNestedInput
  }

  export type vessel_filesUncheckedUpdateWithoutVesselsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    originalName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type group_emailsUpdateWithoutVesselInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutGroup_emailsNestedInput
  }

  export type group_emailsUncheckedUpdateWithoutVesselInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by_user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type inquires_commentsCreateManyInquiresInput = {
    id?: number
    body?: string | null
    type?: string | null
    is_done: boolean
    deadline_date?: Date | string | null
    user_id?: number | null
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type inquires_commentsUpdateWithoutInquiresInput = {
    body?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutInquires_commentsNestedInput
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type inquires_commentsUncheckedUpdateWithoutInquiresInput = {
    id?: IntFieldUpdateOperationsInput | number
    body?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    is_done?: BoolFieldUpdateOperationsInput | boolean
    deadline_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_holidaysCreateManySofInput = {
    id?: number
    name?: string | null
    date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarksCreateManySofInput = {
    id?: number
    title?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_draftCreateManySofInput = {
    id?: number
    title?: string | null
    fwd?: number | null
    mid?: number | null
    aft?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_bunker_figuresCreateManySofInput = {
    id?: number
    title?: string | null
    ifo?: number | null
    mdo?: number | null
    fw?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingSofPortLogEventsCreateManyShipping_sofInput = {
    id?: number
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    sof_port_log_event_id: number
    created_by_user_id: number
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_shipper_cargoCreateManySofInput = {
    id?: number
    berth?: string | null
    cargo?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_holidaysUpdateWithoutSofInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_holidaysUncheckedUpdateWithoutSofInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_holidaysUncheckedUpdateManyWithoutSof_holidaysInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarksUpdateWithoutSofInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_remarks_itens?: sof_remarks_itemsUpdateManyWithoutSof_remarksNestedInput
  }

  export type sof_remarksUncheckedUpdateWithoutSofInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_remarks_itens?: sof_remarks_itemsUncheckedUpdateManyWithoutSof_remarksNestedInput
  }

  export type sof_remarksUncheckedUpdateManyWithoutSof_remarksInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_draftUpdateWithoutSofInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    fwd?: NullableFloatFieldUpdateOperationsInput | number | null
    mid?: NullableFloatFieldUpdateOperationsInput | number | null
    aft?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_draftUncheckedUpdateWithoutSofInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    fwd?: NullableFloatFieldUpdateOperationsInput | number | null
    mid?: NullableFloatFieldUpdateOperationsInput | number | null
    aft?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_draftUncheckedUpdateManyWithoutSof_draftInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    fwd?: NullableFloatFieldUpdateOperationsInput | number | null
    mid?: NullableFloatFieldUpdateOperationsInput | number | null
    aft?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_bunker_figuresUpdateWithoutSofInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ifo?: NullableFloatFieldUpdateOperationsInput | number | null
    mdo?: NullableFloatFieldUpdateOperationsInput | number | null
    fw?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_bunker_figuresUncheckedUpdateWithoutSofInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ifo?: NullableFloatFieldUpdateOperationsInput | number | null
    mdo?: NullableFloatFieldUpdateOperationsInput | number | null
    fw?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_bunker_figuresUncheckedUpdateManyWithoutSof_bunker_figuresInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ifo?: NullableFloatFieldUpdateOperationsInput | number | null
    mdo?: NullableFloatFieldUpdateOperationsInput | number | null
    fw?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingSofPortLogEventsUpdateWithoutShipping_sofInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_event?: SofPortLogEventsUpdateOneWithoutShippingSofPortLogEventsNestedInput
    created_by_user?: usersUpdateOneWithoutShipping_sof_port_log_eventsNestedInput
  }

  export type ShippingSofPortLogEventsUncheckedUpdateWithoutShipping_sofInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_event_id?: IntFieldUpdateOperationsInput | number
    created_by_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingSofPortLogEventsUncheckedUpdateManyWithoutSof_port_log_eventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_port_log_event_id?: IntFieldUpdateOperationsInput | number
    created_by_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_shipper_cargoUpdateWithoutSofInput = {
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper?: sof_shipperUpdateManyWithoutSof_shipper_cargoNestedInput
    sof_shipper_value?: sof_shipper_valueUpdateManyWithoutSof_shipper_cargoNestedInput
  }

  export type sof_shipper_cargoUncheckedUpdateWithoutSofInput = {
    id?: IntFieldUpdateOperationsInput | number
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sof_shipper?: sof_shipperUncheckedUpdateManyWithoutSof_shipper_cargoNestedInput
    sof_shipper_value?: sof_shipper_valueUncheckedUpdateManyWithoutSof_shipper_cargoNestedInput
  }

  export type sof_shipper_cargoUncheckedUpdateManyWithoutSof_shipper_cargoInput = {
    id?: IntFieldUpdateOperationsInput | number
    berth?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarks_itemsCreateManySof_remarksInput = {
    id?: number
    title?: string | null
    value?: string | null
    is_single?: boolean
    deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sof_remarks_itemsUpdateWithoutSof_remarksInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_single?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarks_itemsUncheckedUpdateWithoutSof_remarksInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_single?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_remarks_itemsUncheckedUpdateManyWithoutSof_remarks_itensInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_single?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SofPortLogEventsCreateManyCategoryInput = {
    id?: number
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type SofPortLogEventsUpdateWithoutCategoryInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsUpdateManyWithoutSof_port_log_eventNestedInput
  }

  export type SofPortLogEventsUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ShippingSofPortLogEvents?: ShippingSofPortLogEventsUncheckedUpdateManyWithoutSof_port_log_eventNestedInput
  }

  export type SofPortLogEventsUncheckedUpdateManyWithoutEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingSofPortLogEventsCreateManySof_port_log_eventInput = {
    id?: number
    name?: string | null
    commentary?: string | null
    is_important?: boolean | null
    is_highlighted?: boolean | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    shipping_sof_id: number
    created_by_user_id: number
    created_at?: Date | string
    updated_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type ShippingSofPortLogEventsUpdateWithoutSof_port_log_eventInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_sof?: sofUpdateOneWithoutSof_port_log_eventsNestedInput
    created_by_user?: usersUpdateOneWithoutShipping_sof_port_log_eventsNestedInput
  }

  export type ShippingSofPortLogEventsUncheckedUpdateWithoutSof_port_log_eventInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_sof_id?: IntFieldUpdateOperationsInput | number
    created_by_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShippingSofPortLogEventsUncheckedUpdateManyWithoutShippingSofPortLogEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    commentary?: NullableStringFieldUpdateOperationsInput | string | null
    is_important?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_highlighted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shipping_sof_id?: IntFieldUpdateOperationsInput | number
    created_by_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sof_shipperCreateManySof_shipper_cargoInput = {
    id?: number
    name?: string | null
    quantity?: number | null
  }

  export type sof_shipper_valueCreateManySof_shipper_cargoInput = {
    id?: number
    value?: number | null
  }

  export type sof_shipperUpdateWithoutSof_shipper_cargoInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type sof_shipperUncheckedUpdateWithoutSof_shipper_cargoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type sof_shipperUncheckedUpdateManyWithoutSof_shipperInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type sof_shipper_valueUpdateWithoutSof_shipper_cargoInput = {
    value?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type sof_shipper_valueUncheckedUpdateWithoutSof_shipper_cargoInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type sof_shipper_valueUncheckedUpdateManyWithoutSof_shipper_valueInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: NullableFloatFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}